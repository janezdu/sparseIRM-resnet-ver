hello
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_185733-g0zu5tdi
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/g0zu5tdi
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=10, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1201
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5985, 3, 32, 32) (6015, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:43,  1.75s/it] 19%|#9        | 5/26 [00:01<00:06,  3.47it/s] 35%|###4      | 9/26 [00:02<00:02,  6.73it/s] 46%|####6     | 12/26 [00:02<00:01,  9.42it/s] 58%|#####7    | 15/26 [00:02<00:00, 12.30it/s] 69%|######9   | 18/26 [00:02<00:00, 15.26it/s] 85%|########4 | 22/26 [00:02<00:00, 19.23it/s]100%|##########| 26/26 [00:02<00:00, 13.54it/s]100%|##########| 26/26 [00:02<00:00,  8.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.402 (0.576)	train_nll   0.40 (  0.58)	train_penalty   0.05 (  0.30)	weight_norm   9.67 (  9.65)	train_acc   0.86 (  0.80)	train_minacc   0.05 (  0.12)	train_majacc   1.00 (  0.92)	train_corr   0.00 (  0.00)	l1 24.0109 (24.3836)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.17it/s] 23%|##3       | 6/26 [00:00<00:00, 24.02it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.02it/s] 42%|####2     | 11/26 [00:00<00:00, 32.59it/s] 62%|######1   | 16/26 [00:00<00:00, 38.42it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.42it/s] 81%|########  | 21/26 [00:00<00:00, 40.08it/s]100%|##########| 26/26 [00:00<00:00, 42.46it/s]100%|##########| 26/26 [00:00<00:00, 33.07it/s]
Test: [   0/  26]	Loss 0.450 (0.450)	test_acc   0.82 (  0.82)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 0.450 (0.450)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.423 (0.417)	test_acc   0.83 (  0.84)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 0.423 (0.417)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.296 (0.397)	test_acc   0.91 (  0.85)	test_minacc   0.21 (  0.10)	test_majacc   0.99 (  0.98)	Loss_d 0.296 (0.397)	test_acc_d   0.91 (  0.85)	test_minacc_d   0.21 (  0.10)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.377 (0.393)	test_acc   0.86 (  0.85)	test_minacc   0.13 (  0.10)	test_majacc   0.99 (  0.98)	Loss_d 0.377 (0.393)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.13 (  0.10)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.48it/s]100%|##########| 1/1 [00:00<00:00,  2.48it/s]
Test: [  0/  1]	Loss 1.405 (1.405)	test_acc   0.15 (  0.15)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 1.405 (1.405)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.405 (1.405)	test_acc   0.15 (  0.15)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 1.405 (1.405)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/60/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0832 (0.0832)	validation_time 0.0068 (0.0068)	train_time 0.0710 (0.0710)
record: (train_acc, test_acc) (0.8499000230431557, 0.14800000190734863)
last accs (train_acc, test_acc) (0.8499000230431557, 0.14800000190734863)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.32it/s] 15%|#5        | 4/26 [00:00<00:01, 19.27it/s] 27%|##6       | 7/26 [00:00<00:00, 23.47it/s] 42%|####2     | 11/26 [00:00<00:00, 26.83it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.83it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.94it/s] 88%|########8 | 23/26 [00:00<00:00, 30.75it/s]100%|##########| 26/26 [00:00<00:00, 26.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.318 (0.377)	train_nll   0.32 (  0.38)	train_penalty   0.02 (  0.04)	weight_norm   9.69 (  9.68)	train_acc   0.87 (  0.85)	train_minacc   0.24 (  0.10)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 23.7617 (23.8466)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.59it/s] 27%|##6       | 7/26 [00:00<00:00, 34.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.18it/s] 46%|####6     | 12/26 [00:00<00:00, 39.32it/s] 65%|######5   | 17/26 [00:00<00:00, 38.32it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.32it/s] 85%|########4 | 22/26 [00:00<00:00, 40.99it/s]100%|##########| 26/26 [00:00<00:00, 36.17it/s]
Test: [   0/  26]	Loss 0.393 (0.393)	test_acc   0.84 (  0.84)	test_minacc   0.12 (  0.12)	test_majacc   0.98 (  0.98)	Loss_d 0.393 (0.393)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.321 (0.326)	test_acc   0.86 (  0.87)	test_minacc   0.26 (  0.24)	test_majacc   0.98 (  0.98)	Loss_d 0.321 (0.326)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.26 (  0.24)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  20/  26]	Loss 0.226 (0.301)	test_acc   0.94 (  0.88)	test_minacc   0.45 (  0.30)	test_majacc   1.00 (  0.99)	Loss_d 0.226 (0.301)	test_acc_d   0.94 (  0.88)	test_minacc_d   0.45 (  0.30)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.91 (  0.90)
Test: [  26/  26]	Loss 0.268 (0.296)	test_acc   0.90 (  0.88)	test_minacc   0.45 (  0.30)	test_majacc   0.98 (  0.99)	Loss_d 0.268 (0.296)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.45 (  0.30)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.87 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.20it/s]
Test: [  0/  1]	Loss 1.486 (1.486)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 1.486 (1.486)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
Test: [  1/  1]	Loss 1.486 (1.486)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 1.486 (1.486)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/60/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0398 (0.0615)	validation_time 0.0004 (0.0036)	train_time 0.0393 (0.0552)
record: (train_acc, test_acc) (0.8842000181078911, 0.20000000298023224)
last accs (train_acc, test_acc) (0.8842000181078911, 0.20000000298023224)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.59it/s] 12%|#1        | 3/26 [00:00<00:01, 12.07it/s] 23%|##3       | 6/26 [00:00<00:01, 18.59it/s] 35%|###4      | 9/26 [00:00<00:00, 21.91it/s] 46%|####6     | 12/26 [00:00<00:00, 24.05it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.64it/s] 85%|########4 | 22/26 [00:00<00:00, 27.85it/s]100%|##########| 26/26 [00:01<00:00, 29.15it/s]100%|##########| 26/26 [00:01<00:00, 23.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.168 (0.281)	train_nll   0.17 (  0.28)	train_penalty   0.01 (  0.02)	weight_norm   9.70 (  9.69)	train_acc   0.95 (  0.88)	train_minacc   0.82 (  0.38)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 23.7780 (23.7588)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.10it/s] 19%|#9        | 5/26 [00:00<00:00, 23.70it/s] 38%|###8      | 10/26 [00:00<00:00, 34.62it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.62it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.01it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.58it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.58it/s] 96%|#########6| 25/26 [00:00<00:00, 41.49it/s]100%|##########| 26/26 [00:00<00:00, 35.11it/s]
Test: [   0/  26]	Loss 0.294 (0.294)	test_acc   0.86 (  0.86)	test_minacc   0.43 (  0.43)	test_majacc   0.95 (  0.95)	Loss_d 0.294 (0.294)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.220 (0.224)	test_acc   0.93 (  0.92)	test_minacc   0.68 (  0.63)	test_majacc   0.98 (  0.97)	Loss_d 0.220 (0.224)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.68 (  0.63)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.80 (  0.80)
Test: [  20/  26]	Loss 0.133 (0.196)	test_acc   0.96 (  0.93)	test_minacc   0.79 (  0.69)	test_majacc   0.98 (  0.97)	Loss_d 0.133 (0.196)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.79 (  0.69)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.81 (  0.80)
Test: [  26/  26]	Loss 0.090 (0.183)	test_acc   1.00 (  0.94)	test_minacc   0.97 (  0.73)	test_majacc   1.00 (  0.98)	Loss_d 0.090 (0.183)	test_acc_d   1.00 (  0.94)	test_minacc_d   0.97 (  0.73)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.75 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.50it/s]
Test: [  0/  1]	Loss 2.006 (2.006)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 2.006 (2.006)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 2.006 (2.006)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 2.006 (2.006)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.66 (  0.66)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/60/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0409 (0.0546)	validation_time 0.0004 (0.0025)	train_time 0.0405 (0.0503)
record: (train_acc, test_acc) (0.9387000188827515, 0.3020000159740448)
last accs (train_acc, test_acc) (0.9387000188827515, 0.3020000159740448)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.19it/s] 15%|#5        | 4/26 [00:00<00:01, 18.44it/s] 27%|##6       | 7/26 [00:00<00:00, 22.94it/s] 38%|###8      | 10/26 [00:00<00:00, 25.50it/s] 50%|#####     | 13/26 [00:00<00:00, 27.03it/s] 62%|######1   | 16/26 [00:00<00:00, 27.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.34it/s] 88%|########8 | 23/26 [00:00<00:00, 29.63it/s]100%|##########| 26/26 [00:01<00:00, 25.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.093 (0.170)	train_nll   0.09 (  0.17)	train_penalty   0.00 (  0.00)	weight_norm   9.71 (  9.71)	train_acc   0.97 (  0.93)	train_minacc   0.89 (  0.70)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 23.9038 (23.8390)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 28.58it/s] 38%|###8      | 10/26 [00:00<00:00, 41.92it/s]                                                38%|###8      | 10/26 [00:00<00:00, 41.92it/s] 62%|######1   | 16/26 [00:00<00:00, 45.72it/s]                                                62%|######1   | 16/26 [00:00<00:00, 45.72it/s] 81%|########  | 21/26 [00:00<00:00, 46.30it/s]100%|##########| 26/26 [00:00<00:00, 46.87it/s]100%|##########| 26/26 [00:00<00:00, 40.79it/s]
Test: [   0/  26]	Loss 0.232 (0.232)	test_acc   0.91 (  0.91)	test_minacc   0.70 (  0.70)	test_majacc   0.95 (  0.95)	Loss_d 0.232 (0.232)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.229 (0.245)	test_acc   0.92 (  0.90)	test_minacc   0.71 (  0.68)	test_majacc   0.96 (  0.94)	Loss_d 0.229 (0.245)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.71 (  0.68)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.73 (  0.74)
Test: [  20/  26]	Loss 0.117 (0.216)	test_acc   0.95 (  0.91)	test_minacc   0.83 (  0.73)	test_majacc   0.97 (  0.95)	Loss_d 0.117 (0.216)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.83 (  0.73)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.78 (  0.73)
Test: [  26/  26]	Loss 0.026 (0.194)	test_acc   0.99 (  0.92)	test_minacc   1.00 (  0.76)	test_majacc   0.99 (  0.95)	Loss_d 0.026 (0.194)	test_acc_d   0.99 (  0.92)	test_minacc_d   1.00 (  0.76)	test_majacc_d   0.99 (  0.95)	test_corr_d   0.70 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.08it/s]
Test: [  0/  1]	Loss 3.282 (3.282)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.91 (  0.91)	Loss_d 3.282 (3.282)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 3.282 (3.282)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.91 (  0.91)	Loss_d 3.282 (3.282)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.48 (  0.48)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/60/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0415 (0.0514)	validation_time 0.0004 (0.0020)	train_time 0.0411 (0.0480)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 12%|#1        | 3/26 [00:00<00:01, 14.44it/s] 23%|##3       | 6/26 [00:00<00:00, 20.85it/s] 35%|###4      | 9/26 [00:00<00:00, 24.16it/s] 46%|####6     | 12/26 [00:00<00:00, 26.06it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.08it/s] 69%|######9   | 18/26 [00:00<00:00, 27.60it/s] 81%|########  | 21/26 [00:00<00:00, 28.03it/s] 92%|#########2| 24/26 [00:00<00:00, 28.20it/s]100%|##########| 26/26 [00:01<00:00, 24.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.195 (0.215)	train_nll   0.20 (  0.21)	train_penalty   0.01 (  0.01)	weight_norm   9.74 (  9.73)	train_acc   0.95 (  0.91)	train_minacc   0.74 (  0.62)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 23.8043 (23.8775)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.19it/s] 27%|##6       | 7/26 [00:00<00:00, 35.98it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.98it/s] 50%|#####     | 13/26 [00:00<00:00, 41.70it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.36it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.36it/s] 92%|#########2| 24/26 [00:00<00:00, 44.53it/s]100%|##########| 26/26 [00:00<00:00, 38.91it/s]
Test: [   0/  26]	Loss 0.264 (0.264)	test_acc   0.88 (  0.88)	test_minacc   0.52 (  0.52)	test_majacc   0.96 (  0.96)	Loss_d 0.264 (0.264)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.259 (0.275)	test_acc   0.87 (  0.88)	test_minacc   0.62 (  0.61)	test_majacc   0.92 (  0.93)	Loss_d 0.259 (0.275)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.73 (  0.74)
Test: [  20/  26]	Loss 0.209 (0.251)	test_acc   0.92 (  0.89)	test_minacc   0.79 (  0.68)	test_majacc   0.93 (  0.93)	Loss_d 0.209 (0.251)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.79 (  0.68)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.75 (  0.73)
Test: [  26/  26]	Loss 0.139 (0.237)	test_acc   0.98 (  0.90)	test_minacc   0.95 (  0.72)	test_majacc   0.98 (  0.93)	Loss_d 0.139 (0.237)	test_acc_d   0.98 (  0.90)	test_minacc_d   0.95 (  0.72)	test_majacc_d   0.98 (  0.93)	test_corr_d   0.71 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.57it/s]
Test: [  0/  1]	Loss 2.092 (2.092)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.92 (  0.92)	Loss_d 2.092 (2.092)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.63 (  0.63)
Test: [  1/  1]	Loss 2.092 (2.092)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.92 (  0.92)	Loss_d 2.092 (2.092)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.63 (  0.63)
Overall Timing[  4/  1]	epoch_time 0.0400 (0.0491)	validation_time 0.0005 (0.0017)	train_time 0.0396 (0.0463)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.8994000286459923, 0.2990000247955322)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.97it/s] 12%|#1        | 3/26 [00:00<00:02, 11.20it/s] 23%|##3       | 6/26 [00:00<00:01, 18.04it/s] 35%|###4      | 9/26 [00:00<00:00, 22.11it/s] 50%|#####     | 13/26 [00:00<00:00, 25.23it/s] 62%|######1   | 16/26 [00:00<00:00, 26.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.41it/s] 85%|########4 | 22/26 [00:00<00:00, 28.11it/s] 96%|#########6| 25/26 [00:01<00:00, 28.43it/s]100%|##########| 26/26 [00:01<00:00, 23.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.055 (0.180)	train_nll   0.06 (  0.18)	train_penalty   0.00 (  0.01)	weight_norm   9.76 (  9.75)	train_acc   0.98 (  0.93)	train_minacc   0.95 (  0.70)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 23.7066 (23.7381)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.61it/s] 23%|##3       | 6/26 [00:00<00:00, 27.42it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.42it/s] 42%|####2     | 11/26 [00:00<00:00, 35.59it/s] 62%|######1   | 16/26 [00:00<00:00, 39.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.95it/s] 81%|########  | 21/26 [00:00<00:00, 38.88it/s]100%|##########| 26/26 [00:00<00:00, 41.83it/s]100%|##########| 26/26 [00:00<00:00, 33.84it/s]
Test: [   0/  26]	Loss 0.138 (0.138)	test_acc   0.94 (  0.94)	test_minacc   0.81 (  0.81)	test_majacc   0.97 (  0.97)	Loss_d 0.138 (0.138)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.099 (0.148)	test_acc   0.96 (  0.94)	test_minacc   0.86 (  0.81)	test_majacc   0.98 (  0.96)	Loss_d 0.099 (0.148)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.86 (  0.81)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.70 (  0.72)
Test: [  20/  26]	Loss 0.108 (0.128)	test_acc   0.96 (  0.95)	test_minacc   0.93 (  0.85)	test_majacc   0.97 (  0.97)	Loss_d 0.108 (0.128)	test_acc_d   0.96 (  0.95)	test_minacc_d   0.93 (  0.85)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.76 (  0.72)
Test: [  26/  26]	Loss 0.024 (0.116)	test_acc   1.00 (  0.96)	test_minacc   1.00 (  0.87)	test_majacc   1.00 (  0.97)	Loss_d 0.024 (0.116)	test_acc_d   1.00 (  0.96)	test_minacc_d   1.00 (  0.87)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.71 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.83it/s]
Test: [  0/  1]	Loss 3.166 (3.166)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.94 (  0.94)	Loss_d 3.166 (3.166)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 3.166 (3.166)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.94 (  0.94)	Loss_d 3.166 (3.166)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.57 (  0.57)
Overall Timing[  5/  1]	epoch_time 0.0417 (0.0479)	validation_time 0.0004 (0.0015)	train_time 0.0413 (0.0454)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.9559000177383423, 0.3330000042915344)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 16.55it/s] 23%|##3       | 6/26 [00:00<00:00, 21.02it/s] 35%|###4      | 9/26 [00:00<00:00, 23.51it/s] 46%|####6     | 12/26 [00:00<00:00, 25.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.79it/s] 69%|######9   | 18/26 [00:00<00:00, 26.69it/s] 81%|########  | 21/26 [00:00<00:00, 27.58it/s] 92%|#########2| 24/26 [00:00<00:00, 28.02it/s]100%|##########| 26/26 [00:01<00:00, 24.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.098 (0.127)	train_nll   0.10 (  0.13)	train_penalty   0.00 (  0.00)	weight_norm   9.78 (  9.77)	train_acc   0.96 (  0.95)	train_minacc   0.76 (  0.81)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 23.6601 (23.6998)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.94it/s] 23%|##3       | 6/26 [00:00<00:00, 31.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.24it/s] 42%|####2     | 11/26 [00:00<00:00, 34.36it/s] 62%|######1   | 16/26 [00:00<00:00, 39.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.06it/s] 81%|########  | 21/26 [00:00<00:00, 41.15it/s]100%|##########| 26/26 [00:00<00:00, 35.96it/s]
Test: [   0/  26]	Loss 0.147 (0.147)	test_acc   0.94 (  0.94)	test_minacc   0.67 (  0.67)	test_majacc   0.99 (  0.99)	Loss_d 0.147 (0.147)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.160 (0.171)	test_acc   0.94 (  0.93)	test_minacc   0.66 (  0.68)	test_majacc   0.99 (  0.98)	Loss_d 0.160 (0.171)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.66 (  0.68)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.78 (  0.79)
Test: [  20/  26]	Loss 0.117 (0.161)	test_acc   0.96 (  0.94)	test_minacc   0.76 (  0.71)	test_majacc   0.98 (  0.98)	Loss_d 0.117 (0.161)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.76 (  0.71)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.79)
Test: [  26/  26]	Loss 0.025 (0.144)	test_acc   1.00 (  0.95)	test_minacc   1.00 (  0.75)	test_majacc   1.00 (  0.98)	Loss_d 0.025 (0.144)	test_acc_d   1.00 (  0.95)	test_minacc_d   1.00 (  0.75)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.72 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.66it/s]
Test: [  0/  1]	Loss 4.295 (4.295)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.95 (  0.95)	Loss_d 4.295 (4.295)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 4.295 (4.295)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.95 (  0.95)	Loss_d 4.295 (4.295)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Overall Timing[  6/  1]	epoch_time 0.0423 (0.0471)	validation_time 0.0005 (0.0013)	train_time 0.0419 (0.0449)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.947900022983551, 0.23900000751018524)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 15%|#5        | 4/26 [00:00<00:01, 16.19it/s] 27%|##6       | 7/26 [00:00<00:00, 21.17it/s] 38%|###8      | 10/26 [00:00<00:00, 22.15it/s] 50%|#####     | 13/26 [00:00<00:00, 24.18it/s] 62%|######1   | 16/26 [00:00<00:00, 25.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.94it/s] 88%|########8 | 23/26 [00:00<00:00, 28.08it/s]100%|##########| 26/26 [00:01<00:00, 23.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.086 (0.137)	train_nll   0.09 (  0.14)	train_penalty   0.00 (  0.00)	weight_norm   9.80 (  9.79)	train_acc   0.96 (  0.95)	train_minacc   0.79 (  0.80)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 23.5655 (23.6145)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.16it/s] 27%|##6       | 7/26 [00:00<00:00, 31.26it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.26it/s] 46%|####6     | 12/26 [00:00<00:00, 37.84it/s] 65%|######5   | 17/26 [00:00<00:00, 41.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.10it/s] 85%|########4 | 22/26 [00:00<00:00, 43.74it/s]100%|##########| 26/26 [00:00<00:00, 36.25it/s]
Test: [   0/  26]	Loss 0.173 (0.173)	test_acc   0.93 (  0.93)	test_minacc   0.67 (  0.67)	test_majacc   0.98 (  0.98)	Loss_d 0.173 (0.173)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.103 (0.138)	test_acc   0.95 (  0.95)	test_minacc   0.75 (  0.74)	test_majacc   0.99 (  0.99)	Loss_d 0.103 (0.138)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.75 (  0.74)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.78)
Test: [  20/  26]	Loss 0.089 (0.126)	test_acc   0.97 (  0.95)	test_minacc   0.81 (  0.76)	test_majacc   0.99 (  0.99)	Loss_d 0.089 (0.126)	test_acc_d   0.97 (  0.95)	test_minacc_d   0.81 (  0.76)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.78)
Test: [  26/  26]	Loss 0.051 (0.113)	test_acc   0.99 (  0.96)	test_minacc   0.95 (  0.79)	test_majacc   1.00 (  0.99)	Loss_d 0.051 (0.113)	test_acc_d   0.99 (  0.96)	test_minacc_d   0.95 (  0.79)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.76 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.50it/s]
Test: [  0/  1]	Loss 3.973 (3.973)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.96 (  0.96)	Loss_d 3.973 (3.973)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.75 (  0.75)
Test: [  1/  1]	Loss 3.973 (3.973)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.96 (  0.96)	Loss_d 3.973 (3.973)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.75 (  0.75)
Overall Timing[  7/  1]	epoch_time 0.0428 (0.0465)	validation_time 0.0004 (0.0012)	train_time 0.0423 (0.0446)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.958400022149086, 0.23100000619888306)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.19it/s] 15%|#5        | 4/26 [00:00<00:01, 18.56it/s] 27%|##6       | 7/26 [00:00<00:00, 22.14it/s] 38%|###8      | 10/26 [00:00<00:00, 24.33it/s] 50%|#####     | 13/26 [00:00<00:00, 25.78it/s] 65%|######5   | 17/26 [00:00<00:00, 28.16it/s] 81%|########  | 21/26 [00:00<00:00, 29.89it/s] 96%|#########6| 25/26 [00:00<00:00, 30.84it/s]100%|##########| 26/26 [00:01<00:00, 25.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.016 (0.090)	train_nll   0.02 (  0.09)	train_penalty   0.00 (  0.00)	weight_norm   9.82 (  9.81)	train_acc   1.00 (  0.96)	train_minacc   0.97 (  0.87)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 23.5746 (23.5478)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.60it/s] 27%|##6       | 7/26 [00:00<00:00, 34.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.70it/s] 46%|####6     | 12/26 [00:00<00:00, 40.04it/s] 65%|######5   | 17/26 [00:00<00:00, 39.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.37it/s] 85%|########4 | 22/26 [00:00<00:00, 41.50it/s]100%|##########| 26/26 [00:00<00:00, 36.78it/s]
Test: [   0/  26]	Loss 0.048 (0.048)	test_acc   0.99 (  0.99)	test_minacc   0.93 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.048 (0.048)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.93 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.068 (0.045)	test_acc   0.98 (  0.98)	test_minacc   0.88 (  0.90)	test_majacc   1.00 (  1.00)	Loss_d 0.068 (0.045)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.88 (  0.90)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.74)
Test: [  20/  26]	Loss 0.020 (0.036)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.020 (0.036)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.74)
Test: [  26/  26]	Loss 0.008 (0.031)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.031)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.25it/s]
Test: [  0/  1]	Loss 4.520 (4.520)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 4.520 (4.520)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.78 (  0.78)
Test: [  1/  1]	Loss 4.520 (4.520)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 4.520 (4.520)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.78 (  0.78)
Overall Timing[  8/  1]	epoch_time 0.0439 (0.0462)	validation_time 0.0004 (0.0011)	train_time 0.0434 (0.0445)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.9890000285506249, 0.22200001776218414)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.07it/s] 15%|#5        | 4/26 [00:00<00:01, 12.56it/s] 27%|##6       | 7/26 [00:00<00:01, 17.97it/s] 38%|###8      | 10/26 [00:00<00:00, 21.68it/s] 50%|#####     | 13/26 [00:00<00:00, 24.00it/s] 65%|######5   | 17/26 [00:00<00:00, 26.95it/s] 81%|########  | 21/26 [00:00<00:00, 28.80it/s] 92%|#########2| 24/26 [00:01<00:00, 29.08it/s]100%|##########| 26/26 [00:01<00:00, 22.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.005 (0.031)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm   9.82 (  9.82)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 23.6743 (23.6389)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.59it/s] 23%|##3       | 6/26 [00:00<00:00, 32.30it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.30it/s] 42%|####2     | 11/26 [00:00<00:00, 39.13it/s] 62%|######1   | 16/26 [00:00<00:00, 42.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.55it/s] 81%|########  | 21/26 [00:00<00:00, 39.54it/s]100%|##########| 26/26 [00:00<00:00, 42.14it/s]100%|##########| 26/26 [00:00<00:00, 36.19it/s]
Test: [   0/  26]	Loss 0.021 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.021 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.041 (0.051)	test_acc   0.98 (  0.98)	test_minacc   0.91 (  0.90)	test_majacc   0.99 (  0.99)	Loss_d 0.041 (0.051)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.72)
Test: [  20/  26]	Loss 0.032 (0.039)	test_acc   0.99 (  0.98)	test_minacc   0.93 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.032 (0.039)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.93 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.72)
Test: [  26/  26]	Loss 0.003 (0.033)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.033)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 41.28it/s]
Test: [  0/  1]	Loss 5.874 (5.874)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.95 (  0.95)	Loss_d 5.874 (5.874)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 5.874 (5.874)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.95 (  0.95)	Loss_d 5.874 (5.874)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.74 (  0.74)
Overall Timing[  9/  1]	epoch_time 0.0405 (0.0457)	validation_time 0.0005 (0.0011)	train_time 0.0400 (0.0440)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.9874000286459923, 0.24800001084804535)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.11it/s] 15%|#5        | 4/26 [00:00<00:01, 17.39it/s] 27%|##6       | 7/26 [00:00<00:00, 21.80it/s] 38%|###8      | 10/26 [00:00<00:00, 24.60it/s] 50%|#####     | 13/26 [00:00<00:00, 26.20it/s] 62%|######1   | 16/26 [00:00<00:00, 27.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.95it/s] 85%|########4 | 22/26 [00:00<00:00, 28.38it/s] 96%|#########6| 25/26 [00:00<00:00, 28.47it/s]100%|##########| 26/26 [00:01<00:00, 24.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.047 (0.034)	train_nll   0.05 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm   9.83 (  9.83)	train_acc   0.99 (  0.99)	train_minacc   1.00 (  0.96)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 23.7118 (23.7008)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.69it/s] 27%|##6       | 7/26 [00:00<00:00, 31.90it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.90it/s] 46%|####6     | 12/26 [00:00<00:00, 38.13it/s] 65%|######5   | 17/26 [00:00<00:00, 41.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.14it/s] 85%|########4 | 22/26 [00:00<00:00, 43.31it/s]100%|##########| 26/26 [00:00<00:00, 36.54it/s]
Test: [   0/  26]	Loss 0.026 (0.026)	test_acc   0.99 (  0.99)	test_minacc   0.99 (  0.99)	test_majacc   0.99 (  0.99)	Loss_d 0.026 (0.026)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.99 (  0.99)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.065 (0.041)	test_acc   0.98 (  0.99)	test_minacc   0.92 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.065 (0.041)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.92 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.68 (  0.70)
Test: [  20/  26]	Loss 0.037 (0.037)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.037 (0.037)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.79 (  0.70)
Test: [  26/  26]	Loss 0.004 (0.032)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.004 (0.032)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.35it/s]
Test: [  0/  1]	Loss 5.149 (5.149)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.95 (  0.95)	Loss_d 5.149 (5.149)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 5.149 (5.149)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.95 (  0.95)	Loss_d 5.149 (5.149)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.64 (  0.64)
Overall Timing[ 10/  1]	epoch_time 0.0415 (0.0453)	validation_time 0.0004 (0.0010)	train_time 0.0411 (0.0438)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.9885000343918801, 0.29200002551078796)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.91it/s] 19%|#9        | 5/26 [00:00<00:00, 22.09it/s] 31%|###       | 8/26 [00:00<00:00, 25.22it/s] 42%|####2     | 11/26 [00:00<00:00, 26.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.70it/s] 88%|########8 | 23/26 [00:00<00:00, 29.16it/s]100%|##########| 26/26 [00:00<00:00, 26.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.031 (0.045)	train_nll   0.03 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm   9.84 (  9.84)	train_acc   0.99 (  0.98)	train_minacc   1.00 (  0.94)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 23.6923 (23.6934)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.17it/s] 23%|##3       | 6/26 [00:00<00:00, 26.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.06it/s] 42%|####2     | 11/26 [00:00<00:00, 33.93it/s] 62%|######1   | 16/26 [00:00<00:00, 38.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.99it/s] 81%|########  | 21/26 [00:00<00:00, 41.17it/s]100%|##########| 26/26 [00:00<00:00, 43.03it/s]100%|##########| 26/26 [00:00<00:00, 34.38it/s]
Test: [   0/  26]	Loss 0.037 (0.037)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.037 (0.037)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.125 (0.056)	test_acc   0.96 (  0.98)	test_minacc   0.97 (  0.97)	test_majacc   0.96 (  0.98)	Loss_d 0.125 (0.056)	test_acc_d   0.96 (  0.98)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.63 (  0.67)
Test: [  20/  26]	Loss 0.026 (0.047)	test_acc   0.99 (  0.98)	test_minacc   1.00 (  0.98)	test_majacc   0.99 (  0.98)	Loss_d 0.026 (0.047)	test_acc_d   0.99 (  0.98)	test_minacc_d   1.00 (  0.98)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.77 (  0.68)
Test: [  26/  26]	Loss 0.006 (0.041)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.98)	Loss_d 0.006 (0.041)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.69 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.23it/s]
Test: [  0/  1]	Loss 4.227 (4.227)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.93 (  0.93)	Loss_d 4.227 (4.227)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 4.227 (4.227)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.93 (  0.93)	Loss_d 4.227 (4.227)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.50 (  0.50)
Overall Timing[ 11/  1]	epoch_time 0.0386 (0.0447)	validation_time 0.0004 (0.0010)	train_time 0.0382 (0.0433)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.9843000276684761, 0.3580000102519989)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.97it/s] 15%|#5        | 4/26 [00:00<00:01, 21.73it/s] 27%|##6       | 7/26 [00:00<00:00, 25.11it/s] 42%|####2     | 11/26 [00:00<00:00, 27.28it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.35it/s] 69%|######9   | 18/26 [00:00<00:00, 28.78it/s] 81%|########  | 21/26 [00:00<00:00, 29.06it/s] 92%|#########2| 24/26 [00:00<00:00, 29.29it/s]100%|##########| 26/26 [00:01<00:00, 25.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.020 (0.037)	train_nll   0.02 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.85)	train_acc   0.99 (  0.99)	train_minacc   1.00 (  0.95)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 23.7320 (23.7091)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 23%|##3       | 6/26 [00:00<00:00, 30.86it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.86it/s] 42%|####2     | 11/26 [00:00<00:00, 37.40it/s] 62%|######1   | 16/26 [00:00<00:00, 39.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.55it/s] 81%|########  | 21/26 [00:00<00:00, 39.93it/s]100%|##########| 26/26 [00:00<00:00, 42.55it/s]100%|##########| 26/26 [00:00<00:00, 35.08it/s]
Test: [   0/  26]	Loss 0.040 (0.040)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.040 (0.040)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.026 (0.033)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.026 (0.033)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.68)
Test: [  20/  26]	Loss 0.013 (0.026)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.013 (0.026)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.69)
Test: [  26/  26]	Loss 0.003 (0.022)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.022)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.95it/s]
Test: [  0/  1]	Loss 4.700 (4.700)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.91 (  0.91)	Loss_d 4.700 (4.700)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 4.700 (4.700)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.91 (  0.91)	Loss_d 4.700 (4.700)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.50 (  0.50)
Overall Timing[ 12/  1]	epoch_time 0.0418 (0.0445)	validation_time 0.0005 (0.0009)	train_time 0.0413 (0.0431)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.9921000318527222, 0.3490000069141388)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.07it/s] 19%|#9        | 5/26 [00:00<00:00, 22.26it/s] 35%|###4      | 9/26 [00:00<00:00, 25.73it/s] 50%|#####     | 13/26 [00:00<00:00, 27.45it/s] 62%|######1   | 16/26 [00:00<00:00, 28.05it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.35it/s] 85%|########4 | 22/26 [00:00<00:00, 28.51it/s] 96%|#########6| 25/26 [00:00<00:00, 28.78it/s]100%|##########| 26/26 [00:01<00:00, 25.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.021 (0.027)	train_nll   0.02 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.86)	train_acc   0.99 (  0.99)	train_minacc   0.95 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 23.7571 (23.7406)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.52it/s] 19%|#9        | 5/26 [00:00<00:00, 22.78it/s]                                               19%|#9        | 5/26 [00:00<00:00, 22.78it/s] 42%|####2     | 11/26 [00:00<00:00, 36.08it/s] 62%|######1   | 16/26 [00:00<00:00, 40.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.71it/s] 81%|########  | 21/26 [00:00<00:00, 40.37it/s]100%|##########| 26/26 [00:00<00:00, 42.94it/s]100%|##########| 26/26 [00:00<00:00, 34.64it/s]
Test: [   0/  26]	Loss 0.035 (0.035)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.035 (0.035)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.064 (0.048)	test_acc   0.98 (  0.98)	test_minacc   0.89 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.064 (0.048)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.89 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.71)
Test: [  20/  26]	Loss 0.016 (0.038)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.016 (0.038)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.78 (  0.71)
Test: [  26/  26]	Loss 0.004 (0.032)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.004 (0.032)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.47it/s]
Test: [  0/  1]	Loss 5.273 (5.273)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.93 (  0.93)	Loss_d 5.273 (5.273)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 5.273 (5.273)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.93 (  0.93)	Loss_d 5.273 (5.273)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.59 (  0.59)
Overall Timing[ 13/  1]	epoch_time 0.0440 (0.0445)	validation_time 0.0004 (0.0009)	train_time 0.0435 (0.0432)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.9883000274300575, 0.3060000240802765)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.06it/s] 15%|#5        | 4/26 [00:00<00:01, 16.45it/s] 27%|##6       | 7/26 [00:00<00:00, 21.03it/s] 38%|###8      | 10/26 [00:00<00:00, 23.57it/s] 50%|#####     | 13/26 [00:00<00:00, 25.07it/s] 62%|######1   | 16/26 [00:00<00:00, 24.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.37it/s] 85%|########4 | 22/26 [00:00<00:00, 26.48it/s] 96%|#########6| 25/26 [00:01<00:00, 26.86it/s]100%|##########| 26/26 [00:01<00:00, 22.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.069 (0.037)	train_nll   0.07 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm   9.88 (  9.87)	train_acc   0.99 (  0.99)	train_minacc   0.97 (  0.95)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 23.7700 (23.7766)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.11it/s] 23%|##3       | 6/26 [00:00<00:00, 30.41it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.41it/s] 42%|####2     | 11/26 [00:00<00:00, 34.92it/s] 62%|######1   | 16/26 [00:00<00:00, 39.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.25it/s] 81%|########  | 21/26 [00:00<00:00, 40.07it/s]100%|##########| 26/26 [00:00<00:00, 35.28it/s]
Test: [   0/  26]	Loss 0.096 (0.096)	test_acc   0.97 (  0.97)	test_minacc   0.91 (  0.91)	test_majacc   0.98 (  0.98)	Loss_d 0.096 (0.096)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.085 (0.071)	test_acc   0.97 (  0.97)	test_minacc   0.88 (  0.93)	test_majacc   0.98 (  0.98)	Loss_d 0.085 (0.071)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.88 (  0.93)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.69 (  0.69)
Test: [  20/  26]	Loss 0.045 (0.067)	test_acc   0.99 (  0.97)	test_minacc   0.98 (  0.94)	test_majacc   0.99 (  0.98)	Loss_d 0.045 (0.067)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.98 (  0.94)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.77 (  0.70)
Test: [  26/  26]	Loss 0.029 (0.059)	test_acc   0.98 (  0.98)	test_minacc   1.00 (  0.95)	test_majacc   0.98 (  0.98)	Loss_d 0.029 (0.059)	test_acc_d   0.98 (  0.98)	test_minacc_d   1.00 (  0.95)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.68 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 42.22it/s]
Test: [  0/  1]	Loss 5.045 (5.045)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.90 (  0.90)	Loss_d 5.045 (5.045)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 5.045 (5.045)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.90 (  0.90)	Loss_d 5.045 (5.045)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.58 (  0.58)
Overall Timing[ 14/  1]	epoch_time 0.0424 (0.0443)	validation_time 0.0005 (0.0009)	train_time 0.0419 (0.0431)
record: (train_acc, test_acc) (0.9234000219106674, 0.36400002241134644)
last accs (train_acc, test_acc) (0.9781000263690949, 0.30800002813339233)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 12%|#1        | 3/26 [00:00<00:01, 12.52it/s] 23%|##3       | 6/26 [00:00<00:01, 19.12it/s] 35%|###4      | 9/26 [00:00<00:00, 22.07it/s] 46%|####6     | 12/26 [00:00<00:00, 24.43it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.60it/s] 69%|######9   | 18/26 [00:00<00:00, 26.45it/s] 81%|########  | 21/26 [00:00<00:00, 26.67it/s] 92%|#########2| 24/26 [00:01<00:00, 26.88it/s]100%|##########| 26/26 [00:01<00:00, 22.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0059, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(9.7624e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(3.2109e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.002 (0.027)	train_nll   0.10 (  0.11)	train_penalty   0.00 (  0.00)	weight_norm   9.89 (  9.88)	train_acc   0.96 (  0.96)	train_minacc   0.89 (  0.89)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 23.6402 (23.7026)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 23%|##3       | 6/26 [00:00<00:00, 29.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.21it/s] 42%|####2     | 11/26 [00:00<00:00, 36.54it/s] 62%|######1   | 16/26 [00:00<00:00, 41.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.16it/s] 81%|########  | 21/26 [00:00<00:00, 39.68it/s]100%|##########| 26/26 [00:00<00:00, 42.36it/s]100%|##########| 26/26 [00:00<00:00, 35.21it/s]
Test: [   0/  26]	Loss 0.141 (0.141)	test_acc   0.95 (  0.95)	test_minacc   0.90 (  0.90)	test_majacc   0.96 (  0.96)	Loss_d 0.141 (0.141)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.202 (0.145)	test_acc   0.93 (  0.94)	test_minacc   0.95 (  0.96)	test_majacc   0.92 (  0.94)	Loss_d 0.202 (0.145)	test_acc_d   0.93 (  0.94)	test_minacc_d   0.95 (  0.96)	test_majacc_d   0.92 (  0.94)	test_corr_d   0.58 (  0.62)
Test: [  20/  26]	Loss 0.202 (0.149)	test_acc   0.91 (  0.94)	test_minacc   0.98 (  0.96)	test_majacc   0.90 (  0.94)	Loss_d 0.202 (0.149)	test_acc_d   0.91 (  0.94)	test_minacc_d   0.98 (  0.96)	test_majacc_d   0.90 (  0.94)	test_corr_d   0.64 (  0.62)
Test: [  26/  26]	Loss 0.117 (0.148)	test_acc   0.95 (  0.94)	test_minacc   0.97 (  0.96)	test_majacc   0.94 (  0.93)	Loss_d 0.117 (0.148)	test_acc_d   0.95 (  0.94)	test_minacc_d   0.97 (  0.96)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.63 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.79it/s]
Test: [  0/  1]	Loss 2.504 (2.504)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.92 (  0.92)	Loss_d 2.504 (2.504)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 2.504 (2.504)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.92 (  0.92)	Loss_d 2.504 (2.504)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.34 (  0.34)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/60/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0431 (0.0443)	validation_time 0.0005 (0.0008)	train_time 0.0426 (0.0431)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.06it/s] 12%|#1        | 3/26 [00:00<00:02, 10.51it/s] 23%|##3       | 6/26 [00:00<00:01, 16.87it/s] 35%|###4      | 9/26 [00:00<00:00, 20.30it/s] 46%|####6     | 12/26 [00:00<00:00, 22.50it/s] 58%|#####7    | 15/26 [00:00<00:00, 23.77it/s] 69%|######9   | 18/26 [00:00<00:00, 25.25it/s] 81%|########  | 21/26 [00:00<00:00, 26.43it/s] 92%|#########2| 24/26 [00:01<00:00, 26.75it/s]100%|##########| 26/26 [00:01<00:00, 21.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0044, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(3.0191e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: tensor(4.7962e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.001 (0.002)	train_nll   0.17 (  0.18)	train_penalty   0.00 (  0.00)	weight_norm   9.89 (  9.89)	train_acc   0.92 (  0.93)	train_minacc   0.82 (  0.88)	train_majacc   0.93 (  0.94)	train_corr   0.00 (  0.00)	l1 23.5932 (23.6128)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 23%|##3       | 6/26 [00:00<00:00, 30.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.74it/s] 42%|####2     | 11/26 [00:00<00:00, 37.34it/s] 62%|######1   | 16/26 [00:00<00:00, 41.56it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.56it/s] 81%|########  | 21/26 [00:00<00:00, 40.43it/s]100%|##########| 26/26 [00:00<00:00, 43.08it/s]100%|##########| 26/26 [00:00<00:00, 35.73it/s]
Test: [   0/  26]	Loss 0.155 (0.155)	test_acc   0.95 (  0.95)	test_minacc   0.85 (  0.85)	test_majacc   0.97 (  0.97)	Loss_d 0.155 (0.155)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.154 (0.171)	test_acc   0.93 (  0.93)	test_minacc   0.86 (  0.90)	test_majacc   0.94 (  0.94)	Loss_d 0.154 (0.171)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.86 (  0.90)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.66 (  0.65)
Test: [  20/  26]	Loss 0.177 (0.171)	test_acc   0.93 (  0.93)	test_minacc   0.98 (  0.90)	test_majacc   0.92 (  0.94)	Loss_d 0.177 (0.171)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.98 (  0.90)	test_majacc_d   0.92 (  0.94)	test_corr_d   0.68 (  0.66)
Test: [  26/  26]	Loss 0.157 (0.170)	test_acc   0.93 (  0.93)	test_minacc   0.89 (  0.90)	test_majacc   0.93 (  0.94)	Loss_d 0.157 (0.170)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.89 (  0.90)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.65 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.98it/s]
Test: [  0/  1]	Loss 2.571 (2.571)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.89 (  0.89)	Loss_d 2.571 (2.571)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 2.571 (2.571)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.89 (  0.89)	Loss_d 2.571 (2.571)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.48 (  0.48)
Overall Timing[ 16/  1]	epoch_time 0.0458 (0.0443)	validation_time 0.0004 (0.0008)	train_time 0.0454 (0.0432)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.9302000188231468, 0.3680000305175781)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.57it/s] 15%|#5        | 4/26 [00:00<00:01, 12.91it/s] 27%|##6       | 7/26 [00:00<00:01, 18.08it/s] 38%|###8      | 10/26 [00:00<00:00, 21.37it/s] 50%|#####     | 13/26 [00:00<00:00, 23.33it/s] 62%|######1   | 16/26 [00:00<00:00, 24.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.36it/s] 85%|########4 | 22/26 [00:01<00:00, 26.23it/s] 96%|#########6| 25/26 [00:01<00:00, 26.33it/s]100%|##########| 26/26 [00:01<00:00, 21.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0051, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(7.2012e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.003 (0.002)	train_nll   0.19 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm   9.89 (  9.89)	train_acc   0.93 (  0.92)	train_minacc   0.84 (  0.85)	train_majacc   0.94 (  0.93)	train_corr   0.00 (  0.00)	l1 23.5616 (23.5772)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.11it/s] 27%|##6       | 7/26 [00:00<00:00, 33.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.83it/s] 46%|####6     | 12/26 [00:00<00:00, 39.34it/s] 65%|######5   | 17/26 [00:00<00:00, 42.05it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.05it/s] 85%|########4 | 22/26 [00:00<00:00, 41.41it/s]100%|##########| 26/26 [00:00<00:00, 37.54it/s]
Test: [   0/  26]	Loss 0.164 (0.164)	test_acc   0.93 (  0.93)	test_minacc   0.82 (  0.82)	test_majacc   0.95 (  0.95)	Loss_d 0.164 (0.164)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.204 (0.167)	test_acc   0.92 (  0.93)	test_minacc   0.82 (  0.86)	test_majacc   0.94 (  0.94)	Loss_d 0.204 (0.167)	test_acc_d   0.92 (  0.93)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.70 (  0.68)
Test: [  20/  26]	Loss 0.168 (0.171)	test_acc   0.92 (  0.93)	test_minacc   0.86 (  0.86)	test_majacc   0.93 (  0.94)	Loss_d 0.168 (0.171)	test_acc_d   0.92 (  0.93)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.73 (  0.68)
Test: [  26/  26]	Loss 0.175 (0.170)	test_acc   0.92 (  0.93)	test_minacc   0.87 (  0.87)	test_majacc   0.93 (  0.94)	Loss_d 0.175 (0.170)	test_acc_d   0.92 (  0.93)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.65 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.35it/s]
Test: [  0/  1]	Loss 2.496 (2.496)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.92 (  0.92)	Loss_d 2.496 (2.496)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 2.496 (2.496)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.92 (  0.92)	Loss_d 2.496 (2.496)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.50 (  0.50)
Overall Timing[ 17/  1]	epoch_time 0.0439 (0.0443)	validation_time 0.0004 (0.0008)	train_time 0.0435 (0.0432)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.9281000196933746, 0.3620000183582306)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.46it/s] 15%|#5        | 4/26 [00:00<00:01, 13.85it/s] 27%|##6       | 7/26 [00:00<00:01, 18.69it/s] 38%|###8      | 10/26 [00:00<00:00, 21.96it/s] 50%|#####     | 13/26 [00:00<00:00, 23.67it/s] 62%|######1   | 16/26 [00:00<00:00, 24.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.49it/s] 85%|########4 | 22/26 [00:00<00:00, 26.19it/s] 96%|#########6| 25/26 [00:01<00:00, 26.77it/s]100%|##########| 26/26 [00:01<00:00, 21.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0044, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.001 (0.002)	train_nll   0.13 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm   9.89 (  9.89)	train_acc   0.94 (  0.92)	train_minacc   0.82 (  0.81)	train_majacc   0.97 (  0.94)	train_corr   0.00 (  0.00)	l1 23.5325 (23.5513)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.43it/s] 19%|#9        | 5/26 [00:00<00:00, 23.97it/s] 38%|###8      | 10/26 [00:00<00:00, 34.22it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.22it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.41it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.55it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.55it/s] 96%|#########6| 25/26 [00:00<00:00, 40.63it/s]100%|##########| 26/26 [00:00<00:00, 33.95it/s]
Test: [   0/  26]	Loss 0.218 (0.218)	test_acc   0.91 (  0.91)	test_minacc   0.67 (  0.67)	test_majacc   0.96 (  0.96)	Loss_d 0.218 (0.218)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.234 (0.175)	test_acc   0.89 (  0.93)	test_minacc   0.52 (  0.73)	test_majacc   0.97 (  0.97)	Loss_d 0.234 (0.175)	test_acc_d   0.89 (  0.93)	test_minacc_d   0.52 (  0.73)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.81 (  0.77)
Test: [  20/  26]	Loss 0.161 (0.176)	test_acc   0.94 (  0.93)	test_minacc   0.86 (  0.72)	test_majacc   0.95 (  0.97)	Loss_d 0.161 (0.176)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.86 (  0.72)	test_majacc_d   0.95 (  0.97)	test_corr_d   0.78 (  0.77)
Test: [  26/  26]	Loss 0.155 (0.179)	test_acc   0.92 (  0.93)	test_minacc   0.76 (  0.72)	test_majacc   0.95 (  0.97)	Loss_d 0.155 (0.179)	test_acc_d   0.92 (  0.93)	test_minacc_d   0.76 (  0.72)	test_majacc_d   0.95 (  0.97)	test_corr_d   0.73 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.87it/s]
Test: [  0/  1]	Loss 3.055 (3.055)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.92 (  0.92)	Loss_d 3.055 (3.055)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.63 (  0.63)
Test: [  1/  1]	Loss 3.055 (3.055)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.92 (  0.92)	Loss_d 3.055 (3.055)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.63 (  0.63)
Overall Timing[ 18/  1]	epoch_time 0.0437 (0.0443)	validation_time 0.0005 (0.0008)	train_time 0.0432 (0.0432)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.9280000245571136, 0.30900001525878906)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.31it/s] 15%|#5        | 4/26 [00:00<00:01, 15.19it/s] 27%|##6       | 7/26 [00:00<00:00, 20.07it/s] 38%|###8      | 10/26 [00:00<00:00, 23.05it/s] 50%|#####     | 13/26 [00:00<00:00, 24.85it/s] 62%|######1   | 16/26 [00:00<00:00, 26.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.80it/s] 85%|########4 | 22/26 [00:00<00:00, 27.33it/s] 96%|#########6| 25/26 [00:01<00:00, 27.07it/s]100%|##########| 26/26 [00:01<00:00, 22.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0037, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.004 (0.002)	train_nll   0.19 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm   9.89 (  9.89)	train_acc   0.93 (  0.91)	train_minacc   0.74 (  0.83)	train_majacc   0.96 (  0.93)	train_corr   0.00 (  0.00)	l1 23.4968 (23.5242)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.08it/s] 23%|##3       | 6/26 [00:00<00:00, 27.86it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.86it/s] 42%|####2     | 11/26 [00:00<00:00, 35.47it/s] 62%|######1   | 16/26 [00:00<00:00, 39.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.95it/s] 81%|########  | 21/26 [00:00<00:00, 38.65it/s]100%|##########| 26/26 [00:00<00:00, 42.00it/s]100%|##########| 26/26 [00:00<00:00, 34.27it/s]
Test: [   0/  26]	Loss 0.185 (0.185)	test_acc   0.92 (  0.92)	test_minacc   0.70 (  0.70)	test_majacc   0.97 (  0.97)	Loss_d 0.185 (0.185)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.264 (0.193)	test_acc   0.90 (  0.92)	test_minacc   0.68 (  0.76)	test_majacc   0.94 (  0.95)	Loss_d 0.264 (0.193)	test_acc_d   0.90 (  0.92)	test_minacc_d   0.68 (  0.76)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.75 (  0.73)
Test: [  20/  26]	Loss 0.194 (0.197)	test_acc   0.92 (  0.92)	test_minacc   0.76 (  0.74)	test_majacc   0.93 (  0.95)	Loss_d 0.194 (0.197)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.76 (  0.74)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.78 (  0.75)
Test: [  26/  26]	Loss 0.191 (0.195)	test_acc   0.93 (  0.92)	test_minacc   0.66 (  0.74)	test_majacc   0.98 (  0.95)	Loss_d 0.191 (0.195)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.66 (  0.74)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.76 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.45it/s]
Test: [  0/  1]	Loss 2.514 (2.514)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.91 (  0.91)	Loss_d 2.514 (2.514)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 2.514 (2.514)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.91 (  0.91)	Loss_d 2.514 (2.514)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.64 (  0.64)
Overall Timing[ 19/  1]	epoch_time 0.0416 (0.0442)	validation_time 0.0005 (0.0008)	train_time 0.0411 (0.0431)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.9199000219702721, 0.30000001192092896)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.48it/s] 15%|#5        | 4/26 [00:00<00:01, 13.86it/s] 27%|##6       | 7/26 [00:00<00:01, 18.53it/s] 38%|###8      | 10/26 [00:00<00:00, 21.50it/s] 50%|#####     | 13/26 [00:00<00:00, 22.97it/s] 62%|######1   | 16/26 [00:00<00:00, 24.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.94it/s] 85%|########4 | 22/26 [00:01<00:00, 25.59it/s] 96%|#########6| 25/26 [00:01<00:00, 26.17it/s]100%|##########| 26/26 [00:01<00:00, 21.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0030, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.002 (0.003)	train_nll   0.17 (  0.23)	train_penalty   0.00 (  0.00)	weight_norm   9.89 (  9.89)	train_acc   0.93 (  0.90)	train_minacc   0.74 (  0.79)	train_majacc   0.97 (  0.92)	train_corr   0.00 (  0.00)	l1 23.4574 (23.4883)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.34it/s] 27%|##6       | 7/26 [00:00<00:00, 33.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.55it/s] 46%|####6     | 12/26 [00:00<00:00, 38.45it/s] 65%|######5   | 17/26 [00:00<00:00, 40.91it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.91it/s] 85%|########4 | 22/26 [00:00<00:00, 42.89it/s]100%|##########| 26/26 [00:00<00:00, 37.11it/s]
Test: [   0/  26]	Loss 0.161 (0.161)	test_acc   0.92 (  0.92)	test_minacc   0.70 (  0.70)	test_majacc   0.97 (  0.97)	Loss_d 0.161 (0.161)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.274 (0.189)	test_acc   0.89 (  0.92)	test_minacc   0.52 (  0.69)	test_majacc   0.97 (  0.97)	Loss_d 0.274 (0.189)	test_acc_d   0.89 (  0.92)	test_minacc_d   0.52 (  0.69)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.82 (  0.79)
Test: [  20/  26]	Loss 0.149 (0.193)	test_acc   0.93 (  0.92)	test_minacc   0.62 (  0.65)	test_majacc   0.97 (  0.97)	Loss_d 0.149 (0.193)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.62 (  0.65)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.80)
Test: [  26/  26]	Loss 0.198 (0.192)	test_acc   0.92 (  0.92)	test_minacc   0.76 (  0.66)	test_majacc   0.95 (  0.97)	Loss_d 0.198 (0.192)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.76 (  0.66)	test_majacc_d   0.95 (  0.97)	test_corr_d   0.75 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.58it/s]
Test: [  0/  1]	Loss 2.545 (2.545)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.95 (  0.95)	Loss_d 2.545 (2.545)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 2.545 (2.545)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.95 (  0.95)	Loss_d 2.545 (2.545)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.69 (  0.69)
Overall Timing[ 20/  1]	epoch_time 0.0421 (0.0441)	validation_time 0.0005 (0.0008)	train_time 0.0416 (0.0430)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.9195000178813935, 0.29100000858306885)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.39it/s] 15%|#5        | 4/26 [00:00<00:02,  9.20it/s] 27%|##6       | 7/26 [00:00<00:01, 14.32it/s] 38%|###8      | 10/26 [00:00<00:00, 18.29it/s] 50%|#####     | 13/26 [00:00<00:00, 20.86it/s] 62%|######1   | 16/26 [00:00<00:00, 22.96it/s] 73%|#######3  | 19/26 [00:01<00:00, 24.22it/s] 85%|########4 | 22/26 [00:01<00:00, 25.57it/s] 96%|#########6| 25/26 [00:01<00:00, 26.45it/s]100%|##########| 26/26 [00:01<00:00, 19.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0024, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.000 (0.004)	train_nll   0.20 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm   9.89 (  9.89)	train_acc   0.92 (  0.91)	train_minacc   0.82 (  0.76)	train_majacc   0.94 (  0.94)	train_corr   0.00 (  0.00)	l1 23.3908 (23.4263)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.23it/s] 27%|##6       | 7/26 [00:00<00:00, 30.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.16it/s] 46%|####6     | 12/26 [00:00<00:00, 36.82it/s] 65%|######5   | 17/26 [00:00<00:00, 40.46it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.46it/s] 85%|########4 | 22/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 36.07it/s]
Test: [   0/  26]	Loss 0.215 (0.215)	test_acc   0.90 (  0.90)	test_minacc   0.76 (  0.76)	test_majacc   0.93 (  0.93)	Loss_d 0.215 (0.215)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.314 (0.216)	test_acc   0.85 (  0.91)	test_minacc   0.63 (  0.81)	test_majacc   0.90 (  0.92)	Loss_d 0.314 (0.216)	test_acc_d   0.85 (  0.91)	test_minacc_d   0.63 (  0.81)	test_majacc_d   0.90 (  0.92)	test_corr_d   0.70 (  0.69)
Test: [  20/  26]	Loss 0.194 (0.226)	test_acc   0.93 (  0.91)	test_minacc   0.86 (  0.79)	test_majacc   0.94 (  0.93)	Loss_d 0.194 (0.226)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.86 (  0.79)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.74 (  0.70)
Test: [  26/  26]	Loss 0.225 (0.227)	test_acc   0.91 (  0.90)	test_minacc   0.84 (  0.78)	test_majacc   0.92 (  0.93)	Loss_d 0.225 (0.227)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.37it/s]
Test: [  0/  1]	Loss 2.268 (2.268)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.87 (  0.87)	Loss_d 2.268 (2.268)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.46 (  0.46)
Test: [  1/  1]	Loss 2.268 (2.268)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.87 (  0.87)	Loss_d 2.268 (2.268)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.46 (  0.46)
Overall Timing[ 21/  1]	epoch_time 0.0436 (0.0440)	validation_time 0.0005 (0.0007)	train_time 0.0431 (0.0430)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.9040000219941139, 0.3800000250339508)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.80it/s] 15%|#5        | 4/26 [00:00<00:01, 17.37it/s] 27%|##6       | 7/26 [00:00<00:00, 21.34it/s] 38%|###8      | 10/26 [00:00<00:00, 23.31it/s] 50%|#####     | 13/26 [00:00<00:00, 24.74it/s] 62%|######1   | 16/26 [00:00<00:00, 25.90it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.38it/s] 85%|########4 | 22/26 [00:00<00:00, 26.83it/s] 96%|#########6| 25/26 [00:01<00:00, 27.22it/s]100%|##########| 26/26 [00:01<00:00, 23.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.001 (0.002)	train_nll   0.24 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.89)	train_acc   0.90 (  0.91)	train_minacc   0.84 (  0.81)	train_majacc   0.92 (  0.93)	train_corr   0.00 (  0.00)	l1 23.3737 (23.3821)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.20it/s] 12%|#1        | 3/26 [00:00<00:02, 10.80it/s] 35%|###4      | 9/26 [00:00<00:00, 27.22it/s]                                               35%|###4      | 9/26 [00:00<00:00, 27.22it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.33it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.06it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.06it/s] 96%|#########6| 25/26 [00:00<00:00, 39.85it/s]100%|##########| 26/26 [00:00<00:00, 31.15it/s]
Test: [   0/  26]	Loss 0.243 (0.243)	test_acc   0.90 (  0.90)	test_minacc   0.75 (  0.75)	test_majacc   0.93 (  0.93)	Loss_d 0.243 (0.243)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.174 (0.193)	test_acc   0.93 (  0.92)	test_minacc   0.83 (  0.84)	test_majacc   0.94 (  0.93)	Loss_d 0.174 (0.193)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.83 (  0.84)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.69 (  0.68)
Test: [  20/  26]	Loss 0.197 (0.201)	test_acc   0.91 (  0.92)	test_minacc   0.90 (  0.82)	test_majacc   0.91 (  0.93)	Loss_d 0.197 (0.201)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.90 (  0.82)	test_majacc_d   0.91 (  0.93)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.210 (0.204)	test_acc   0.93 (  0.92)	test_minacc   0.82 (  0.82)	test_majacc   0.95 (  0.94)	Loss_d 0.210 (0.204)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.70 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.14it/s]
Test: [  0/  1]	Loss 2.323 (2.323)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.86 (  0.86)	Loss_d 2.323 (2.323)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 2.323 (2.323)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.86 (  0.86)	Loss_d 2.323 (2.323)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.45 (  0.45)
Overall Timing[ 22/  1]	epoch_time 0.0454 (0.0441)	validation_time 0.0004 (0.0007)	train_time 0.0449 (0.0431)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.9170000219345092, 0.3850000202655792)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.86it/s] 15%|#5        | 4/26 [00:00<00:01, 16.66it/s] 27%|##6       | 7/26 [00:00<00:00, 21.15it/s] 38%|###8      | 10/26 [00:00<00:00, 23.56it/s] 50%|#####     | 13/26 [00:00<00:00, 24.47it/s] 62%|######1   | 16/26 [00:00<00:00, 25.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.52it/s] 85%|########4 | 22/26 [00:00<00:00, 26.87it/s] 96%|#########6| 25/26 [00:01<00:00, 27.02it/s]100%|##########| 26/26 [00:01<00:00, 23.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0013, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
l1 at pgd_anneal_iters 23.36284637451172
set z to 22.194704055786133
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.005 (0.002)	train_nll   0.16 (  0.22)	train_penalty   0.01 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.93 (  0.91)	train_minacc   0.92 (  0.85)	train_majacc   0.93 (  0.92)	train_corr   0.00 (  0.00)	l1 23.3434 (23.3546)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 27%|##6       | 7/26 [00:00<00:00, 32.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.14it/s] 46%|####6     | 12/26 [00:00<00:00, 38.11it/s] 65%|######5   | 17/26 [00:00<00:00, 41.25it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.25it/s] 85%|########4 | 22/26 [00:00<00:00, 43.01it/s]100%|##########| 26/26 [00:00<00:00, 36.31it/s]
Test: [   0/  26]	Loss 0.221 (0.221)	test_acc   0.90 (  0.90)	test_minacc   0.60 (  0.60)	test_majacc   0.96 (  0.96)	Loss_d 0.221 (0.221)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.172 (0.205)	test_acc   0.92 (  0.92)	test_minacc   0.80 (  0.74)	test_majacc   0.95 (  0.95)	Loss_d 0.172 (0.205)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.80 (  0.74)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.72 (  0.73)
Test: [  20/  26]	Loss 0.200 (0.209)	test_acc   0.92 (  0.91)	test_minacc   0.76 (  0.72)	test_majacc   0.94 (  0.95)	Loss_d 0.200 (0.209)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.76 (  0.72)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.80 (  0.75)
Test: [  26/  26]	Loss 0.143 (0.207)	test_acc   0.94 (  0.91)	test_minacc   0.87 (  0.72)	test_majacc   0.95 (  0.95)	Loss_d 0.143 (0.207)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.87 (  0.72)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.72 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.49it/s]
Test: [  0/  1]	Loss 2.648 (2.648)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.93 (  0.93)	Loss_d 2.648 (2.648)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 2.648 (2.648)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.93 (  0.93)	Loss_d 2.648 (2.648)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.64 (  0.64)
Overall Timing[ 23/  1]	epoch_time 0.0424 (0.0440)	validation_time 0.0004 (0.0007)	train_time 0.0420 (0.0431)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.9135000227689744, 0.31200000643730164)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.62it/s] 15%|#5        | 4/26 [00:00<00:01, 12.43it/s] 27%|##6       | 7/26 [00:00<00:01, 17.69it/s] 38%|###8      | 10/26 [00:00<00:00, 21.09it/s] 50%|#####     | 13/26 [00:00<00:00, 23.41it/s] 62%|######1   | 16/26 [00:00<00:00, 24.90it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.95it/s] 85%|########4 | 22/26 [00:01<00:00, 27.13it/s] 96%|#########6| 25/26 [00:01<00:00, 26.63it/s]100%|##########| 26/26 [00:01<00:00, 21.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: tensor(0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.009 (0.002)	train_nll   0.28 (  0.24)	train_penalty   0.01 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.87 (  0.90)	train_minacc   0.63 (  0.81)	train_majacc   0.92 (  0.91)	train_corr   0.00 (  0.00)	l1 23.3136 (23.3273)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.58it/s] 23%|##3       | 6/26 [00:00<00:01, 19.21it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.21it/s] 42%|####2     | 11/26 [00:00<00:00, 28.29it/s] 65%|######5   | 17/26 [00:00<00:00, 36.08it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.08it/s] 85%|########4 | 22/26 [00:00<00:00, 39.97it/s]100%|##########| 26/26 [00:00<00:00, 30.11it/s]
Test: [   0/  26]	Loss 0.231 (0.231)	test_acc   0.90 (  0.90)	test_minacc   0.75 (  0.75)	test_majacc   0.93 (  0.93)	Loss_d 0.231 (0.231)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.274 (0.216)	test_acc   0.89 (  0.91)	test_minacc   0.68 (  0.75)	test_majacc   0.94 (  0.94)	Loss_d 0.274 (0.216)	test_acc_d   0.89 (  0.91)	test_minacc_d   0.68 (  0.75)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.72 (  0.72)
Test: [  20/  26]	Loss 0.199 (0.222)	test_acc   0.92 (  0.90)	test_minacc   0.79 (  0.74)	test_majacc   0.94 (  0.93)	Loss_d 0.199 (0.222)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.79 (  0.74)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.78 (  0.73)
Test: [  26/  26]	Loss 0.208 (0.221)	test_acc   0.92 (  0.90)	test_minacc   0.82 (  0.74)	test_majacc   0.94 (  0.93)	Loss_d 0.208 (0.221)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.82 (  0.74)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.71 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.71it/s]
Test: [  0/  1]	Loss 2.726 (2.726)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.94 (  0.94)	Loss_d 2.726 (2.726)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 2.726 (2.726)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.94 (  0.94)	Loss_d 2.726 (2.726)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Overall Timing[ 24/  1]	epoch_time 0.0447 (0.0440)	validation_time 0.0005 (0.0007)	train_time 0.0442 (0.0431)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.904400017619133, 0.328000009059906)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.47it/s] 15%|#5        | 4/26 [00:00<00:01, 12.08it/s] 27%|##6       | 7/26 [00:00<00:01, 17.09it/s] 38%|###8      | 10/26 [00:00<00:00, 20.39it/s] 50%|#####     | 13/26 [00:00<00:00, 22.47it/s] 62%|######1   | 16/26 [00:00<00:00, 24.19it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.19it/s] 85%|########4 | 22/26 [00:01<00:00, 25.97it/s] 96%|#########6| 25/26 [00:01<00:00, 26.89it/s]100%|##########| 26/26 [00:01<00:00, 20.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.004 (0.002)	train_nll   0.19 (  0.24)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.94 (  0.89)	train_minacc   0.97 (  0.83)	train_majacc   0.93 (  0.90)	train_corr   0.00 (  0.00)	l1 23.2848 (23.2979)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 23%|##3       | 6/26 [00:00<00:00, 28.92it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.92it/s] 42%|####2     | 11/26 [00:00<00:00, 35.92it/s] 62%|######1   | 16/26 [00:00<00:00, 40.28it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.28it/s] 81%|########  | 21/26 [00:00<00:00, 39.13it/s]100%|##########| 26/26 [00:00<00:00, 41.97it/s]100%|##########| 26/26 [00:00<00:00, 34.39it/s]
Test: [   0/  26]	Loss 0.263 (0.263)	test_acc   0.88 (  0.88)	test_minacc   0.66 (  0.66)	test_majacc   0.93 (  0.93)	Loss_d 0.263 (0.263)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.254 (0.254)	test_acc   0.89 (  0.89)	test_minacc   0.75 (  0.78)	test_majacc   0.92 (  0.91)	Loss_d 0.254 (0.254)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.75 (  0.78)	test_majacc_d   0.92 (  0.91)	test_corr_d   0.67 (  0.68)
Test: [  20/  26]	Loss 0.241 (0.264)	test_acc   0.90 (  0.88)	test_minacc   0.79 (  0.77)	test_majacc   0.92 (  0.91)	Loss_d 0.241 (0.264)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.79 (  0.77)	test_majacc_d   0.92 (  0.91)	test_corr_d   0.73 (  0.68)
Test: [  26/  26]	Loss 0.191 (0.262)	test_acc   0.93 (  0.89)	test_minacc   0.89 (  0.78)	test_majacc   0.93 (  0.91)	Loss_d 0.191 (0.262)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.89 (  0.78)	test_majacc_d   0.93 (  0.91)	test_corr_d   0.65 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.46it/s]
Test: [  0/  1]	Loss 2.106 (2.106)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.95 (  0.95)	Loss_d 2.106 (2.106)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 2.106 (2.106)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.95 (  0.95)	Loss_d 2.106 (2.106)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.52 (  0.52)
Overall Timing[ 25/  1]	epoch_time 0.0441 (0.0441)	validation_time 0.0004 (0.0007)	train_time 0.0437 (0.0431)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.8856000168323517, 0.3680000305175781)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 15%|#5        | 4/26 [00:00<00:01, 17.15it/s] 27%|##6       | 7/26 [00:00<00:00, 21.46it/s] 38%|###8      | 10/26 [00:00<00:00, 23.95it/s] 50%|#####     | 13/26 [00:00<00:00, 25.07it/s] 62%|######1   | 16/26 [00:00<00:00, 26.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.15it/s] 85%|########4 | 22/26 [00:00<00:00, 26.66it/s] 96%|#########6| 25/26 [00:01<00:00, 26.98it/s]100%|##########| 26/26 [00:01<00:00, 23.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.001 (0.002)	train_nll   0.24 (  0.26)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.92 (  0.88)	train_minacc   0.92 (  0.80)	train_majacc   0.92 (  0.90)	train_corr   0.00 (  0.00)	l1 23.2590 (23.2753)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 23%|##3       | 6/26 [00:00<00:00, 26.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.58it/s] 42%|####2     | 11/26 [00:00<00:00, 34.05it/s] 62%|######1   | 16/26 [00:00<00:00, 39.10it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.10it/s] 81%|########  | 21/26 [00:00<00:00, 39.00it/s]100%|##########| 26/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 33.98it/s]
Test: [   0/  26]	Loss 0.248 (0.248)	test_acc   0.90 (  0.90)	test_minacc   0.70 (  0.70)	test_majacc   0.94 (  0.94)	Loss_d 0.248 (0.248)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.254 (0.216)	test_acc   0.89 (  0.91)	test_minacc   0.80 (  0.79)	test_majacc   0.91 (  0.93)	Loss_d 0.254 (0.216)	test_acc_d   0.89 (  0.91)	test_minacc_d   0.80 (  0.79)	test_majacc_d   0.91 (  0.93)	test_corr_d   0.69 (  0.71)
Test: [  20/  26]	Loss 0.238 (0.224)	test_acc   0.88 (  0.91)	test_minacc   0.79 (  0.78)	test_majacc   0.90 (  0.93)	Loss_d 0.238 (0.224)	test_acc_d   0.88 (  0.91)	test_minacc_d   0.79 (  0.78)	test_majacc_d   0.90 (  0.93)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.246 (0.229)	test_acc   0.92 (  0.90)	test_minacc   0.82 (  0.77)	test_majacc   0.93 (  0.93)	Loss_d 0.246 (0.229)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.82 (  0.77)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.69 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.36it/s]
Test: [  0/  1]	Loss 2.082 (2.082)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.94 (  0.94)	Loss_d 2.082 (2.082)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 2.082 (2.082)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.94 (  0.94)	Loss_d 2.082 (2.082)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.49 (  0.49)
Overall Timing[ 26/  1]	epoch_time 0.0432 (0.0440)	validation_time 0.0004 (0.0007)	train_time 0.0428 (0.0431)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.9026000248193741, 0.38600000739097595)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.07it/s] 15%|#5        | 4/26 [00:00<00:01, 12.24it/s] 27%|##6       | 7/26 [00:00<00:01, 17.31it/s] 38%|###8      | 10/26 [00:00<00:00, 20.55it/s] 50%|#####     | 13/26 [00:00<00:00, 22.45it/s] 62%|######1   | 16/26 [00:00<00:00, 24.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.77it/s] 85%|########4 | 22/26 [00:00<00:00, 26.55it/s] 96%|#########6| 25/26 [00:01<00:00, 26.95it/s]100%|##########| 26/26 [00:01<00:00, 21.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.000 (0.002)	train_nll   0.25 (  0.26)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.90 (  0.88)	train_minacc   0.89 (  0.80)	train_majacc   0.90 (  0.90)	train_corr   0.00 (  0.00)	l1 23.2063 (23.2279)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 27%|##6       | 7/26 [00:00<00:00, 33.15it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.15it/s] 46%|####6     | 12/26 [00:00<00:00, 38.91it/s] 65%|######5   | 17/26 [00:00<00:00, 41.90it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.90it/s] 85%|########4 | 22/26 [00:00<00:00, 43.64it/s]100%|##########| 26/26 [00:00<00:00, 35.90it/s]
Test: [   0/  26]	Loss 0.261 (0.261)	test_acc   0.89 (  0.89)	test_minacc   0.70 (  0.70)	test_majacc   0.93 (  0.93)	Loss_d 0.261 (0.261)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.292 (0.263)	test_acc   0.87 (  0.89)	test_minacc   0.75 (  0.79)	test_majacc   0.90 (  0.90)	Loss_d 0.292 (0.263)	test_acc_d   0.87 (  0.89)	test_minacc_d   0.75 (  0.79)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.65 (  0.66)
Test: [  20/  26]	Loss 0.308 (0.282)	test_acc   0.87 (  0.87)	test_minacc   0.69 (  0.75)	test_majacc   0.89 (  0.89)	Loss_d 0.308 (0.282)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.69 (  0.75)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.72 (  0.67)
Test: [  26/  26]	Loss 0.236 (0.284)	test_acc   0.92 (  0.87)	test_minacc   0.89 (  0.75)	test_majacc   0.92 (  0.89)	Loss_d 0.236 (0.284)	test_acc_d   0.92 (  0.87)	test_minacc_d   0.89 (  0.75)	test_majacc_d   0.92 (  0.89)	test_corr_d   0.66 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.18it/s]
Test: [  0/  1]	Loss 1.956 (1.956)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.85 (  0.85)	Loss_d 1.956 (1.956)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.956 (1.956)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.85 (  0.85)	Loss_d 1.956 (1.956)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Overall Timing[ 27/  1]	epoch_time 0.0436 (0.0440)	validation_time 0.0004 (0.0007)	train_time 0.0432 (0.0431)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.870400017440319, 0.4270000159740448)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.71it/s] 15%|#5        | 4/26 [00:00<00:01, 15.04it/s] 27%|##6       | 7/26 [00:00<00:00, 19.49it/s] 38%|###8      | 10/26 [00:00<00:00, 22.08it/s] 50%|#####     | 13/26 [00:00<00:00, 23.47it/s] 62%|######1   | 16/26 [00:00<00:00, 24.59it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.82it/s] 85%|########4 | 22/26 [00:00<00:00, 26.74it/s] 96%|#########6| 25/26 [00:01<00:00, 26.33it/s]100%|##########| 26/26 [00:01<00:00, 22.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.001 (0.002)	train_nll   0.23 (  0.29)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.89 (  0.86)	train_minacc   0.68 (  0.78)	train_majacc   0.93 (  0.87)	train_corr   0.00 (  0.00)	l1 23.1832 (23.1961)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.90it/s] 31%|###       | 8/26 [00:00<00:00, 38.03it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.03it/s] 50%|#####     | 13/26 [00:00<00:00, 41.40it/s] 69%|######9   | 18/26 [00:00<00:00, 40.24it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.24it/s] 88%|########8 | 23/26 [00:00<00:00, 42.17it/s]100%|##########| 26/26 [00:00<00:00, 38.74it/s]
Test: [   0/  26]	Loss 0.267 (0.267)	test_acc   0.87 (  0.87)	test_minacc   0.69 (  0.69)	test_majacc   0.91 (  0.91)	Loss_d 0.267 (0.267)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.251 (0.267)	test_acc   0.89 (  0.88)	test_minacc   0.68 (  0.72)	test_majacc   0.94 (  0.91)	Loss_d 0.251 (0.267)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.68 (  0.72)	test_majacc_d   0.94 (  0.91)	test_corr_d   0.73 (  0.72)
Test: [  20/  26]	Loss 0.270 (0.277)	test_acc   0.88 (  0.88)	test_minacc   0.67 (  0.69)	test_majacc   0.90 (  0.91)	Loss_d 0.270 (0.277)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.67 (  0.69)	test_majacc_d   0.90 (  0.91)	test_corr_d   0.76 (  0.72)
Test: [  26/  26]	Loss 0.261 (0.279)	test_acc   0.89 (  0.88)	test_minacc   0.87 (  0.69)	test_majacc   0.89 (  0.91)	Loss_d 0.261 (0.279)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.87 (  0.69)	test_majacc_d   0.89 (  0.91)	test_corr_d   0.66 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.80it/s]
Test: [  0/  1]	Loss 1.863 (1.863)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.92 (  0.92)	Loss_d 1.863 (1.863)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 1.863 (1.863)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.92 (  0.92)	Loss_d 1.863 (1.863)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.54 (  0.54)
Overall Timing[ 28/  1]	epoch_time 0.0441 (0.0440)	validation_time 0.0005 (0.0007)	train_time 0.0436 (0.0431)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.8759000217914581, 0.3570000231266022)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.81it/s] 19%|#9        | 5/26 [00:00<00:01, 20.89it/s] 31%|###       | 8/26 [00:00<00:00, 23.87it/s] 42%|####2     | 11/26 [00:00<00:00, 25.20it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.43it/s] 65%|######5   | 17/26 [00:00<00:00, 26.80it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.44it/s] 88%|########8 | 23/26 [00:00<00:00, 27.70it/s]100%|##########| 26/26 [00:01<00:00, 24.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.001 (0.002)	train_nll   0.22 (  0.29)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.89 (  0.87)	train_minacc   0.87 (  0.79)	train_majacc   0.90 (  0.88)	train_corr   0.00 (  0.00)	l1 23.1531 (23.1702)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.28it/s] 19%|#9        | 5/26 [00:00<00:00, 25.97it/s] 38%|###8      | 10/26 [00:00<00:00, 35.48it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.48it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.40it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.83it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.83it/s] 96%|#########6| 25/26 [00:00<00:00, 41.31it/s]100%|##########| 26/26 [00:00<00:00, 34.98it/s]
Test: [   0/  26]	Loss 0.265 (0.265)	test_acc   0.88 (  0.88)	test_minacc   0.76 (  0.76)	test_majacc   0.91 (  0.91)	Loss_d 0.265 (0.265)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.269 (0.258)	test_acc   0.87 (  0.89)	test_minacc   0.71 (  0.77)	test_majacc   0.90 (  0.91)	Loss_d 0.269 (0.258)	test_acc_d   0.87 (  0.89)	test_minacc_d   0.71 (  0.77)	test_majacc_d   0.90 (  0.91)	test_corr_d   0.70 (  0.70)
Test: [  20/  26]	Loss 0.235 (0.262)	test_acc   0.89 (  0.89)	test_minacc   0.76 (  0.75)	test_majacc   0.91 (  0.91)	Loss_d 0.235 (0.262)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.76 (  0.75)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.74 (  0.71)
Test: [  26/  26]	Loss 0.216 (0.263)	test_acc   0.93 (  0.89)	test_minacc   0.89 (  0.75)	test_majacc   0.93 (  0.91)	Loss_d 0.216 (0.263)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.89 (  0.75)	test_majacc_d   0.93 (  0.91)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.84it/s]
Test: [  0/  1]	Loss 2.085 (2.085)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.86 (  0.86)	Loss_d 2.085 (2.085)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 2.085 (2.085)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.86 (  0.86)	Loss_d 2.085 (2.085)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.42 (  0.42)
Overall Timing[ 29/  1]	epoch_time 0.0415 (0.0439)	validation_time 0.0004 (0.0007)	train_time 0.0411 (0.0431)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.8866000190973282, 0.41600000858306885)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 15%|#5        | 4/26 [00:00<00:01, 14.93it/s] 27%|##6       | 7/26 [00:00<00:00, 19.12it/s] 38%|###8      | 10/26 [00:00<00:00, 22.42it/s] 50%|#####     | 13/26 [00:00<00:00, 24.43it/s] 62%|######1   | 16/26 [00:00<00:00, 25.70it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.31it/s] 85%|########4 | 22/26 [00:00<00:00, 27.16it/s] 96%|#########6| 25/26 [00:01<00:00, 27.56it/s]100%|##########| 26/26 [00:01<00:00, 22.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.004 (0.003)	train_nll   0.25 (  0.29)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.92 (  0.87)	train_minacc   0.92 (  0.77)	train_majacc   0.92 (  0.88)	train_corr   0.00 (  0.00)	l1 23.1131 (23.1515)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.03it/s] 23%|##3       | 6/26 [00:00<00:00, 29.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.50it/s] 42%|####2     | 11/26 [00:00<00:00, 36.92it/s] 62%|######1   | 16/26 [00:00<00:00, 37.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.41it/s] 81%|########  | 21/26 [00:00<00:00, 40.11it/s]100%|##########| 26/26 [00:00<00:00, 43.07it/s]100%|##########| 26/26 [00:00<00:00, 35.12it/s]
Test: [   0/  26]	Loss 0.276 (0.276)	test_acc   0.88 (  0.88)	test_minacc   0.61 (  0.61)	test_majacc   0.94 (  0.94)	Loss_d 0.276 (0.276)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.277 (0.269)	test_acc   0.88 (  0.88)	test_minacc   0.69 (  0.66)	test_majacc   0.92 (  0.93)	Loss_d 0.277 (0.269)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.69 (  0.66)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.74 (  0.75)
Test: [  20/  26]	Loss 0.267 (0.272)	test_acc   0.86 (  0.88)	test_minacc   0.60 (  0.64)	test_majacc   0.90 (  0.92)	Loss_d 0.267 (0.272)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.60 (  0.64)	test_majacc_d   0.90 (  0.92)	test_corr_d   0.78 (  0.76)
Test: [  26/  26]	Loss 0.241 (0.274)	test_acc   0.91 (  0.88)	test_minacc   0.79 (  0.64)	test_majacc   0.93 (  0.92)	Loss_d 0.241 (0.274)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.79 (  0.64)	test_majacc_d   0.93 (  0.92)	test_corr_d   0.71 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.52it/s]
Test: [  0/  1]	Loss 1.929 (1.929)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.89 (  0.89)	Loss_d 1.929 (1.929)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 1.929 (1.929)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.89 (  0.89)	Loss_d 1.929 (1.929)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.56 (  0.56)
Overall Timing[ 30/  1]	epoch_time 0.0418 (0.0439)	validation_time 0.0004 (0.0007)	train_time 0.0413 (0.0430)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.8809000235795975, 0.36100003123283386)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 15%|#5        | 4/26 [00:00<00:01, 18.49it/s] 27%|##6       | 7/26 [00:00<00:00, 22.34it/s] 38%|###8      | 10/26 [00:00<00:00, 24.62it/s] 50%|#####     | 13/26 [00:00<00:00, 25.62it/s] 62%|######1   | 16/26 [00:00<00:00, 26.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.76it/s] 85%|########4 | 22/26 [00:00<00:00, 27.55it/s] 96%|#########6| 25/26 [00:00<00:00, 28.11it/s]100%|##########| 26/26 [00:01<00:00, 24.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.000 (0.003)	train_nll   0.26 (  0.28)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.90 (  0.87)	train_minacc   0.84 (  0.74)	train_majacc   0.91 (  0.89)	train_corr   0.00 (  0.00)	l1 23.0172 (23.0483)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.56it/s] 27%|##6       | 7/26 [00:00<00:00, 32.04it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.04it/s] 50%|#####     | 13/26 [00:00<00:00, 38.33it/s] 69%|######9   | 18/26 [00:00<00:00, 40.85it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.85it/s] 88%|########8 | 23/26 [00:00<00:00, 42.21it/s]100%|##########| 26/26 [00:00<00:00, 35.47it/s]
Test: [   0/  26]	Loss 0.286 (0.286)	test_acc   0.88 (  0.88)	test_minacc   0.75 (  0.75)	test_majacc   0.91 (  0.91)	Loss_d 0.286 (0.286)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.254 (0.256)	test_acc   0.89 (  0.89)	test_minacc   0.80 (  0.77)	test_majacc   0.91 (  0.92)	Loss_d 0.254 (0.256)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.80 (  0.77)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.68 (  0.69)
Test: [  20/  26]	Loss 0.310 (0.262)	test_acc   0.85 (  0.89)	test_minacc   0.67 (  0.73)	test_majacc   0.87 (  0.91)	Loss_d 0.310 (0.262)	test_acc_d   0.85 (  0.89)	test_minacc_d   0.67 (  0.73)	test_majacc_d   0.87 (  0.91)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.302 (0.264)	test_acc   0.88 (  0.89)	test_minacc   0.84 (  0.73)	test_majacc   0.89 (  0.91)	Loss_d 0.302 (0.264)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.84 (  0.73)	test_majacc_d   0.89 (  0.91)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.04it/s]
Test: [  0/  1]	Loss 1.898 (1.898)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.90 (  0.90)	Loss_d 1.898 (1.898)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 1.898 (1.898)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.90 (  0.90)	Loss_d 1.898 (1.898)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.47 (  0.47)
Overall Timing[ 31/  1]	epoch_time 0.0421 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0416 (0.0430)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.8863000244498253, 0.3840000033378601)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.57it/s] 15%|#5        | 4/26 [00:00<00:01, 17.27it/s] 27%|##6       | 7/26 [00:00<00:00, 21.70it/s] 38%|###8      | 10/26 [00:00<00:00, 24.36it/s] 50%|#####     | 13/26 [00:00<00:00, 25.74it/s] 65%|######5   | 17/26 [00:00<00:00, 27.31it/s] 81%|########  | 21/26 [00:00<00:00, 28.18it/s] 92%|#########2| 24/26 [00:00<00:00, 28.11it/s]100%|##########| 26/26 [00:01<00:00, 23.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.001 (0.002)	train_nll   0.25 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.93 (  0.88)	train_minacc   0.92 (  0.77)	train_majacc   0.93 (  0.90)	train_corr   0.00 (  0.00)	l1 22.9591 (22.9972)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.82it/s] 27%|##6       | 7/26 [00:00<00:00, 33.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.17it/s] 46%|####6     | 12/26 [00:00<00:00, 38.89it/s] 65%|######5   | 17/26 [00:00<00:00, 41.60it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.60it/s] 85%|########4 | 22/26 [00:00<00:00, 39.79it/s]100%|##########| 26/26 [00:00<00:00, 37.48it/s]
Test: [   0/  26]	Loss 0.248 (0.248)	test_acc   0.90 (  0.90)	test_minacc   0.79 (  0.79)	test_majacc   0.93 (  0.93)	Loss_d 0.248 (0.248)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.247 (0.246)	test_acc   0.89 (  0.90)	test_minacc   0.75 (  0.76)	test_majacc   0.92 (  0.92)	Loss_d 0.247 (0.246)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.72 (  0.72)
Test: [  20/  26]	Loss 0.259 (0.257)	test_acc   0.89 (  0.89)	test_minacc   0.67 (  0.74)	test_majacc   0.91 (  0.92)	Loss_d 0.259 (0.257)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.67 (  0.74)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.78 (  0.73)
Test: [  26/  26]	Loss 0.269 (0.261)	test_acc   0.89 (  0.89)	test_minacc   0.87 (  0.72)	test_majacc   0.90 (  0.92)	Loss_d 0.269 (0.261)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.87 (  0.72)	test_majacc_d   0.90 (  0.92)	test_corr_d   0.68 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.97it/s]
Test: [  0/  1]	Loss 2.024 (2.024)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.92 (  0.92)	Loss_d 2.024 (2.024)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 2.024 (2.024)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.92 (  0.92)	Loss_d 2.024 (2.024)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.54 (  0.54)
Overall Timing[ 32/  1]	epoch_time 0.0426 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0421 (0.0429)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.8885000232458115, 0.3660000264644623)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.00it/s] 15%|#5        | 4/26 [00:00<00:01, 16.42it/s] 27%|##6       | 7/26 [00:00<00:00, 20.50it/s] 38%|###8      | 10/26 [00:00<00:00, 23.15it/s] 50%|#####     | 13/26 [00:00<00:00, 24.70it/s] 62%|######1   | 16/26 [00:00<00:00, 25.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.34it/s] 85%|########4 | 22/26 [00:00<00:00, 26.78it/s] 96%|#########6| 25/26 [00:01<00:00, 27.10it/s]100%|##########| 26/26 [00:01<00:00, 23.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.001 (0.003)	train_nll   0.33 (  0.30)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.85 (  0.86)	train_minacc   0.87 (  0.77)	train_majacc   0.84 (  0.88)	train_corr   0.00 (  0.00)	l1 22.9063 (22.9352)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.93it/s] 31%|###       | 8/26 [00:00<00:00, 38.99it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.99it/s] 50%|#####     | 13/26 [00:00<00:00, 41.61it/s] 69%|######9   | 18/26 [00:00<00:00, 44.58it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.58it/s] 88%|########8 | 23/26 [00:00<00:00, 45.83it/s]100%|##########| 26/26 [00:00<00:00, 39.28it/s]
Test: [   0/  26]	Loss 0.294 (0.294)	test_acc   0.87 (  0.87)	test_minacc   0.72 (  0.72)	test_majacc   0.90 (  0.90)	Loss_d 0.294 (0.294)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.252 (0.250)	test_acc   0.88 (  0.89)	test_minacc   0.77 (  0.79)	test_majacc   0.90 (  0.91)	Loss_d 0.252 (0.250)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.77 (  0.79)	test_majacc_d   0.90 (  0.91)	test_corr_d   0.70 (  0.70)
Test: [  20/  26]	Loss 0.245 (0.258)	test_acc   0.90 (  0.89)	test_minacc   0.79 (  0.75)	test_majacc   0.91 (  0.91)	Loss_d 0.245 (0.258)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.75 (  0.71)
Test: [  26/  26]	Loss 0.253 (0.257)	test_acc   0.91 (  0.89)	test_minacc   0.87 (  0.76)	test_majacc   0.92 (  0.91)	Loss_d 0.253 (0.257)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.87 (  0.76)	test_majacc_d   0.92 (  0.91)	test_corr_d   0.66 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.71it/s]
Test: [  0/  1]	Loss 2.000 (2.000)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 2.000 (2.000)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 2.000 (2.000)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 2.000 (2.000)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.43 (  0.43)
Overall Timing[ 33/  1]	epoch_time 0.0434 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0429 (0.0429)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.8883000194430352, 0.41700002551078796)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.19it/s] 23%|##3       | 6/26 [00:00<00:00, 26.79it/s] 35%|###4      | 9/26 [00:00<00:00, 26.69it/s] 46%|####6     | 12/26 [00:00<00:00, 26.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.61it/s] 69%|######9   | 18/26 [00:00<00:00, 26.90it/s] 81%|########  | 21/26 [00:00<00:00, 27.21it/s] 92%|#########2| 24/26 [00:00<00:00, 27.00it/s]100%|##########| 26/26 [00:01<00:00, 25.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.002 (0.004)	train_nll   0.28 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm   9.90 (  9.90)	train_acc   0.90 (  0.88)	train_minacc   0.76 (  0.80)	train_majacc   0.92 (  0.90)	train_corr   0.00 (  0.00)	l1 22.8454 (22.8829)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 19%|#9        | 5/26 [00:00<00:00, 22.81it/s] 38%|###8      | 10/26 [00:00<00:00, 32.95it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.20it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.01it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.01it/s] 96%|#########6| 25/26 [00:00<00:00, 41.76it/s]100%|##########| 26/26 [00:00<00:00, 33.75it/s]
Test: [   0/  26]	Loss 0.328 (0.328)	test_acc   0.85 (  0.85)	test_minacc   0.60 (  0.60)	test_majacc   0.90 (  0.90)	Loss_d 0.328 (0.328)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.296 (0.280)	test_acc   0.88 (  0.88)	test_minacc   0.74 (  0.70)	test_majacc   0.90 (  0.92)	Loss_d 0.296 (0.280)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.74 (  0.70)	test_majacc_d   0.90 (  0.92)	test_corr_d   0.71 (  0.73)
Test: [  20/  26]	Loss 0.277 (0.284)	test_acc   0.88 (  0.88)	test_minacc   0.81 (  0.69)	test_majacc   0.89 (  0.91)	Loss_d 0.277 (0.284)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.81 (  0.69)	test_majacc_d   0.89 (  0.91)	test_corr_d   0.73 (  0.73)
Test: [  26/  26]	Loss 0.223 (0.280)	test_acc   0.90 (  0.88)	test_minacc   0.76 (  0.69)	test_majacc   0.92 (  0.91)	Loss_d 0.223 (0.280)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.76 (  0.69)	test_majacc_d   0.92 (  0.91)	test_corr_d   0.70 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.63it/s]
Test: [  0/  1]	Loss 2.089 (2.089)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 2.089 (2.089)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 2.089 (2.089)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 2.089 (2.089)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.53 (  0.53)
Overall Timing[ 34/  1]	epoch_time 0.0418 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0413 (0.0429)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.88080001693964, 0.38100001215934753)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 15%|#5        | 4/26 [00:00<00:01, 18.69it/s] 27%|##6       | 7/26 [00:00<00:00, 22.41it/s] 38%|###8      | 10/26 [00:00<00:00, 24.64it/s] 50%|#####     | 13/26 [00:00<00:00, 25.25it/s] 62%|######1   | 16/26 [00:00<00:00, 26.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.92it/s] 85%|########4 | 22/26 [00:00<00:00, 27.59it/s] 96%|#########6| 25/26 [00:00<00:00, 27.59it/s]100%|##########| 26/26 [00:01<00:00, 24.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.004 (0.002)	train_nll   0.27 (  0.29)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.87 (  0.87)	train_minacc   0.84 (  0.74)	train_majacc   0.88 (  0.90)	train_corr   0.00 (  0.00)	l1 22.8286 (22.8265)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.83it/s] 19%|#9        | 5/26 [00:00<00:00, 22.37it/s] 38%|###8      | 10/26 [00:00<00:00, 33.36it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.36it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.26it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.35it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.35it/s] 96%|#########6| 25/26 [00:00<00:00, 40.68it/s]100%|##########| 26/26 [00:00<00:00, 33.72it/s]
Test: [   0/  26]	Loss 0.366 (0.366)	test_acc   0.84 (  0.84)	test_minacc   0.70 (  0.70)	test_majacc   0.86 (  0.86)	Loss_d 0.366 (0.366)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.362 (0.345)	test_acc   0.82 (  0.83)	test_minacc   0.69 (  0.73)	test_majacc   0.85 (  0.85)	Loss_d 0.362 (0.345)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.69 (  0.73)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.61 (  0.63)
Test: [  20/  26]	Loss 0.309 (0.339)	test_acc   0.84 (  0.84)	test_minacc   0.79 (  0.73)	test_majacc   0.85 (  0.86)	Loss_d 0.309 (0.339)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.79 (  0.73)	test_majacc_d   0.85 (  0.86)	test_corr_d   0.67 (  0.64)
Test: [  26/  26]	Loss 0.308 (0.339)	test_acc   0.86 (  0.84)	test_minacc   0.82 (  0.74)	test_majacc   0.86 (  0.86)	Loss_d 0.308 (0.339)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.82 (  0.74)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.61 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.40it/s]
Test: [  0/  1]	Loss 1.970 (1.970)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.84 (  0.84)	Loss_d 1.970 (1.970)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 1.970 (1.970)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.84 (  0.84)	Loss_d 1.970 (1.970)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.39 (  0.39)
Overall Timing[ 35/  1]	epoch_time 0.0466 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0461 (0.0430)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.8383000238537789, 0.43800002336502075)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.46it/s] 12%|#1        | 3/26 [00:00<00:02, 10.01it/s] 27%|##6       | 7/26 [00:00<00:01, 18.61it/s] 38%|###8      | 10/26 [00:00<00:00, 21.98it/s] 50%|#####     | 13/26 [00:00<00:00, 24.37it/s] 62%|######1   | 16/26 [00:00<00:00, 25.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.66it/s] 85%|########4 | 22/26 [00:00<00:00, 27.45it/s]100%|##########| 26/26 [00:01<00:00, 28.78it/s]100%|##########| 26/26 [00:01<00:00, 22.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.001 (0.002)	train_nll   0.29 (  0.29)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.87 (  0.86)	train_minacc   0.79 (  0.80)	train_majacc   0.89 (  0.87)	train_corr   0.00 (  0.00)	l1 22.8200 (22.8259)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.97it/s] 23%|##3       | 6/26 [00:00<00:00, 26.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.14it/s] 42%|####2     | 11/26 [00:00<00:00, 34.62it/s] 65%|######5   | 17/26 [00:00<00:00, 37.15it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.15it/s] 85%|########4 | 22/26 [00:00<00:00, 40.98it/s]100%|##########| 26/26 [00:00<00:00, 34.06it/s]
Test: [   0/  26]	Loss 0.320 (0.320)	test_acc   0.86 (  0.86)	test_minacc   0.76 (  0.76)	test_majacc   0.88 (  0.88)	Loss_d 0.320 (0.320)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.305 (0.297)	test_acc   0.86 (  0.86)	test_minacc   0.77 (  0.76)	test_majacc   0.88 (  0.88)	Loss_d 0.305 (0.297)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.77 (  0.76)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.66 (  0.67)
Test: [  20/  26]	Loss 0.266 (0.292)	test_acc   0.89 (  0.87)	test_minacc   0.83 (  0.75)	test_majacc   0.90 (  0.89)	Loss_d 0.266 (0.292)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.83 (  0.75)	test_majacc_d   0.90 (  0.89)	test_corr_d   0.74 (  0.69)
Test: [  26/  26]	Loss 0.291 (0.294)	test_acc   0.85 (  0.86)	test_minacc   0.79 (  0.74)	test_majacc   0.86 (  0.88)	Loss_d 0.291 (0.294)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.79 (  0.74)	test_majacc_d   0.86 (  0.88)	test_corr_d   0.65 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.55it/s]
Test: [  0/  1]	Loss 2.184 (2.184)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.88 (  0.88)	Loss_d 2.184 (2.184)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 2.184 (2.184)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.88 (  0.88)	Loss_d 2.184 (2.184)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.43 (  0.43)
Overall Timing[ 36/  1]	epoch_time 0.0446 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0441 (0.0430)
record: (train_acc, test_acc) (0.9388000158667564, 0.4490000307559967)
last accs (train_acc, test_acc) (0.8626000254750251, 0.4270000159740448)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.86it/s] 15%|#5        | 4/26 [00:00<00:01, 14.86it/s] 27%|##6       | 7/26 [00:00<00:00, 19.91it/s] 38%|###8      | 10/26 [00:00<00:00, 23.00it/s] 50%|#####     | 13/26 [00:00<00:00, 24.65it/s] 62%|######1   | 16/26 [00:00<00:00, 25.98it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.38it/s] 85%|########4 | 22/26 [00:00<00:00, 26.38it/s] 96%|#########6| 25/26 [00:01<00:00, 26.81it/s]100%|##########| 26/26 [00:01<00:00, 22.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.003 (0.001)	train_nll   0.30 (  0.29)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.84 (  0.86)	train_minacc   0.89 (  0.79)	train_majacc   0.83 (  0.87)	train_corr   0.00 (  0.00)	l1 22.7973 (22.8114)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.80it/s] 31%|###       | 8/26 [00:00<00:00, 31.37it/s]                                               31%|###       | 8/26 [00:00<00:00, 31.37it/s] 50%|#####     | 13/26 [00:00<00:00, 37.29it/s] 69%|######9   | 18/26 [00:00<00:00, 40.98it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.98it/s] 88%|########8 | 23/26 [00:00<00:00, 43.79it/s]100%|##########| 26/26 [00:00<00:00, 37.01it/s]
Test: [   0/  26]	Loss 0.309 (0.309)	test_acc   0.85 (  0.85)	test_minacc   0.79 (  0.79)	test_majacc   0.87 (  0.87)	Loss_d 0.309 (0.309)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.339 (0.329)	test_acc   0.82 (  0.84)	test_minacc   0.86 (  0.84)	test_majacc   0.82 (  0.84)	Loss_d 0.339 (0.329)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.86 (  0.84)	test_majacc_d   0.82 (  0.84)	test_corr_d   0.54 (  0.59)
Test: [  20/  26]	Loss 0.299 (0.328)	test_acc   0.86 (  0.84)	test_minacc   0.88 (  0.82)	test_majacc   0.86 (  0.84)	Loss_d 0.299 (0.328)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.88 (  0.82)	test_majacc_d   0.86 (  0.84)	test_corr_d   0.67 (  0.61)
Test: [  26/  26]	Loss 0.352 (0.330)	test_acc   0.83 (  0.84)	test_minacc   0.79 (  0.82)	test_majacc   0.84 (  0.84)	Loss_d 0.352 (0.330)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.79 (  0.82)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.58 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.07it/s]
Test: [  0/  1]	Loss 1.647 (1.647)	test_acc   0.49 (  0.49)	test_minacc   0.44 (  0.44)	test_majacc   0.89 (  0.89)	Loss_d 1.647 (1.647)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.647 (1.647)	test_acc   0.49 (  0.49)	test_minacc   0.44 (  0.44)	test_majacc   0.89 (  0.89)	Loss_d 1.647 (1.647)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.30 (  0.30)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/60/checkpoints/model_best.pth
Overall Timing[ 37/  1]	epoch_time 0.0467 (0.0439)	validation_time 0.0005 (0.0006)	train_time 0.0463 (0.0431)
record: (train_acc, test_acc) (0.836700027346611, 0.48500001430511475)
last accs (train_acc, test_acc) (0.836700027346611, 0.48500001430511475)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.03it/s] 23%|##3       | 6/26 [00:00<00:00, 23.95it/s] 35%|###4      | 9/26 [00:00<00:00, 25.47it/s] 46%|####6     | 12/26 [00:00<00:00, 26.39it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.73it/s] 69%|######9   | 18/26 [00:00<00:00, 26.94it/s] 81%|########  | 21/26 [00:00<00:00, 27.42it/s] 92%|#########2| 24/26 [00:00<00:00, 27.45it/s]100%|##########| 26/26 [00:01<00:00, 24.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.001 (0.002)	train_nll   0.32 (  0.31)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.84 (  0.85)	train_minacc   0.82 (  0.79)	train_majacc   0.85 (  0.85)	train_corr   0.00 (  0.00)	l1 22.7556 (22.7837)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.39it/s] 23%|##3       | 6/26 [00:00<00:00, 23.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.68it/s] 42%|####2     | 11/26 [00:00<00:00, 31.05it/s] 62%|######1   | 16/26 [00:00<00:00, 35.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.25it/s] 81%|########  | 21/26 [00:00<00:00, 38.66it/s]100%|##########| 26/26 [00:00<00:00, 41.81it/s]100%|##########| 26/26 [00:00<00:00, 32.33it/s]
Test: [   0/  26]	Loss 0.320 (0.320)	test_acc   0.86 (  0.86)	test_minacc   0.72 (  0.72)	test_majacc   0.89 (  0.89)	Loss_d 0.320 (0.320)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.313 (0.321)	test_acc   0.84 (  0.85)	test_minacc   0.75 (  0.77)	test_majacc   0.85 (  0.87)	Loss_d 0.313 (0.321)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.75 (  0.77)	test_majacc_d   0.85 (  0.87)	test_corr_d   0.65 (  0.66)
Test: [  20/  26]	Loss 0.272 (0.308)	test_acc   0.88 (  0.86)	test_minacc   0.86 (  0.77)	test_majacc   0.88 (  0.88)	Loss_d 0.272 (0.308)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.86 (  0.77)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.73 (  0.68)
Test: [  26/  26]	Loss 0.299 (0.307)	test_acc   0.87 (  0.86)	test_minacc   0.76 (  0.77)	test_majacc   0.89 (  0.88)	Loss_d 0.299 (0.307)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.76 (  0.77)	test_majacc_d   0.89 (  0.88)	test_corr_d   0.67 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.42it/s]
Test: [  0/  1]	Loss 1.759 (1.759)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.86 (  0.86)	Loss_d 1.759 (1.759)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 1.759 (1.759)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.86 (  0.86)	Loss_d 1.759 (1.759)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.38 (  0.38)
Overall Timing[ 38/  1]	epoch_time 0.0453 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0449 (0.0431)
record: (train_acc, test_acc) (0.836700027346611, 0.48500001430511475)
last accs (train_acc, test_acc) (0.8595000228881836, 0.45500001311302185)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.73it/s] 19%|#9        | 5/26 [00:00<00:00, 23.25it/s] 31%|###       | 8/26 [00:00<00:00, 25.77it/s] 42%|####2     | 11/26 [00:00<00:00, 26.84it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.37it/s] 65%|######5   | 17/26 [00:00<00:00, 27.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.96it/s] 88%|########8 | 23/26 [00:00<00:00, 27.68it/s]100%|##########| 26/26 [00:00<00:00, 28.02it/s]100%|##########| 26/26 [00:01<00:00, 25.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.003 (0.001)	train_nll   0.40 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.81 (  0.82)	train_minacc   0.87 (  0.83)	train_majacc   0.80 (  0.82)	train_corr   0.00 (  0.00)	l1 22.7672 (22.7593)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.56it/s] 23%|##3       | 6/26 [00:00<00:00, 30.67it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.67it/s] 42%|####2     | 11/26 [00:00<00:00, 37.41it/s] 62%|######1   | 16/26 [00:00<00:00, 41.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.06it/s] 81%|########  | 21/26 [00:00<00:00, 39.88it/s]100%|##########| 26/26 [00:00<00:00, 42.64it/s]100%|##########| 26/26 [00:00<00:00, 35.39it/s]
Test: [   0/  26]	Loss 0.344 (0.344)	test_acc   0.83 (  0.83)	test_minacc   0.70 (  0.70)	test_majacc   0.86 (  0.86)	Loss_d 0.344 (0.344)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.349 (0.343)	test_acc   0.83 (  0.83)	test_minacc   0.77 (  0.76)	test_majacc   0.85 (  0.84)	Loss_d 0.349 (0.343)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.77 (  0.76)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.62 (  0.63)
Test: [  20/  26]	Loss 0.323 (0.332)	test_acc   0.84 (  0.83)	test_minacc   0.83 (  0.76)	test_majacc   0.84 (  0.85)	Loss_d 0.323 (0.332)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.83 (  0.76)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.67 (  0.64)
Test: [  26/  26]	Loss 0.333 (0.329)	test_acc   0.83 (  0.84)	test_minacc   0.87 (  0.77)	test_majacc   0.82 (  0.85)	Loss_d 0.333 (0.329)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.87 (  0.77)	test_majacc_d   0.82 (  0.85)	test_corr_d   0.61 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.89it/s]
Test: [  0/  1]	Loss 1.804 (1.804)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.86 (  0.86)	Loss_d 1.804 (1.804)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 1.804 (1.804)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.86 (  0.86)	Loss_d 1.804 (1.804)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.39 (  0.39)
Overall Timing[ 39/  1]	epoch_time 0.0435 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0430 (0.0431)
record: (train_acc, test_acc) (0.836700027346611, 0.48500001430511475)
last accs (train_acc, test_acc) (0.8361000275015831, 0.45600003004074097)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.88it/s] 15%|#5        | 4/26 [00:00<00:01, 14.96it/s] 27%|##6       | 7/26 [00:00<00:00, 19.66it/s] 38%|###8      | 10/26 [00:00<00:00, 22.24it/s] 50%|#####     | 13/26 [00:00<00:00, 23.64it/s] 62%|######1   | 16/26 [00:00<00:00, 23.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.07it/s] 85%|########4 | 22/26 [00:01<00:00, 24.90it/s] 96%|#########6| 25/26 [00:01<00:00, 25.74it/s]100%|##########| 26/26 [00:01<00:00, 21.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.001 (0.002)	train_nll   0.38 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.80 (  0.83)	train_minacc   0.84 (  0.78)	train_majacc   0.80 (  0.83)	train_corr   0.00 (  0.00)	l1 22.7388 (22.7471)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 18.82it/s] 31%|###       | 8/26 [00:00<00:00, 32.68it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.68it/s] 50%|#####     | 13/26 [00:00<00:00, 37.62it/s] 69%|######9   | 18/26 [00:00<00:00, 39.88it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.88it/s] 88%|########8 | 23/26 [00:00<00:00, 40.08it/s]100%|##########| 26/26 [00:00<00:00, 35.84it/s]
Test: [   0/  26]	Loss 0.340 (0.340)	test_acc   0.83 (  0.83)	test_minacc   0.75 (  0.75)	test_majacc   0.85 (  0.85)	Loss_d 0.340 (0.340)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.400 (0.362)	test_acc   0.80 (  0.81)	test_minacc   0.77 (  0.83)	test_majacc   0.81 (  0.81)	Loss_d 0.400 (0.362)	test_acc_d   0.80 (  0.81)	test_minacc_d   0.77 (  0.83)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.57 (  0.58)
Test: [  20/  26]	Loss 0.343 (0.360)	test_acc   0.84 (  0.81)	test_minacc   0.88 (  0.82)	test_majacc   0.83 (  0.81)	Loss_d 0.343 (0.360)	test_acc_d   0.84 (  0.81)	test_minacc_d   0.88 (  0.82)	test_majacc_d   0.83 (  0.81)	test_corr_d   0.67 (  0.59)
Test: [  26/  26]	Loss 0.378 (0.364)	test_acc   0.81 (  0.81)	test_minacc   0.84 (  0.82)	test_majacc   0.80 (  0.81)	Loss_d 0.378 (0.364)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.80 (  0.81)	test_corr_d   0.56 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.04it/s]
Test: [  0/  1]	Loss 1.625 (1.625)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.82 (  0.82)	Loss_d 1.625 (1.625)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.625 (1.625)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.82 (  0.82)	Loss_d 1.625 (1.625)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.32 (  0.32)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/60/checkpoints/model_best.pth
Overall Timing[ 40/  1]	epoch_time 0.0463 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0458 (0.0432)
record: (train_acc, test_acc) (0.8124000208973885, 0.48900002241134644)
last accs (train_acc, test_acc) (0.8124000208973885, 0.48900002241134644)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 15%|#5        | 4/26 [00:00<00:01, 15.98it/s] 27%|##6       | 7/26 [00:00<00:00, 20.55it/s] 38%|###8      | 10/26 [00:00<00:00, 23.31it/s] 50%|#####     | 13/26 [00:00<00:00, 24.93it/s] 62%|######1   | 16/26 [00:00<00:00, 26.13it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.61it/s] 85%|########4 | 22/26 [00:00<00:00, 26.76it/s] 96%|#########6| 25/26 [00:01<00:00, 26.62it/s]100%|##########| 26/26 [00:01<00:00, 22.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.001 (0.001)	train_nll   0.31 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.86 (  0.82)	train_minacc   0.87 (  0.79)	train_majacc   0.86 (  0.82)	train_corr   0.00 (  0.00)	l1 22.7049 (22.7219)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.29it/s] 23%|##3       | 6/26 [00:00<00:00, 32.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.08it/s] 42%|####2     | 11/26 [00:00<00:00, 38.51it/s] 62%|######1   | 16/26 [00:00<00:00, 41.66it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.66it/s] 81%|########  | 21/26 [00:00<00:00, 39.70it/s]100%|##########| 26/26 [00:00<00:00, 42.46it/s]100%|##########| 26/26 [00:00<00:00, 36.09it/s]
Test: [   0/  26]	Loss 0.326 (0.326)	test_acc   0.84 (  0.84)	test_minacc   0.79 (  0.79)	test_majacc   0.85 (  0.85)	Loss_d 0.326 (0.326)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.345 (0.346)	test_acc   0.83 (  0.83)	test_minacc   0.78 (  0.80)	test_majacc   0.83 (  0.83)	Loss_d 0.345 (0.346)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.63 (  0.63)
Test: [  20/  26]	Loss 0.328 (0.345)	test_acc   0.83 (  0.83)	test_minacc   0.79 (  0.79)	test_majacc   0.84 (  0.83)	Loss_d 0.328 (0.345)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.84 (  0.83)	test_corr_d   0.68 (  0.64)
Test: [  26/  26]	Loss 0.299 (0.346)	test_acc   0.86 (  0.83)	test_minacc   0.89 (  0.79)	test_majacc   0.85 (  0.83)	Loss_d 0.299 (0.346)	test_acc_d   0.86 (  0.83)	test_minacc_d   0.89 (  0.79)	test_majacc_d   0.85 (  0.83)	test_corr_d   0.64 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.98it/s]
Test: [  0/  1]	Loss 1.684 (1.684)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.85 (  0.85)	Loss_d 1.684 (1.684)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.684 (1.684)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.85 (  0.85)	Loss_d 1.684 (1.684)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.35 (  0.35)
Overall Timing[ 41/  1]	epoch_time 0.0430 (0.0439)	validation_time 0.0005 (0.0006)	train_time 0.0425 (0.0432)
record: (train_acc, test_acc) (0.8124000208973885, 0.48900002241134644)
last accs (train_acc, test_acc) (0.8265000197887421, 0.46700000762939453)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 12%|#1        | 3/26 [00:00<00:01, 12.42it/s] 23%|##3       | 6/26 [00:00<00:01, 18.74it/s] 35%|###4      | 9/26 [00:00<00:00, 21.52it/s] 46%|####6     | 12/26 [00:00<00:00, 23.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.73it/s] 69%|######9   | 18/26 [00:00<00:00, 25.91it/s] 81%|########  | 21/26 [00:00<00:00, 26.67it/s] 92%|#########2| 24/26 [00:01<00:00, 26.61it/s]100%|##########| 26/26 [00:01<00:00, 22.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.001 (0.002)	train_nll   0.35 (  0.32)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.84 (  0.84)	train_minacc   0.84 (  0.70)	train_majacc   0.83 (  0.87)	train_corr   0.00 (  0.00)	l1 22.6765 (22.6734)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.71it/s] 23%|##3       | 6/26 [00:00<00:00, 31.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.82it/s] 42%|####2     | 11/26 [00:00<00:00, 38.24it/s] 62%|######1   | 16/26 [00:00<00:00, 40.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.90it/s] 81%|########  | 21/26 [00:00<00:00, 38.85it/s]100%|##########| 26/26 [00:00<00:00, 41.25it/s]100%|##########| 26/26 [00:00<00:00, 35.34it/s]
Test: [   0/  26]	Loss 0.342 (0.342)	test_acc   0.84 (  0.84)	test_minacc   0.79 (  0.79)	test_majacc   0.85 (  0.85)	Loss_d 0.342 (0.342)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.351 (0.340)	test_acc   0.82 (  0.83)	test_minacc   0.80 (  0.83)	test_majacc   0.82 (  0.83)	Loss_d 0.351 (0.340)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.80 (  0.83)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.59 (  0.59)
Test: [  20/  26]	Loss 0.332 (0.338)	test_acc   0.83 (  0.83)	test_minacc   0.88 (  0.82)	test_majacc   0.82 (  0.83)	Loss_d 0.332 (0.338)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.88 (  0.82)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.65 (  0.61)
Test: [  26/  26]	Loss 0.318 (0.336)	test_acc   0.84 (  0.83)	test_minacc   0.89 (  0.82)	test_majacc   0.83 (  0.83)	Loss_d 0.318 (0.336)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.89 (  0.82)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.59 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.10it/s]
Test: [  0/  1]	Loss 1.712 (1.712)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.83 (  0.83)	Loss_d 1.712 (1.712)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 1.712 (1.712)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.83 (  0.83)	Loss_d 1.712 (1.712)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.26 (  0.26)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/60/checkpoints/model_best.pth
Overall Timing[ 42/  1]	epoch_time 0.0445 (0.0440)	validation_time 0.0005 (0.0006)	train_time 0.0440 (0.0432)
record: (train_acc, test_acc) (0.8298000237345695, 0.5020000338554382)
last accs (train_acc, test_acc) (0.8298000237345695, 0.5020000338554382)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.12it/s] 15%|#5        | 4/26 [00:00<00:01, 20.41it/s] 27%|##6       | 7/26 [00:00<00:00, 24.17it/s] 38%|###8      | 10/26 [00:00<00:00, 25.96it/s] 50%|#####     | 13/26 [00:00<00:00, 26.70it/s] 62%|######1   | 16/26 [00:00<00:00, 27.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.55it/s] 85%|########4 | 22/26 [00:00<00:00, 27.69it/s] 96%|#########6| 25/26 [00:00<00:00, 27.58it/s]100%|##########| 26/26 [00:01<00:00, 24.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1118 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1119 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1120 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1121 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1122 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1123 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1124 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1125 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1126 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1127 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1128 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1129 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1130 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1131 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1132 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1133 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1134 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1135 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1136 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1137 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1138 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1139 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1140 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1141 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1142 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1143 364.00000000000006
constrain score by whole: 0
Epoch: [43][  26/  26]	Loss 0.001 (0.001)	train_nll   0.35 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.81 (  0.83)	train_minacc   0.82 (  0.81)	train_majacc   0.81 (  0.83)	train_corr   0.00 (  0.00)	l1 22.6326 (22.6371)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.91it/s] 23%|##3       | 6/26 [00:00<00:00, 31.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.97it/s] 42%|####2     | 11/26 [00:00<00:00, 36.87it/s] 62%|######1   | 16/26 [00:00<00:00, 40.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.71it/s] 81%|########  | 21/26 [00:00<00:00, 39.90it/s]100%|##########| 26/26 [00:00<00:00, 42.18it/s]100%|##########| 26/26 [00:00<00:00, 35.62it/s]
Test: [   0/  26]	Loss 0.398 (0.398)	test_acc   0.78 (  0.78)	test_minacc   0.60 (  0.60)	test_majacc   0.81 (  0.81)	Loss_d 0.398 (0.398)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.454 (0.409)	test_acc   0.76 (  0.79)	test_minacc   0.65 (  0.69)	test_majacc   0.78 (  0.80)	Loss_d 0.454 (0.409)	test_acc_d   0.76 (  0.79)	test_minacc_d   0.65 (  0.69)	test_majacc_d   0.78 (  0.80)	test_corr_d   0.55 (  0.57)
Test: [  20/  26]	Loss 0.405 (0.411)	test_acc   0.80 (  0.79)	test_minacc   0.69 (  0.70)	test_majacc   0.81 (  0.80)	Loss_d 0.405 (0.411)	test_acc_d   0.80 (  0.79)	test_minacc_d   0.69 (  0.70)	test_majacc_d   0.81 (  0.80)	test_corr_d   0.64 (  0.58)
Test: [  26/  26]	Loss 0.344 (0.401)	test_acc   0.82 (  0.79)	test_minacc   0.74 (  0.72)	test_majacc   0.83 (  0.81)	Loss_d 0.344 (0.401)	test_acc_d   0.82 (  0.79)	test_minacc_d   0.74 (  0.72)	test_majacc_d   0.83 (  0.81)	test_corr_d   0.59 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.05it/s]
Test: [  0/  1]	Loss 1.564 (1.564)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.74 (  0.74)	Loss_d 1.564 (1.564)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.564 (1.564)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.74 (  0.74)	Loss_d 1.564 (1.564)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.30 (  0.30)
Overall Timing[ 43/  1]	epoch_time 0.0498 (0.0441)	validation_time 0.0005 (0.0006)	train_time 0.0493 (0.0433)
record: (train_acc, test_acc) (0.8298000237345695, 0.5020000338554382)
last accs (train_acc, test_acc) (0.7947000328302384, 0.4610000252723694)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 15%|#5        | 4/26 [00:00<00:01, 18.04it/s] 27%|##6       | 7/26 [00:00<00:00, 22.37it/s] 38%|###8      | 10/26 [00:00<00:00, 24.86it/s] 50%|#####     | 13/26 [00:00<00:00, 26.11it/s] 62%|######1   | 16/26 [00:00<00:00, 26.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.16it/s] 85%|########4 | 22/26 [00:00<00:00, 26.03it/s] 96%|#########6| 25/26 [00:01<00:00, 26.13it/s]100%|##########| 26/26 [00:01<00:00, 23.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1144 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1145 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1146 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1147 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1148 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1149 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1150 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1151 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1152 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1153 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1154 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1155 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1156 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1157 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1158 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1159 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1160 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1161 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1162 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1163 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1164 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1165 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1166 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1167 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1168 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1169 364.00000000000006
constrain score by whole: 0
Epoch: [44][  26/  26]	Loss 0.002 (0.002)	train_nll   0.30 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.86 (  0.83)	train_minacc   0.89 (  0.75)	train_majacc   0.86 (  0.84)	train_corr   0.00 (  0.00)	l1 22.6034 (22.6170)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.80it/s] 15%|#5        | 4/26 [00:00<00:01, 18.60it/s] 35%|###4      | 9/26 [00:00<00:00, 30.64it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.64it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.73it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.06it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.06it/s] 92%|#########2| 24/26 [00:00<00:00, 39.56it/s]100%|##########| 26/26 [00:00<00:00, 33.04it/s]
Test: [   0/  26]	Loss 0.408 (0.408)	test_acc   0.82 (  0.82)	test_minacc   0.79 (  0.79)	test_majacc   0.82 (  0.82)	Loss_d 0.408 (0.408)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.419 (0.392)	test_acc   0.77 (  0.80)	test_minacc   0.78 (  0.82)	test_majacc   0.77 (  0.80)	Loss_d 0.419 (0.392)	test_acc_d   0.77 (  0.80)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.77 (  0.80)	test_corr_d   0.51 (  0.54)
Test: [  20/  26]	Loss 0.402 (0.390)	test_acc   0.79 (  0.80)	test_minacc   0.81 (  0.82)	test_majacc   0.79 (  0.80)	Loss_d 0.402 (0.390)	test_acc_d   0.79 (  0.80)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.79 (  0.80)	test_corr_d   0.58 (  0.55)
Test: [  26/  26]	Loss 0.363 (0.389)	test_acc   0.82 (  0.80)	test_minacc   0.92 (  0.83)	test_majacc   0.80 (  0.80)	Loss_d 0.363 (0.389)	test_acc_d   0.82 (  0.80)	test_minacc_d   0.92 (  0.83)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.55 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.24it/s]
Test: [  0/  1]	Loss 1.515 (1.515)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.79 (  0.79)	Loss_d 1.515 (1.515)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.515 (1.515)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.79 (  0.79)	Loss_d 1.515 (1.515)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.17 (  0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/60/checkpoints/model_best.pth
Overall Timing[ 44/  1]	epoch_time 0.0463 (0.0441)	validation_time 0.0004 (0.0006)	train_time 0.0458 (0.0434)
record: (train_acc, test_acc) (0.8013000254631042, 0.5260000228881836)
last accs (train_acc, test_acc) (0.8013000254631042, 0.5260000228881836)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.73it/s] 15%|#5        | 4/26 [00:00<00:01, 15.69it/s] 27%|##6       | 7/26 [00:00<00:00, 19.55it/s] 38%|###8      | 10/26 [00:00<00:00, 21.98it/s] 50%|#####     | 13/26 [00:00<00:00, 23.91it/s] 62%|######1   | 16/26 [00:00<00:00, 25.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.14it/s] 85%|########4 | 22/26 [00:00<00:00, 26.74it/s] 96%|#########6| 25/26 [00:01<00:00, 26.45it/s]100%|##########| 26/26 [00:01<00:00, 22.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1170 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1171 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1172 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1173 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1174 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1175 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1176 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1177 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1178 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1179 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1180 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1181 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1182 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1183 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1184 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1185 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1186 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1187 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1188 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1189 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1190 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1191 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1192 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1193 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1194 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1195 364.00000000000006
constrain score by whole: 0
Epoch: [45][  26/  26]	Loss 0.004 (0.001)	train_nll   0.36 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.84 (  0.83)	train_minacc   0.71 (  0.80)	train_majacc   0.86 (  0.84)	train_corr   0.00 (  0.00)	l1 22.5883 (22.5880)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.15it/s] 23%|##3       | 6/26 [00:00<00:00, 26.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.39it/s] 42%|####2     | 11/26 [00:00<00:00, 34.82it/s] 62%|######1   | 16/26 [00:00<00:00, 36.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.11it/s] 81%|########  | 21/26 [00:00<00:00, 39.08it/s]100%|##########| 26/26 [00:00<00:00, 34.89it/s]
Test: [   0/  26]	Loss 0.389 (0.389)	test_acc   0.82 (  0.82)	test_minacc   0.60 (  0.60)	test_majacc   0.87 (  0.87)	Loss_d 0.389 (0.389)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.416 (0.375)	test_acc   0.78 (  0.82)	test_minacc   0.66 (  0.69)	test_majacc   0.81 (  0.84)	Loss_d 0.416 (0.375)	test_acc_d   0.78 (  0.82)	test_minacc_d   0.66 (  0.69)	test_majacc_d   0.81 (  0.84)	test_corr_d   0.59 (  0.63)
Test: [  20/  26]	Loss 0.320 (0.374)	test_acc   0.84 (  0.82)	test_minacc   0.64 (  0.69)	test_majacc   0.87 (  0.84)	Loss_d 0.320 (0.374)	test_acc_d   0.84 (  0.82)	test_minacc_d   0.64 (  0.69)	test_majacc_d   0.87 (  0.84)	test_corr_d   0.70 (  0.63)
Test: [  26/  26]	Loss 0.366 (0.373)	test_acc   0.82 (  0.82)	test_minacc   0.71 (  0.69)	test_majacc   0.84 (  0.84)	Loss_d 0.366 (0.373)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.71 (  0.69)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.64 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.45it/s]
Test: [  0/  1]	Loss 1.684 (1.684)	test_acc   0.47 (  0.47)	test_minacc   0.43 (  0.43)	test_majacc   0.86 (  0.86)	Loss_d 1.684 (1.684)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.684 (1.684)	test_acc   0.47 (  0.47)	test_minacc   0.43 (  0.43)	test_majacc   0.86 (  0.86)	Loss_d 1.684 (1.684)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.24 (  0.24)
Overall Timing[ 45/  1]	epoch_time 0.0475 (0.0442)	validation_time 0.0005 (0.0006)	train_time 0.0470 (0.0435)
record: (train_acc, test_acc) (0.8013000254631042, 0.5260000228881836)
last accs (train_acc, test_acc) (0.8180000260472298, 0.47200003266334534)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.11it/s] 19%|#9        | 5/26 [00:00<00:00, 23.53it/s] 31%|###       | 8/26 [00:00<00:00, 25.30it/s] 42%|####2     | 11/26 [00:00<00:00, 25.77it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.68it/s] 65%|######5   | 17/26 [00:00<00:00, 25.64it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.31it/s] 88%|########8 | 23/26 [00:00<00:00, 26.94it/s]100%|##########| 26/26 [00:00<00:00, 27.27it/s]100%|##########| 26/26 [00:01<00:00, 24.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1196 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1197 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1198 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1199 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1200 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1201 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1202 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1203 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1204 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1205 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1206 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1207 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1208 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1209 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1210 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1211 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1212 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1213 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1214 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1215 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1216 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1217 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1218 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1219 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1220 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1221 364.00000000000006
constrain score by whole: 0
Epoch: [46][  26/  26]	Loss 0.001 (0.001)	train_nll   0.33 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.85 (  0.82)	train_minacc   0.84 (  0.77)	train_majacc   0.85 (  0.83)	train_corr   0.00 (  0.00)	l1 22.5662 (22.5756)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.92it/s] 27%|##6       | 7/26 [00:00<00:00, 34.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.34it/s] 46%|####6     | 12/26 [00:00<00:00, 39.38it/s] 65%|######5   | 17/26 [00:00<00:00, 39.70it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.70it/s] 85%|########4 | 22/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 35.87it/s]
Test: [   0/  26]	Loss 0.328 (0.328)	test_acc   0.83 (  0.83)	test_minacc   0.76 (  0.76)	test_majacc   0.85 (  0.85)	Loss_d 0.328 (0.328)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.341 (0.335)	test_acc   0.83 (  0.83)	test_minacc   0.72 (  0.75)	test_majacc   0.85 (  0.85)	Loss_d 0.341 (0.335)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.72 (  0.75)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.65 (  0.64)
Test: [  20/  26]	Loss 0.348 (0.348)	test_acc   0.84 (  0.83)	test_minacc   0.79 (  0.74)	test_majacc   0.85 (  0.84)	Loss_d 0.348 (0.348)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.79 (  0.74)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.66 (  0.64)
Test: [  26/  26]	Loss 0.335 (0.345)	test_acc   0.81 (  0.83)	test_minacc   0.79 (  0.74)	test_majacc   0.81 (  0.84)	Loss_d 0.335 (0.345)	test_acc_d   0.81 (  0.83)	test_minacc_d   0.79 (  0.74)	test_majacc_d   0.81 (  0.84)	test_corr_d   0.62 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.54it/s]
Test: [  0/  1]	Loss 1.722 (1.722)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.85 (  0.85)	Loss_d 1.722 (1.722)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 1.722 (1.722)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.85 (  0.85)	Loss_d 1.722 (1.722)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.39 (  0.39)
Overall Timing[ 46/  1]	epoch_time 0.0455 (0.0442)	validation_time 0.0005 (0.0006)	train_time 0.0450 (0.0435)
record: (train_acc, test_acc) (0.8013000254631042, 0.5260000228881836)
last accs (train_acc, test_acc) (0.8292000315189362, 0.4440000355243683)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.35it/s] 19%|#9        | 5/26 [00:00<00:01, 19.58it/s] 31%|###       | 8/26 [00:00<00:00, 22.88it/s] 42%|####2     | 11/26 [00:00<00:00, 24.18it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.55it/s] 65%|######5   | 17/26 [00:00<00:00, 26.41it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.78it/s] 88%|########8 | 23/26 [00:00<00:00, 26.69it/s]100%|##########| 26/26 [00:01<00:00, 27.08it/s]100%|##########| 26/26 [00:01<00:00, 23.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1222 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1223 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1224 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1225 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1226 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1227 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1228 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1229 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1230 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1231 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1232 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1233 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1234 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1235 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1236 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1237 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1238 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1239 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1240 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1241 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1242 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1243 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1244 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1245 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1246 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1247 364.00000000000006
constrain score by whole: 0
Epoch: [47][  26/  26]	Loss 0.001 (0.001)	train_nll   0.34 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.85 (  0.81)	train_minacc   0.79 (  0.77)	train_majacc   0.86 (  0.82)	train_corr   0.00 (  0.00)	l1 22.5504 (22.5634)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 23%|##3       | 6/26 [00:00<00:00, 25.60it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.60it/s] 42%|####2     | 11/26 [00:00<00:00, 33.98it/s] 62%|######1   | 16/26 [00:00<00:00, 39.04it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.04it/s] 81%|########  | 21/26 [00:00<00:00, 38.44it/s]100%|##########| 26/26 [00:00<00:00, 33.39it/s]
Test: [   0/  26]	Loss 0.333 (0.333)	test_acc   0.86 (  0.86)	test_minacc   0.79 (  0.79)	test_majacc   0.87 (  0.87)	Loss_d 0.333 (0.333)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.367 (0.352)	test_acc   0.82 (  0.83)	test_minacc   0.78 (  0.79)	test_majacc   0.82 (  0.83)	Loss_d 0.367 (0.352)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.61 (  0.61)
Test: [  20/  26]	Loss 0.351 (0.363)	test_acc   0.82 (  0.82)	test_minacc   0.76 (  0.77)	test_majacc   0.83 (  0.82)	Loss_d 0.351 (0.363)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.76 (  0.77)	test_majacc_d   0.83 (  0.82)	test_corr_d   0.66 (  0.61)
Test: [  26/  26]	Loss 0.365 (0.363)	test_acc   0.84 (  0.82)	test_minacc   0.87 (  0.77)	test_majacc   0.84 (  0.82)	Loss_d 0.365 (0.363)	test_acc_d   0.84 (  0.82)	test_minacc_d   0.87 (  0.77)	test_majacc_d   0.84 (  0.82)	test_corr_d   0.61 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.32it/s]
Test: [  0/  1]	Loss 1.572 (1.572)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.86 (  0.86)	Loss_d 1.572 (1.572)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.572 (1.572)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.86 (  0.86)	Loss_d 1.572 (1.572)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.30 (  0.30)
Overall Timing[ 47/  1]	epoch_time 0.0430 (0.0442)	validation_time 0.0005 (0.0006)	train_time 0.0425 (0.0435)
record: (train_acc, test_acc) (0.8013000254631042, 0.5260000228881836)
last accs (train_acc, test_acc) (0.8159000280499459, 0.4880000352859497)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.55it/s] 15%|#5        | 4/26 [00:00<00:01, 13.31it/s] 27%|##6       | 7/26 [00:00<00:01, 17.30it/s] 38%|###8      | 10/26 [00:00<00:00, 19.79it/s] 50%|#####     | 13/26 [00:00<00:00, 21.98it/s] 62%|######1   | 16/26 [00:00<00:00, 23.33it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.06it/s] 88%|########8 | 23/26 [00:01<00:00, 25.59it/s]100%|##########| 26/26 [00:01<00:00, 26.29it/s]100%|##########| 26/26 [00:01<00:00, 20.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1248 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1249 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1250 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1251 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1252 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1253 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1254 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1255 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1256 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1257 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1258 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1259 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1260 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1261 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1262 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1263 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1264 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1265 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1266 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1267 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1268 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1269 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1270 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1271 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1272 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1273 364.00000000000006
constrain score by whole: 0
Epoch: [48][  26/  26]	Loss 0.000 (0.001)	train_nll   0.36 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.82 (  0.80)	train_minacc   0.76 (  0.76)	train_majacc   0.83 (  0.81)	train_corr   0.00 (  0.00)	l1 22.5264 (22.5503)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.78it/s] 19%|#9        | 5/26 [00:00<00:00, 22.84it/s] 38%|###8      | 10/26 [00:00<00:00, 29.58it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.55it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.54it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.54it/s] 96%|#########6| 25/26 [00:00<00:00, 41.25it/s]100%|##########| 26/26 [00:00<00:00, 33.55it/s]
Test: [   0/  26]	Loss 0.352 (0.352)	test_acc   0.83 (  0.83)	test_minacc   0.70 (  0.70)	test_majacc   0.86 (  0.86)	Loss_d 0.352 (0.352)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.389 (0.354)	test_acc   0.78 (  0.82)	test_minacc   0.69 (  0.74)	test_majacc   0.79 (  0.83)	Loss_d 0.389 (0.354)	test_acc_d   0.78 (  0.82)	test_minacc_d   0.69 (  0.74)	test_majacc_d   0.79 (  0.83)	test_corr_d   0.60 (  0.62)
Test: [  20/  26]	Loss 0.339 (0.360)	test_acc   0.83 (  0.82)	test_minacc   0.67 (  0.73)	test_majacc   0.85 (  0.83)	Loss_d 0.339 (0.360)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.67 (  0.73)	test_majacc_d   0.85 (  0.83)	test_corr_d   0.68 (  0.63)
Test: [  26/  26]	Loss 0.348 (0.361)	test_acc   0.87 (  0.82)	test_minacc   0.87 (  0.74)	test_majacc   0.87 (  0.83)	Loss_d 0.348 (0.361)	test_acc_d   0.87 (  0.82)	test_minacc_d   0.87 (  0.74)	test_majacc_d   0.87 (  0.83)	test_corr_d   0.62 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.48it/s]
Test: [  0/  1]	Loss 1.486 (1.486)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.87 (  0.87)	Loss_d 1.486 (1.486)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.486 (1.486)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.87 (  0.87)	Loss_d 1.486 (1.486)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.29 (  0.29)
Overall Timing[ 48/  1]	epoch_time 0.0430 (0.0442)	validation_time 0.0005 (0.0006)	train_time 0.0425 (0.0435)
record: (train_acc, test_acc) (0.8013000254631042, 0.5260000228881836)
last accs (train_acc, test_acc) (0.817900027692318, 0.484000027179718)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.38it/s] 19%|#9        | 5/26 [00:00<00:00, 21.22it/s] 31%|###       | 8/26 [00:00<00:00, 23.89it/s] 42%|####2     | 11/26 [00:00<00:00, 24.85it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.54it/s] 65%|######5   | 17/26 [00:00<00:00, 26.49it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.37it/s] 88%|########8 | 23/26 [00:00<00:00, 27.04it/s]100%|##########| 26/26 [00:01<00:00, 27.74it/s]100%|##########| 26/26 [00:01<00:00, 24.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1274 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1275 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1276 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1277 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1278 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1279 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1280 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1281 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1282 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1283 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1284 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1285 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1286 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1287 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1288 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1289 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1290 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1291 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1292 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1293 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1294 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1295 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1296 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1297 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1298 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1299 364.00000000000006
constrain score by whole: 0
Epoch: [49][  26/  26]	Loss 0.001 (0.001)	train_nll   0.42 (  0.39)	train_penalty   0.00 (  0.00)	weight_norm   9.91 (  9.91)	train_acc   0.80 (  0.80)	train_minacc   0.89 (  0.76)	train_majacc   0.78 (  0.80)	train_corr   0.00 (  0.00)	l1 22.4880 (22.5244)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.21it/s] 23%|##3       | 6/26 [00:00<00:00, 25.89it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.89it/s] 42%|####2     | 11/26 [00:00<00:00, 34.81it/s] 62%|######1   | 16/26 [00:00<00:00, 35.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.93it/s] 81%|########  | 21/26 [00:00<00:00, 38.07it/s]100%|##########| 26/26 [00:00<00:00, 41.26it/s]100%|##########| 26/26 [00:00<00:00, 31.63it/s]
Test: [   0/  26]	Loss 0.364 (0.364)	test_acc   0.81 (  0.81)	test_minacc   0.75 (  0.75)	test_majacc   0.82 (  0.82)	Loss_d 0.364 (0.364)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.378 (0.371)	test_acc   0.81 (  0.81)	test_minacc   0.68 (  0.73)	test_majacc   0.84 (  0.82)	Loss_d 0.378 (0.371)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.68 (  0.73)	test_majacc_d   0.84 (  0.82)	test_corr_d   0.64 (  0.62)
Test: [  20/  26]	Loss 0.408 (0.378)	test_acc   0.77 (  0.80)	test_minacc   0.64 (  0.72)	test_majacc   0.79 (  0.81)	Loss_d 0.408 (0.378)	test_acc_d   0.77 (  0.80)	test_minacc_d   0.64 (  0.72)	test_majacc_d   0.79 (  0.81)	test_corr_d   0.63 (  0.62)
Test: [  26/  26]	Loss 0.415 (0.380)	test_acc   0.77 (  0.80)	test_minacc   0.58 (  0.72)	test_majacc   0.81 (  0.81)	Loss_d 0.415 (0.380)	test_acc_d   0.77 (  0.80)	test_minacc_d   0.58 (  0.72)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.59 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.08it/s]
Test: [  0/  1]	Loss 1.406 (1.406)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.81 (  0.81)	Loss_d 1.406 (1.406)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.406 (1.406)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.81 (  0.81)	Loss_d 1.406 (1.406)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.31 (  0.31)
Overall Timing[ 49/  1]	epoch_time 0.0422 (0.0441)	validation_time 0.0005 (0.0006)	train_time 0.0417 (0.0434)
record: (train_acc, test_acc) (0.8013000254631042, 0.5260000228881836)
last accs (train_acc, test_acc) (0.7950000273585319, 0.47700002789497375)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.163 MB of 0.163 MB uploadedwandb: \ 0.163 MB of 0.163 MB uploadedwandb: | 0.163 MB of 0.163 MB uploadedwandb: / 0.163 MB of 0.163 MB uploadedwandb: - 0.186 MB of 0.194 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/diagnostics/epoch_time_val █▁▁▁▁▂▂▂▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▃▂▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/diagnostics/train_time_val █▁▁▂▂▂▂▂▂▁▂▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▃▂▃▂▃▂▂▃▃▂▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/Loss_avg ▁▁▂▄▄▆▆▇█▆▇█▃▃▃▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▂▂▁▂▂▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/Loss_d_avg ▁▁▂▄▄▆▆▇█▆▇█▃▃▃▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▂▂▁▂▂▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/Loss_d_val ▁▁▂▄▄▆▆▇█▆▇█▃▃▃▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▂▂▁▂▂▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/Loss_val ▁▁▂▄▄▆▆▇█▆▇█▃▃▃▄▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▂▂▁▂▂▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_acc_avg ▁▂▄▅▅▃▃▂▄▅▅▄▇▅▅▄▄▆▆▄▅▆▇▅▅▆▅▆▇▇█▇█▇█▇▇▇██
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_acc_d_avg ▁▂▄▅▅▃▃▂▄▅▅▄▇▅▅▄▄▆▆▄▅▆▇▅▅▆▅▆▇▇█▇█▇█▇▇▇██
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_acc_d_val ▁▂▄▅▅▃▃▂▄▅▅▄▇▅▅▄▄▆▆▄▅▆▇▅▅▆▅▆▇▇█▇█▇█▇▇▇██
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_acc_val ▁▂▄▅▅▃▃▂▄▅▅▄▇▅▅▄▄▆▆▄▅▆▇▅▅▆▅▆▇▇█▇█▇█▇▇▇██
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_corr_d_avg █▇▅▃▄▆▆▇▅▄▄▅▂▄▄▅▆▃▃▅▄▄▂▄▄▃▄▃▃▃▂▂▂▂▁▂▁▃▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_corr_d_val █▇▅▃▄▆▆▇▅▄▄▅▂▄▄▅▆▃▃▅▄▄▂▄▄▃▄▃▃▃▂▂▂▂▁▂▁▃▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_majacc_avg ██▇▆▇▇▇▇▇▆▆▆▆▅▆▆▇▅▄▆▇▇▄▆▅▅▆▆▄▅▅▄▃▄▄▁▄▄▄▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_majacc_d_avg ██▇▆▇▇▇▇▇▆▆▆▆▅▆▆▇▅▄▆▇▇▄▆▅▅▆▆▄▅▅▄▃▄▄▁▄▄▄▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_majacc_d_val ██▇▆▇▇▇▇▇▆▆▆▆▅▆▆▇▅▄▆▇▇▄▆▅▅▆▆▄▅▅▄▃▄▄▁▄▄▄▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_majacc_val ██▇▆▇▇▇▇▇▆▆▆▆▅▆▆▇▅▄▆▇▇▄▆▅▅▆▆▄▅▅▄▃▄▄▁▄▄▄▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_minacc_avg ▁▂▄▅▅▃▃▂▄▅▅▄▇▅▅▄▄▆▆▄▅▆▇▅▅▆▅▆▇▆█▇█▇█▇▇▇██
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_minacc_d_avg ▁▂▄▅▅▃▃▂▄▅▅▄▇▅▅▄▄▆▆▄▅▆▇▅▅▆▅▆▇▆█▇█▇█▇▇▇██
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_minacc_d_val ▁▂▄▅▅▃▃▂▄▅▅▄▇▅▅▄▄▆▆▄▅▆▇▅▅▆▅▆▇▆█▇█▇█▇▇▇██
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_minacc_val ▁▂▄▅▅▃▃▂▄▅▅▄▇▅▅▄▄▆▆▄▅▆▇▅▅▆▅▆▇▆█▇█▇█▇▇▇██
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/Loss_avg █▆▄▃▃▃▃▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/Loss_val █▇▄▃▂▃▃▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/l1_avg █▆▆▆▆▅▅▅▅▅▅▆▅▅▅▅▅▄▄▄▄▄▄▄▃▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/l1_val █▇▇█▇▆▆▆▇▇▇▇▆▆▆▆▅▅▅▅▅▅▄▄▄▃▃▃▃▃▂▂▂▂▂▂▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_acc_avg ▁▃▄▆▆▇▆▇████▇▆▅▆▅▅▅▅▅▄▄▃▄▄▄▃▄▃▃▃▂▂▃▂▂▂▂▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_acc_val ▃▃▆▇█▇▇█████▇▅▆▆▆▅▅▆▆▅▅▄▅▄▆▃▄▄▂▃▁▃▂▁▂▃▃▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_majacc_avg ▅▇▇▇▇▇▇█████▇▆▆▆▅▆▆▅▅▄▄▄▄▄▄▄▄▄▃▃▂▂▃▂▂▂▂▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_majacc_val █▇▇█████████▇▆▆▇▇▆▅▆▆▆▅▆▆▅▆▃▄▄▂▃▁▄▃▂▃▃▄▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_minacc_avg ▁▁▃▆▆▇▇▇████▇▇▇▇▇▆▇▇▇▇▇▇▆▆▆▆▆▇▇▇▆▇▆▇▇▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_minacc_val ▁▂▇▇█▆▆█████▇▇▇▇▆▇▇▇█▇▇▆▇▇▇▇▇▆▇▇▇▇▇▇▆▇▆▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_nll_avg █▅▄▃▃▂▂▂▁▁▁▁▂▃▃▃▄▃▃▃▄▄▄▄▄▄▄▄▄▄▄▅▅▅▅▅▅▅▅▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_nll_val █▆▄▂▂▂▂▁▂▁▁▁▂▄▄▃▄▄▅▃▄▅▅▅▅▅▅▆▅▆▆▆▇▆▇▇▇▆▇█
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_penalty_avg █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_penalty_val █▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▂▁▁▁▂▁▁▁▂▁▁▁▁▁▁▁▂▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/weight_norm_avg ▁▂▂▃▄▄▅▅▆▆▆▇▇▇▇▇████████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/weight_norm_val ▁▁▂▂▄▄▅▅▆▆▆▇▇▇▇▇▇▇██████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/diagnostics/epoch_time_val 0.04219
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/diagnostics/train_time_val 0.04171
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/diagnostics/validation_time_val 0.00046
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/Loss_avg 1.40609
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/Loss_d_avg 1.40609
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/Loss_d_val 1.40609
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/Loss_val 1.40609
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_acc_avg 0.477
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_acc_d_avg 0.477
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_acc_d_val 0.477
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_acc_val 0.477
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_corr_d_avg 0.31035
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_corr_d_val 0.31035
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_majacc_avg 0.81
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_majacc_d_avg 0.81
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_majacc_d_val 0.81
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_majacc_val 0.81
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_minacc_avg 0.44
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_minacc_d_avg 0.44
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_minacc_d_val 0.44
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/test/test_minacc_val 0.44
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/Loss_avg 0.0014
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/Loss_val 0.00149
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/l1_avg 22.52444
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/l1_val 22.48796
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_acc_avg 0.7975
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_acc_val 0.8
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_majacc_avg 0.8046
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_majacc_val 0.78302
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_minacc_avg 0.75517
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_minacc_val 0.89474
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_nll_avg 0.38831
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_nll_val 0.41547
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_penalty_avg 0.00136
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/train_penalty_val 0.00145
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/weight_norm_avg 9.91189
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/weight_norm_val 9.91224
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/60/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/g0zu5tdi
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_185733-g0zu5tdi/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_190025-861094uc
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/861094uc
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=10, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1153
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6047, 3, 32, 32) (5953, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:38,  1.55s/it] 15%|#5        | 4/26 [00:01<00:07,  3.11it/s] 27%|##6       | 7/26 [00:01<00:03,  6.00it/s] 42%|####2     | 11/26 [00:01<00:01, 10.10it/s] 58%|#####7    | 15/26 [00:02<00:00, 14.01it/s] 69%|######9   | 18/26 [00:02<00:00, 16.76it/s] 81%|########  | 21/26 [00:02<00:00, 19.15it/s] 96%|#########6| 25/26 [00:02<00:00, 21.92it/s]100%|##########| 26/26 [00:02<00:00,  9.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.348 (0.519)	train_nll   0.35 (  0.52)	train_penalty   0.07 (  0.24)	weight_norm   9.65 (  9.63)	train_acc   0.88 (  0.81)	train_minacc   0.03 (  0.10)	train_majacc   1.00 (  0.94)	train_corr   0.00 (  0.00)	l1 24.4903 (24.8207)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.50it/s] 23%|##3       | 6/26 [00:00<00:00, 29.65it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.65it/s] 42%|####2     | 11/26 [00:00<00:00, 36.68it/s] 62%|######1   | 16/26 [00:00<00:00, 40.94it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.94it/s] 81%|########  | 21/26 [00:00<00:00, 42.47it/s]100%|##########| 26/26 [00:00<00:00, 37.85it/s]
Test: [   0/  26]	Loss 0.449 (0.449)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.449 (0.449)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.400 (0.390)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.400 (0.390)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.380 (0.389)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.380 (0.389)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.316 (0.384)	test_acc   0.89 (  0.85)	test_minacc   0.07 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.316 (0.384)	test_acc_d   0.89 (  0.85)	test_minacc_d   0.07 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.48it/s]100%|##########| 1/1 [00:00<00:00,  2.48it/s]
Test: [  0/  1]	Loss 2.164 (2.164)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 2.164 (2.164)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 2.164 (2.164)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 2.164 (2.164)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0801 (0.0801)	validation_time 0.0068 (0.0068)	train_time 0.0695 (0.0695)
record: (train_acc, test_acc) (0.8491000233888626, 0.10700000822544098)
last accs (train_acc, test_acc) (0.8491000233888626, 0.10700000822544098)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.79it/s] 19%|#9        | 5/26 [00:00<00:01, 19.90it/s] 31%|###       | 8/26 [00:00<00:00, 23.16it/s] 42%|####2     | 11/26 [00:00<00:00, 24.74it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.84it/s] 65%|######5   | 17/26 [00:00<00:00, 26.71it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.97it/s] 92%|#########2| 24/26 [00:00<00:00, 28.22it/s]100%|##########| 26/26 [00:01<00:00, 24.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.260 (0.367)	train_nll   0.26 (  0.37)	train_penalty   0.03 (  0.04)	weight_norm   9.67 (  9.66)	train_acc   0.90 (  0.85)	train_minacc   0.13 (  0.16)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 24.2668 (24.3585)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.78it/s] 15%|#5        | 4/26 [00:00<00:01, 21.33it/s] 38%|###8      | 10/26 [00:00<00:00, 36.53it/s]                                                38%|###8      | 10/26 [00:00<00:00, 36.53it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.61it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.12it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.12it/s] 96%|#########6| 25/26 [00:00<00:00, 42.08it/s]100%|##########| 26/26 [00:00<00:00, 35.42it/s]
Test: [   0/  26]	Loss 0.385 (0.385)	test_acc   0.85 (  0.85)	test_minacc   0.08 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.385 (0.385)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.338 (0.335)	test_acc   0.86 (  0.87)	test_minacc   0.17 (  0.11)	test_majacc   0.99 (  1.00)	Loss_d 0.338 (0.335)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.17 (  0.11)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.95 (  0.96)
Test: [  20/  26]	Loss 0.319 (0.331)	test_acc   0.86 (  0.86)	test_minacc   0.10 (  0.11)	test_majacc   1.00 (  1.00)	Loss_d 0.319 (0.331)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.10 (  0.11)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.229 (0.326)	test_acc   0.90 (  0.86)	test_minacc   0.20 (  0.12)	test_majacc   1.00 (  1.00)	Loss_d 0.229 (0.326)	test_acc_d   0.90 (  0.86)	test_minacc_d   0.20 (  0.12)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.17it/s]
Test: [  0/  1]	Loss 2.714 (2.714)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 2.714 (2.714)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 2.714 (2.714)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 2.714 (2.714)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0451 (0.0626)	validation_time 0.0004 (0.0036)	train_time 0.0446 (0.0570)
record: (train_acc, test_acc) (0.8647000241279602, 0.12200000882148743)
last accs (train_acc, test_acc) (0.8647000241279602, 0.12200000882148743)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.81it/s] 15%|#5        | 4/26 [00:00<00:01, 16.45it/s] 27%|##6       | 7/26 [00:00<00:00, 21.24it/s] 38%|###8      | 10/26 [00:00<00:00, 23.65it/s] 50%|#####     | 13/26 [00:00<00:00, 24.92it/s] 62%|######1   | 16/26 [00:00<00:00, 26.06it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.00it/s] 85%|########4 | 22/26 [00:00<00:00, 27.62it/s] 96%|#########6| 25/26 [00:01<00:00, 27.96it/s]100%|##########| 26/26 [00:01<00:00, 23.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.142 (0.296)	train_nll   0.14 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm   9.67 (  9.67)	train_acc   0.95 (  0.88)	train_minacc   0.63 (  0.38)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 24.2040 (24.2204)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.91it/s] 23%|##3       | 6/26 [00:00<00:00, 26.54it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.54it/s] 42%|####2     | 11/26 [00:00<00:00, 33.10it/s] 62%|######1   | 16/26 [00:00<00:00, 38.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.40it/s] 81%|########  | 21/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 43.04it/s]100%|##########| 26/26 [00:00<00:00, 34.72it/s]
Test: [   0/  26]	Loss 0.323 (0.323)	test_acc   0.86 (  0.86)	test_minacc   0.16 (  0.16)	test_majacc   1.00 (  1.00)	Loss_d 0.323 (0.323)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.16 (  0.16)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.337 (0.294)	test_acc   0.86 (  0.88)	test_minacc   0.14 (  0.18)	test_majacc   1.00 (  1.00)	Loss_d 0.337 (0.294)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.14 (  0.18)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.224 (0.293)	test_acc   0.90 (  0.88)	test_minacc   0.34 (  0.21)	test_majacc   1.00 (  1.00)	Loss_d 0.224 (0.293)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.34 (  0.21)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.95)
Test: [  26/  26]	Loss 0.118 (0.285)	test_acc   0.95 (  0.88)	test_minacc   0.57 (  0.22)	test_majacc   1.00 (  1.00)	Loss_d 0.118 (0.285)	test_acc_d   0.95 (  0.88)	test_minacc_d   0.57 (  0.22)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.61it/s]
Test: [  0/  1]	Loss 3.570 (3.570)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 3.570 (3.570)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 3.570 (3.570)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 3.570 (3.570)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0431 (0.0561)	validation_time 0.0004 (0.0026)	train_time 0.0427 (0.0523)
record: (train_acc, test_acc) (0.88040002399683, 0.12300000339746475)
last accs (train_acc, test_acc) (0.88040002399683, 0.12300000339746475)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.00it/s] 15%|#5        | 4/26 [00:00<00:01, 19.18it/s] 27%|##6       | 7/26 [00:00<00:00, 22.70it/s] 38%|###8      | 10/26 [00:00<00:00, 24.83it/s] 50%|#####     | 13/26 [00:00<00:00, 25.68it/s] 62%|######1   | 16/26 [00:00<00:00, 26.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.39it/s] 85%|########4 | 22/26 [00:00<00:00, 27.42it/s]100%|##########| 26/26 [00:01<00:00, 28.68it/s]100%|##########| 26/26 [00:01<00:00, 24.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.073 (0.213)	train_nll   0.07 (  0.21)	train_penalty   0.00 (  0.01)	weight_norm   9.69 (  9.68)	train_acc   0.99 (  0.92)	train_minacc   0.90 (  0.60)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 24.2214 (24.1920)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.82it/s] 19%|#9        | 5/26 [00:00<00:00, 26.35it/s] 38%|###8      | 10/26 [00:00<00:00, 36.26it/s]                                                38%|###8      | 10/26 [00:00<00:00, 36.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 40.44it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.25it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.25it/s] 96%|#########6| 25/26 [00:00<00:00, 41.66it/s]100%|##########| 26/26 [00:00<00:00, 36.37it/s]
Test: [   0/  26]	Loss 0.238 (0.238)	test_acc   0.91 (  0.91)	test_minacc   0.49 (  0.49)	test_majacc   0.99 (  0.99)	Loss_d 0.238 (0.238)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.298 (0.233)	test_acc   0.88 (  0.91)	test_minacc   0.30 (  0.42)	test_majacc   1.00 (  1.00)	Loss_d 0.298 (0.233)	test_acc_d   0.88 (  0.91)	test_minacc_d   0.30 (  0.42)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.91)
Test: [  20/  26]	Loss 0.123 (0.232)	test_acc   0.95 (  0.91)	test_minacc   0.67 (  0.44)	test_majacc   1.00 (  1.00)	Loss_d 0.123 (0.232)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.67 (  0.44)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.83 (  0.90)
Test: [  26/  26]	Loss 0.053 (0.218)	test_acc   0.98 (  0.92)	test_minacc   0.87 (  0.46)	test_majacc   1.00 (  1.00)	Loss_d 0.053 (0.218)	test_acc_d   0.98 (  0.92)	test_minacc_d   0.87 (  0.46)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.84 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.52it/s]
Test: [  0/  1]	Loss 4.586 (4.586)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 4.586 (4.586)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  1/  1]	Loss 4.586 (4.586)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 4.586 (4.586)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0401 (0.0521)	validation_time 0.0004 (0.0020)	train_time 0.0397 (0.0491)
record: (train_acc, test_acc) (0.9166000195741654, 0.15400001406669617)
last accs (train_acc, test_acc) (0.9166000195741654, 0.15400001406669617)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.86it/s] 15%|#5        | 4/26 [00:00<00:01, 14.90it/s] 27%|##6       | 7/26 [00:00<00:00, 19.72it/s] 38%|###8      | 10/26 [00:00<00:00, 22.96it/s] 50%|#####     | 13/26 [00:00<00:00, 24.71it/s] 62%|######1   | 16/26 [00:00<00:00, 25.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.82it/s] 85%|########4 | 22/26 [00:00<00:00, 27.61it/s] 96%|#########6| 25/26 [00:01<00:00, 28.24it/s]100%|##########| 26/26 [00:01<00:00, 23.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.219 (0.195)	train_nll   0.22 (  0.20)	train_penalty   0.00 (  0.01)	weight_norm   9.71 (  9.70)	train_acc   0.90 (  0.92)	train_minacc   0.70 (  0.67)	train_majacc   0.93 (  0.97)	train_corr   0.00 (  0.00)	l1 24.1744 (24.2024)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.05it/s] 12%|#1        | 3/26 [00:00<00:02,  7.82it/s] 31%|###       | 8/26 [00:00<00:00, 20.14it/s]                                               31%|###       | 8/26 [00:00<00:00, 20.14it/s] 50%|#####     | 13/26 [00:00<00:00, 27.51it/s] 69%|######9   | 18/26 [00:00<00:00, 32.86it/s]                                                69%|######9   | 18/26 [00:00<00:00, 32.86it/s] 88%|########8 | 23/26 [00:00<00:00, 34.03it/s]100%|##########| 26/26 [00:01<00:00, 25.98it/s]
Test: [   0/  26]	Loss 0.204 (0.204)	test_acc   0.92 (  0.92)	test_minacc   0.59 (  0.59)	test_majacc   0.99 (  0.99)	Loss_d 0.204 (0.204)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.252 (0.236)	test_acc   0.89 (  0.90)	test_minacc   0.37 (  0.44)	test_majacc   0.99 (  0.98)	Loss_d 0.252 (0.236)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.37 (  0.44)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.89 (  0.88)
Test: [  20/  26]	Loss 0.106 (0.218)	test_acc   0.96 (  0.91)	test_minacc   0.79 (  0.50)	test_majacc   1.00 (  0.99)	Loss_d 0.106 (0.218)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.79 (  0.50)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.78 (  0.86)
Test: [  26/  26]	Loss 0.064 (0.202)	test_acc   0.99 (  0.92)	test_minacc   0.90 (  0.52)	test_majacc   1.00 (  0.99)	Loss_d 0.064 (0.202)	test_acc_d   0.99 (  0.92)	test_minacc_d   0.90 (  0.52)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.85 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.01it/s]
Test: [  0/  1]	Loss 3.800 (3.800)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.96 (  0.96)	Loss_d 3.800 (3.800)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  1/  1]	Loss 3.800 (3.800)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.96 (  0.96)	Loss_d 3.800 (3.800)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0458 (0.0508)	validation_time 0.0005 (0.0017)	train_time 0.0453 (0.0484)
record: (train_acc, test_acc) (0.9195000149607658, 0.17800000309944153)
last accs (train_acc, test_acc) (0.9195000149607658, 0.17800000309944153)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.36it/s] 15%|#5        | 4/26 [00:00<00:02, 10.90it/s] 27%|##6       | 7/26 [00:00<00:01, 16.19it/s] 38%|###8      | 10/26 [00:00<00:00, 19.60it/s] 50%|#####     | 13/26 [00:00<00:00, 21.40it/s] 62%|######1   | 16/26 [00:00<00:00, 22.99it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.71it/s] 85%|########4 | 22/26 [00:01<00:00, 26.08it/s] 96%|#########6| 25/26 [00:01<00:00, 26.97it/s]100%|##########| 26/26 [00:01<00:00, 20.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.136 (0.211)	train_nll   0.14 (  0.21)	train_penalty   0.00 (  0.01)	weight_norm   9.73 (  9.72)	train_acc   0.96 (  0.92)	train_minacc   0.97 (  0.64)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 23.9913 (24.0759)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.74it/s] 23%|##3       | 6/26 [00:00<00:00, 22.56it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.56it/s] 42%|####2     | 11/26 [00:00<00:00, 29.74it/s] 62%|######1   | 16/26 [00:00<00:00, 35.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.52it/s] 81%|########  | 21/26 [00:00<00:00, 37.40it/s]100%|##########| 26/26 [00:00<00:00, 40.39it/s]100%|##########| 26/26 [00:00<00:00, 31.59it/s]
Test: [   0/  26]	Loss 0.150 (0.150)	test_acc   0.93 (  0.93)	test_minacc   0.79 (  0.79)	test_majacc   0.96 (  0.96)	Loss_d 0.150 (0.150)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.142 (0.127)	test_acc   0.95 (  0.95)	test_minacc   0.78 (  0.81)	test_majacc   0.98 (  0.98)	Loss_d 0.142 (0.127)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.78 (  0.81)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.77)
Test: [  20/  26]	Loss 0.101 (0.119)	test_acc   0.98 (  0.96)	test_minacc   0.93 (  0.82)	test_majacc   0.99 (  0.98)	Loss_d 0.101 (0.119)	test_acc_d   0.98 (  0.96)	test_minacc_d   0.93 (  0.82)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.72 (  0.76)
Test: [  26/  26]	Loss 0.050 (0.111)	test_acc   0.99 (  0.96)	test_minacc   0.97 (  0.83)	test_majacc   1.00 (  0.98)	Loss_d 0.050 (0.111)	test_acc_d   0.99 (  0.96)	test_minacc_d   0.97 (  0.83)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.78 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.01it/s]
Test: [  0/  1]	Loss 3.083 (3.083)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.96 (  0.96)	Loss_d 3.083 (3.083)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 3.083 (3.083)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.96 (  0.96)	Loss_d 3.083 (3.083)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.76 (  0.76)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0480 (0.0504)	validation_time 0.0005 (0.0015)	train_time 0.0476 (0.0482)
record: (train_acc, test_acc) (0.9602000173926354, 0.2460000067949295)
last accs (train_acc, test_acc) (0.9602000173926354, 0.2460000067949295)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.91it/s] 12%|#1        | 3/26 [00:00<00:02, 10.96it/s] 23%|##3       | 6/26 [00:00<00:01, 17.81it/s] 35%|###4      | 9/26 [00:00<00:00, 21.72it/s] 46%|####6     | 12/26 [00:00<00:00, 23.97it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.32it/s] 88%|########8 | 23/26 [00:00<00:00, 28.32it/s]100%|##########| 26/26 [00:01<00:00, 22.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.074 (0.154)	train_nll   0.07 (  0.15)	train_penalty   0.01 (  0.00)	weight_norm   9.74 (  9.74)	train_acc   0.98 (  0.94)	train_minacc   1.00 (  0.74)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 23.8710 (23.9326)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.14it/s] 12%|#1        | 3/26 [00:00<00:01, 14.36it/s] 31%|###       | 8/26 [00:00<00:00, 28.66it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.66it/s] 50%|#####     | 13/26 [00:00<00:00, 35.54it/s] 69%|######9   | 18/26 [00:00<00:00, 39.60it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.60it/s] 88%|########8 | 23/26 [00:00<00:00, 38.48it/s]100%|##########| 26/26 [00:00<00:00, 33.43it/s]
Test: [   0/  26]	Loss 0.128 (0.128)	test_acc   0.95 (  0.95)	test_minacc   0.92 (  0.92)	test_majacc   0.96 (  0.96)	Loss_d 0.128 (0.128)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.094 (0.099)	test_acc   0.97 (  0.97)	test_minacc   0.95 (  0.95)	test_majacc   0.97 (  0.97)	Loss_d 0.094 (0.099)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.66 (  0.69)
Test: [  20/  26]	Loss 0.094 (0.093)	test_acc   0.97 (  0.97)	test_minacc   1.00 (  0.96)	test_majacc   0.97 (  0.97)	Loss_d 0.094 (0.093)	test_acc_d   0.97 (  0.97)	test_minacc_d   1.00 (  0.96)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.63 (  0.68)
Test: [  26/  26]	Loss 0.039 (0.084)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.97)	Loss_d 0.039 (0.084)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.75 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.71it/s]
Test: [  0/  1]	Loss 3.151 (3.151)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.92 (  0.92)	Loss_d 3.151 (3.151)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 3.151 (3.151)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.92 (  0.92)	Loss_d 3.151 (3.151)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.57 (  0.57)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0425 (0.0493)	validation_time 0.0004 (0.0014)	train_time 0.0421 (0.0473)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.23it/s] 15%|#5        | 4/26 [00:00<00:01, 11.22it/s] 27%|##6       | 7/26 [00:00<00:01, 15.82it/s] 38%|###8      | 10/26 [00:00<00:00, 19.68it/s] 50%|#####     | 13/26 [00:00<00:00, 22.19it/s] 65%|######5   | 17/26 [00:00<00:00, 24.84it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.16it/s] 88%|########8 | 23/26 [00:01<00:00, 27.16it/s]100%|##########| 26/26 [00:01<00:00, 20.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.047 (0.125)	train_nll   0.05 (  0.13)	train_penalty   0.00 (  0.00)	weight_norm   9.76 (  9.75)	train_acc   0.99 (  0.95)	train_minacc   0.97 (  0.81)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 23.7860 (23.8336)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.35it/s] 23%|##3       | 6/26 [00:00<00:00, 30.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.57it/s] 42%|####2     | 11/26 [00:00<00:00, 37.57it/s] 62%|######1   | 16/26 [00:00<00:00, 41.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.63it/s] 81%|########  | 21/26 [00:00<00:00, 39.69it/s]100%|##########| 26/26 [00:00<00:00, 42.28it/s]100%|##########| 26/26 [00:00<00:00, 36.10it/s]
Test: [   0/  26]	Loss 0.100 (0.100)	test_acc   0.96 (  0.96)	test_minacc   0.84 (  0.84)	test_majacc   0.98 (  0.98)	Loss_d 0.100 (0.100)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.091 (0.095)	test_acc   0.97 (  0.96)	test_minacc   0.92 (  0.90)	test_majacc   0.98 (  0.98)	Loss_d 0.091 (0.095)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.70 (  0.74)
Test: [  20/  26]	Loss 0.078 (0.083)	test_acc   0.97 (  0.97)	test_minacc   0.90 (  0.91)	test_majacc   0.98 (  0.98)	Loss_d 0.078 (0.083)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.90 (  0.91)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.73)
Test: [  26/  26]	Loss 0.034 (0.077)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  0.98)	Loss_d 0.034 (0.077)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.77 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.26it/s]
Test: [  0/  1]	Loss 3.799 (3.799)	test_acc   0.25 (  0.25)	test_minacc   0.18 (  0.18)	test_majacc   0.94 (  0.94)	Loss_d 3.799 (3.799)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 3.799 (3.799)	test_acc   0.25 (  0.25)	test_minacc   0.18 (  0.18)	test_majacc   0.94 (  0.94)	Loss_d 3.799 (3.799)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.73 (  0.73)
Overall Timing[  7/  1]	epoch_time 0.0438 (0.0486)	validation_time 0.0004 (0.0012)	train_time 0.0434 (0.0468)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.9739000189900399, 0.2540000081062317)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.42it/s] 15%|#5        | 4/26 [00:00<00:01, 17.92it/s] 27%|##6       | 7/26 [00:00<00:00, 22.00it/s] 38%|###8      | 10/26 [00:00<00:00, 24.78it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.13it/s] 69%|######9   | 18/26 [00:00<00:00, 28.37it/s] 85%|########4 | 22/26 [00:00<00:00, 28.94it/s]100%|##########| 26/26 [00:00<00:00, 29.46it/s]100%|##########| 26/26 [00:01<00:00, 25.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.084 (0.093)	train_nll   0.08 (  0.09)	train_penalty   0.00 (  0.00)	weight_norm   9.78 (  9.77)	train_acc   0.96 (  0.96)	train_minacc   0.73 (  0.86)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 23.7362 (23.7593)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.76it/s] 23%|##3       | 6/26 [00:00<00:01, 15.88it/s]                                               23%|##3       | 6/26 [00:00<00:01, 15.88it/s] 42%|####2     | 11/26 [00:00<00:00, 24.65it/s] 65%|######5   | 17/26 [00:00<00:00, 31.04it/s]                                                65%|######5   | 17/26 [00:00<00:00, 31.04it/s] 85%|########4 | 22/26 [00:00<00:00, 36.01it/s]100%|##########| 26/26 [00:00<00:00, 27.51it/s]
Test: [   0/  26]	Loss 0.115 (0.115)	test_acc   0.95 (  0.95)	test_minacc   0.75 (  0.75)	test_majacc   0.99 (  0.99)	Loss_d 0.115 (0.115)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.124 (0.109)	test_acc   0.95 (  0.96)	test_minacc   0.75 (  0.77)	test_majacc   0.98 (  0.99)	Loss_d 0.124 (0.109)	test_acc_d   0.95 (  0.96)	test_minacc_d   0.75 (  0.77)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.76 (  0.79)
Test: [  20/  26]	Loss 0.110 (0.118)	test_acc   0.96 (  0.95)	test_minacc   0.77 (  0.76)	test_majacc   0.99 (  0.99)	Loss_d 0.110 (0.118)	test_acc_d   0.96 (  0.95)	test_minacc_d   0.77 (  0.76)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.78)
Test: [  26/  26]	Loss 0.025 (0.105)	test_acc   1.00 (  0.96)	test_minacc   1.00 (  0.79)	test_majacc   1.00 (  0.99)	Loss_d 0.025 (0.105)	test_acc_d   1.00 (  0.96)	test_minacc_d   1.00 (  0.79)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.80 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.11it/s]
Test: [  0/  1]	Loss 4.869 (4.869)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.94 (  0.94)	Loss_d 4.869 (4.869)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 4.869 (4.869)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.94 (  0.94)	Loss_d 4.869 (4.869)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.79 (  0.79)
Overall Timing[  8/  1]	epoch_time 0.0414 (0.0478)	validation_time 0.0005 (0.0012)	train_time 0.0409 (0.0462)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.960100019812584, 0.2160000056028366)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.03it/s] 15%|#5        | 4/26 [00:00<00:01, 12.62it/s] 27%|##6       | 7/26 [00:00<00:01, 17.93it/s] 38%|###8      | 10/26 [00:00<00:00, 21.30it/s] 50%|#####     | 13/26 [00:00<00:00, 23.51it/s] 62%|######1   | 16/26 [00:00<00:00, 24.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.76it/s] 88%|########8 | 23/26 [00:01<00:00, 27.30it/s]100%|##########| 26/26 [00:01<00:00, 22.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.040 (0.065)	train_nll   0.04 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm   9.79 (  9.78)	train_acc   0.98 (  0.98)	train_minacc   0.97 (  0.91)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 23.7966 (23.7500)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.45it/s] 23%|##3       | 6/26 [00:00<00:00, 27.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.90it/s] 42%|####2     | 11/26 [00:00<00:00, 35.72it/s] 62%|######1   | 16/26 [00:00<00:00, 39.21it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.21it/s] 81%|########  | 21/26 [00:00<00:00, 41.68it/s]100%|##########| 26/26 [00:00<00:00, 43.54it/s]100%|##########| 26/26 [00:00<00:00, 35.46it/s]
Test: [   0/  26]	Loss 0.074 (0.074)	test_acc   0.97 (  0.97)	test_minacc   0.92 (  0.92)	test_majacc   0.98 (  0.98)	Loss_d 0.074 (0.074)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.036 (0.072)	test_acc   0.99 (  0.97)	test_minacc   0.97 (  0.90)	test_majacc   0.99 (  0.99)	Loss_d 0.036 (0.072)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.97 (  0.90)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.74)
Test: [  20/  26]	Loss 0.034 (0.075)	test_acc   0.99 (  0.97)	test_minacc   0.98 (  0.88)	test_majacc   0.99 (  0.99)	Loss_d 0.034 (0.075)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.98 (  0.88)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.73)
Test: [  26/  26]	Loss 0.012 (0.068)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.89)	test_majacc   1.00 (  0.99)	Loss_d 0.012 (0.068)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.89)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.76 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.51it/s]
Test: [  0/  1]	Loss 5.120 (5.120)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.94 (  0.94)	Loss_d 5.120 (5.120)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.67 (  0.67)
Test: [  1/  1]	Loss 5.120 (5.120)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.94 (  0.94)	Loss_d 5.120 (5.120)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.67 (  0.67)
Overall Timing[  9/  1]	epoch_time 0.0397 (0.0470)	validation_time 0.0005 (0.0011)	train_time 0.0391 (0.0455)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.9748000224232674, 0.27900001406669617)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.78it/s] 15%|#5        | 4/26 [00:00<00:01, 12.04it/s] 27%|##6       | 7/26 [00:00<00:01, 17.32it/s] 38%|###8      | 10/26 [00:00<00:00, 21.00it/s] 50%|#####     | 13/26 [00:00<00:00, 23.11it/s] 62%|######1   | 16/26 [00:00<00:00, 24.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.99it/s] 85%|########4 | 22/26 [00:01<00:00, 26.84it/s] 96%|#########6| 25/26 [00:01<00:00, 26.91it/s]100%|##########| 26/26 [00:01<00:00, 21.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.009 (0.062)	train_nll   0.01 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm   9.80 (  9.79)	train_acc   1.00 (  0.97)	train_minacc   1.00 (  0.91)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 23.7970 (23.7996)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.51it/s]  8%|7         | 2/26 [00:00<00:03,  6.16it/s] 35%|###4      | 9/26 [00:00<00:00, 26.60it/s]                                               35%|###4      | 9/26 [00:00<00:00, 26.60it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.61it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 35.61it/s] 81%|########  | 21/26 [00:00<00:00, 41.34it/s]100%|##########| 26/26 [00:00<00:00, 43.28it/s]100%|##########| 26/26 [00:00<00:00, 31.62it/s]
Test: [   0/  26]	Loss 0.036 (0.036)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.036 (0.036)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.039 (0.036)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.039 (0.036)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.74)
Test: [  20/  26]	Loss 0.030 (0.040)	test_acc   0.99 (  0.99)	test_minacc   0.92 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.030 (0.040)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.92 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.73)
Test: [  26/  26]	Loss 0.005 (0.036)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.036)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.45it/s]
Test: [  0/  1]	Loss 5.795 (5.795)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.96 (  0.96)	Loss_d 5.795 (5.795)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 5.795 (5.795)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.96 (  0.96)	Loss_d 5.795 (5.795)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.74 (  0.74)
Overall Timing[ 10/  1]	epoch_time 0.0470 (0.0470)	validation_time 0.0004 (0.0010)	train_time 0.0465 (0.0456)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.9867000344991684, 0.24000000953674316)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.93it/s] 12%|#1        | 3/26 [00:00<00:02, 10.44it/s] 23%|##3       | 6/26 [00:00<00:01, 16.66it/s] 35%|###4      | 9/26 [00:00<00:00, 20.50it/s] 46%|####6     | 12/26 [00:00<00:00, 23.25it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.10it/s] 69%|######9   | 18/26 [00:00<00:00, 26.34it/s] 81%|########  | 21/26 [00:00<00:00, 27.04it/s] 92%|#########2| 24/26 [00:01<00:00, 27.27it/s]100%|##########| 26/26 [00:01<00:00, 21.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.092 (0.041)	train_nll   0.09 (  0.04)	train_penalty   0.01 (  0.00)	weight_norm   9.81 (  9.81)	train_acc   0.98 (  0.98)	train_minacc   0.83 (  0.95)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 23.8242 (23.8026)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 19%|#9        | 5/26 [00:00<00:00, 22.13it/s] 38%|###8      | 10/26 [00:00<00:00, 32.84it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.84it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.83it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.88it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.88it/s] 96%|#########6| 25/26 [00:00<00:00, 41.07it/s]100%|##########| 26/26 [00:00<00:00, 33.86it/s]
Test: [   0/  26]	Loss 0.064 (0.064)	test_acc   0.97 (  0.97)	test_minacc   0.84 (  0.84)	test_majacc   1.00 (  1.00)	Loss_d 0.064 (0.064)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.84 (  0.84)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.073 (0.058)	test_acc   0.97 (  0.98)	test_minacc   0.86 (  0.87)	test_majacc   1.00 (  1.00)	Loss_d 0.073 (0.058)	test_acc_d   0.97 (  0.98)	test_minacc_d   0.86 (  0.87)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.75)
Test: [  20/  26]	Loss 0.024 (0.057)	test_acc   0.99 (  0.98)	test_minacc   0.95 (  0.88)	test_majacc   1.00 (  1.00)	Loss_d 0.024 (0.057)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.95 (  0.88)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.74)
Test: [  26/  26]	Loss 0.006 (0.049)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.90)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.049)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.90)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.77 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.49it/s]
Test: [  0/  1]	Loss 6.213 (6.213)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.97 (  0.97)	Loss_d 6.213 (6.213)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 6.213 (6.213)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.97 (  0.97)	Loss_d 6.213 (6.213)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Overall Timing[ 11/  1]	epoch_time 0.0434 (0.0467)	validation_time 0.0004 (0.0010)	train_time 0.0430 (0.0454)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.9825000277757645, 0.2290000170469284)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.31it/s] 15%|#5        | 4/26 [00:00<00:01, 13.86it/s] 27%|##6       | 7/26 [00:00<00:00, 19.21it/s] 38%|###8      | 10/26 [00:00<00:00, 22.66it/s] 50%|#####     | 13/26 [00:00<00:00, 24.54it/s] 62%|######1   | 16/26 [00:00<00:00, 25.93it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.92it/s] 88%|########8 | 23/26 [00:00<00:00, 27.92it/s]100%|##########| 26/26 [00:01<00:00, 22.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.025 (0.047)	train_nll   0.02 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm   9.82 (  9.82)	train_acc   0.99 (  0.98)	train_minacc   0.93 (  0.94)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 23.7693 (23.7951)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.22it/s] 31%|###       | 8/26 [00:00<00:00, 37.98it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.98it/s] 54%|#####3    | 14/26 [00:00<00:00, 44.70it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.85it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.85it/s] 96%|#########6| 25/26 [00:00<00:00, 47.12it/s]100%|##########| 26/26 [00:00<00:00, 41.03it/s]
Test: [   0/  26]	Loss 0.032 (0.032)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.032 (0.032)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.066 (0.047)	test_acc   0.98 (  0.98)	test_minacc   0.87 (  0.90)	test_majacc   1.00 (  1.00)	Loss_d 0.066 (0.047)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.87 (  0.90)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.75)
Test: [  20/  26]	Loss 0.011 (0.042)	test_acc   1.00 (  0.98)	test_minacc   0.98 (  0.91)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.042)	test_acc_d   1.00 (  0.98)	test_minacc_d   0.98 (  0.91)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.74)
Test: [  26/  26]	Loss 0.007 (0.037)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.037)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.77 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.58it/s]
Test: [  0/  1]	Loss 5.714 (5.714)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.96 (  0.96)	Loss_d 5.714 (5.714)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 5.714 (5.714)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.96 (  0.96)	Loss_d 5.714 (5.714)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.73 (  0.73)
Overall Timing[ 12/  1]	epoch_time 0.0407 (0.0462)	validation_time 0.0004 (0.0009)	train_time 0.0402 (0.0450)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.9856000310778618, 0.25200000405311584)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.47it/s] 15%|#5        | 4/26 [00:00<00:01, 16.98it/s] 27%|##6       | 7/26 [00:00<00:00, 21.17it/s] 38%|###8      | 10/26 [00:00<00:00, 23.92it/s] 50%|#####     | 13/26 [00:00<00:00, 25.13it/s] 62%|######1   | 16/26 [00:00<00:00, 26.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.15it/s] 85%|########4 | 22/26 [00:00<00:00, 27.62it/s] 96%|#########6| 25/26 [00:01<00:00, 27.98it/s]100%|##########| 26/26 [00:01<00:00, 23.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.033 (0.030)	train_nll   0.03 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm   9.83 (  9.83)	train_acc   0.99 (  0.99)	train_minacc   1.00 (  0.95)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 23.7945 (23.7737)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.46it/s] 31%|###       | 8/26 [00:00<00:00, 19.33it/s]                                               31%|###       | 8/26 [00:00<00:00, 19.33it/s] 50%|#####     | 13/26 [00:00<00:00, 27.23it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.55it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 34.55it/s] 96%|#########6| 25/26 [00:00<00:00, 37.83it/s]100%|##########| 26/26 [00:00<00:00, 27.60it/s]
Test: [   0/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.013 (0.029)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.013 (0.029)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.71)
Test: [  20/  26]	Loss 0.019 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.019 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.70)
Test: [  26/  26]	Loss 0.003 (0.018)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.56it/s]
Test: [  0/  1]	Loss 5.418 (5.418)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.93 (  0.93)	Loss_d 5.418 (5.418)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 5.418 (5.418)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.93 (  0.93)	Loss_d 5.418 (5.418)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.60 (  0.60)
Overall Timing[ 13/  1]	epoch_time 0.0443 (0.0461)	validation_time 0.0005 (0.0009)	train_time 0.0438 (0.0449)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.9939000317454338, 0.31200000643730164)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 10.73it/s] 19%|#9        | 5/26 [00:00<00:01, 17.65it/s] 31%|###       | 8/26 [00:00<00:00, 21.22it/s] 42%|####2     | 11/26 [00:00<00:00, 23.43it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.76it/s] 65%|######5   | 17/26 [00:00<00:00, 25.50it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.01it/s] 88%|########8 | 23/26 [00:00<00:00, 26.19it/s]100%|##########| 26/26 [00:01<00:00, 26.85it/s]100%|##########| 26/26 [00:01<00:00, 23.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.038 (0.027)	train_nll   0.04 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm   9.84 (  9.84)	train_acc   0.98 (  0.99)	train_minacc   0.97 (  0.97)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 23.8144 (23.8084)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.45it/s] 27%|##6       | 7/26 [00:00<00:00, 28.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.36it/s] 50%|#####     | 13/26 [00:00<00:00, 36.97it/s] 69%|######9   | 18/26 [00:00<00:00, 41.22it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.22it/s] 88%|########8 | 23/26 [00:00<00:00, 43.39it/s]100%|##########| 26/26 [00:00<00:00, 34.70it/s]
Test: [   0/  26]	Loss 0.042 (0.042)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.042 (0.042)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.025 (0.053)	test_acc   0.99 (  0.98)	test_minacc   0.95 (  0.92)	test_majacc   1.00 (  0.99)	Loss_d 0.025 (0.053)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.95 (  0.92)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.73)
Test: [  20/  26]	Loss 0.066 (0.056)	test_acc   0.97 (  0.98)	test_minacc   0.89 (  0.92)	test_majacc   0.99 (  0.99)	Loss_d 0.066 (0.056)	test_acc_d   0.97 (  0.98)	test_minacc_d   0.89 (  0.92)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  26/  26]	Loss 0.013 (0.051)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  0.99)	Loss_d 0.013 (0.051)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.77 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.59it/s]
Test: [  0/  1]	Loss 6.088 (6.088)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.92 (  0.92)	Loss_d 6.088 (6.088)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 6.088 (6.088)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.92 (  0.92)	Loss_d 6.088 (6.088)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.64 (  0.64)
Overall Timing[ 14/  1]	epoch_time 0.0436 (0.0459)	validation_time 0.0004 (0.0009)	train_time 0.0432 (0.0448)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.9835000277161599, 0.28300002217292786)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.52it/s] 12%|#1        | 3/26 [00:00<00:02, 10.72it/s] 23%|##3       | 6/26 [00:00<00:01, 16.95it/s] 35%|###4      | 9/26 [00:00<00:00, 20.60it/s] 46%|####6     | 12/26 [00:00<00:00, 23.00it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.30it/s] 69%|######9   | 18/26 [00:00<00:00, 25.41it/s] 81%|########  | 21/26 [00:00<00:00, 26.14it/s] 92%|#########2| 24/26 [00:01<00:00, 27.01it/s]100%|##########| 26/26 [00:01<00:00, 21.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0060, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(7.8946e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(1.7252e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.003 (0.022)	train_nll   0.05 (  0.10)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.84)	train_acc   0.99 (  0.96)	train_minacc   0.97 (  0.90)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 23.7088 (23.7821)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.42it/s] 19%|#9        | 5/26 [00:00<00:00, 24.23it/s] 38%|###8      | 10/26 [00:00<00:00, 35.56it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.56it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.86it/s] 77%|#######6  | 20/26 [00:00<00:00, 43.37it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 43.37it/s] 96%|#########6| 25/26 [00:00<00:00, 43.80it/s]100%|##########| 26/26 [00:00<00:00, 37.69it/s]
Test: [   0/  26]	Loss 0.121 (0.121)	test_acc   0.95 (  0.95)	test_minacc   0.75 (  0.75)	test_majacc   0.99 (  0.99)	Loss_d 0.121 (0.121)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.135 (0.092)	test_acc   0.95 (  0.97)	test_minacc   0.71 (  0.81)	test_majacc   0.99 (  0.99)	Loss_d 0.135 (0.092)	test_acc_d   0.95 (  0.97)	test_minacc_d   0.71 (  0.81)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.80 (  0.78)
Test: [  20/  26]	Loss 0.115 (0.104)	test_acc   0.96 (  0.96)	test_minacc   0.77 (  0.78)	test_majacc   0.99 (  0.99)	Loss_d 0.115 (0.104)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.77 (  0.78)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.78)
Test: [  26/  26]	Loss 0.055 (0.102)	test_acc   0.98 (  0.96)	test_minacc   0.93 (  0.78)	test_majacc   0.98 (  0.99)	Loss_d 0.055 (0.102)	test_acc_d   0.98 (  0.96)	test_minacc_d   0.93 (  0.78)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.77 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.51it/s]
Test: [  0/  1]	Loss 4.379 (4.379)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.93 (  0.93)	Loss_d 4.379 (4.379)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 4.379 (4.379)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.93 (  0.93)	Loss_d 4.379 (4.379)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.80 (  0.80)
Overall Timing[ 15/  1]	epoch_time 0.0430 (0.0457)	validation_time 0.0005 (0.0008)	train_time 0.0425 (0.0446)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.9604000226855278, 0.20800000429153442)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.81it/s] 12%|#1        | 3/26 [00:00<00:01, 11.80it/s] 23%|##3       | 6/26 [00:00<00:01, 16.82it/s] 35%|###4      | 9/26 [00:00<00:00, 20.58it/s] 46%|####6     | 12/26 [00:00<00:00, 23.17it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.62it/s] 69%|######9   | 18/26 [00:00<00:00, 25.88it/s] 81%|########  | 21/26 [00:00<00:00, 26.59it/s] 92%|#########2| 24/26 [00:01<00:00, 27.28it/s]100%|##########| 26/26 [00:01<00:00, 22.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0045, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(3.4030e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: tensor(2.0620e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: tensor(4.3155e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.002 (0.002)	train_nll   0.18 (  0.15)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.92 (  0.94)	train_minacc   0.97 (  0.84)	train_majacc   0.91 (  0.96)	train_corr   0.00 (  0.00)	l1 23.6527 (23.6675)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.32it/s] 23%|##3       | 6/26 [00:00<00:00, 28.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.18it/s] 46%|####6     | 12/26 [00:00<00:00, 39.00it/s] 69%|######9   | 18/26 [00:00<00:00, 40.44it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.44it/s] 88%|########8 | 23/26 [00:00<00:00, 42.83it/s]100%|##########| 26/26 [00:00<00:00, 37.36it/s]
Test: [   0/  26]	Loss 0.090 (0.090)	test_acc   0.96 (  0.96)	test_minacc   0.92 (  0.92)	test_majacc   0.96 (  0.96)	Loss_d 0.090 (0.090)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.092 (0.087)	test_acc   0.96 (  0.97)	test_minacc   0.95 (  0.92)	test_majacc   0.96 (  0.98)	Loss_d 0.092 (0.087)	test_acc_d   0.96 (  0.97)	test_minacc_d   0.95 (  0.92)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.68 (  0.72)
Test: [  20/  26]	Loss 0.088 (0.090)	test_acc   0.97 (  0.97)	test_minacc   0.92 (  0.91)	test_majacc   0.98 (  0.98)	Loss_d 0.088 (0.090)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.92 (  0.91)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.103 (0.092)	test_acc   0.95 (  0.97)	test_minacc   0.90 (  0.91)	test_majacc   0.96 (  0.98)	Loss_d 0.103 (0.092)	test_acc_d   0.95 (  0.97)	test_minacc_d   0.90 (  0.91)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.74 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.96it/s]
Test: [  0/  1]	Loss 3.386 (3.386)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.92 (  0.92)	Loss_d 3.386 (3.386)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 3.386 (3.386)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.92 (  0.92)	Loss_d 3.386 (3.386)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.64 (  0.64)
Overall Timing[ 16/  1]	epoch_time 0.0468 (0.0458)	validation_time 0.0004 (0.0008)	train_time 0.0464 (0.0447)
record: (train_acc, test_acc) (0.9711000238060952, 0.3360000252723694)
last accs (train_acc, test_acc) (0.9658000187873841, 0.2970000207424164)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.40it/s] 12%|#1        | 3/26 [00:00<00:02, 10.79it/s] 23%|##3       | 6/26 [00:00<00:01, 17.43it/s] 35%|###4      | 9/26 [00:00<00:00, 21.08it/s] 46%|####6     | 12/26 [00:00<00:00, 23.39it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.56it/s] 69%|######9   | 18/26 [00:00<00:00, 24.09it/s] 81%|########  | 21/26 [00:00<00:00, 24.70it/s] 92%|#########2| 24/26 [00:01<00:00, 25.35it/s]100%|##########| 26/26 [00:01<00:00, 21.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0054, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(2.3526e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: tensor(8.1622e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.001 (0.002)	train_nll   0.16 (  0.14)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.93 (  0.95)	train_minacc   0.97 (  0.87)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 23.6187 (23.6369)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.56it/s] 15%|#5        | 4/26 [00:00<00:01, 18.48it/s] 35%|###4      | 9/26 [00:00<00:00, 30.59it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.59it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.82it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.82it/s] 92%|#########2| 24/26 [00:00<00:00, 39.85it/s]100%|##########| 26/26 [00:00<00:00, 33.45it/s]
Test: [   0/  26]	Loss 0.109 (0.109)	test_acc   0.96 (  0.96)	test_minacc   0.98 (  0.98)	test_majacc   0.96 (  0.96)	Loss_d 0.109 (0.109)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.141 (0.151)	test_acc   0.94 (  0.94)	test_minacc   0.97 (  0.92)	test_majacc   0.93 (  0.94)	Loss_d 0.141 (0.151)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.97 (  0.92)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.63 (  0.66)
Test: [  20/  26]	Loss 0.156 (0.141)	test_acc   0.93 (  0.94)	test_minacc   0.89 (  0.92)	test_majacc   0.94 (  0.95)	Loss_d 0.156 (0.141)	test_acc_d   0.93 (  0.94)	test_minacc_d   0.89 (  0.92)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.67 (  0.67)
Test: [  26/  26]	Loss 0.085 (0.142)	test_acc   0.97 (  0.94)	test_minacc   1.00 (  0.92)	test_majacc   0.97 (  0.95)	Loss_d 0.085 (0.142)	test_acc_d   0.97 (  0.94)	test_minacc_d   1.00 (  0.92)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.72 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.85it/s]
Test: [  0/  1]	Loss 3.064 (3.064)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.89 (  0.89)	Loss_d 3.064 (3.064)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 3.064 (3.064)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.89 (  0.89)	Loss_d 3.064 (3.064)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.55 (  0.55)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0454 (0.0458)	validation_time 0.0004 (0.0008)	train_time 0.0449 (0.0447)
record: (train_acc, test_acc) (0.9438000199794769, 0.3400000035762787)
last accs (train_acc, test_acc) (0.9438000199794769, 0.3400000035762787)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.14it/s] 12%|#1        | 3/26 [00:00<00:02, 11.31it/s] 23%|##3       | 6/26 [00:00<00:01, 17.59it/s] 35%|###4      | 9/26 [00:00<00:00, 20.52it/s] 46%|####6     | 12/26 [00:00<00:00, 22.47it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.03it/s] 69%|######9   | 18/26 [00:00<00:00, 25.36it/s] 81%|########  | 21/26 [00:00<00:00, 26.24it/s] 92%|#########2| 24/26 [00:01<00:00, 26.55it/s]100%|##########| 26/26 [00:01<00:00, 21.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0047, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: tensor(1.4406e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.000 (0.003)	train_nll   0.16 (  0.17)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.93 (  0.93)	train_minacc   0.87 (  0.82)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 23.5519 (23.5851)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.80it/s] 27%|##6       | 7/26 [00:00<00:00, 31.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.87it/s] 46%|####6     | 12/26 [00:00<00:00, 38.67it/s] 65%|######5   | 17/26 [00:00<00:00, 41.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.69it/s] 85%|########4 | 22/26 [00:00<00:00, 40.81it/s]100%|##########| 26/26 [00:00<00:00, 37.21it/s]
Test: [   0/  26]	Loss 0.100 (0.100)	test_acc   0.97 (  0.97)	test_minacc   0.95 (  0.95)	test_majacc   0.97 (  0.97)	Loss_d 0.100 (0.100)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.138 (0.133)	test_acc   0.94 (  0.95)	test_minacc   0.79 (  0.85)	test_majacc   0.97 (  0.97)	Loss_d 0.138 (0.133)	test_acc_d   0.94 (  0.95)	test_minacc_d   0.79 (  0.85)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.73 (  0.73)
Test: [  20/  26]	Loss 0.170 (0.146)	test_acc   0.93 (  0.94)	test_minacc   0.74 (  0.81)	test_majacc   0.96 (  0.97)	Loss_d 0.170 (0.146)	test_acc_d   0.93 (  0.94)	test_minacc_d   0.74 (  0.81)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.74 (  0.73)
Test: [  26/  26]	Loss 0.118 (0.147)	test_acc   0.94 (  0.94)	test_minacc   0.77 (  0.80)	test_majacc   0.97 (  0.97)	Loss_d 0.118 (0.147)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.77 (  0.80)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.87it/s]
Test: [  0/  1]	Loss 3.523 (3.523)	test_acc   0.26 (  0.26)	test_minacc   0.19 (  0.19)	test_majacc   0.92 (  0.92)	Loss_d 3.523 (3.523)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 3.523 (3.523)	test_acc   0.26 (  0.26)	test_minacc   0.19 (  0.19)	test_majacc   0.92 (  0.92)	Loss_d 3.523 (3.523)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.71 (  0.71)
Overall Timing[ 18/  1]	epoch_time 0.0426 (0.0456)	validation_time 0.0005 (0.0008)	train_time 0.0421 (0.0446)
record: (train_acc, test_acc) (0.9438000199794769, 0.3400000035762787)
last accs (train_acc, test_acc) (0.9405000155568123, 0.26100000739097595)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.61it/s] 15%|#5        | 4/26 [00:00<00:02,  9.44it/s] 27%|##6       | 7/26 [00:00<00:01, 14.69it/s] 38%|###8      | 10/26 [00:00<00:00, 18.67it/s] 50%|#####     | 13/26 [00:00<00:00, 21.39it/s] 62%|######1   | 16/26 [00:00<00:00, 23.44it/s] 73%|#######3  | 19/26 [00:01<00:00, 24.69it/s] 85%|########4 | 22/26 [00:01<00:00, 24.78it/s] 96%|#########6| 25/26 [00:01<00:00, 25.54it/s]100%|##########| 26/26 [00:01<00:00, 19.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0035, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.002 (0.002)	train_nll   0.07 (  0.13)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.97 (  0.95)	train_minacc   0.90 (  0.85)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 23.5406 (23.5422)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.40it/s] 27%|##6       | 7/26 [00:00<00:00, 27.76it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.76it/s] 46%|####6     | 12/26 [00:00<00:00, 35.09it/s] 65%|######5   | 17/26 [00:00<00:00, 39.57it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.57it/s] 85%|########4 | 22/26 [00:00<00:00, 38.28it/s]100%|##########| 26/26 [00:00<00:00, 34.76it/s]
Test: [   0/  26]	Loss 0.090 (0.090)	test_acc   0.96 (  0.96)	test_minacc   0.92 (  0.92)	test_majacc   0.97 (  0.97)	Loss_d 0.090 (0.090)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.125 (0.109)	test_acc   0.96 (  0.96)	test_minacc   0.89 (  0.88)	test_majacc   0.97 (  0.97)	Loss_d 0.125 (0.109)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.89 (  0.88)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.70 (  0.72)
Test: [  20/  26]	Loss 0.118 (0.114)	test_acc   0.96 (  0.96)	test_minacc   0.89 (  0.87)	test_majacc   0.98 (  0.97)	Loss_d 0.118 (0.114)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.89 (  0.87)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.72 (  0.72)
Test: [  26/  26]	Loss 0.080 (0.115)	test_acc   0.97 (  0.96)	test_minacc   0.90 (  0.86)	test_majacc   0.98 (  0.97)	Loss_d 0.080 (0.115)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.90 (  0.86)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.78 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.28it/s]
Test: [  0/  1]	Loss 3.437 (3.437)	test_acc   0.30 (  0.30)	test_minacc   0.22 (  0.22)	test_majacc   0.96 (  0.96)	Loss_d 3.437 (3.437)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 3.437 (3.437)	test_acc   0.30 (  0.30)	test_minacc   0.22 (  0.22)	test_majacc   0.96 (  0.96)	Loss_d 3.437 (3.437)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.65 (  0.65)
Overall Timing[ 19/  1]	epoch_time 0.0433 (0.0455)	validation_time 0.0004 (0.0008)	train_time 0.0428 (0.0445)
record: (train_acc, test_acc) (0.9438000199794769, 0.3400000035762787)
last accs (train_acc, test_acc) (0.95580001693964, 0.2970000207424164)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.91it/s] 15%|#5        | 4/26 [00:00<00:01, 12.87it/s] 27%|##6       | 7/26 [00:00<00:01, 17.77it/s] 38%|###8      | 10/26 [00:00<00:00, 21.25it/s] 50%|#####     | 13/26 [00:00<00:00, 23.33it/s] 62%|######1   | 16/26 [00:00<00:00, 24.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.28it/s] 85%|########4 | 22/26 [00:01<00:00, 26.07it/s] 96%|#########6| 25/26 [00:01<00:00, 26.41it/s]100%|##########| 26/26 [00:01<00:00, 21.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0032, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.001 (0.001)	train_nll   0.09 (  0.13)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.97 (  0.95)	train_minacc   0.90 (  0.90)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 23.5278 (23.5399)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.66it/s] 15%|#5        | 4/26 [00:00<00:01, 18.09it/s] 35%|###4      | 9/26 [00:00<00:00, 30.08it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.08it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.36it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.36it/s] 92%|#########2| 24/26 [00:00<00:00, 41.32it/s]100%|##########| 26/26 [00:00<00:00, 33.34it/s]
Test: [   0/  26]	Loss 0.112 (0.112)	test_acc   0.96 (  0.96)	test_minacc   0.89 (  0.89)	test_majacc   0.97 (  0.97)	Loss_d 0.112 (0.112)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.115 (0.111)	test_acc   0.95 (  0.96)	test_minacc   0.81 (  0.84)	test_majacc   0.97 (  0.98)	Loss_d 0.115 (0.111)	test_acc_d   0.95 (  0.96)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.74 (  0.75)
Test: [  20/  26]	Loss 0.102 (0.115)	test_acc   0.95 (  0.95)	test_minacc   0.74 (  0.82)	test_majacc   0.99 (  0.98)	Loss_d 0.102 (0.115)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.74 (  0.82)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.77 (  0.75)
Test: [  26/  26]	Loss 0.110 (0.119)	test_acc   0.97 (  0.95)	test_minacc   0.87 (  0.81)	test_majacc   0.99 (  0.98)	Loss_d 0.110 (0.119)	test_acc_d   0.97 (  0.95)	test_minacc_d   0.87 (  0.81)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.80 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.79it/s]
Test: [  0/  1]	Loss 3.669 (3.669)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 3.669 (3.669)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 3.669 (3.669)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 3.669 (3.669)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Overall Timing[ 20/  1]	epoch_time 0.0437 (0.0454)	validation_time 0.0004 (0.0008)	train_time 0.0433 (0.0445)
record: (train_acc, test_acc) (0.9438000199794769, 0.3400000035762787)
last accs (train_acc, test_acc) (0.9520000194907189, 0.2630000114440918)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.41it/s] 15%|#5        | 4/26 [00:00<00:01, 13.67it/s] 27%|##6       | 7/26 [00:00<00:01, 18.46it/s] 38%|###8      | 10/26 [00:00<00:00, 21.47it/s] 50%|#####     | 13/26 [00:00<00:00, 23.46it/s] 62%|######1   | 16/26 [00:00<00:00, 24.71it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.16it/s] 85%|########4 | 22/26 [00:01<00:00, 25.87it/s] 96%|#########6| 25/26 [00:01<00:00, 26.28it/s]100%|##########| 26/26 [00:01<00:00, 21.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0028, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.000 (0.001)	train_nll   0.14 (  0.13)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.96 (  0.95)	train_minacc   0.93 (  0.86)	train_majacc   0.96 (  0.97)	train_corr   0.00 (  0.00)	l1 23.5242 (23.5249)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.52it/s] 31%|###       | 8/26 [00:00<00:00, 36.97it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.97it/s] 50%|#####     | 13/26 [00:00<00:00, 39.83it/s] 69%|######9   | 18/26 [00:00<00:00, 42.39it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.39it/s] 88%|########8 | 23/26 [00:00<00:00, 41.10it/s]100%|##########| 26/26 [00:00<00:00, 38.11it/s]
Test: [   0/  26]	Loss 0.126 (0.126)	test_acc   0.94 (  0.94)	test_minacc   0.92 (  0.92)	test_majacc   0.94 (  0.94)	Loss_d 0.126 (0.126)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.140 (0.137)	test_acc   0.94 (  0.94)	test_minacc   0.95 (  0.93)	test_majacc   0.94 (  0.94)	Loss_d 0.140 (0.137)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.95 (  0.93)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.63 (  0.67)
Test: [  20/  26]	Loss 0.156 (0.138)	test_acc   0.94 (  0.95)	test_minacc   0.87 (  0.93)	test_majacc   0.96 (  0.95)	Loss_d 0.156 (0.138)	test_acc_d   0.94 (  0.95)	test_minacc_d   0.87 (  0.93)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.69 (  0.67)
Test: [  26/  26]	Loss 0.140 (0.138)	test_acc   0.95 (  0.95)	test_minacc   0.87 (  0.92)	test_majacc   0.96 (  0.95)	Loss_d 0.140 (0.138)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.87 (  0.92)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.72 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.42it/s]
Test: [  0/  1]	Loss 3.005 (3.005)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.87 (  0.87)	Loss_d 3.005 (3.005)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 3.005 (3.005)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.87 (  0.87)	Loss_d 3.005 (3.005)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.52 (  0.52)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[ 21/  1]	epoch_time 0.0437 (0.0453)	validation_time 0.0004 (0.0007)	train_time 0.0432 (0.0444)
record: (train_acc, test_acc) (0.9450000178217888, 0.35600000619888306)
last accs (train_acc, test_acc) (0.9450000178217888, 0.35600000619888306)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.58it/s] 15%|#5        | 4/26 [00:00<00:01, 14.17it/s] 27%|##6       | 7/26 [00:00<00:00, 19.24it/s] 38%|###8      | 10/26 [00:00<00:00, 22.36it/s] 50%|#####     | 13/26 [00:00<00:00, 24.20it/s] 62%|######1   | 16/26 [00:00<00:00, 25.35it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.11it/s] 85%|########4 | 22/26 [00:00<00:00, 26.82it/s] 96%|#########6| 25/26 [00:01<00:00, 26.88it/s]100%|##########| 26/26 [00:01<00:00, 22.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0022, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.001 (0.002)	train_nll   0.13 (  0.14)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.95 (  0.95)	train_minacc   0.87 (  0.93)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 23.5308 (23.5266)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.81it/s] 23%|##3       | 6/26 [00:00<00:01, 19.98it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.98it/s] 42%|####2     | 11/26 [00:00<00:00, 28.51it/s] 65%|######5   | 17/26 [00:00<00:00, 33.91it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.91it/s] 85%|########4 | 22/26 [00:00<00:00, 38.19it/s]100%|##########| 26/26 [00:00<00:00, 30.01it/s]
Test: [   0/  26]	Loss 0.161 (0.161)	test_acc   0.92 (  0.92)	test_minacc   0.81 (  0.81)	test_majacc   0.94 (  0.94)	Loss_d 0.161 (0.161)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.155 (0.142)	test_acc   0.94 (  0.94)	test_minacc   0.86 (  0.86)	test_majacc   0.96 (  0.96)	Loss_d 0.155 (0.142)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.68 (  0.71)
Test: [  20/  26]	Loss 0.152 (0.148)	test_acc   0.93 (  0.94)	test_minacc   0.87 (  0.85)	test_majacc   0.95 (  0.96)	Loss_d 0.152 (0.148)	test_acc_d   0.93 (  0.94)	test_minacc_d   0.87 (  0.85)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.68 (  0.71)
Test: [  26/  26]	Loss 0.187 (0.149)	test_acc   0.92 (  0.94)	test_minacc   0.83 (  0.84)	test_majacc   0.94 (  0.96)	Loss_d 0.187 (0.149)	test_acc_d   0.92 (  0.94)	test_minacc_d   0.83 (  0.84)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.74 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.94it/s]
Test: [  0/  1]	Loss 3.260 (3.260)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.93 (  0.93)	Loss_d 3.260 (3.260)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 3.260 (3.260)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.93 (  0.93)	Loss_d 3.260 (3.260)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.60 (  0.60)
Overall Timing[ 22/  1]	epoch_time 0.0432 (0.0452)	validation_time 0.0005 (0.0007)	train_time 0.0427 (0.0443)
record: (train_acc, test_acc) (0.9450000178217888, 0.35600000619888306)
last accs (train_acc, test_acc) (0.9397000157237053, 0.31700000166893005)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.84it/s] 15%|#5        | 4/26 [00:00<00:01, 12.84it/s] 27%|##6       | 7/26 [00:00<00:01, 18.17it/s] 38%|###8      | 10/26 [00:00<00:00, 21.46it/s] 50%|#####     | 13/26 [00:00<00:00, 23.27it/s] 62%|######1   | 16/26 [00:00<00:00, 24.45it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.06it/s] 85%|########4 | 22/26 [00:01<00:00, 26.09it/s] 96%|#########6| 25/26 [00:01<00:00, 26.51it/s]100%|##########| 26/26 [00:01<00:00, 21.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
l1 at pgd_anneal_iters 23.524568557739258
set z to 22.348340129852293
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.003 (0.001)	train_nll   0.15 (  0.15)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.95 (  0.94)	train_minacc   1.00 (  0.88)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 23.5042 (23.5177)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.25it/s] 19%|#9        | 5/26 [00:00<00:00, 21.78it/s] 38%|###8      | 10/26 [00:00<00:00, 32.37it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.37it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.14it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.66it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.66it/s] 96%|#########6| 25/26 [00:00<00:00, 41.52it/s]100%|##########| 26/26 [00:00<00:00, 33.34it/s]
Test: [   0/  26]	Loss 0.169 (0.169)	test_acc   0.92 (  0.92)	test_minacc   0.86 (  0.86)	test_majacc   0.93 (  0.93)	Loss_d 0.169 (0.169)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.204 (0.148)	test_acc   0.93 (  0.94)	test_minacc   0.83 (  0.86)	test_majacc   0.94 (  0.96)	Loss_d 0.204 (0.148)	test_acc_d   0.93 (  0.94)	test_minacc_d   0.83 (  0.86)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.68 (  0.71)
Test: [  20/  26]	Loss 0.144 (0.148)	test_acc   0.94 (  0.94)	test_minacc   0.84 (  0.85)	test_majacc   0.95 (  0.96)	Loss_d 0.144 (0.148)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.84 (  0.85)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.101 (0.144)	test_acc   0.97 (  0.94)	test_minacc   0.97 (  0.85)	test_majacc   0.97 (  0.96)	Loss_d 0.101 (0.144)	test_acc_d   0.97 (  0.94)	test_minacc_d   0.97 (  0.85)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.75 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.47it/s]
Test: [  0/  1]	Loss 3.223 (3.223)	test_acc   0.30 (  0.30)	test_minacc   0.24 (  0.24)	test_majacc   0.90 (  0.90)	Loss_d 3.223 (3.223)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 3.223 (3.223)	test_acc   0.30 (  0.30)	test_minacc   0.24 (  0.24)	test_majacc   0.90 (  0.90)	Loss_d 3.223 (3.223)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.64 (  0.64)
Overall Timing[ 23/  1]	epoch_time 0.0421 (0.0451)	validation_time 0.0004 (0.0007)	train_time 0.0416 (0.0442)
record: (train_acc, test_acc) (0.9450000178217888, 0.35600000619888306)
last accs (train_acc, test_acc) (0.9448000185489654, 0.3020000159740448)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.06it/s] 15%|#5        | 4/26 [00:00<00:01, 17.48it/s] 27%|##6       | 7/26 [00:00<00:00, 21.19it/s] 38%|###8      | 10/26 [00:00<00:00, 23.48it/s] 50%|#####     | 13/26 [00:00<00:00, 24.76it/s] 62%|######1   | 16/26 [00:00<00:00, 25.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.65it/s] 85%|########4 | 22/26 [00:00<00:00, 26.71it/s] 96%|#########6| 25/26 [00:01<00:00, 27.48it/s]100%|##########| 26/26 [00:01<00:00, 23.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.003 (0.001)	train_nll   0.24 (  0.15)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.89 (  0.94)	train_minacc   0.93 (  0.83)	train_majacc   0.89 (  0.95)	train_corr   0.00 (  0.00)	l1 23.4919 (23.4919)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.54it/s] 19%|#9        | 5/26 [00:00<00:00, 24.63it/s] 38%|###8      | 10/26 [00:00<00:00, 34.75it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.75it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.48it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.48it/s] 96%|#########6| 25/26 [00:00<00:00, 40.96it/s]100%|##########| 26/26 [00:00<00:00, 34.06it/s]
Test: [   0/  26]	Loss 0.180 (0.180)	test_acc   0.93 (  0.93)	test_minacc   0.92 (  0.92)	test_majacc   0.93 (  0.93)	Loss_d 0.180 (0.180)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.183 (0.181)	test_acc   0.92 (  0.93)	test_minacc   0.92 (  0.88)	test_majacc   0.92 (  0.93)	Loss_d 0.183 (0.181)	test_acc_d   0.92 (  0.93)	test_minacc_d   0.92 (  0.88)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.61 (  0.67)
Test: [  20/  26]	Loss 0.216 (0.176)	test_acc   0.90 (  0.93)	test_minacc   0.85 (  0.87)	test_majacc   0.91 (  0.94)	Loss_d 0.216 (0.176)	test_acc_d   0.90 (  0.93)	test_minacc_d   0.85 (  0.87)	test_majacc_d   0.91 (  0.94)	test_corr_d   0.64 (  0.67)
Test: [  26/  26]	Loss 0.162 (0.177)	test_acc   0.93 (  0.93)	test_minacc   0.87 (  0.87)	test_majacc   0.94 (  0.94)	Loss_d 0.162 (0.177)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.72 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.89it/s]
Test: [  0/  1]	Loss 2.847 (2.847)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.85 (  0.85)	Loss_d 2.847 (2.847)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 2.847 (2.847)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.85 (  0.85)	Loss_d 2.847 (2.847)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.50 (  0.50)
Overall Timing[ 24/  1]	epoch_time 0.0422 (0.0450)	validation_time 0.0004 (0.0007)	train_time 0.0417 (0.0441)
record: (train_acc, test_acc) (0.9450000178217888, 0.35600000619888306)
last accs (train_acc, test_acc) (0.9276000213027, 0.3490000069141388)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 15%|#5        | 4/26 [00:00<00:01, 17.47it/s] 27%|##6       | 7/26 [00:00<00:00, 20.79it/s] 38%|###8      | 10/26 [00:00<00:00, 22.21it/s] 50%|#####     | 13/26 [00:00<00:00, 23.44it/s] 62%|######1   | 16/26 [00:00<00:00, 24.87it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.40it/s] 85%|########4 | 22/26 [00:00<00:00, 26.39it/s] 96%|#########6| 25/26 [00:01<00:00, 26.90it/s]100%|##########| 26/26 [00:01<00:00, 23.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: tensor(0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.004 (0.002)	train_nll   0.11 (  0.15)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.94 (  0.94)	train_minacc   0.93 (  0.86)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 23.4697 (23.4793)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.80it/s] 31%|###       | 8/26 [00:00<00:00, 37.68it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.68it/s] 50%|#####     | 13/26 [00:00<00:00, 38.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.27it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.27it/s] 92%|#########2| 24/26 [00:00<00:00, 44.11it/s]100%|##########| 26/26 [00:00<00:00, 38.98it/s]
Test: [   0/  26]	Loss 0.176 (0.176)	test_acc   0.93 (  0.93)	test_minacc   0.90 (  0.90)	test_majacc   0.93 (  0.93)	Loss_d 0.176 (0.176)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.194 (0.187)	test_acc   0.92 (  0.92)	test_minacc   0.86 (  0.85)	test_majacc   0.93 (  0.93)	Loss_d 0.194 (0.187)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.86 (  0.85)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.65 (  0.68)
Test: [  20/  26]	Loss 0.181 (0.180)	test_acc   0.93 (  0.92)	test_minacc   0.84 (  0.85)	test_majacc   0.94 (  0.93)	Loss_d 0.181 (0.180)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.84 (  0.85)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.67 (  0.68)
Test: [  26/  26]	Loss 0.163 (0.181)	test_acc   0.94 (  0.92)	test_minacc   0.90 (  0.86)	test_majacc   0.95 (  0.94)	Loss_d 0.163 (0.181)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.90 (  0.86)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.74 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.71it/s]
Test: [  0/  1]	Loss 2.765 (2.765)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.91 (  0.91)	Loss_d 2.765 (2.765)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 2.765 (2.765)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.91 (  0.91)	Loss_d 2.765 (2.765)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.55 (  0.55)
Overall Timing[ 25/  1]	epoch_time 0.0416 (0.0449)	validation_time 0.0004 (0.0007)	train_time 0.0411 (0.0440)
record: (train_acc, test_acc) (0.9450000178217888, 0.35600000619888306)
last accs (train_acc, test_acc) (0.924200024664402, 0.3460000157356262)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.94it/s] 15%|#5        | 4/26 [00:00<00:01, 12.64it/s] 27%|##6       | 7/26 [00:00<00:01, 17.55it/s] 38%|###8      | 10/26 [00:00<00:00, 21.08it/s] 50%|#####     | 13/26 [00:00<00:00, 23.50it/s] 62%|######1   | 16/26 [00:00<00:00, 23.93it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.57it/s] 85%|########4 | 22/26 [00:01<00:00, 25.38it/s] 96%|#########6| 25/26 [00:01<00:00, 25.93it/s]100%|##########| 26/26 [00:01<00:00, 21.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.000 (0.002)	train_nll   0.14 (  0.17)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.94 (  0.93)	train_minacc   0.83 (  0.81)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 23.4347 (23.4503)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.52it/s]  8%|7         | 2/26 [00:00<00:02,  8.75it/s] 27%|##6       | 7/26 [00:00<00:00, 25.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.39it/s] 46%|####6     | 12/26 [00:00<00:00, 33.68it/s] 65%|######5   | 17/26 [00:00<00:00, 37.96it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.96it/s] 85%|########4 | 22/26 [00:00<00:00, 37.22it/s]100%|##########| 26/26 [00:00<00:00, 32.29it/s]
Test: [   0/  26]	Loss 0.151 (0.151)	test_acc   0.96 (  0.96)	test_minacc   0.86 (  0.86)	test_majacc   0.98 (  0.98)	Loss_d 0.151 (0.151)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.183 (0.164)	test_acc   0.92 (  0.94)	test_minacc   0.81 (  0.80)	test_majacc   0.94 (  0.96)	Loss_d 0.183 (0.164)	test_acc_d   0.92 (  0.94)	test_minacc_d   0.81 (  0.80)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.70 (  0.74)
Test: [  20/  26]	Loss 0.141 (0.167)	test_acc   0.94 (  0.93)	test_minacc   0.77 (  0.79)	test_majacc   0.97 (  0.96)	Loss_d 0.141 (0.167)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.77 (  0.79)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.74 (  0.74)
Test: [  26/  26]	Loss 0.107 (0.164)	test_acc   0.96 (  0.94)	test_minacc   0.90 (  0.80)	test_majacc   0.96 (  0.96)	Loss_d 0.107 (0.164)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.90 (  0.80)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.78 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.48it/s]
Test: [  0/  1]	Loss 3.278 (3.278)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.91 (  0.91)	Loss_d 3.278 (3.278)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 3.278 (3.278)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.91 (  0.91)	Loss_d 3.278 (3.278)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.64 (  0.64)
Overall Timing[ 26/  1]	epoch_time 0.0480 (0.0450)	validation_time 0.0004 (0.0007)	train_time 0.0476 (0.0441)
record: (train_acc, test_acc) (0.9450000178217888, 0.35600000619888306)
last accs (train_acc, test_acc) (0.9351000185012818, 0.30100002884864807)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.89it/s] 15%|#5        | 4/26 [00:00<00:01, 12.83it/s] 27%|##6       | 7/26 [00:00<00:01, 17.95it/s] 38%|###8      | 10/26 [00:00<00:00, 21.43it/s] 50%|#####     | 13/26 [00:00<00:00, 23.77it/s] 62%|######1   | 16/26 [00:00<00:00, 25.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.49it/s] 85%|########4 | 22/26 [00:00<00:00, 26.97it/s] 96%|#########6| 25/26 [00:01<00:00, 27.18it/s]100%|##########| 26/26 [00:01<00:00, 21.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.003 (0.002)	train_nll   0.14 (  0.18)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.96 (  0.93)	train_minacc   0.80 (  0.83)	train_majacc   0.98 (  0.94)	train_corr   0.00 (  0.00)	l1 23.4091 (23.4174)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.81it/s] 31%|###       | 8/26 [00:00<00:00, 38.13it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.13it/s] 50%|#####     | 13/26 [00:00<00:00, 41.77it/s] 69%|######9   | 18/26 [00:00<00:00, 44.24it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.24it/s] 88%|########8 | 23/26 [00:00<00:00, 44.92it/s]100%|##########| 26/26 [00:00<00:00, 39.03it/s]
Test: [   0/  26]	Loss 0.190 (0.190)	test_acc   0.91 (  0.91)	test_minacc   0.68 (  0.68)	test_majacc   0.95 (  0.95)	Loss_d 0.190 (0.190)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.164 (0.172)	test_acc   0.95 (  0.93)	test_minacc   0.84 (  0.76)	test_majacc   0.97 (  0.96)	Loss_d 0.164 (0.172)	test_acc_d   0.95 (  0.93)	test_minacc_d   0.84 (  0.76)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.73 (  0.77)
Test: [  20/  26]	Loss 0.146 (0.182)	test_acc   0.95 (  0.92)	test_minacc   0.84 (  0.74)	test_majacc   0.97 (  0.96)	Loss_d 0.146 (0.182)	test_acc_d   0.95 (  0.92)	test_minacc_d   0.84 (  0.74)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.73 (  0.76)
Test: [  26/  26]	Loss 0.142 (0.181)	test_acc   0.96 (  0.93)	test_minacc   0.80 (  0.74)	test_majacc   0.98 (  0.96)	Loss_d 0.142 (0.181)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.80 (  0.74)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.79 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.08it/s]
Test: [  0/  1]	Loss 3.036 (3.036)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.95 (  0.95)	Loss_d 3.036 (3.036)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 3.036 (3.036)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.95 (  0.95)	Loss_d 3.036 (3.036)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.72 (  0.72)
Overall Timing[ 27/  1]	epoch_time 0.0414 (0.0448)	validation_time 0.0004 (0.0007)	train_time 0.0409 (0.0440)
record: (train_acc, test_acc) (0.9450000178217888, 0.35600000619888306)
last accs (train_acc, test_acc) (0.925100020468235, 0.2600000202655792)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.59it/s] 15%|#5        | 4/26 [00:00<00:01, 14.37it/s] 27%|##6       | 7/26 [00:00<00:00, 19.50it/s] 38%|###8      | 10/26 [00:00<00:00, 22.97it/s] 50%|#####     | 13/26 [00:00<00:00, 24.46it/s] 62%|######1   | 16/26 [00:00<00:00, 26.04it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.83it/s] 85%|########4 | 22/26 [00:00<00:00, 27.66it/s] 96%|#########6| 25/26 [00:01<00:00, 27.40it/s]100%|##########| 26/26 [00:01<00:00, 22.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.002 (0.002)	train_nll   0.18 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.93 (  0.91)	train_minacc   0.90 (  0.83)	train_majacc   0.94 (  0.93)	train_corr   0.00 (  0.00)	l1 23.3759 (23.3932)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 19%|#9        | 5/26 [00:00<00:00, 42.20it/s] 38%|###8      | 10/26 [00:00<00:00, 44.92it/s]                                                38%|###8      | 10/26 [00:00<00:00, 44.92it/s] 58%|#####7    | 15/26 [00:00<00:00, 47.08it/s] 77%|#######6  | 20/26 [00:00<00:00, 47.18it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 47.18it/s] 96%|#########6| 25/26 [00:00<00:00, 47.01it/s]100%|##########| 26/26 [00:00<00:00, 43.42it/s]
Test: [   0/  26]	Loss 0.228 (0.228)	test_acc   0.91 (  0.91)	test_minacc   0.86 (  0.86)	test_majacc   0.92 (  0.92)	Loss_d 0.228 (0.228)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.220 (0.227)	test_acc   0.92 (  0.90)	test_minacc   0.81 (  0.82)	test_majacc   0.94 (  0.92)	Loss_d 0.220 (0.227)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.94 (  0.92)	test_corr_d   0.68 (  0.69)
Test: [  20/  26]	Loss 0.223 (0.223)	test_acc   0.91 (  0.91)	test_minacc   0.84 (  0.82)	test_majacc   0.92 (  0.92)	Loss_d 0.223 (0.223)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.68 (  0.69)
Test: [  26/  26]	Loss 0.160 (0.222)	test_acc   0.93 (  0.91)	test_minacc   0.83 (  0.82)	test_majacc   0.95 (  0.92)	Loss_d 0.160 (0.222)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.83 (  0.82)	test_majacc_d   0.95 (  0.92)	test_corr_d   0.75 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.80it/s]
Test: [  0/  1]	Loss 2.878 (2.878)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.91 (  0.91)	Loss_d 2.878 (2.878)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 2.878 (2.878)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.91 (  0.91)	Loss_d 2.878 (2.878)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.61 (  0.61)
Overall Timing[ 28/  1]	epoch_time 0.0430 (0.0448)	validation_time 0.0004 (0.0007)	train_time 0.0425 (0.0440)
record: (train_acc, test_acc) (0.9450000178217888, 0.35600000619888306)
last accs (train_acc, test_acc) (0.9062000169754029, 0.32500001788139343)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.62it/s] 15%|#5        | 4/26 [00:00<00:01, 14.06it/s] 27%|##6       | 7/26 [00:00<00:00, 19.07it/s] 38%|###8      | 10/26 [00:00<00:00, 22.41it/s] 50%|#####     | 13/26 [00:00<00:00, 24.26it/s] 62%|######1   | 16/26 [00:00<00:00, 25.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.10it/s] 85%|########4 | 22/26 [00:00<00:00, 26.98it/s] 96%|#########6| 25/26 [00:01<00:00, 27.12it/s]100%|##########| 26/26 [00:01<00:00, 22.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.000 (0.002)	train_nll   0.17 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.85)	train_acc   0.93 (  0.91)	train_minacc   0.93 (  0.81)	train_majacc   0.93 (  0.93)	train_corr   0.00 (  0.00)	l1 23.3772 (23.3731)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.96it/s] 27%|##6       | 7/26 [00:00<00:00, 23.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.53it/s] 50%|#####     | 13/26 [00:00<00:00, 31.40it/s] 69%|######9   | 18/26 [00:00<00:00, 36.41it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.41it/s] 92%|#########2| 24/26 [00:00<00:00, 41.45it/s]100%|##########| 26/26 [00:00<00:00, 32.17it/s]
Test: [   0/  26]	Loss 0.177 (0.177)	test_acc   0.92 (  0.92)	test_minacc   0.86 (  0.86)	test_majacc   0.93 (  0.93)	Loss_d 0.177 (0.177)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.206 (0.220)	test_acc   0.91 (  0.90)	test_minacc   0.84 (  0.81)	test_majacc   0.92 (  0.92)	Loss_d 0.206 (0.220)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.66 (  0.69)
Test: [  20/  26]	Loss 0.227 (0.221)	test_acc   0.90 (  0.90)	test_minacc   0.80 (  0.81)	test_majacc   0.92 (  0.92)	Loss_d 0.227 (0.221)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.80 (  0.81)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.67 (  0.68)
Test: [  26/  26]	Loss 0.249 (0.221)	test_acc   0.88 (  0.90)	test_minacc   0.73 (  0.81)	test_majacc   0.90 (  0.92)	Loss_d 0.249 (0.221)	test_acc_d   0.88 (  0.90)	test_minacc_d   0.73 (  0.81)	test_majacc_d   0.90 (  0.92)	test_corr_d   0.71 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.47it/s]
Test: [  0/  1]	Loss 2.692 (2.692)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.91 (  0.91)	Loss_d 2.692 (2.692)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 2.692 (2.692)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.91 (  0.91)	Loss_d 2.692 (2.692)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.55 (  0.55)
Overall Timing[ 29/  1]	epoch_time 0.0453 (0.0448)	validation_time 0.0004 (0.0007)	train_time 0.0448 (0.0440)
record: (train_acc, test_acc) (0.9450000178217888, 0.35600000619888306)
last accs (train_acc, test_acc) (0.9022000242471695, 0.34200000762939453)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.87it/s] 15%|#5        | 4/26 [00:00<00:01, 12.82it/s] 27%|##6       | 7/26 [00:00<00:01, 17.88it/s] 38%|###8      | 10/26 [00:00<00:00, 21.03it/s] 50%|#####     | 13/26 [00:00<00:00, 23.03it/s] 62%|######1   | 16/26 [00:00<00:00, 24.45it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.88it/s] 85%|########4 | 22/26 [00:01<00:00, 25.91it/s] 96%|#########6| 25/26 [00:01<00:00, 26.71it/s]100%|##########| 26/26 [00:01<00:00, 21.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.002 (0.001)	train_nll   0.25 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.90 (  0.92)	train_minacc   0.80 (  0.85)	train_majacc   0.91 (  0.93)	train_corr   0.00 (  0.00)	l1 23.3594 (23.3657)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.75it/s] 27%|##6       | 7/26 [00:00<00:00, 33.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.34it/s] 46%|####6     | 12/26 [00:00<00:00, 39.04it/s] 65%|######5   | 17/26 [00:00<00:00, 42.76it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.76it/s] 85%|########4 | 22/26 [00:00<00:00, 41.18it/s]100%|##########| 26/26 [00:00<00:00, 38.56it/s]
Test: [   0/  26]	Loss 0.277 (0.277)	test_acc   0.87 (  0.87)	test_minacc   0.78 (  0.78)	test_majacc   0.89 (  0.89)	Loss_d 0.277 (0.277)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.287 (0.256)	test_acc   0.88 (  0.89)	test_minacc   0.78 (  0.79)	test_majacc   0.90 (  0.90)	Loss_d 0.287 (0.256)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.63 (  0.66)
Test: [  20/  26]	Loss 0.203 (0.251)	test_acc   0.92 (  0.89)	test_minacc   0.90 (  0.80)	test_majacc   0.92 (  0.90)	Loss_d 0.203 (0.251)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.90 (  0.80)	test_majacc_d   0.92 (  0.90)	test_corr_d   0.64 (  0.66)
Test: [  26/  26]	Loss 0.284 (0.250)	test_acc   0.86 (  0.89)	test_minacc   0.70 (  0.80)	test_majacc   0.89 (  0.90)	Loss_d 0.284 (0.250)	test_acc_d   0.86 (  0.89)	test_minacc_d   0.70 (  0.80)	test_majacc_d   0.89 (  0.90)	test_corr_d   0.71 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.32it/s]
Test: [  0/  1]	Loss 2.629 (2.629)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.89 (  0.89)	Loss_d 2.629 (2.629)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 2.629 (2.629)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.89 (  0.89)	Loss_d 2.629 (2.629)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.52 (  0.52)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[ 30/  1]	epoch_time 0.0410 (0.0447)	validation_time 0.0005 (0.0007)	train_time 0.0405 (0.0439)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.83it/s] 15%|#5        | 4/26 [00:00<00:01, 16.35it/s] 27%|##6       | 7/26 [00:00<00:00, 20.84it/s] 38%|###8      | 10/26 [00:00<00:00, 23.44it/s] 50%|#####     | 13/26 [00:00<00:00, 24.69it/s] 62%|######1   | 16/26 [00:00<00:00, 25.51it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.17it/s] 85%|########4 | 22/26 [00:00<00:00, 26.84it/s] 96%|#########6| 25/26 [00:01<00:00, 27.07it/s]100%|##########| 26/26 [00:01<00:00, 23.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.003 (0.001)	train_nll   0.14 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.95 (  0.91)	train_minacc   0.87 (  0.84)	train_majacc   0.96 (  0.93)	train_corr   0.00 (  0.00)	l1 23.3602 (23.3554)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.55it/s] 23%|##3       | 6/26 [00:00<00:00, 29.34it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.34it/s] 42%|####2     | 11/26 [00:00<00:00, 34.73it/s] 62%|######1   | 16/26 [00:00<00:00, 39.13it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.13it/s] 81%|########  | 21/26 [00:00<00:00, 41.65it/s]100%|##########| 26/26 [00:00<00:00, 36.03it/s]
Test: [   0/  26]	Loss 0.194 (0.194)	test_acc   0.92 (  0.92)	test_minacc   0.81 (  0.81)	test_majacc   0.94 (  0.94)	Loss_d 0.194 (0.194)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.218 (0.209)	test_acc   0.92 (  0.92)	test_minacc   0.87 (  0.85)	test_majacc   0.93 (  0.93)	Loss_d 0.218 (0.209)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.87 (  0.85)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.65 (  0.68)
Test: [  20/  26]	Loss 0.229 (0.217)	test_acc   0.91 (  0.91)	test_minacc   0.90 (  0.83)	test_majacc   0.91 (  0.92)	Loss_d 0.229 (0.217)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.90 (  0.83)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.62 (  0.68)
Test: [  26/  26]	Loss 0.175 (0.215)	test_acc   0.92 (  0.91)	test_minacc   0.90 (  0.83)	test_majacc   0.93 (  0.92)	Loss_d 0.175 (0.215)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.90 (  0.83)	test_majacc_d   0.93 (  0.92)	test_corr_d   0.72 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.65it/s]
Test: [  0/  1]	Loss 2.712 (2.712)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.91 (  0.91)	Loss_d 2.712 (2.712)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 2.712 (2.712)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.91 (  0.91)	Loss_d 2.712 (2.712)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.54 (  0.54)
Overall Timing[ 31/  1]	epoch_time 0.0439 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0434 (0.0439)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.907100022315979, 0.3460000157356262)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.50it/s] 19%|#9        | 5/26 [00:00<00:01, 18.69it/s] 31%|###       | 8/26 [00:00<00:00, 22.33it/s] 42%|####2     | 11/26 [00:00<00:00, 24.14it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.07it/s] 65%|######5   | 17/26 [00:00<00:00, 25.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 25.89it/s] 88%|########8 | 23/26 [00:00<00:00, 26.39it/s]100%|##########| 26/26 [00:01<00:00, 27.02it/s]100%|##########| 26/26 [00:01<00:00, 23.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.001 (0.001)	train_nll   0.18 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.94 (  0.92)	train_minacc   0.87 (  0.83)	train_majacc   0.95 (  0.94)	train_corr   0.00 (  0.00)	l1 23.3568 (23.3562)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.34it/s] 27%|##6       | 7/26 [00:00<00:00, 20.88it/s]                                               27%|##6       | 7/26 [00:00<00:00, 20.88it/s] 46%|####6     | 12/26 [00:00<00:00, 29.66it/s] 65%|######5   | 17/26 [00:00<00:00, 34.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.69it/s] 85%|########4 | 22/26 [00:00<00:00, 38.34it/s]100%|##########| 26/26 [00:00<00:00, 29.62it/s]
Test: [   0/  26]	Loss 0.172 (0.172)	test_acc   0.92 (  0.92)	test_minacc   0.89 (  0.89)	test_majacc   0.92 (  0.92)	Loss_d 0.172 (0.172)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.206 (0.183)	test_acc   0.92 (  0.92)	test_minacc   0.81 (  0.81)	test_majacc   0.94 (  0.94)	Loss_d 0.206 (0.183)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.71 (  0.73)
Test: [  20/  26]	Loss 0.153 (0.181)	test_acc   0.94 (  0.92)	test_minacc   0.80 (  0.80)	test_majacc   0.96 (  0.94)	Loss_d 0.153 (0.181)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.72 (  0.73)
Test: [  26/  26]	Loss 0.207 (0.182)	test_acc   0.92 (  0.92)	test_minacc   0.83 (  0.80)	test_majacc   0.93 (  0.94)	Loss_d 0.207 (0.182)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.83 (  0.80)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.74 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.43it/s]
Test: [  0/  1]	Loss 2.941 (2.941)	test_acc   0.31 (  0.31)	test_minacc   0.25 (  0.25)	test_majacc   0.88 (  0.88)	Loss_d 2.941 (2.941)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 2.941 (2.941)	test_acc   0.31 (  0.31)	test_minacc   0.25 (  0.25)	test_majacc   0.88 (  0.88)	Loss_d 2.941 (2.941)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.61 (  0.61)
Overall Timing[ 32/  1]	epoch_time 0.0497 (0.0448)	validation_time 0.0004 (0.0006)	train_time 0.0492 (0.0440)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.9207000202536583, 0.3140000104904175)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.23it/s] 15%|#5        | 4/26 [00:00<00:01, 13.30it/s] 27%|##6       | 7/26 [00:00<00:01, 18.62it/s] 38%|###8      | 10/26 [00:00<00:00, 21.85it/s] 50%|#####     | 13/26 [00:00<00:00, 23.83it/s] 62%|######1   | 16/26 [00:00<00:00, 24.96it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.91it/s] 85%|########4 | 22/26 [00:00<00:00, 26.69it/s] 96%|#########6| 25/26 [00:01<00:00, 27.46it/s]100%|##########| 26/26 [00:01<00:00, 22.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.001 (0.001)	train_nll   0.18 (  0.17)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.94 (  0.93)	train_minacc   0.83 (  0.82)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 23.3437 (23.3526)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.19it/s] 27%|##6       | 7/26 [00:00<00:00, 33.61it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.61it/s] 46%|####6     | 12/26 [00:00<00:00, 40.01it/s] 65%|######5   | 17/26 [00:00<00:00, 42.82it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.82it/s] 85%|########4 | 22/26 [00:00<00:00, 40.93it/s]100%|##########| 26/26 [00:00<00:00, 38.18it/s]
Test: [   0/  26]	Loss 0.173 (0.173)	test_acc   0.93 (  0.93)	test_minacc   0.87 (  0.87)	test_majacc   0.94 (  0.94)	Loss_d 0.173 (0.173)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.194 (0.189)	test_acc   0.93 (  0.92)	test_minacc   0.84 (  0.82)	test_majacc   0.95 (  0.94)	Loss_d 0.194 (0.189)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.68 (  0.72)
Test: [  20/  26]	Loss 0.201 (0.197)	test_acc   0.93 (  0.92)	test_minacc   0.87 (  0.81)	test_majacc   0.94 (  0.94)	Loss_d 0.201 (0.197)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.87 (  0.81)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.68 (  0.71)
Test: [  26/  26]	Loss 0.185 (0.193)	test_acc   0.93 (  0.92)	test_minacc   0.87 (  0.81)	test_majacc   0.94 (  0.94)	Loss_d 0.185 (0.193)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.87 (  0.81)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.73 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.63it/s]
Test: [  0/  1]	Loss 3.005 (3.005)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.91 (  0.91)	Loss_d 3.005 (3.005)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 3.005 (3.005)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.91 (  0.91)	Loss_d 3.005 (3.005)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.61 (  0.61)
Overall Timing[ 33/  1]	epoch_time 0.0424 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0419 (0.0440)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.9193000183105469, 0.32100000977516174)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.51it/s] 12%|#1        | 3/26 [00:00<00:01, 13.56it/s] 23%|##3       | 6/26 [00:00<00:01, 19.09it/s] 31%|###       | 8/26 [00:00<00:01, 16.82it/s] 42%|####2     | 11/26 [00:00<00:00, 20.31it/s] 54%|#####3    | 14/26 [00:00<00:00, 22.61it/s] 65%|######5   | 17/26 [00:00<00:00, 24.25it/s] 77%|#######6  | 20/26 [00:00<00:00, 25.62it/s] 88%|########8 | 23/26 [00:01<00:00, 26.33it/s]100%|##########| 26/26 [00:01<00:00, 26.78it/s]100%|##########| 26/26 [00:01<00:00, 21.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.000 (0.001)	train_nll   0.17 (  0.17)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.94 (  0.93)	train_minacc   0.93 (  0.84)	train_majacc   0.94 (  0.94)	train_corr   0.00 (  0.00)	l1 23.3414 (23.3443)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.76it/s] 35%|###4      | 9/26 [00:00<00:00, 43.50it/s]                                               35%|###4      | 9/26 [00:00<00:00, 43.50it/s] 58%|#####7    | 15/26 [00:00<00:00, 44.04it/s] 77%|#######6  | 20/26 [00:00<00:00, 45.61it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 45.61it/s] 96%|#########6| 25/26 [00:00<00:00, 45.73it/s]100%|##########| 26/26 [00:00<00:00, 41.27it/s]
Test: [   0/  26]	Loss 0.173 (0.173)	test_acc   0.93 (  0.93)	test_minacc   0.79 (  0.79)	test_majacc   0.95 (  0.95)	Loss_d 0.173 (0.173)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.148 (0.157)	test_acc   0.96 (  0.94)	test_minacc   0.90 (  0.81)	test_majacc   0.97 (  0.96)	Loss_d 0.148 (0.157)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.90 (  0.81)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.71 (  0.75)
Test: [  20/  26]	Loss 0.208 (0.173)	test_acc   0.93 (  0.93)	test_minacc   0.80 (  0.78)	test_majacc   0.95 (  0.96)	Loss_d 0.208 (0.173)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.80 (  0.78)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.74 (  0.75)
Test: [  26/  26]	Loss 0.138 (0.173)	test_acc   0.95 (  0.93)	test_minacc   0.83 (  0.77)	test_majacc   0.96 (  0.96)	Loss_d 0.138 (0.173)	test_acc_d   0.95 (  0.93)	test_minacc_d   0.83 (  0.77)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.76 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.87it/s]
Test: [  0/  1]	Loss 3.220 (3.220)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.93 (  0.93)	Loss_d 3.220 (3.220)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 3.220 (3.220)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.93 (  0.93)	Loss_d 3.220 (3.220)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.66 (  0.66)
Overall Timing[ 34/  1]	epoch_time 0.0450 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0446 (0.0440)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.9289000245928765, 0.29200002551078796)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.54it/s] 15%|#5        | 4/26 [00:00<00:01, 11.98it/s] 27%|##6       | 7/26 [00:00<00:01, 17.02it/s] 38%|###8      | 10/26 [00:00<00:00, 20.01it/s] 50%|#####     | 13/26 [00:00<00:00, 22.30it/s] 62%|######1   | 16/26 [00:00<00:00, 24.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.93it/s] 85%|########4 | 22/26 [00:01<00:00, 25.94it/s] 96%|#########6| 25/26 [00:01<00:00, 26.08it/s]100%|##########| 26/26 [00:01<00:00, 20.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.002 (0.001)	train_nll   0.20 (  0.18)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.92 (  0.93)	train_minacc   0.83 (  0.83)	train_majacc   0.93 (  0.94)	train_corr   0.00 (  0.00)	l1 23.3355 (23.3432)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.48it/s] 23%|##3       | 6/26 [00:00<00:01, 19.57it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.57it/s] 42%|####2     | 11/26 [00:00<00:00, 29.26it/s] 65%|######5   | 17/26 [00:00<00:00, 36.47it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.47it/s] 85%|########4 | 22/26 [00:00<00:00, 40.06it/s]100%|##########| 26/26 [00:00<00:00, 31.38it/s]
Test: [   0/  26]	Loss 0.195 (0.195)	test_acc   0.92 (  0.92)	test_minacc   0.78 (  0.78)	test_majacc   0.94 (  0.94)	Loss_d 0.195 (0.195)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.215 (0.182)	test_acc   0.91 (  0.92)	test_minacc   0.79 (  0.76)	test_majacc   0.93 (  0.95)	Loss_d 0.215 (0.182)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.79 (  0.76)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.73 (  0.77)
Test: [  20/  26]	Loss 0.184 (0.191)	test_acc   0.92 (  0.92)	test_minacc   0.72 (  0.72)	test_majacc   0.96 (  0.95)	Loss_d 0.184 (0.191)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.77 (  0.77)
Test: [  26/  26]	Loss 0.212 (0.193)	test_acc   0.92 (  0.92)	test_minacc   0.83 (  0.72)	test_majacc   0.93 (  0.95)	Loss_d 0.212 (0.193)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.83 (  0.72)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.74 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.25it/s]
Test: [  0/  1]	Loss 3.223 (3.223)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.96 (  0.96)	Loss_d 3.223 (3.223)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 3.223 (3.223)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.96 (  0.96)	Loss_d 3.223 (3.223)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Overall Timing[ 35/  1]	epoch_time 0.0453 (0.0448)	validation_time 0.0004 (0.0006)	train_time 0.0448 (0.0440)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.917400019288063, 0.2800000011920929)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.47it/s] 15%|#5        | 4/26 [00:00<00:01, 16.99it/s] 27%|##6       | 7/26 [00:00<00:00, 20.86it/s] 38%|###8      | 10/26 [00:00<00:00, 23.43it/s] 50%|#####     | 13/26 [00:00<00:00, 24.77it/s] 62%|######1   | 16/26 [00:00<00:00, 25.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.98it/s] 85%|########4 | 22/26 [00:00<00:00, 26.35it/s] 96%|#########6| 25/26 [00:01<00:00, 26.97it/s]100%|##########| 26/26 [00:01<00:00, 22.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.002 (0.002)	train_nll   0.18 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.92 (  0.92)	train_minacc   0.90 (  0.81)	train_majacc   0.93 (  0.94)	train_corr   0.00 (  0.00)	l1 23.2897 (23.3254)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.21it/s] 23%|##3       | 6/26 [00:00<00:00, 31.48it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.48it/s] 42%|####2     | 11/26 [00:00<00:00, 38.52it/s] 62%|######1   | 16/26 [00:00<00:00, 42.12it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.12it/s] 81%|########  | 21/26 [00:00<00:00, 39.41it/s]100%|##########| 26/26 [00:00<00:00, 42.25it/s]100%|##########| 26/26 [00:00<00:00, 36.76it/s]
Test: [   0/  26]	Loss 0.218 (0.218)	test_acc   0.90 (  0.90)	test_minacc   0.81 (  0.81)	test_majacc   0.92 (  0.92)	Loss_d 0.218 (0.218)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.227 (0.230)	test_acc   0.91 (  0.90)	test_minacc   0.86 (  0.80)	test_majacc   0.92 (  0.92)	Loss_d 0.227 (0.230)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.86 (  0.80)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.67 (  0.70)
Test: [  20/  26]	Loss 0.267 (0.230)	test_acc   0.87 (  0.90)	test_minacc   0.77 (  0.80)	test_majacc   0.89 (  0.92)	Loss_d 0.267 (0.230)	test_acc_d   0.87 (  0.90)	test_minacc_d   0.77 (  0.80)	test_majacc_d   0.89 (  0.92)	test_corr_d   0.67 (  0.69)
Test: [  26/  26]	Loss 0.231 (0.231)	test_acc   0.90 (  0.90)	test_minacc   0.80 (  0.81)	test_majacc   0.91 (  0.92)	Loss_d 0.231 (0.231)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.80 (  0.81)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.74 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.42it/s]
Test: [  0/  1]	Loss 2.616 (2.616)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 2.616 (2.616)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 2.616 (2.616)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 2.616 (2.616)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.59 (  0.59)
Overall Timing[ 36/  1]	epoch_time 0.0432 (0.0447)	validation_time 0.0005 (0.0006)	train_time 0.0426 (0.0440)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.8999000206589699, 0.34300002455711365)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.69it/s] 15%|#5        | 4/26 [00:00<00:01, 17.82it/s] 27%|##6       | 7/26 [00:00<00:00, 21.82it/s] 38%|###8      | 10/26 [00:00<00:00, 24.26it/s] 50%|#####     | 13/26 [00:00<00:00, 25.20it/s] 62%|######1   | 16/26 [00:00<00:00, 25.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.10it/s] 85%|########4 | 22/26 [00:00<00:00, 27.00it/s] 96%|#########6| 25/26 [00:01<00:00, 27.20it/s]100%|##########| 26/26 [00:01<00:00, 24.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.006 (0.004)	train_nll   0.29 (  0.22)	train_penalty   0.01 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.86 (  0.90)	train_minacc   0.93 (  0.82)	train_majacc   0.85 (  0.92)	train_corr   0.00 (  0.00)	l1 23.2023 (23.2631)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.46it/s] 15%|#5        | 4/26 [00:00<00:01, 16.11it/s] 35%|###4      | 9/26 [00:00<00:00, 28.17it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.17it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.12it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.12it/s] 92%|#########2| 24/26 [00:00<00:00, 38.38it/s]100%|##########| 26/26 [00:00<00:00, 32.02it/s]
Test: [   0/  26]	Loss 0.222 (0.222)	test_acc   0.92 (  0.92)	test_minacc   0.89 (  0.89)	test_majacc   0.92 (  0.92)	Loss_d 0.222 (0.222)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.221 (0.215)	test_acc   0.91 (  0.91)	test_minacc   0.86 (  0.87)	test_majacc   0.92 (  0.92)	Loss_d 0.221 (0.215)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.86 (  0.87)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.66 (  0.68)
Test: [  20/  26]	Loss 0.226 (0.216)	test_acc   0.89 (  0.91)	test_minacc   0.84 (  0.87)	test_majacc   0.91 (  0.92)	Loss_d 0.226 (0.216)	test_acc_d   0.89 (  0.91)	test_minacc_d   0.84 (  0.87)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.67 (  0.67)
Test: [  26/  26]	Loss 0.232 (0.216)	test_acc   0.92 (  0.91)	test_minacc   0.90 (  0.88)	test_majacc   0.92 (  0.92)	Loss_d 0.232 (0.216)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.90 (  0.88)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.70 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.43it/s]
Test: [  0/  1]	Loss 2.114 (2.114)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.90 (  0.90)	Loss_d 2.114 (2.114)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 2.114 (2.114)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.90 (  0.90)	Loss_d 2.114 (2.114)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.57 (  0.57)
Overall Timing[ 37/  1]	epoch_time 0.0417 (0.0446)	validation_time 0.0004 (0.0006)	train_time 0.0413 (0.0439)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.9117000207901002, 0.3570000231266022)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.33it/s] 15%|#5        | 4/26 [00:00<00:01, 15.27it/s] 27%|##6       | 7/26 [00:00<00:00, 19.74it/s] 38%|###8      | 10/26 [00:00<00:00, 22.55it/s] 50%|#####     | 13/26 [00:00<00:00, 23.85it/s] 62%|######1   | 16/26 [00:00<00:00, 25.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.10it/s] 85%|########4 | 22/26 [00:00<00:00, 26.69it/s] 96%|#########6| 25/26 [00:01<00:00, 27.01it/s]100%|##########| 26/26 [00:01<00:00, 22.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.004 (0.004)	train_nll   0.15 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.96 (  0.91)	train_minacc   0.90 (  0.74)	train_majacc   0.96 (  0.94)	train_corr   0.00 (  0.00)	l1 23.0933 (23.1291)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.59it/s] 27%|##6       | 7/26 [00:00<00:00, 33.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.53it/s] 46%|####6     | 12/26 [00:00<00:00, 39.24it/s] 65%|######5   | 17/26 [00:00<00:00, 42.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.45it/s] 85%|########4 | 22/26 [00:00<00:00, 40.12it/s]100%|##########| 26/26 [00:00<00:00, 37.34it/s]
Test: [   0/  26]	Loss 0.246 (0.246)	test_acc   0.89 (  0.89)	test_minacc   0.81 (  0.81)	test_majacc   0.91 (  0.91)	Loss_d 0.246 (0.246)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.226 (0.200)	test_acc   0.91 (  0.92)	test_minacc   0.76 (  0.81)	test_majacc   0.94 (  0.93)	Loss_d 0.226 (0.200)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.76 (  0.81)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.71 (  0.73)
Test: [  20/  26]	Loss 0.181 (0.192)	test_acc   0.93 (  0.92)	test_minacc   0.84 (  0.80)	test_majacc   0.94 (  0.94)	Loss_d 0.181 (0.192)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.73 (  0.73)
Test: [  26/  26]	Loss 0.182 (0.191)	test_acc   0.92 (  0.92)	test_minacc   0.90 (  0.80)	test_majacc   0.92 (  0.94)	Loss_d 0.182 (0.191)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.90 (  0.80)	test_majacc_d   0.92 (  0.94)	test_corr_d   0.74 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.55it/s]
Test: [  0/  1]	Loss 2.576 (2.576)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.93 (  0.93)	Loss_d 2.576 (2.576)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 2.576 (2.576)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.93 (  0.93)	Loss_d 2.576 (2.576)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.65 (  0.65)
Overall Timing[ 38/  1]	epoch_time 0.0462 (0.0447)	validation_time 0.0005 (0.0006)	train_time 0.0457 (0.0439)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.9208000212907791, 0.30000001192092896)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.50it/s] 19%|#9        | 5/26 [00:00<00:01, 20.85it/s] 31%|###       | 8/26 [00:00<00:00, 23.87it/s] 42%|####2     | 11/26 [00:00<00:00, 25.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.35it/s] 65%|######5   | 17/26 [00:00<00:00, 26.77it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.41it/s] 88%|########8 | 23/26 [00:00<00:00, 27.37it/s]100%|##########| 26/26 [00:01<00:00, 27.83it/s]100%|##########| 26/26 [00:01<00:00, 24.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.002 (0.001)	train_nll   0.28 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.87 (  0.92)	train_minacc   0.83 (  0.78)	train_majacc   0.88 (  0.94)	train_corr   0.00 (  0.00)	l1 23.0768 (23.0839)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.22it/s] 19%|#9        | 5/26 [00:00<00:00, 22.15it/s] 38%|###8      | 10/26 [00:00<00:00, 32.35it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.67it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.48it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.48it/s] 96%|#########6| 25/26 [00:00<00:00, 40.20it/s]100%|##########| 26/26 [00:00<00:00, 33.28it/s]
Test: [   0/  26]	Loss 0.261 (0.261)	test_acc   0.90 (  0.90)	test_minacc   0.79 (  0.79)	test_majacc   0.92 (  0.92)	Loss_d 0.261 (0.261)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.202 (0.224)	test_acc   0.92 (  0.91)	test_minacc   0.84 (  0.79)	test_majacc   0.94 (  0.93)	Loss_d 0.202 (0.224)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.69 (  0.72)
Test: [  20/  26]	Loss 0.190 (0.214)	test_acc   0.94 (  0.91)	test_minacc   0.87 (  0.79)	test_majacc   0.95 (  0.93)	Loss_d 0.190 (0.214)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.87 (  0.79)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.254 (0.212)	test_acc   0.89 (  0.91)	test_minacc   0.80 (  0.79)	test_majacc   0.90 (  0.93)	Loss_d 0.254 (0.212)	test_acc_d   0.89 (  0.91)	test_minacc_d   0.80 (  0.79)	test_majacc_d   0.90 (  0.93)	test_corr_d   0.72 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.01it/s]
Test: [  0/  1]	Loss 2.693 (2.693)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.86 (  0.86)	Loss_d 2.693 (2.693)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 2.693 (2.693)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.86 (  0.86)	Loss_d 2.693 (2.693)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.57 (  0.57)
Overall Timing[ 39/  1]	epoch_time 0.0488 (0.0448)	validation_time 0.0005 (0.0006)	train_time 0.0483 (0.0441)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.9108000254034996, 0.33000001311302185)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.50it/s] 19%|#9        | 5/26 [00:00<00:00, 21.57it/s] 31%|###       | 8/26 [00:00<00:00, 23.73it/s] 42%|####2     | 11/26 [00:00<00:00, 24.75it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.09it/s] 65%|######5   | 17/26 [00:00<00:00, 25.37it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.13it/s] 88%|########8 | 23/26 [00:00<00:00, 26.23it/s]100%|##########| 26/26 [00:01<00:00, 26.89it/s]100%|##########| 26/26 [00:01<00:00, 24.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.000 (0.002)	train_nll   0.22 (  0.22)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.89 (  0.90)	train_minacc   0.83 (  0.82)	train_majacc   0.90 (  0.92)	train_corr   0.00 (  0.00)	l1 23.0471 (23.0568)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.68it/s] 19%|#9        | 5/26 [00:00<00:00, 21.70it/s] 38%|###8      | 10/26 [00:00<00:00, 29.46it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.46it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.57it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.80it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.80it/s] 96%|#########6| 25/26 [00:00<00:00, 40.57it/s]100%|##########| 26/26 [00:00<00:00, 33.09it/s]
Test: [   0/  26]	Loss 0.230 (0.230)	test_acc   0.89 (  0.89)	test_minacc   0.75 (  0.75)	test_majacc   0.91 (  0.91)	Loss_d 0.230 (0.230)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.257 (0.237)	test_acc   0.88 (  0.89)	test_minacc   0.67 (  0.71)	test_majacc   0.92 (  0.93)	Loss_d 0.257 (0.237)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.67 (  0.71)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.73 (  0.74)
Test: [  20/  26]	Loss 0.212 (0.223)	test_acc   0.92 (  0.90)	test_minacc   0.74 (  0.74)	test_majacc   0.95 (  0.93)	Loss_d 0.212 (0.223)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.77 (  0.73)
Test: [  26/  26]	Loss 0.204 (0.223)	test_acc   0.92 (  0.90)	test_minacc   0.80 (  0.74)	test_majacc   0.94 (  0.93)	Loss_d 0.204 (0.223)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.80 (  0.74)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.77 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.92it/s]
Test: [  0/  1]	Loss 2.688 (2.688)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.85 (  0.85)	Loss_d 2.688 (2.688)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 2.688 (2.688)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.85 (  0.85)	Loss_d 2.688 (2.688)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.60 (  0.60)
Overall Timing[ 40/  1]	epoch_time 0.0438 (0.0448)	validation_time 0.0004 (0.0006)	train_time 0.0433 (0.0440)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.9015000203251838, 0.3290000259876251)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 15%|#5        | 4/26 [00:00<00:01, 16.99it/s] 27%|##6       | 7/26 [00:00<00:00, 21.28it/s] 38%|###8      | 10/26 [00:00<00:00, 23.98it/s] 50%|#####     | 13/26 [00:00<00:00, 25.45it/s] 62%|######1   | 16/26 [00:00<00:00, 26.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.93it/s] 85%|########4 | 22/26 [00:00<00:00, 27.47it/s] 96%|#########6| 25/26 [00:01<00:00, 27.19it/s]100%|##########| 26/26 [00:01<00:00, 23.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.000 (0.001)	train_nll   0.27 (  0.24)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.87 (  0.89)	train_minacc   0.83 (  0.81)	train_majacc   0.87 (  0.91)	train_corr   0.00 (  0.00)	l1 23.0319 (23.0386)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.19it/s] 23%|##3       | 6/26 [00:00<00:00, 29.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.03it/s] 42%|####2     | 11/26 [00:00<00:00, 36.26it/s] 62%|######1   | 16/26 [00:00<00:00, 39.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.93it/s] 81%|########  | 21/26 [00:00<00:00, 40.49it/s]100%|##########| 26/26 [00:00<00:00, 42.89it/s]100%|##########| 26/26 [00:00<00:00, 35.47it/s]
Test: [   0/  26]	Loss 0.230 (0.230)	test_acc   0.91 (  0.91)	test_minacc   0.86 (  0.86)	test_majacc   0.91 (  0.91)	Loss_d 0.230 (0.230)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.264 (0.238)	test_acc   0.89 (  0.90)	test_minacc   0.79 (  0.77)	test_majacc   0.91 (  0.92)	Loss_d 0.264 (0.238)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.79 (  0.77)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.68 (  0.72)
Test: [  20/  26]	Loss 0.204 (0.230)	test_acc   0.93 (  0.90)	test_minacc   0.84 (  0.77)	test_majacc   0.95 (  0.93)	Loss_d 0.204 (0.230)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.84 (  0.77)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.269 (0.231)	test_acc   0.86 (  0.90)	test_minacc   0.77 (  0.76)	test_majacc   0.87 (  0.92)	Loss_d 0.269 (0.231)	test_acc_d   0.86 (  0.90)	test_minacc_d   0.77 (  0.76)	test_majacc_d   0.87 (  0.92)	test_corr_d   0.70 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.01it/s]
Test: [  0/  1]	Loss 2.561 (2.561)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.90 (  0.90)	Loss_d 2.561 (2.561)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 2.561 (2.561)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.90 (  0.90)	Loss_d 2.561 (2.561)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.62 (  0.62)
Overall Timing[ 41/  1]	epoch_time 0.0415 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0440)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.9001000247001648, 0.3230000138282776)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.70it/s] 15%|#5        | 4/26 [00:00<00:01, 18.56it/s] 27%|##6       | 7/26 [00:00<00:00, 22.21it/s] 38%|###8      | 10/26 [00:00<00:00, 24.51it/s] 50%|#####     | 13/26 [00:00<00:00, 25.60it/s] 62%|######1   | 16/26 [00:00<00:00, 26.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.97it/s] 85%|########4 | 22/26 [00:00<00:00, 26.94it/s] 96%|#########6| 25/26 [00:01<00:00, 27.05it/s]100%|##########| 26/26 [00:01<00:00, 24.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.001 (0.001)	train_nll   0.24 (  0.23)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.89 (  0.90)	train_minacc   0.90 (  0.79)	train_majacc   0.89 (  0.92)	train_corr   0.00 (  0.00)	l1 23.0408 (23.0333)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 12%|#1        | 3/26 [00:00<00:01, 12.14it/s] 31%|###       | 8/26 [00:00<00:00, 26.33it/s]                                               31%|###       | 8/26 [00:00<00:00, 26.33it/s] 50%|#####     | 13/26 [00:00<00:00, 33.15it/s] 69%|######9   | 18/26 [00:00<00:00, 38.54it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.54it/s] 88%|########8 | 23/26 [00:00<00:00, 36.33it/s]100%|##########| 26/26 [00:00<00:00, 30.65it/s]
Test: [   0/  26]	Loss 0.258 (0.258)	test_acc   0.89 (  0.89)	test_minacc   0.83 (  0.83)	test_majacc   0.91 (  0.91)	Loss_d 0.258 (0.258)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.274 (0.275)	test_acc   0.86 (  0.87)	test_minacc   0.81 (  0.79)	test_majacc   0.87 (  0.89)	Loss_d 0.274 (0.275)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.81 (  0.79)	test_majacc_d   0.87 (  0.89)	test_corr_d   0.63 (  0.66)
Test: [  20/  26]	Loss 0.245 (0.272)	test_acc   0.89 (  0.87)	test_minacc   0.82 (  0.79)	test_majacc   0.91 (  0.89)	Loss_d 0.245 (0.272)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.82 (  0.79)	test_majacc_d   0.91 (  0.89)	test_corr_d   0.66 (  0.66)
Test: [  26/  26]	Loss 0.251 (0.270)	test_acc   0.88 (  0.87)	test_minacc   0.87 (  0.79)	test_majacc   0.88 (  0.89)	Loss_d 0.251 (0.270)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.87 (  0.79)	test_majacc_d   0.88 (  0.89)	test_corr_d   0.67 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.83it/s]
Test: [  0/  1]	Loss 2.487 (2.487)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.84 (  0.84)	Loss_d 2.487 (2.487)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 2.487 (2.487)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.84 (  0.84)	Loss_d 2.487 (2.487)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.52 (  0.52)
Overall Timing[ 42/  1]	epoch_time 0.0421 (0.0446)	validation_time 0.0005 (0.0006)	train_time 0.0416 (0.0439)
record: (train_acc, test_acc) (0.8880000256299972, 0.36500000953674316)
last accs (train_acc, test_acc) (0.8743000261187553, 0.36500000953674316)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.81it/s] 15%|#5        | 4/26 [00:00<00:01, 16.64it/s] 27%|##6       | 7/26 [00:00<00:00, 20.53it/s] 38%|###8      | 10/26 [00:00<00:00, 22.52it/s] 50%|#####     | 13/26 [00:00<00:00, 23.84it/s] 62%|######1   | 16/26 [00:00<00:00, 25.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.82it/s] 85%|########4 | 22/26 [00:00<00:00, 25.28it/s] 96%|#########6| 25/26 [00:01<00:00, 25.59it/s]100%|##########| 26/26 [00:01<00:00, 22.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1118 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1119 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1120 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1121 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1122 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1123 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1124 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1125 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1126 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1127 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1128 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1129 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1130 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1131 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1132 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1133 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1134 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1135 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1136 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1137 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1138 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1139 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1140 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1141 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1142 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1143 364.00000000000006
constrain score by whole: 0
Epoch: [43][  26/  26]	Loss 0.003 (0.001)	train_nll   0.20 (  0.22)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.91 (  0.90)	train_minacc   0.80 (  0.79)	train_majacc   0.93 (  0.92)	train_corr   0.00 (  0.00)	l1 23.0164 (23.0243)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 23%|##3       | 6/26 [00:00<00:00, 29.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.57it/s] 42%|####2     | 11/26 [00:00<00:00, 36.35it/s] 62%|######1   | 16/26 [00:00<00:00, 40.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.71it/s] 81%|########  | 21/26 [00:00<00:00, 41.88it/s]100%|##########| 26/26 [00:00<00:00, 43.54it/s]100%|##########| 26/26 [00:00<00:00, 36.49it/s]
Test: [   0/  26]	Loss 0.334 (0.334)	test_acc   0.85 (  0.85)	test_minacc   0.67 (  0.67)	test_majacc   0.88 (  0.88)	Loss_d 0.334 (0.334)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.275 (0.298)	test_acc   0.88 (  0.88)	test_minacc   0.76 (  0.70)	test_majacc   0.91 (  0.91)	Loss_d 0.275 (0.298)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.76 (  0.70)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.68 (  0.71)
Test: [  20/  26]	Loss 0.208 (0.283)	test_acc   0.91 (  0.88)	test_minacc   0.82 (  0.72)	test_majacc   0.93 (  0.91)	Loss_d 0.208 (0.283)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.82 (  0.72)	test_majacc_d   0.93 (  0.91)	test_corr_d   0.70 (  0.70)
Test: [  26/  26]	Loss 0.276 (0.280)	test_acc   0.88 (  0.88)	test_minacc   0.80 (  0.71)	test_majacc   0.89 (  0.91)	Loss_d 0.276 (0.280)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.80 (  0.71)	test_majacc_d   0.89 (  0.91)	test_corr_d   0.72 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.62it/s]
Test: [  0/  1]	Loss 2.626 (2.626)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.87 (  0.87)	Loss_d 2.626 (2.626)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 2.626 (2.626)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.87 (  0.87)	Loss_d 2.626 (2.626)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.53 (  0.53)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[ 43/  1]	epoch_time 0.0449 (0.0446)	validation_time 0.0004 (0.0006)	train_time 0.0444 (0.0439)
record: (train_acc, test_acc) (0.876300023674965, 0.3700000047683716)
last accs (train_acc, test_acc) (0.876300023674965, 0.3700000047683716)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.16it/s] 12%|#1        | 3/26 [00:00<00:01, 13.05it/s] 23%|##3       | 6/26 [00:00<00:01, 19.46it/s] 35%|###4      | 9/26 [00:00<00:00, 22.37it/s] 46%|####6     | 12/26 [00:00<00:00, 24.11it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.32it/s] 69%|######9   | 18/26 [00:00<00:00, 25.32it/s] 81%|########  | 21/26 [00:00<00:00, 26.09it/s] 92%|#########2| 24/26 [00:01<00:00, 26.79it/s]100%|##########| 26/26 [00:01<00:00, 23.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1144 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1145 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1146 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1147 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1148 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1149 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1150 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1151 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1152 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1153 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1154 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1155 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1156 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1157 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1158 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1159 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1160 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1161 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1162 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1163 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1164 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1165 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1166 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1167 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1168 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1169 364.00000000000006
constrain score by whole: 0
Epoch: [44][  26/  26]	Loss 0.002 (0.002)	train_nll   0.26 (  0.25)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.87 (  0.88)	train_minacc   0.83 (  0.84)	train_majacc   0.87 (  0.89)	train_corr   0.00 (  0.00)	l1 22.9802 (22.9928)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.54it/s] 23%|##3       | 6/26 [00:00<00:01, 18.80it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.80it/s] 42%|####2     | 11/26 [00:00<00:00, 27.80it/s] 62%|######1   | 16/26 [00:00<00:00, 33.77it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.77it/s] 81%|########  | 21/26 [00:00<00:00, 35.41it/s]100%|##########| 26/26 [00:00<00:00, 29.29it/s]
Test: [   0/  26]	Loss 0.248 (0.248)	test_acc   0.90 (  0.90)	test_minacc   0.86 (  0.86)	test_majacc   0.91 (  0.91)	Loss_d 0.248 (0.248)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.279 (0.263)	test_acc   0.88 (  0.89)	test_minacc   0.81 (  0.79)	test_majacc   0.90 (  0.90)	Loss_d 0.279 (0.263)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.81 (  0.79)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.67 (  0.69)
Test: [  20/  26]	Loss 0.187 (0.256)	test_acc   0.94 (  0.89)	test_minacc   0.84 (  0.81)	test_majacc   0.96 (  0.90)	Loss_d 0.187 (0.256)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.96 (  0.90)	test_corr_d   0.72 (  0.68)
Test: [  26/  26]	Loss 0.262 (0.252)	test_acc   0.89 (  0.89)	test_minacc   0.73 (  0.80)	test_majacc   0.91 (  0.91)	Loss_d 0.262 (0.252)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.73 (  0.80)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.72 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.82it/s]
Test: [  0/  1]	Loss 2.547 (2.547)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.86 (  0.86)	Loss_d 2.547 (2.547)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 2.547 (2.547)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.86 (  0.86)	Loss_d 2.547 (2.547)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.49 (  0.49)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[ 44/  1]	epoch_time 0.0455 (0.0446)	validation_time 0.0005 (0.0006)	train_time 0.0450 (0.0439)
record: (train_acc, test_acc) (0.8898000221252441, 0.39100003242492676)
last accs (train_acc, test_acc) (0.8898000221252441, 0.39100003242492676)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.75it/s] 15%|#5        | 4/26 [00:00<00:01, 18.00it/s] 27%|##6       | 7/26 [00:00<00:00, 21.40it/s] 38%|###8      | 10/26 [00:00<00:00, 23.61it/s] 50%|#####     | 13/26 [00:00<00:00, 24.72it/s] 62%|######1   | 16/26 [00:00<00:00, 25.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.80it/s] 85%|########4 | 22/26 [00:00<00:00, 26.28it/s] 96%|#########6| 25/26 [00:01<00:00, 26.78it/s]100%|##########| 26/26 [00:01<00:00, 23.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1170 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1171 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1172 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1173 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1174 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1175 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1176 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1177 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1178 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1179 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1180 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1181 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1182 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1183 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1184 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1185 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1186 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1187 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1188 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1189 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1190 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1191 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1192 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1193 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1194 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1195 364.00000000000006
constrain score by whole: 0
Epoch: [45][  26/  26]	Loss 0.002 (0.002)	train_nll   0.33 (  0.26)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.86)	train_acc   0.84 (  0.88)	train_minacc   0.87 (  0.77)	train_majacc   0.84 (  0.90)	train_corr   0.00 (  0.00)	l1 22.9182 (22.9117)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.16it/s] 27%|##6       | 7/26 [00:00<00:00, 29.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.82it/s] 46%|####6     | 12/26 [00:00<00:00, 36.53it/s] 65%|######5   | 17/26 [00:00<00:00, 39.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.80it/s] 85%|########4 | 22/26 [00:00<00:00, 40.21it/s]100%|##########| 26/26 [00:00<00:00, 34.78it/s]
Test: [   0/  26]	Loss 0.285 (0.285)	test_acc   0.88 (  0.88)	test_minacc   0.87 (  0.87)	test_majacc   0.89 (  0.89)	Loss_d 0.285 (0.285)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.289 (0.317)	test_acc   0.88 (  0.85)	test_minacc   0.92 (  0.83)	test_majacc   0.87 (  0.86)	Loss_d 0.289 (0.317)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.92 (  0.83)	test_majacc_d   0.87 (  0.86)	test_corr_d   0.55 (  0.60)
Test: [  20/  26]	Loss 0.292 (0.322)	test_acc   0.87 (  0.85)	test_minacc   0.80 (  0.81)	test_majacc   0.88 (  0.86)	Loss_d 0.292 (0.322)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.80 (  0.81)	test_majacc_d   0.88 (  0.86)	test_corr_d   0.62 (  0.60)
Test: [  26/  26]	Loss 0.343 (0.317)	test_acc   0.84 (  0.85)	test_minacc   0.83 (  0.82)	test_majacc   0.84 (  0.86)	Loss_d 0.343 (0.317)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.83 (  0.82)	test_majacc_d   0.84 (  0.86)	test_corr_d   0.62 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.49it/s]
Test: [  0/  1]	Loss 2.030 (2.030)	test_acc   0.47 (  0.47)	test_minacc   0.43 (  0.43)	test_majacc   0.84 (  0.84)	Loss_d 2.030 (2.030)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 2.030 (2.030)	test_acc   0.47 (  0.47)	test_minacc   0.43 (  0.43)	test_majacc   0.84 (  0.84)	Loss_d 2.030 (2.030)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.31 (  0.31)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/63/checkpoints/model_best.pth
Overall Timing[ 45/  1]	epoch_time 0.0450 (0.0447)	validation_time 0.0005 (0.0006)	train_time 0.0445 (0.0440)
record: (train_acc, test_acc) (0.8526000242829322, 0.4700000286102295)
last accs (train_acc, test_acc) (0.8526000242829322, 0.4700000286102295)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.69it/s] 15%|#5        | 4/26 [00:00<00:01, 12.57it/s] 27%|##6       | 7/26 [00:00<00:01, 17.72it/s] 38%|###8      | 10/26 [00:00<00:00, 21.19it/s] 50%|#####     | 13/26 [00:00<00:00, 23.17it/s] 62%|######1   | 16/26 [00:00<00:00, 24.60it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.52it/s] 85%|########4 | 22/26 [00:01<00:00, 26.25it/s] 96%|#########6| 25/26 [00:01<00:00, 26.72it/s]100%|##########| 26/26 [00:01<00:00, 21.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1196 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1197 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1198 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1199 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1200 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1201 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1202 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1203 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1204 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1205 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1206 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1207 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1208 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1209 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1210 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1211 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1212 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1213 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1214 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1215 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1216 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1217 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1218 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1219 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1220 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1221 364.00000000000006
constrain score by whole: 0
Epoch: [46][  26/  26]	Loss 0.000 (0.001)	train_nll   0.27 (  0.26)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.86 (  0.88)	train_minacc   1.00 (  0.82)	train_majacc   0.84 (  0.90)	train_corr   0.00 (  0.00)	l1 22.9145 (22.8994)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.80it/s] 23%|##3       | 6/26 [00:00<00:00, 22.96it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.96it/s] 42%|####2     | 11/26 [00:00<00:00, 29.34it/s] 62%|######1   | 16/26 [00:00<00:00, 35.14it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.14it/s] 81%|########  | 21/26 [00:00<00:00, 38.20it/s]100%|##########| 26/26 [00:00<00:00, 41.38it/s]100%|##########| 26/26 [00:00<00:00, 31.94it/s]
Test: [   0/  26]	Loss 0.314 (0.314)	test_acc   0.86 (  0.86)	test_minacc   0.92 (  0.92)	test_majacc   0.85 (  0.85)	Loss_d 0.314 (0.314)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.332 (0.338)	test_acc   0.85 (  0.84)	test_minacc   0.92 (  0.86)	test_majacc   0.84 (  0.84)	Loss_d 0.332 (0.338)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.92 (  0.86)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.53 (  0.57)
Test: [  20/  26]	Loss 0.298 (0.340)	test_acc   0.86 (  0.84)	test_minacc   0.89 (  0.86)	test_majacc   0.86 (  0.84)	Loss_d 0.298 (0.340)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.86 (  0.84)	test_corr_d   0.57 (  0.56)
Test: [  26/  26]	Loss 0.356 (0.336)	test_acc   0.85 (  0.85)	test_minacc   0.97 (  0.87)	test_majacc   0.83 (  0.84)	Loss_d 0.356 (0.336)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.97 (  0.87)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.57 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.34it/s]
Test: [  0/  1]	Loss 2.080 (2.080)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.78 (  0.78)	Loss_d 2.080 (2.080)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 2.080 (2.080)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.78 (  0.78)	Loss_d 2.080 (2.080)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.31 (  0.31)
Overall Timing[ 46/  1]	epoch_time 0.0455 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0450 (0.0440)
record: (train_acc, test_acc) (0.8526000242829322, 0.4700000286102295)
last accs (train_acc, test_acc) (0.8452000218629837, 0.4390000104904175)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.32it/s] 15%|#5        | 4/26 [00:00<00:01, 17.06it/s] 27%|##6       | 7/26 [00:00<00:00, 20.36it/s] 38%|###8      | 10/26 [00:00<00:00, 22.15it/s] 50%|#####     | 13/26 [00:00<00:00, 23.46it/s] 62%|######1   | 16/26 [00:00<00:00, 24.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.21it/s] 85%|########4 | 22/26 [00:00<00:00, 26.32it/s] 96%|#########6| 25/26 [00:01<00:00, 26.92it/s]100%|##########| 26/26 [00:01<00:00, 22.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1222 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1223 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1224 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1225 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1226 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1227 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1228 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1229 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1230 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1231 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1232 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1233 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1234 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1235 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1236 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1237 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1238 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1239 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1240 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1241 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1242 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1243 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1244 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1245 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1246 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1247 364.00000000000006
constrain score by whole: 0
Epoch: [47][  26/  26]	Loss 0.001 (0.004)	train_nll   0.28 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.85 (  0.88)	train_minacc   0.87 (  0.74)	train_majacc   0.85 (  0.90)	train_corr   0.00 (  0.00)	l1 22.7928 (22.8377)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.35it/s] 27%|##6       | 7/26 [00:00<00:00, 28.98it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.98it/s] 46%|####6     | 12/26 [00:00<00:00, 35.75it/s] 65%|######5   | 17/26 [00:00<00:00, 39.42it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.42it/s] 85%|########4 | 22/26 [00:00<00:00, 39.58it/s]100%|##########| 26/26 [00:00<00:00, 35.30it/s]
Test: [   0/  26]	Loss 0.213 (0.213)	test_acc   0.91 (  0.91)	test_minacc   0.90 (  0.90)	test_majacc   0.91 (  0.91)	Loss_d 0.213 (0.213)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.276 (0.256)	test_acc   0.88 (  0.88)	test_minacc   0.89 (  0.87)	test_majacc   0.88 (  0.89)	Loss_d 0.276 (0.256)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.89 (  0.87)	test_majacc_d   0.88 (  0.89)	test_corr_d   0.62 (  0.65)
Test: [  20/  26]	Loss 0.285 (0.255)	test_acc   0.87 (  0.89)	test_minacc   0.82 (  0.87)	test_majacc   0.88 (  0.89)	Loss_d 0.285 (0.255)	test_acc_d   0.87 (  0.89)	test_minacc_d   0.82 (  0.87)	test_majacc_d   0.88 (  0.89)	test_corr_d   0.63 (  0.64)
Test: [  26/  26]	Loss 0.236 (0.251)	test_acc   0.88 (  0.89)	test_minacc   0.90 (  0.88)	test_majacc   0.88 (  0.89)	Loss_d 0.236 (0.251)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.90 (  0.88)	test_majacc_d   0.88 (  0.89)	test_corr_d   0.67 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.71it/s]
Test: [  0/  1]	Loss 2.051 (2.051)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.87 (  0.87)	Loss_d 2.051 (2.051)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 2.051 (2.051)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.87 (  0.87)	Loss_d 2.051 (2.051)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.40 (  0.40)
Overall Timing[ 47/  1]	epoch_time 0.0442 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0437 (0.0440)
record: (train_acc, test_acc) (0.8526000242829322, 0.4700000286102295)
last accs (train_acc, test_acc) (0.8885000266432762, 0.4400000274181366)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.12it/s] 15%|#5        | 4/26 [00:00<00:01, 14.59it/s] 27%|##6       | 7/26 [00:00<00:00, 19.31it/s] 38%|###8      | 10/26 [00:00<00:00, 22.40it/s] 50%|#####     | 13/26 [00:00<00:00, 23.71it/s] 62%|######1   | 16/26 [00:00<00:00, 25.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.91it/s] 85%|########4 | 22/26 [00:00<00:00, 26.42it/s] 96%|#########6| 25/26 [00:01<00:00, 26.78it/s]100%|##########| 26/26 [00:01<00:00, 22.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1248 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1249 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1250 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1251 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1252 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1253 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1254 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1255 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1256 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1257 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1258 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1259 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1260 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1261 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1262 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1263 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1264 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1265 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1266 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1267 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1268 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1269 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1270 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1271 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1272 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1273 364.00000000000006
constrain score by whole: 0
Epoch: [48][  26/  26]	Loss 0.001 (0.005)	train_nll   0.24 (  0.24)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.88 (  0.89)	train_minacc   0.80 (  0.74)	train_majacc   0.89 (  0.92)	train_corr   0.00 (  0.00)	l1 22.6201 (22.7080)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 19%|#9        | 5/26 [00:00<00:00, 23.19it/s] 38%|###8      | 10/26 [00:00<00:00, 33.60it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.60it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.62it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.62it/s] 96%|#########6| 25/26 [00:00<00:00, 40.96it/s]100%|##########| 26/26 [00:00<00:00, 34.00it/s]
Test: [   0/  26]	Loss 0.248 (0.248)	test_acc   0.88 (  0.88)	test_minacc   0.86 (  0.86)	test_majacc   0.89 (  0.89)	Loss_d 0.248 (0.248)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.289 (0.266)	test_acc   0.86 (  0.87)	test_minacc   0.79 (  0.84)	test_majacc   0.87 (  0.88)	Loss_d 0.289 (0.266)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.79 (  0.84)	test_majacc_d   0.87 (  0.88)	test_corr_d   0.64 (  0.66)
Test: [  20/  26]	Loss 0.296 (0.265)	test_acc   0.85 (  0.87)	test_minacc   0.80 (  0.85)	test_majacc   0.86 (  0.88)	Loss_d 0.296 (0.265)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.80 (  0.85)	test_majacc_d   0.86 (  0.88)	test_corr_d   0.63 (  0.65)
Test: [  26/  26]	Loss 0.233 (0.260)	test_acc   0.88 (  0.87)	test_minacc   0.87 (  0.85)	test_majacc   0.88 (  0.88)	Loss_d 0.233 (0.260)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.87 (  0.85)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.72 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.59it/s]
Test: [  0/  1]	Loss 2.267 (2.267)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.93 (  0.93)	Loss_d 2.267 (2.267)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 2.267 (2.267)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.93 (  0.93)	Loss_d 2.267 (2.267)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.45 (  0.45)
Overall Timing[ 48/  1]	epoch_time 0.0460 (0.0447)	validation_time 0.0005 (0.0006)	train_time 0.0455 (0.0440)
record: (train_acc, test_acc) (0.8526000242829322, 0.4700000286102295)
last accs (train_acc, test_acc) (0.8744000272750855, 0.42500001192092896)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.62it/s] 12%|#1        | 3/26 [00:00<00:02,  9.44it/s] 23%|##3       | 6/26 [00:00<00:01, 15.18it/s] 35%|###4      | 9/26 [00:00<00:00, 18.60it/s] 46%|####6     | 12/26 [00:00<00:00, 21.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 22.21it/s] 69%|######9   | 18/26 [00:00<00:00, 23.67it/s] 81%|########  | 21/26 [00:01<00:00, 24.81it/s] 92%|#########2| 24/26 [00:01<00:00, 25.86it/s]100%|##########| 26/26 [00:01<00:00, 20.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1274 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1275 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1276 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1277 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1278 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1279 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1280 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1281 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1282 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1283 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1284 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1285 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1286 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1287 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1288 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1289 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1290 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1291 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1292 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1293 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1294 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1295 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1296 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1297 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1298 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1299 364.00000000000006
constrain score by whole: 0
Epoch: [49][  26/  26]	Loss 0.001 (0.002)	train_nll   0.25 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.87 (  0.88)	train_minacc   0.83 (  0.81)	train_majacc   0.88 (  0.89)	train_corr   0.00 (  0.00)	l1 22.6039 (22.6101)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.40it/s] 27%|##6       | 7/26 [00:00<00:00, 29.91it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.91it/s] 46%|####6     | 12/26 [00:00<00:00, 36.99it/s] 65%|######5   | 17/26 [00:00<00:00, 40.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.41it/s] 85%|########4 | 22/26 [00:00<00:00, 39.02it/s]100%|##########| 26/26 [00:00<00:00, 35.91it/s]
Test: [   0/  26]	Loss 0.252 (0.252)	test_acc   0.89 (  0.89)	test_minacc   0.81 (  0.81)	test_majacc   0.91 (  0.91)	Loss_d 0.252 (0.252)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.307 (0.264)	test_acc   0.87 (  0.88)	test_minacc   0.70 (  0.76)	test_majacc   0.90 (  0.90)	Loss_d 0.307 (0.264)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.70 (  0.76)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.68 (  0.70)
Test: [  20/  26]	Loss 0.267 (0.266)	test_acc   0.88 (  0.88)	test_minacc   0.85 (  0.78)	test_majacc   0.89 (  0.90)	Loss_d 0.267 (0.266)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.85 (  0.78)	test_majacc_d   0.89 (  0.90)	test_corr_d   0.65 (  0.68)
Test: [  26/  26]	Loss 0.285 (0.263)	test_acc   0.85 (  0.88)	test_minacc   0.77 (  0.79)	test_majacc   0.86 (  0.90)	Loss_d 0.285 (0.263)	test_acc_d   0.85 (  0.88)	test_minacc_d   0.77 (  0.79)	test_majacc_d   0.86 (  0.90)	test_corr_d   0.69 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.67it/s]
Test: [  0/  1]	Loss 2.520 (2.520)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.89 (  0.89)	Loss_d 2.520 (2.520)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 2.520 (2.520)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.89 (  0.89)	Loss_d 2.520 (2.520)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.49 (  0.49)
Overall Timing[ 49/  1]	epoch_time 0.0476 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0471 (0.0441)
record: (train_acc, test_acc) (0.8526000242829322, 0.4700000286102295)
last accs (train_acc, test_acc) (0.8817000231742859, 0.38600000739097595)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.160 MB of 0.160 MB uploadedwandb: \ 0.160 MB of 0.160 MB uploadedwandb: | 0.160 MB of 0.160 MB uploadedwandb: / 0.160 MB of 0.160 MB uploadedwandb: - 0.160 MB of 0.160 MB uploadedwandb: \ 0.160 MB of 0.160 MB uploadedwandb: | 0.160 MB of 0.160 MB uploadedwandb: / 0.160 MB of 0.160 MB uploadedwandb: - 0.160 MB of 0.160 MB uploadedwandb: \ 0.160 MB of 0.160 MB uploadedwandb: | 0.037 MB of 0.577 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/diagnostics/epoch_time_val █▂▂▁▂▁▂▁▂▂▁▂▂▂▂▁▂▂▂▁▁▂▁▁▁▂▃▁▂▂▁▂▂▁▁▂▂▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/diagnostics/train_time_val █▂▂▁▃▂▂▁▃▂▁▂▂▃▂▂▂▂▂▁▁▃▁▂▁▂▃▂▂▂▁▂▂▁▁▂▂▂▂▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/Loss_avg ▁▂▄▅▃▃▄▆▇█▇▇▅▃▃▃▄▃▃▃▂▃▃▂▂▂▃▃▃▂▁▂▂▂▂▂▁▁▁▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/Loss_d_avg ▁▂▄▅▃▃▄▆▇█▇▇▅▃▃▃▄▃▃▃▂▃▃▂▂▂▃▃▃▂▁▂▂▂▂▂▁▁▁▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/Loss_d_val ▁▂▄▅▃▃▄▆▇█▇▇▅▃▃▃▄▃▃▃▂▃▃▂▂▂▃▃▃▂▁▂▂▂▂▂▁▁▁▂
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/Loss_val ▁▂▄▅▃▃▄▆▇█▇▇▅▃▃▃▄▃▃▃▂▃▃▂▂▂▃▃▃▂▁▂▂▂▂▂▁▁▁▂
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_acc_avg ▁▁▁▂▄▅▄▃▄▃▄▅▃▅▅▄▄▆▅▅▆▅▄▅▆▆▅▅▄▆▆▅▅▅▆▆█▇▇▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_acc_d_avg ▁▁▁▂▄▅▄▃▄▃▄▅▃▅▅▄▄▆▅▅▆▅▄▅▆▆▅▅▄▆▆▅▅▅▆▆█▇▇▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_acc_d_val ▁▁▁▂▄▅▄▃▄▃▄▅▃▅▅▄▄▆▅▅▆▅▄▅▆▆▅▅▄▆▆▅▅▅▆▆█▇▇▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_acc_val ▁▁▁▂▄▅▄▃▄▃▄▅▃▅▅▄▄▆▅▅▆▅▄▅▆▆▅▅▄▆▆▅▅▅▆▆█▇▇▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_corr_d_avg ███▇▆▄▅▆▆▆▅▄▆▄▄▅▅▃▄▅▃▄▅▄▃▃▄▄▅▄▄▅▄▄▃▃▁▁▂▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_corr_d_val ███▇▆▄▅▆▆▆▅▄▆▄▄▅▅▃▄▅▃▄▅▄▃▃▄▄▅▄▄▅▄▄▃▃▁▁▂▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_majacc_avg ████▇▆▆▆▇▇▇▆▆▆▅▆█▄▆▅▅▅▇▅▅▅▄▅▇▆▅▆▃▅▃▄▃▁▄▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_majacc_d_avg ████▇▆▆▆▇▇▇▆▆▆▅▆█▄▆▅▅▅▇▅▅▅▄▅▇▆▅▆▃▅▃▄▃▁▄▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_majacc_d_val ████▇▆▆▆▇▇▇▆▆▆▅▆█▄▆▅▅▅▇▅▅▅▄▅▇▆▅▆▃▅▃▄▃▁▄▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_majacc_val ████▇▆▆▆▇▇▇▆▆▆▅▆█▄▆▅▅▅▇▅▅▅▄▅▇▆▅▆▃▅▃▄▃▁▄▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_minacc_avg ▁▁▁▂▄▅▄▃▄▃▄▅▃▅▅▄▄▆▅▅▆▅▄▅▆▆▅▅▄▅▆▅▅▅▆▆██▇▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_minacc_d_avg ▁▁▁▂▄▅▄▃▄▃▄▅▃▅▅▄▄▆▅▅▆▅▄▅▆▆▅▅▄▅▆▅▅▅▆▆██▇▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_minacc_d_val ▁▁▁▂▄▅▄▃▄▃▄▅▃▅▅▄▄▆▅▅▆▅▄▅▆▆▅▅▄▅▆▅▅▅▆▆██▇▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_minacc_val ▁▁▁▂▄▅▄▃▄▃▄▅▃▅▅▄▄▆▅▅▆▅▄▅▆▆▅▅▄▅▆▅▅▅▆▆██▇▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/Loss_avg █▆▅▄▄▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/Loss_val █▆▄▂▄▂▂▃▁▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/l1_avg █▇▆▆▆▅▅▅▅▅▅▅▅▄▄▄▄▄▄▄▄▄▄▃▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/l1_val █▇▇▇▆▆▅▅▅▆▅▅▅▅▅▅▄▄▄▄▄▄▄▄▄▄▄▄▄▄▃▃▃▃▃▃▂▂▂▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_acc_avg ▁▃▄▅▅▆▆▇▇███▇▆▆▆▆▆▆▆▆▆▆▅▅▅▅▆▆▅▅▅▅▄▄▅▄▄▄▃
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_acc_val ▃▃▆▇▆▇█▆█▇███▄▅▅▇▆▆▆▅▅▆▅▃▆▅▅▄▅▂▆▃▂▃▄▁▂▁▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_majacc_avg ▅▇▆▇▆▇▇▇▇███▇▆▆▅▆▆▅▅▅▅▅▄▄▄▄▅▅▄▃▅▃▂▃▃▂▂▂▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_majacc_val ████▆▇███████▄▅▅▇▆▆▅▆▆▇▅▄▆▆▆▅▅▁▆▄▂▃▅▁▁▁▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_minacc_avg ▁▂▃▅▅▆▇▇█████▇▇▇█▇█▇▇▇▇▇▇▇▇▇▇▇▇▆▇▇▇▇▆▇▆▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_minacc_val ▁▂▅▇███▆█▇█████▇▇█▇██▇▇▇▇▇▇▇▇▇█▇▇▇▇▇▇█▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_nll_avg █▆▅▄▄▃▂▂▁▁▁▁▂▃▃▃▂▂▃▃▃▃▃▃▃▃▃▃▃▃▄▄▄▄▄▄▄▄▄▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_nll_val █▆▄▂▄▂▂▃▁▃▁▁▂▅▄▄▃▄▄▄▃▄▄▅▆▄▄▅▅▄▇▄▅▆▆▅█▆▇▆
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_penalty_avg █▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_penalty_val █▄▂▁▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/weight_norm_avg ▁▂▂▃▄▄▅▅▆▆▆▇▇▇▇▇▇▇▇▇▇▇██████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/weight_norm_val ▁▁▂▂▃▄▄▅▆▆▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇█████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/diagnostics/epoch_time_val 0.04762
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/diagnostics/train_time_val 0.04714
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/diagnostics/validation_time_val 0.00044
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/Loss_avg 2.51957
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/Loss_d_avg 2.51957
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/Loss_d_val 2.51957
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/Loss_val 2.51957
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_acc_avg 0.386
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_acc_d_avg 0.386
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_acc_d_val 0.386
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_acc_val 0.386
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_corr_d_avg 0.49489
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_corr_d_val 0.49489
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_majacc_avg 0.89
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_majacc_d_avg 0.89
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_majacc_d_val 0.89
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_majacc_val 0.89
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_minacc_avg 0.33
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_minacc_d_avg 0.33
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_minacc_d_val 0.33
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/test/test_minacc_val 0.33
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/Loss_avg 0.00164
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/Loss_val 0.00079
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/l1_avg 22.61007
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/l1_val 22.60395
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_acc_avg 0.8752
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_acc_val 0.872
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_majacc_avg 0.88669
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_majacc_val 0.87727
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_minacc_avg 0.80982
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_minacc_val 0.83333
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_nll_avg 0.27281
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_nll_val 0.24935
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_penalty_avg 0.00161
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/train_penalty_val 0.00076
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/weight_norm_avg 9.87107
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/weight_norm_val 9.87163
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/63/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/861094uc
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_190025-861094uc/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_190329-n1uc369c
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/n1uc369c
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=10, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1153
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6005, 3, 32, 32) (5995, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:45,  1.83s/it] 15%|#5        | 4/26 [00:01<00:08,  2.67it/s] 27%|##6       | 7/26 [00:02<00:03,  5.19it/s] 38%|###8      | 10/26 [00:02<00:01,  8.07it/s] 50%|#####     | 13/26 [00:02<00:01, 11.12it/s] 62%|######1   | 16/26 [00:02<00:00, 14.26it/s] 73%|#######3  | 19/26 [00:02<00:00, 17.21it/s] 85%|########4 | 22/26 [00:02<00:00, 19.95it/s] 96%|#########6| 25/26 [00:02<00:00, 21.87it/s]100%|##########| 26/26 [00:03<00:00,  8.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.446 (0.583)	train_nll   0.45 (  0.58)	train_penalty   0.09 (  0.32)	weight_norm   9.66 (  9.63)	train_acc   0.82 (  0.79)	train_minacc   0.00 (  0.14)	train_majacc   0.98 (  0.91)	train_corr   0.00 (  0.00)	l1 23.8996 (24.4297)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.14it/s] 27%|##6       | 7/26 [00:00<00:00, 27.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.20it/s] 46%|####6     | 12/26 [00:00<00:00, 34.75it/s] 65%|######5   | 17/26 [00:00<00:00, 39.19it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.19it/s] 85%|########4 | 22/26 [00:00<00:00, 39.44it/s]100%|##########| 26/26 [00:00<00:00, 34.84it/s]
Test: [   0/  26]	Loss 0.425 (0.425)	test_acc   0.85 (  0.85)	test_minacc   0.12 (  0.12)	test_majacc   0.98 (  0.98)	Loss_d 0.425 (0.425)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.430 (0.405)	test_acc   0.84 (  0.85)	test_minacc   0.14 (  0.12)	test_majacc   0.96 (  0.97)	Loss_d 0.430 (0.405)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.14 (  0.12)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.90 (  0.92)
Test: [  20/  26]	Loss 0.402 (0.397)	test_acc   0.83 (  0.85)	test_minacc   0.12 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 0.402 (0.397)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.12 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.92)
Test: [  26/  26]	Loss 0.407 (0.392)	test_acc   0.84 (  0.85)	test_minacc   0.03 (  0.14)	test_majacc   0.99 (  0.97)	Loss_d 0.407 (0.392)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.03 (  0.14)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.94 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.45it/s]100%|##########| 1/1 [00:00<00:00,  2.45it/s]
Test: [  0/  1]	Loss 1.719 (1.719)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.93 (  0.93)	Loss_d 1.719 (1.719)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.87 (  0.87)
Test: [  1/  1]	Loss 1.719 (1.719)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.93 (  0.93)	Loss_d 1.719 (1.719)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.87 (  0.87)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/64/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0962 (0.0962)	validation_time 0.0069 (0.0069)	train_time 0.0754 (0.0754)
record: (train_acc, test_acc) (0.848700025677681, 0.1680000126361847)
last accs (train_acc, test_acc) (0.848700025677681, 0.1680000126361847)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.35it/s] 15%|#5        | 4/26 [00:00<00:01, 15.66it/s] 27%|##6       | 7/26 [00:00<00:00, 20.22it/s] 38%|###8      | 10/26 [00:00<00:00, 23.17it/s] 50%|#####     | 13/26 [00:00<00:00, 24.31it/s] 62%|######1   | 16/26 [00:00<00:00, 25.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.39it/s] 88%|########8 | 23/26 [00:00<00:00, 27.89it/s]100%|##########| 26/26 [00:01<00:00, 23.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.330 (0.370)	train_nll   0.33 (  0.37)	train_penalty   0.02 (  0.04)	weight_norm   9.67 (  9.67)	train_acc   0.87 (  0.85)	train_minacc   0.25 (  0.14)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 23.6039 (23.7058)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.19it/s] 19%|#9        | 5/26 [00:00<00:00, 24.10it/s] 38%|###8      | 10/26 [00:00<00:00, 31.15it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.15it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.31it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.14it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.14it/s] 96%|#########6| 25/26 [00:00<00:00, 41.98it/s]100%|##########| 26/26 [00:00<00:00, 34.27it/s]
Test: [   0/  26]	Loss 0.325 (0.325)	test_acc   0.88 (  0.88)	test_minacc   0.24 (  0.24)	test_majacc   0.99 (  0.99)	Loss_d 0.325 (0.325)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.273 (0.284)	test_acc   0.90 (  0.89)	test_minacc   0.41 (  0.37)	test_majacc   0.99 (  0.98)	Loss_d 0.273 (0.284)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.41 (  0.37)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.299 (0.280)	test_acc   0.88 (  0.89)	test_minacc   0.34 (  0.39)	test_majacc   0.99 (  0.98)	Loss_d 0.299 (0.280)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.34 (  0.39)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.281 (0.277)	test_acc   0.88 (  0.90)	test_minacc   0.35 (  0.40)	test_majacc   0.99 (  0.98)	Loss_d 0.281 (0.277)	test_acc_d   0.88 (  0.90)	test_minacc_d   0.35 (  0.40)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.88 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.89it/s]
Test: [  0/  1]	Loss 1.534 (1.534)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.96 (  0.96)	Loss_d 1.534 (1.534)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.534 (1.534)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.96 (  0.96)	Loss_d 1.534 (1.534)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/64/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0439 (0.0700)	validation_time 0.0005 (0.0037)	train_time 0.0434 (0.0594)
record: (train_acc, test_acc) (0.8953000239133835, 0.21300001442432404)
last accs (train_acc, test_acc) (0.8953000239133835, 0.21300001442432404)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.79it/s] 15%|#5        | 4/26 [00:00<00:02, 10.50it/s] 27%|##6       | 7/26 [00:00<00:01, 15.57it/s] 38%|###8      | 10/26 [00:00<00:00, 18.98it/s] 50%|#####     | 13/26 [00:00<00:00, 21.53it/s] 62%|######1   | 16/26 [00:00<00:00, 23.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.46it/s] 85%|########4 | 22/26 [00:01<00:00, 26.53it/s] 96%|#########6| 25/26 [00:01<00:00, 27.20it/s]100%|##########| 26/26 [00:01<00:00, 20.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.128 (0.270)	train_nll   0.13 (  0.27)	train_penalty   0.01 (  0.02)	weight_norm   9.68 (  9.67)	train_acc   0.97 (  0.89)	train_minacc   0.88 (  0.42)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 23.6297 (23.5994)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.43it/s] 23%|##3       | 6/26 [00:00<00:00, 31.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.82it/s] 42%|####2     | 11/26 [00:00<00:00, 38.26it/s] 62%|######1   | 16/26 [00:00<00:00, 41.14it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.14it/s] 81%|########  | 21/26 [00:00<00:00, 38.82it/s]100%|##########| 26/26 [00:00<00:00, 41.55it/s]100%|##########| 26/26 [00:00<00:00, 36.14it/s]
Test: [   0/  26]	Loss 0.190 (0.190)	test_acc   0.91 (  0.91)	test_minacc   0.48 (  0.48)	test_majacc   0.99 (  0.99)	Loss_d 0.190 (0.190)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.151 (0.161)	test_acc   0.93 (  0.94)	test_minacc   0.64 (  0.69)	test_majacc   0.98 (  0.98)	Loss_d 0.151 (0.161)	test_acc_d   0.93 (  0.94)	test_minacc_d   0.64 (  0.69)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.81)
Test: [  20/  26]	Loss 0.132 (0.152)	test_acc   0.96 (  0.94)	test_minacc   0.77 (  0.72)	test_majacc   0.99 (  0.98)	Loss_d 0.132 (0.152)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.77 (  0.72)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.78 (  0.80)
Test: [  26/  26]	Loss 0.080 (0.143)	test_acc   0.99 (  0.95)	test_minacc   0.93 (  0.75)	test_majacc   1.00 (  0.99)	Loss_d 0.080 (0.143)	test_acc_d   0.99 (  0.95)	test_minacc_d   0.93 (  0.75)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.75 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.65it/s]
Test: [  0/  1]	Loss 2.195 (2.195)	test_acc   0.25 (  0.25)	test_minacc   0.18 (  0.18)	test_majacc   0.91 (  0.91)	Loss_d 2.195 (2.195)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 2.195 (2.195)	test_acc   0.25 (  0.25)	test_minacc   0.18 (  0.18)	test_majacc   0.91 (  0.91)	Loss_d 2.195 (2.195)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.72 (  0.72)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/64/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0461 (0.0620)	validation_time 0.0004 (0.0026)	train_time 0.0457 (0.0548)
record: (train_acc, test_acc) (0.9504000189304351, 0.2510000169277191)
last accs (train_acc, test_acc) (0.9504000189304351, 0.2510000169277191)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 15%|#5        | 4/26 [00:00<00:01, 18.15it/s] 27%|##6       | 7/26 [00:00<00:00, 22.25it/s] 38%|###8      | 10/26 [00:00<00:00, 24.97it/s] 50%|#####     | 13/26 [00:00<00:00, 26.47it/s] 62%|######1   | 16/26 [00:00<00:00, 26.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.16it/s] 88%|########8 | 23/26 [00:00<00:00, 28.06it/s]100%|##########| 26/26 [00:01<00:00, 24.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.081 (0.176)	train_nll   0.08 (  0.18)	train_penalty   0.01 (  0.01)	weight_norm   9.69 (  9.68)	train_acc   0.98 (  0.93)	train_minacc   0.93 (  0.69)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 23.7390 (23.6969)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.35it/s] 23%|##3       | 6/26 [00:00<00:00, 21.17it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.17it/s] 42%|####2     | 11/26 [00:00<00:00, 29.86it/s] 62%|######1   | 16/26 [00:00<00:00, 35.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.59it/s] 81%|########  | 21/26 [00:00<00:00, 35.69it/s]100%|##########| 26/26 [00:00<00:00, 39.22it/s]100%|##########| 26/26 [00:00<00:00, 30.13it/s]
Test: [   0/  26]	Loss 0.148 (0.148)	test_acc   0.94 (  0.94)	test_minacc   0.81 (  0.81)	test_majacc   0.96 (  0.96)	Loss_d 0.148 (0.148)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.120 (0.138)	test_acc   0.95 (  0.95)	test_minacc   0.86 (  0.86)	test_majacc   0.97 (  0.96)	Loss_d 0.120 (0.138)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.72 (  0.71)
Test: [  20/  26]	Loss 0.112 (0.135)	test_acc   0.95 (  0.95)	test_minacc   0.92 (  0.87)	test_majacc   0.96 (  0.96)	Loss_d 0.112 (0.135)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.92 (  0.87)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.66 (  0.70)
Test: [  26/  26]	Loss 0.040 (0.126)	test_acc   1.00 (  0.95)	test_minacc   1.00 (  0.89)	test_majacc   1.00 (  0.96)	Loss_d 0.040 (0.126)	test_acc_d   1.00 (  0.95)	test_minacc_d   1.00 (  0.89)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.68 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.93it/s]
Test: [  0/  1]	Loss 2.407 (2.407)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.90 (  0.90)	Loss_d 2.407 (2.407)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 2.407 (2.407)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.90 (  0.90)	Loss_d 2.407 (2.407)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.53 (  0.53)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/64/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0453 (0.0579)	validation_time 0.0005 (0.0021)	train_time 0.0448 (0.0523)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.17it/s] 15%|#5        | 4/26 [00:00<00:01, 15.09it/s] 27%|##6       | 7/26 [00:00<00:00, 19.86it/s] 38%|###8      | 10/26 [00:00<00:00, 23.11it/s] 50%|#####     | 13/26 [00:00<00:00, 25.01it/s] 62%|######1   | 16/26 [00:00<00:00, 26.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.00it/s] 85%|########4 | 22/26 [00:00<00:00, 27.49it/s] 96%|#########6| 25/26 [00:01<00:00, 27.96it/s]100%|##########| 26/26 [00:01<00:00, 23.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.234 (0.211)	train_nll   0.23 (  0.21)	train_penalty   0.01 (  0.02)	weight_norm   9.71 (  9.70)	train_acc   0.92 (  0.92)	train_minacc   0.60 (  0.65)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 23.5778 (23.7189)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.03it/s] 27%|##6       | 7/26 [00:00<00:00, 22.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.96it/s] 46%|####6     | 12/26 [00:00<00:00, 30.86it/s] 65%|######5   | 17/26 [00:00<00:00, 33.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.98it/s] 81%|########  | 21/26 [00:00<00:00, 32.07it/s]100%|##########| 26/26 [00:00<00:00, 29.56it/s]
Test: [   0/  26]	Loss 0.220 (0.220)	test_acc   0.92 (  0.92)	test_minacc   0.59 (  0.59)	test_majacc   0.98 (  0.98)	Loss_d 0.220 (0.220)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.194 (0.202)	test_acc   0.94 (  0.93)	test_minacc   0.84 (  0.70)	test_majacc   0.96 (  0.97)	Loss_d 0.194 (0.202)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.84 (  0.70)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.75 (  0.79)
Test: [  20/  26]	Loss 0.141 (0.190)	test_acc   0.97 (  0.93)	test_minacc   0.86 (  0.74)	test_majacc   0.99 (  0.97)	Loss_d 0.141 (0.190)	test_acc_d   0.97 (  0.93)	test_minacc_d   0.86 (  0.74)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.75 (  0.76)
Test: [  26/  26]	Loss 0.147 (0.184)	test_acc   0.97 (  0.94)	test_minacc   0.85 (  0.76)	test_majacc   1.00 (  0.97)	Loss_d 0.147 (0.184)	test_acc_d   0.97 (  0.94)	test_minacc_d   0.85 (  0.76)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.77 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.76it/s]
Test: [  0/  1]	Loss 1.857 (1.857)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.96 (  0.96)	Loss_d 1.857 (1.857)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.857 (1.857)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.96 (  0.96)	Loss_d 1.857 (1.857)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Overall Timing[  4/  1]	epoch_time 0.0441 (0.0551)	validation_time 0.0004 (0.0017)	train_time 0.0437 (0.0506)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9374000203609466, 0.2600000202655792)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.85it/s] 15%|#5        | 4/26 [00:00<00:01, 12.97it/s] 27%|##6       | 7/26 [00:00<00:01, 18.54it/s] 38%|###8      | 10/26 [00:00<00:00, 21.97it/s] 50%|#####     | 13/26 [00:00<00:00, 24.23it/s] 62%|######1   | 16/26 [00:00<00:00, 25.83it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.40it/s] 85%|########4 | 22/26 [00:00<00:00, 26.75it/s] 96%|#########6| 25/26 [00:01<00:00, 26.66it/s]100%|##########| 26/26 [00:01<00:00, 21.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.087 (0.164)	train_nll   0.09 (  0.16)	train_penalty   0.00 (  0.01)	weight_norm   9.73 (  9.72)	train_acc   0.98 (  0.94)	train_minacc   0.85 (  0.72)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 23.4866 (23.5226)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.52it/s] 23%|##3       | 6/26 [00:00<00:00, 21.88it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.88it/s] 42%|####2     | 11/26 [00:00<00:00, 31.10it/s] 62%|######1   | 16/26 [00:00<00:00, 36.21it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.21it/s] 81%|########  | 21/26 [00:00<00:00, 36.86it/s]100%|##########| 26/26 [00:00<00:00, 39.76it/s]100%|##########| 26/26 [00:00<00:00, 30.85it/s]
Test: [   0/  26]	Loss 0.134 (0.134)	test_acc   0.94 (  0.94)	test_minacc   0.69 (  0.69)	test_majacc   0.98 (  0.98)	Loss_d 0.134 (0.134)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.083 (0.113)	test_acc   0.97 (  0.96)	test_minacc   0.91 (  0.83)	test_majacc   0.98 (  0.98)	Loss_d 0.083 (0.113)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.91 (  0.83)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.77)
Test: [  20/  26]	Loss 0.073 (0.104)	test_acc   0.98 (  0.96)	test_minacc   0.92 (  0.85)	test_majacc   0.99 (  0.98)	Loss_d 0.073 (0.104)	test_acc_d   0.98 (  0.96)	test_minacc_d   0.92 (  0.85)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.70 (  0.74)
Test: [  26/  26]	Loss 0.047 (0.098)	test_acc   1.00 (  0.97)	test_minacc   0.98 (  0.87)	test_majacc   1.00 (  0.99)	Loss_d 0.047 (0.098)	test_acc_d   1.00 (  0.97)	test_minacc_d   0.98 (  0.87)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.77it/s]
Test: [  0/  1]	Loss 2.908 (2.908)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.94 (  0.94)	Loss_d 2.908 (2.908)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.70 (  0.70)
Test: [  1/  1]	Loss 2.908 (2.908)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.94 (  0.94)	Loss_d 2.908 (2.908)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.70 (  0.70)
Overall Timing[  5/  1]	epoch_time 0.0449 (0.0534)	validation_time 0.0005 (0.0015)	train_time 0.0444 (0.0496)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9681000264286995, 0.2550000250339508)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.84it/s] 19%|#9        | 5/26 [00:00<00:00, 21.17it/s] 31%|###       | 8/26 [00:00<00:00, 24.71it/s] 42%|####2     | 11/26 [00:00<00:00, 26.23it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.40it/s] 65%|######5   | 17/26 [00:00<00:00, 27.97it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.54it/s] 88%|########8 | 23/26 [00:00<00:00, 28.38it/s]100%|##########| 26/26 [00:00<00:00, 28.72it/s]100%|##########| 26/26 [00:01<00:00, 25.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.121 (0.119)	train_nll   0.12 (  0.12)	train_penalty   0.00 (  0.00)	weight_norm   9.75 (  9.74)	train_acc   0.95 (  0.95)	train_minacc   0.70 (  0.81)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 23.4506 (23.4898)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.47it/s] 19%|#9        | 5/26 [00:00<00:00, 25.14it/s] 38%|###8      | 10/26 [00:00<00:00, 32.30it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.30it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.88it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.32it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.32it/s] 96%|#########6| 25/26 [00:00<00:00, 42.64it/s]100%|##########| 26/26 [00:00<00:00, 35.05it/s]
Test: [   0/  26]	Loss 0.149 (0.149)	test_acc   0.95 (  0.95)	test_minacc   0.69 (  0.69)	test_majacc   0.99 (  0.99)	Loss_d 0.149 (0.149)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.183 (0.142)	test_acc   0.93 (  0.95)	test_minacc   0.62 (  0.71)	test_majacc   0.98 (  0.98)	Loss_d 0.183 (0.142)	test_acc_d   0.93 (  0.95)	test_minacc_d   0.62 (  0.71)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.80)
Test: [  20/  26]	Loss 0.089 (0.137)	test_acc   0.97 (  0.95)	test_minacc   0.86 (  0.74)	test_majacc   0.99 (  0.99)	Loss_d 0.089 (0.137)	test_acc_d   0.97 (  0.95)	test_minacc_d   0.86 (  0.74)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.78)
Test: [  26/  26]	Loss 0.034 (0.123)	test_acc   0.99 (  0.95)	test_minacc   0.95 (  0.77)	test_majacc   1.00 (  0.99)	Loss_d 0.034 (0.123)	test_acc_d   0.99 (  0.95)	test_minacc_d   0.95 (  0.77)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.99it/s]
Test: [  0/  1]	Loss 3.979 (3.979)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.94 (  0.94)	Loss_d 3.979 (3.979)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 3.979 (3.979)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.94 (  0.94)	Loss_d 3.979 (3.979)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.69 (  0.69)
Overall Timing[  6/  1]	epoch_time 0.0456 (0.0523)	validation_time 0.0005 (0.0014)	train_time 0.0451 (0.0489)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9540000270605087, 0.2750000059604645)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.89it/s] 15%|#5        | 4/26 [00:00<00:01, 19.51it/s] 27%|##6       | 7/26 [00:00<00:00, 23.46it/s] 38%|###8      | 10/26 [00:00<00:00, 25.61it/s] 50%|#####     | 13/26 [00:00<00:00, 26.68it/s] 65%|######5   | 17/26 [00:00<00:00, 27.84it/s] 81%|########  | 21/26 [00:00<00:00, 28.43it/s] 92%|#########2| 24/26 [00:00<00:00, 28.41it/s]100%|##########| 26/26 [00:01<00:00, 25.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.061 (0.135)	train_nll   0.06 (  0.13)	train_penalty   0.00 (  0.00)	weight_norm   9.76 (  9.75)	train_acc   0.99 (  0.95)	train_minacc   0.98 (  0.81)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 23.3310 (23.3888)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 27%|##6       | 7/26 [00:00<00:00, 33.73it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.73it/s] 46%|####6     | 12/26 [00:00<00:00, 39.97it/s] 65%|######5   | 17/26 [00:00<00:00, 41.17it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.17it/s] 85%|########4 | 22/26 [00:00<00:00, 40.73it/s]100%|##########| 26/26 [00:00<00:00, 36.88it/s]
Test: [   0/  26]	Loss 0.110 (0.110)	test_acc   0.96 (  0.96)	test_minacc   0.78 (  0.78)	test_majacc   0.99 (  0.99)	Loss_d 0.110 (0.110)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.125 (0.125)	test_acc   0.96 (  0.95)	test_minacc   0.75 (  0.72)	test_majacc   0.99 (  0.99)	Loss_d 0.125 (0.125)	test_acc_d   0.96 (  0.95)	test_minacc_d   0.75 (  0.72)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.80 (  0.81)
Test: [  20/  26]	Loss 0.136 (0.124)	test_acc   0.95 (  0.95)	test_minacc   0.77 (  0.73)	test_majacc   0.99 (  0.99)	Loss_d 0.136 (0.124)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.77 (  0.73)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.80)
Test: [  26/  26]	Loss 0.043 (0.116)	test_acc   0.99 (  0.95)	test_minacc   1.00 (  0.75)	test_majacc   0.99 (  0.99)	Loss_d 0.043 (0.116)	test_acc_d   0.99 (  0.95)	test_minacc_d   1.00 (  0.75)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.94it/s]
Test: [  0/  1]	Loss 3.776 (3.776)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.97 (  0.97)	Loss_d 3.776 (3.776)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.81 (  0.81)
Test: [  1/  1]	Loss 3.776 (3.776)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.97 (  0.97)	Loss_d 3.776 (3.776)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.81 (  0.81)
Overall Timing[  7/  1]	epoch_time 0.0399 (0.0507)	validation_time 0.0004 (0.0013)	train_time 0.0394 (0.0477)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9539000189304352, 0.21700000762939453)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 15%|#5        | 4/26 [00:00<00:01, 19.45it/s] 27%|##6       | 7/26 [00:00<00:00, 23.66it/s] 38%|###8      | 10/26 [00:00<00:00, 26.05it/s] 50%|#####     | 13/26 [00:00<00:00, 26.87it/s] 62%|######1   | 16/26 [00:00<00:00, 27.50it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.02it/s] 88%|########8 | 23/26 [00:00<00:00, 28.53it/s]100%|##########| 26/26 [00:00<00:00, 28.26it/s]100%|##########| 26/26 [00:01<00:00, 24.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.035 (0.082)	train_nll   0.04 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm   9.78 (  9.77)	train_acc   0.99 (  0.97)	train_minacc   0.95 (  0.88)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 23.3865 (23.3599)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.76it/s] 27%|##6       | 7/26 [00:00<00:00, 34.78it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.78it/s] 46%|####6     | 12/26 [00:00<00:00, 39.95it/s] 65%|######5   | 17/26 [00:00<00:00, 41.74it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.74it/s] 85%|########4 | 22/26 [00:00<00:00, 40.40it/s]100%|##########| 26/26 [00:00<00:00, 37.54it/s]
Test: [   0/  26]	Loss 0.108 (0.108)	test_acc   0.95 (  0.95)	test_minacc   0.74 (  0.74)	test_majacc   0.99 (  0.99)	Loss_d 0.108 (0.108)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.131 (0.095)	test_acc   0.96 (  0.97)	test_minacc   0.86 (  0.85)	test_majacc   0.98 (  0.99)	Loss_d 0.131 (0.095)	test_acc_d   0.96 (  0.97)	test_minacc_d   0.86 (  0.85)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.74 (  0.76)
Test: [  20/  26]	Loss 0.057 (0.086)	test_acc   0.98 (  0.97)	test_minacc   0.95 (  0.87)	test_majacc   0.99 (  0.99)	Loss_d 0.057 (0.086)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.95 (  0.87)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.68 (  0.74)
Test: [  26/  26]	Loss 0.008 (0.079)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.88)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.079)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.88)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.71it/s]
Test: [  0/  1]	Loss 4.477 (4.477)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.90 (  0.90)	Loss_d 4.477 (4.477)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 4.477 (4.477)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.90 (  0.90)	Loss_d 4.477 (4.477)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.61 (  0.61)
Overall Timing[  8/  1]	epoch_time 0.0426 (0.0498)	validation_time 0.0004 (0.0012)	train_time 0.0422 (0.0471)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9756000154018402, 0.2970000207424164)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.63it/s] 15%|#5        | 4/26 [00:00<00:01, 20.29it/s] 27%|##6       | 7/26 [00:00<00:00, 24.17it/s] 42%|####2     | 11/26 [00:00<00:00, 26.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.05it/s] 69%|######9   | 18/26 [00:00<00:00, 28.40it/s] 81%|########  | 21/26 [00:00<00:00, 28.53it/s] 96%|#########6| 25/26 [00:00<00:00, 28.84it/s]100%|##########| 26/26 [00:01<00:00, 25.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.031 (0.068)	train_nll   0.03 (  0.07)	train_penalty   0.00 (  0.00)	weight_norm   9.79 (  9.78)	train_acc   0.98 (  0.97)	train_minacc   0.93 (  0.90)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 23.4132 (23.3905)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.32it/s] 23%|##3       | 6/26 [00:00<00:00, 30.28it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.28it/s] 42%|####2     | 11/26 [00:00<00:00, 37.15it/s] 62%|######1   | 16/26 [00:00<00:00, 41.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.76it/s] 81%|########  | 21/26 [00:00<00:00, 40.05it/s]100%|##########| 26/26 [00:00<00:00, 42.55it/s]100%|##########| 26/26 [00:00<00:00, 35.76it/s]
Test: [   0/  26]	Loss 0.055 (0.055)	test_acc   0.98 (  0.98)	test_minacc   0.93 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.055 (0.055)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.054 (0.063)	test_acc   0.98 (  0.98)	test_minacc   0.91 (  0.88)	test_majacc   0.99 (  0.99)	Loss_d 0.054 (0.063)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.91 (  0.88)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.76)
Test: [  20/  26]	Loss 0.036 (0.061)	test_acc   0.99 (  0.98)	test_minacc   0.92 (  0.88)	test_majacc   1.00 (  1.00)	Loss_d 0.036 (0.061)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.92 (  0.88)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.75)
Test: [  26/  26]	Loss 0.008 (0.054)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.89)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.054)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.89)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.35it/s]
Test: [  0/  1]	Loss 5.148 (5.148)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.96 (  0.96)	Loss_d 5.148 (5.148)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.78 (  0.78)
Test: [  1/  1]	Loss 5.148 (5.148)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.96 (  0.96)	Loss_d 5.148 (5.148)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.78 (  0.78)
Overall Timing[  9/  1]	epoch_time 0.0430 (0.0492)	validation_time 0.0005 (0.0011)	train_time 0.0424 (0.0467)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9801000279188156, 0.2200000137090683)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.77it/s] 15%|#5        | 4/26 [00:00<00:01, 11.91it/s] 27%|##6       | 7/26 [00:00<00:01, 17.41it/s] 38%|###8      | 10/26 [00:00<00:00, 21.21it/s] 50%|#####     | 13/26 [00:00<00:00, 23.78it/s] 65%|######5   | 17/26 [00:00<00:00, 26.04it/s] 81%|########  | 21/26 [00:00<00:00, 27.53it/s] 92%|#########2| 24/26 [00:01<00:00, 27.86it/s]100%|##########| 26/26 [00:01<00:00, 21.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.040 (0.054)	train_nll   0.04 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm   9.80 (  9.79)	train_acc   0.99 (  0.98)	train_minacc   0.98 (  0.92)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 23.4350 (23.4268)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.64it/s] 27%|##6       | 7/26 [00:00<00:00, 33.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.20it/s] 46%|####6     | 12/26 [00:00<00:00, 39.15it/s] 65%|######5   | 17/26 [00:00<00:00, 41.96it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.96it/s] 85%|########4 | 22/26 [00:00<00:00, 39.98it/s]100%|##########| 26/26 [00:00<00:00, 37.00it/s]
Test: [   0/  26]	Loss 0.016 (0.016)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.016 (0.016)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.046 (0.042)	test_acc   0.98 (  0.98)	test_minacc   0.93 (  0.91)	test_majacc   0.99 (  1.00)	Loss_d 0.046 (0.042)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.93 (  0.91)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.74 (  0.75)
Test: [  20/  26]	Loss 0.016 (0.037)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.016 (0.037)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.73)
Test: [  26/  26]	Loss 0.007 (0.032)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.032)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.04it/s]
Test: [  0/  1]	Loss 4.995 (4.995)	test_acc   0.26 (  0.26)	test_minacc   0.19 (  0.19)	test_majacc   0.93 (  0.93)	Loss_d 4.995 (4.995)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.70 (  0.70)
Test: [  1/  1]	Loss 4.995 (4.995)	test_acc   0.26 (  0.26)	test_minacc   0.19 (  0.19)	test_majacc   0.93 (  0.93)	Loss_d 4.995 (4.995)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.70 (  0.70)
Overall Timing[ 10/  1]	epoch_time 0.0423 (0.0485)	validation_time 0.0004 (0.0010)	train_time 0.0418 (0.0462)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9886000401973725, 0.26100000739097595)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.45it/s] 15%|#5        | 4/26 [00:00<00:01, 16.40it/s] 27%|##6       | 7/26 [00:00<00:00, 20.66it/s] 38%|###8      | 10/26 [00:00<00:00, 23.08it/s] 50%|#####     | 13/26 [00:00<00:00, 24.79it/s] 62%|######1   | 16/26 [00:00<00:00, 25.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.88it/s] 85%|########4 | 22/26 [00:00<00:00, 27.34it/s] 96%|#########6| 25/26 [00:01<00:00, 27.50it/s]100%|##########| 26/26 [00:01<00:00, 23.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.021 (0.050)	train_nll   0.02 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm   9.81 (  9.80)	train_acc   0.99 (  0.98)	train_minacc   0.95 (  0.93)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 23.4446 (23.4460)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.48it/s] 23%|##3       | 6/26 [00:00<00:00, 26.81it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.81it/s] 42%|####2     | 11/26 [00:00<00:00, 34.55it/s] 62%|######1   | 16/26 [00:00<00:00, 38.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.89it/s] 81%|########  | 21/26 [00:00<00:00, 37.57it/s]100%|##########| 26/26 [00:00<00:00, 40.61it/s]100%|##########| 26/26 [00:00<00:00, 33.29it/s]
Test: [   0/  26]	Loss 0.041 (0.041)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.041 (0.041)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.045 (0.056)	test_acc   0.99 (  0.98)	test_minacc   0.91 (  0.89)	test_majacc   1.00 (  1.00)	Loss_d 0.045 (0.056)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.91 (  0.89)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.76)
Test: [  20/  26]	Loss 0.034 (0.051)	test_acc   0.98 (  0.98)	test_minacc   0.92 (  0.90)	test_majacc   1.00 (  1.00)	Loss_d 0.034 (0.051)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.92 (  0.90)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.74)
Test: [  26/  26]	Loss 0.008 (0.045)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.045)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.92it/s]
Test: [  0/  1]	Loss 5.149 (5.149)	test_acc   0.25 (  0.25)	test_minacc   0.18 (  0.18)	test_majacc   0.91 (  0.91)	Loss_d 5.149 (5.149)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 5.149 (5.149)	test_acc   0.25 (  0.25)	test_minacc   0.18 (  0.18)	test_majacc   0.91 (  0.91)	Loss_d 5.149 (5.149)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.71 (  0.71)
Overall Timing[ 11/  1]	epoch_time 0.0446 (0.0482)	validation_time 0.0004 (0.0010)	train_time 0.0442 (0.0460)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9845000323057175, 0.25300002098083496)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.06it/s] 19%|#9        | 5/26 [00:00<00:00, 22.70it/s] 31%|###       | 8/26 [00:00<00:00, 24.40it/s] 42%|####2     | 11/26 [00:00<00:00, 25.08it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.11it/s] 65%|######5   | 17/26 [00:00<00:00, 26.67it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.15it/s] 88%|########8 | 23/26 [00:00<00:00, 27.14it/s]100%|##########| 26/26 [00:00<00:00, 27.59it/s]100%|##########| 26/26 [00:01<00:00, 24.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.022 (0.046)	train_nll   0.02 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm   9.82 (  9.82)	train_acc   0.99 (  0.98)	train_minacc   0.98 (  0.93)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 23.4426 (23.4539)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.53it/s] 23%|##3       | 6/26 [00:00<00:00, 26.36it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.36it/s] 42%|####2     | 11/26 [00:00<00:00, 31.45it/s] 62%|######1   | 16/26 [00:00<00:00, 36.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.68it/s] 81%|########  | 21/26 [00:00<00:00, 39.33it/s]100%|##########| 26/26 [00:00<00:00, 33.78it/s]
Test: [   0/  26]	Loss 0.084 (0.084)	test_acc   0.96 (  0.96)	test_minacc   0.76 (  0.76)	test_majacc   0.99 (  0.99)	Loss_d 0.084 (0.084)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.103 (0.114)	test_acc   0.96 (  0.96)	test_minacc   0.82 (  0.77)	test_majacc   0.99 (  0.99)	Loss_d 0.103 (0.114)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.82 (  0.77)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.79)
Test: [  20/  26]	Loss 0.121 (0.126)	test_acc   0.96 (  0.96)	test_minacc   0.80 (  0.77)	test_majacc   1.00 (  0.99)	Loss_d 0.121 (0.126)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.80 (  0.77)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.76 (  0.77)
Test: [  26/  26]	Loss 0.009 (0.115)	test_acc   1.00 (  0.96)	test_minacc   1.00 (  0.79)	test_majacc   1.00 (  0.99)	Loss_d 0.009 (0.115)	test_acc_d   1.00 (  0.96)	test_minacc_d   1.00 (  0.79)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.83it/s]
Test: [  0/  1]	Loss 6.202 (6.202)	test_acc   0.20 (  0.20)	test_minacc   0.12 (  0.12)	test_majacc   0.96 (  0.96)	Loss_d 6.202 (6.202)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.82)
Test: [  1/  1]	Loss 6.202 (6.202)	test_acc   0.20 (  0.20)	test_minacc   0.12 (  0.12)	test_majacc   0.96 (  0.96)	Loss_d 6.202 (6.202)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.82)
Overall Timing[ 12/  1]	epoch_time 0.0450 (0.0480)	validation_time 0.0004 (0.0009)	train_time 0.0445 (0.0459)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9641000172495842, 0.20200000703334808)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.85it/s] 19%|#9        | 5/26 [00:00<00:01, 19.48it/s] 31%|###       | 8/26 [00:00<00:00, 22.55it/s] 42%|####2     | 11/26 [00:00<00:00, 24.45it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.62it/s] 88%|########8 | 23/26 [00:00<00:00, 28.88it/s]100%|##########| 26/26 [00:01<00:00, 24.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.023 (0.053)	train_nll   0.02 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm   9.84 (  9.83)	train_acc   0.99 (  0.98)	train_minacc   1.00 (  0.93)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 23.4119 (23.4277)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.55it/s] 23%|##3       | 6/26 [00:00<00:00, 24.52it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.52it/s] 42%|####2     | 11/26 [00:00<00:00, 32.63it/s] 62%|######1   | 16/26 [00:00<00:00, 37.84it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.84it/s] 81%|########  | 21/26 [00:00<00:00, 38.19it/s]100%|##########| 26/26 [00:00<00:00, 41.28it/s]100%|##########| 26/26 [00:00<00:00, 32.18it/s]
Test: [   0/  26]	Loss 0.039 (0.039)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.039 (0.039)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.102 (0.082)	test_acc   0.96 (  0.97)	test_minacc   0.86 (  0.90)	test_majacc   0.98 (  0.98)	Loss_d 0.102 (0.082)	test_acc_d   0.96 (  0.97)	test_minacc_d   0.86 (  0.90)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Test: [  20/  26]	Loss 0.094 (0.083)	test_acc   0.97 (  0.97)	test_minacc   0.86 (  0.90)	test_majacc   1.00 (  0.98)	Loss_d 0.094 (0.083)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.86 (  0.90)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.73 (  0.72)
Test: [  26/  26]	Loss 0.014 (0.076)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.91)	test_majacc   1.00 (  0.99)	Loss_d 0.014 (0.076)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.91)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.17it/s]
Test: [  0/  1]	Loss 5.025 (5.025)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.93 (  0.93)	Loss_d 5.025 (5.025)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.67 (  0.67)
Test: [  1/  1]	Loss 5.025 (5.025)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.93 (  0.93)	Loss_d 5.025 (5.025)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.67 (  0.67)
Overall Timing[ 13/  1]	epoch_time 0.0448 (0.0477)	validation_time 0.0004 (0.0009)	train_time 0.0443 (0.0458)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9745000166296959, 0.2760000228881836)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.89it/s] 12%|#1        | 3/26 [00:00<00:01, 14.94it/s] 23%|##3       | 6/26 [00:00<00:00, 20.45it/s] 35%|###4      | 9/26 [00:00<00:00, 23.05it/s] 46%|####6     | 12/26 [00:00<00:00, 24.29it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.74it/s] 69%|######9   | 18/26 [00:00<00:00, 25.56it/s] 81%|########  | 21/26 [00:00<00:00, 25.15it/s] 92%|#########2| 24/26 [00:01<00:00, 25.67it/s]100%|##########| 26/26 [00:01<00:00, 22.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.039 (0.059)	train_nll   0.04 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm   9.85 (  9.84)	train_acc   0.98 (  0.98)	train_minacc   0.95 (  0.92)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 23.3548 (23.3706)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.57it/s] 27%|##6       | 7/26 [00:00<00:00, 34.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.32it/s] 46%|####6     | 12/26 [00:00<00:00, 38.02it/s] 65%|######5   | 17/26 [00:00<00:00, 39.68it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.68it/s] 85%|########4 | 22/26 [00:00<00:00, 41.59it/s]100%|##########| 26/26 [00:00<00:00, 36.41it/s]
Test: [   0/  26]	Loss 0.023 (0.023)	test_acc   0.98 (  0.98)	test_minacc   0.91 (  0.91)	test_majacc   1.00 (  1.00)	Loss_d 0.023 (0.023)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.91 (  0.91)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.073 (0.032)	test_acc   0.98 (  0.99)	test_minacc   0.91 (  0.94)	test_majacc   0.99 (  1.00)	Loss_d 0.073 (0.032)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.91 (  0.94)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.75 (  0.74)
Test: [  20/  26]	Loss 0.029 (0.033)	test_acc   0.98 (  0.99)	test_minacc   0.89 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.029 (0.033)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.89 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.73)
Test: [  26/  26]	Loss 0.012 (0.030)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.030)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.13it/s]
Test: [  0/  1]	Loss 5.022 (5.022)	test_acc   0.29 (  0.29)	test_minacc   0.21 (  0.21)	test_majacc   0.96 (  0.96)	Loss_d 5.022 (5.022)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.68 (  0.68)
Test: [  1/  1]	Loss 5.022 (5.022)	test_acc   0.29 (  0.29)	test_minacc   0.21 (  0.21)	test_majacc   0.96 (  0.96)	Loss_d 5.022 (5.022)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.68 (  0.68)
Overall Timing[ 14/  1]	epoch_time 0.0437 (0.0475)	validation_time 0.0004 (0.0009)	train_time 0.0433 (0.0456)
record: (train_acc, test_acc) (0.9531000179052352, 0.3410000205039978)
last accs (train_acc, test_acc) (0.9894000424742698, 0.2850000262260437)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.68it/s] 12%|#1        | 3/26 [00:00<00:01, 11.86it/s] 23%|##3       | 6/26 [00:00<00:01, 18.02it/s] 35%|###4      | 9/26 [00:00<00:00, 21.07it/s] 46%|####6     | 12/26 [00:00<00:00, 23.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.13it/s] 69%|######9   | 18/26 [00:00<00:00, 25.07it/s] 81%|########  | 21/26 [00:00<00:00, 25.59it/s] 92%|#########2| 24/26 [00:01<00:00, 26.20it/s]100%|##########| 26/26 [00:01<00:00, 22.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0058, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(9.5780e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(3.2584e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.001 (0.023)	train_nll   0.10 (  0.10)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.85)	train_acc   0.95 (  0.96)	train_minacc   0.95 (  0.89)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 23.2876 (23.3399)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.60it/s] 31%|###       | 8/26 [00:00<00:00, 37.00it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.00it/s] 50%|#####     | 13/26 [00:00<00:00, 40.82it/s] 69%|######9   | 18/26 [00:00<00:00, 43.30it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.30it/s] 88%|########8 | 23/26 [00:00<00:00, 41.39it/s]100%|##########| 26/26 [00:00<00:00, 39.00it/s]
Test: [   0/  26]	Loss 0.134 (0.134)	test_acc   0.95 (  0.95)	test_minacc   0.90 (  0.90)	test_majacc   0.96 (  0.96)	Loss_d 0.134 (0.134)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.120 (0.106)	test_acc   0.96 (  0.96)	test_minacc   0.95 (  0.94)	test_majacc   0.96 (  0.96)	Loss_d 0.120 (0.106)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.95 (  0.94)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.69 (  0.68)
Test: [  20/  26]	Loss 0.084 (0.101)	test_acc   0.97 (  0.96)	test_minacc   0.92 (  0.95)	test_majacc   0.98 (  0.96)	Loss_d 0.084 (0.101)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.92 (  0.95)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.68 (  0.67)
Test: [  26/  26]	Loss 0.134 (0.102)	test_acc   0.94 (  0.96)	test_minacc   0.85 (  0.94)	test_majacc   0.96 (  0.96)	Loss_d 0.134 (0.102)	test_acc_d   0.94 (  0.96)	test_minacc_d   0.85 (  0.94)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.66 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.17it/s]
Test: [  0/  1]	Loss 2.941 (2.941)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.87 (  0.87)	Loss_d 2.941 (2.941)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 2.941 (2.941)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.87 (  0.87)	Loss_d 2.941 (2.941)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.39 (  0.39)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/64/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0454 (0.0473)	validation_time 0.0004 (0.0008)	train_time 0.0449 (0.0456)
record: (train_acc, test_acc) (0.9608000187873841, 0.39500001072883606)
last accs (train_acc, test_acc) (0.9608000187873841, 0.39500001072883606)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 12%|#1        | 3/26 [00:00<00:01, 11.79it/s] 23%|##3       | 6/26 [00:00<00:01, 18.08it/s] 35%|###4      | 9/26 [00:00<00:00, 21.33it/s] 46%|####6     | 12/26 [00:00<00:00, 23.68it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.84it/s] 69%|######9   | 18/26 [00:00<00:00, 25.88it/s] 81%|########  | 21/26 [00:00<00:00, 26.58it/s] 92%|#########2| 24/26 [00:01<00:00, 26.63it/s]100%|##########| 26/26 [00:01<00:00, 22.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0046, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(3.3069e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: tensor(1.0071e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.005 (0.002)	train_nll   0.21 (  0.17)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.91 (  0.93)	train_minacc   0.78 (  0.91)	train_majacc   0.93 (  0.94)	train_corr   0.00 (  0.00)	l1 23.2188 (23.2384)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.29it/s] 23%|##3       | 6/26 [00:00<00:00, 31.46it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.46it/s] 42%|####2     | 11/26 [00:00<00:00, 37.44it/s] 62%|######1   | 16/26 [00:00<00:00, 41.39it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.39it/s] 81%|########  | 21/26 [00:00<00:00, 39.33it/s]100%|##########| 26/26 [00:00<00:00, 41.88it/s]100%|##########| 26/26 [00:00<00:00, 35.74it/s]
Test: [   0/  26]	Loss 0.149 (0.149)	test_acc   0.93 (  0.93)	test_minacc   0.90 (  0.90)	test_majacc   0.94 (  0.94)	Loss_d 0.149 (0.149)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.152 (0.135)	test_acc   0.95 (  0.95)	test_minacc   0.84 (  0.90)	test_majacc   0.97 (  0.95)	Loss_d 0.152 (0.135)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.84 (  0.90)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.131 (0.143)	test_acc   0.94 (  0.94)	test_minacc   0.88 (  0.88)	test_majacc   0.95 (  0.96)	Loss_d 0.131 (0.143)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.67 (  0.69)
Test: [  26/  26]	Loss 0.156 (0.142)	test_acc   0.94 (  0.95)	test_minacc   0.85 (  0.88)	test_majacc   0.95 (  0.96)	Loss_d 0.156 (0.142)	test_acc_d   0.94 (  0.95)	test_minacc_d   0.85 (  0.88)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.68 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.49it/s]
Test: [  0/  1]	Loss 2.933 (2.933)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.85 (  0.85)	Loss_d 2.933 (2.933)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 2.933 (2.933)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.85 (  0.85)	Loss_d 2.933 (2.933)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.50 (  0.50)
Overall Timing[ 16/  1]	epoch_time 0.0441 (0.0471)	validation_time 0.0005 (0.0008)	train_time 0.0436 (0.0455)
record: (train_acc, test_acc) (0.9608000187873841, 0.39500001072883606)
last accs (train_acc, test_acc) (0.9453000195026398, 0.35500001907348633)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.98it/s] 12%|#1        | 3/26 [00:00<00:02,  9.61it/s] 23%|##3       | 6/26 [00:00<00:01, 15.79it/s] 35%|###4      | 9/26 [00:00<00:00, 19.53it/s] 46%|####6     | 12/26 [00:00<00:00, 22.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 23.68it/s] 69%|######9   | 18/26 [00:00<00:00, 25.01it/s] 81%|########  | 21/26 [00:01<00:00, 25.76it/s] 92%|#########2| 24/26 [00:01<00:00, 26.87it/s]100%|##########| 26/26 [00:01<00:00, 21.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0052, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(8.6384e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.001 (0.001)	train_nll   0.12 (  0.16)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.96 (  0.94)	train_minacc   0.90 (  0.87)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 23.1899 (23.1963)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.25it/s] 27%|##6       | 7/26 [00:00<00:00, 30.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.66it/s] 46%|####6     | 12/26 [00:00<00:00, 37.02it/s] 65%|######5   | 17/26 [00:00<00:00, 40.93it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.93it/s] 85%|########4 | 22/26 [00:00<00:00, 42.70it/s]100%|##########| 26/26 [00:00<00:00, 35.74it/s]
Test: [   0/  26]	Loss 0.135 (0.135)	test_acc   0.95 (  0.95)	test_minacc   0.83 (  0.83)	test_majacc   0.97 (  0.97)	Loss_d 0.135 (0.135)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.113 (0.130)	test_acc   0.96 (  0.95)	test_minacc   0.84 (  0.84)	test_majacc   0.98 (  0.97)	Loss_d 0.113 (0.130)	test_acc_d   0.96 (  0.95)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.76 (  0.73)
Test: [  20/  26]	Loss 0.137 (0.142)	test_acc   0.95 (  0.94)	test_minacc   0.83 (  0.81)	test_majacc   0.97 (  0.97)	Loss_d 0.137 (0.142)	test_acc_d   0.95 (  0.94)	test_minacc_d   0.83 (  0.81)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.72 (  0.73)
Test: [  26/  26]	Loss 0.155 (0.143)	test_acc   0.93 (  0.94)	test_minacc   0.78 (  0.81)	test_majacc   0.96 (  0.97)	Loss_d 0.155 (0.143)	test_acc_d   0.93 (  0.94)	test_minacc_d   0.78 (  0.81)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.71 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.64it/s]
Test: [  0/  1]	Loss 3.042 (3.042)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.89 (  0.89)	Loss_d 3.042 (3.042)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 3.042 (3.042)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.89 (  0.89)	Loss_d 3.042 (3.042)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.59 (  0.59)
Overall Timing[ 17/  1]	epoch_time 0.0431 (0.0469)	validation_time 0.0004 (0.0008)	train_time 0.0427 (0.0453)
record: (train_acc, test_acc) (0.9608000187873841, 0.39500001072883606)
last accs (train_acc, test_acc) (0.9415000183582306, 0.3160000145435333)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.26it/s] 15%|#5        | 4/26 [00:00<00:01, 16.91it/s] 27%|##6       | 7/26 [00:00<00:00, 21.08it/s] 38%|###8      | 10/26 [00:00<00:00, 23.76it/s] 50%|#####     | 13/26 [00:00<00:00, 25.00it/s] 62%|######1   | 16/26 [00:00<00:00, 25.98it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.41it/s] 85%|########4 | 22/26 [00:00<00:00, 26.97it/s] 96%|#########6| 25/26 [00:01<00:00, 27.16it/s]100%|##########| 26/26 [00:01<00:00, 23.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0044, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.007 (0.002)	train_nll   0.19 (  0.15)	train_penalty   0.01 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.92 (  0.94)	train_minacc   0.90 (  0.87)	train_majacc   0.92 (  0.95)	train_corr   0.00 (  0.00)	l1 23.1835 (23.1895)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.67it/s] 23%|##3       | 6/26 [00:00<00:00, 22.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.39it/s] 42%|####2     | 11/26 [00:00<00:00, 31.16it/s] 62%|######1   | 16/26 [00:00<00:00, 36.75it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.75it/s] 81%|########  | 21/26 [00:00<00:00, 36.87it/s]100%|##########| 26/26 [00:00<00:00, 39.94it/s]100%|##########| 26/26 [00:00<00:00, 31.50it/s]
Test: [   0/  26]	Loss 0.166 (0.166)	test_acc   0.95 (  0.95)	test_minacc   0.91 (  0.91)	test_majacc   0.95 (  0.95)	Loss_d 0.166 (0.166)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.134 (0.136)	test_acc   0.95 (  0.95)	test_minacc   0.82 (  0.89)	test_majacc   0.97 (  0.96)	Loss_d 0.134 (0.136)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.82 (  0.89)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.196 (0.142)	test_acc   0.94 (  0.95)	test_minacc   0.81 (  0.87)	test_majacc   0.96 (  0.96)	Loss_d 0.196 (0.142)	test_acc_d   0.94 (  0.95)	test_minacc_d   0.81 (  0.87)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.70 (  0.70)
Test: [  26/  26]	Loss 0.176 (0.142)	test_acc   0.94 (  0.95)	test_minacc   0.85 (  0.87)	test_majacc   0.96 (  0.96)	Loss_d 0.176 (0.142)	test_acc_d   0.94 (  0.95)	test_minacc_d   0.85 (  0.87)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.68 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.80it/s]
Test: [  0/  1]	Loss 2.518 (2.518)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.86 (  0.86)	Loss_d 2.518 (2.518)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 2.518 (2.518)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.86 (  0.86)	Loss_d 2.518 (2.518)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.35 (  0.35)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/64/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0451 (0.0468)	validation_time 0.0004 (0.0008)	train_time 0.0446 (0.0453)
record: (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
last accs (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.17it/s] 15%|#5        | 4/26 [00:00<00:01, 16.33it/s] 27%|##6       | 7/26 [00:00<00:00, 20.74it/s] 38%|###8      | 10/26 [00:00<00:00, 22.72it/s] 50%|#####     | 13/26 [00:00<00:00, 24.13it/s] 62%|######1   | 16/26 [00:00<00:00, 25.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.68it/s] 85%|########4 | 22/26 [00:00<00:00, 26.07it/s] 96%|#########6| 25/26 [00:01<00:00, 27.08it/s]100%|##########| 26/26 [00:01<00:00, 22.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0039, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.000 (0.001)	train_nll   0.17 (  0.17)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.94 (  0.93)	train_minacc   0.88 (  0.87)	train_majacc   0.96 (  0.94)	train_corr   0.00 (  0.00)	l1 23.1710 (23.1724)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.35it/s] 23%|##3       | 6/26 [00:00<00:00, 30.09it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.09it/s] 42%|####2     | 11/26 [00:00<00:00, 36.85it/s] 62%|######1   | 16/26 [00:00<00:00, 40.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.93it/s] 81%|########  | 21/26 [00:00<00:00, 39.14it/s]100%|##########| 26/26 [00:00<00:00, 42.26it/s]100%|##########| 26/26 [00:00<00:00, 35.36it/s]
Test: [   0/  26]	Loss 0.196 (0.196)	test_acc   0.92 (  0.92)	test_minacc   0.81 (  0.81)	test_majacc   0.93 (  0.93)	Loss_d 0.196 (0.196)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.130 (0.139)	test_acc   0.95 (  0.94)	test_minacc   0.82 (  0.87)	test_majacc   0.97 (  0.96)	Loss_d 0.130 (0.139)	test_acc_d   0.95 (  0.94)	test_minacc_d   0.82 (  0.87)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.77 (  0.72)
Test: [  20/  26]	Loss 0.181 (0.154)	test_acc   0.92 (  0.94)	test_minacc   0.80 (  0.84)	test_majacc   0.94 (  0.95)	Loss_d 0.181 (0.154)	test_acc_d   0.92 (  0.94)	test_minacc_d   0.80 (  0.84)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.72 (  0.72)
Test: [  26/  26]	Loss 0.133 (0.158)	test_acc   0.96 (  0.94)	test_minacc   0.85 (  0.83)	test_majacc   0.98 (  0.96)	Loss_d 0.133 (0.158)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.85 (  0.83)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.72 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 42.45it/s]
Test: [  0/  1]	Loss 2.777 (2.777)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.88 (  0.88)	Loss_d 2.777 (2.777)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 2.777 (2.777)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.88 (  0.88)	Loss_d 2.777 (2.777)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.55 (  0.55)
Overall Timing[ 19/  1]	epoch_time 0.0464 (0.0468)	validation_time 0.0005 (0.0008)	train_time 0.0459 (0.0453)
record: (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
last accs (train_acc, test_acc) (0.9364000209569932, 0.33100003004074097)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 15%|#5        | 4/26 [00:00<00:01, 13.83it/s] 27%|##6       | 7/26 [00:00<00:01, 18.44it/s] 38%|###8      | 10/26 [00:00<00:00, 21.25it/s] 50%|#####     | 13/26 [00:00<00:00, 23.01it/s] 62%|######1   | 16/26 [00:00<00:00, 24.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.22it/s] 85%|########4 | 22/26 [00:00<00:00, 26.16it/s] 96%|#########6| 25/26 [00:01<00:00, 27.08it/s]100%|##########| 26/26 [00:01<00:00, 21.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0032, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.002 (0.002)	train_nll   0.19 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.93 (  0.92)	train_minacc   0.78 (  0.84)	train_majacc   0.96 (  0.94)	train_corr   0.00 (  0.00)	l1 23.1431 (23.1639)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.16it/s] 27%|##6       | 7/26 [00:00<00:00, 33.64it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.64it/s] 46%|####6     | 12/26 [00:00<00:00, 39.79it/s] 65%|######5   | 17/26 [00:00<00:00, 42.15it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.15it/s] 85%|########4 | 22/26 [00:00<00:00, 40.92it/s]100%|##########| 26/26 [00:00<00:00, 38.05it/s]
Test: [   0/  26]	Loss 0.165 (0.165)	test_acc   0.93 (  0.93)	test_minacc   0.74 (  0.74)	test_majacc   0.97 (  0.97)	Loss_d 0.165 (0.165)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.178 (0.150)	test_acc   0.92 (  0.94)	test_minacc   0.73 (  0.84)	test_majacc   0.95 (  0.96)	Loss_d 0.178 (0.150)	test_acc_d   0.92 (  0.94)	test_minacc_d   0.73 (  0.84)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.75 (  0.73)
Test: [  20/  26]	Loss 0.137 (0.150)	test_acc   0.96 (  0.94)	test_minacc   0.81 (  0.84)	test_majacc   0.98 (  0.96)	Loss_d 0.137 (0.150)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.74 (  0.72)
Test: [  26/  26]	Loss 0.163 (0.155)	test_acc   0.94 (  0.94)	test_minacc   0.78 (  0.82)	test_majacc   0.97 (  0.96)	Loss_d 0.163 (0.155)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.76 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.45it/s]
Test: [  0/  1]	Loss 2.454 (2.454)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.91 (  0.91)	Loss_d 2.454 (2.454)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 2.454 (2.454)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.91 (  0.91)	Loss_d 2.454 (2.454)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.53 (  0.53)
Overall Timing[ 20/  1]	epoch_time 0.0445 (0.0467)	validation_time 0.0005 (0.0008)	train_time 0.0440 (0.0453)
record: (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
last accs (train_acc, test_acc) (0.9390000177621841, 0.3540000021457672)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.22it/s] 15%|#5        | 4/26 [00:00<00:01, 13.27it/s] 27%|##6       | 7/26 [00:00<00:01, 18.03it/s] 38%|###8      | 10/26 [00:00<00:00, 20.36it/s] 50%|#####     | 13/26 [00:00<00:00, 22.30it/s] 62%|######1   | 16/26 [00:00<00:00, 23.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.34it/s] 85%|########4 | 22/26 [00:01<00:00, 25.26it/s] 96%|#########6| 25/26 [00:01<00:00, 25.53it/s]100%|##########| 26/26 [00:01<00:00, 20.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0025, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.003 (0.002)	train_nll   0.15 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.94 (  0.92)	train_minacc   0.85 (  0.87)	train_majacc   0.95 (  0.93)	train_corr   0.00 (  0.00)	l1 23.1215 (23.1354)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.97it/s] 31%|###       | 8/26 [00:00<00:00, 39.59it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.59it/s] 50%|#####     | 13/26 [00:00<00:00, 42.45it/s] 69%|######9   | 18/26 [00:00<00:00, 40.79it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.79it/s] 88%|########8 | 23/26 [00:00<00:00, 42.39it/s]100%|##########| 26/26 [00:00<00:00, 39.39it/s]
Test: [   0/  26]	Loss 0.190 (0.190)	test_acc   0.92 (  0.92)	test_minacc   0.76 (  0.76)	test_majacc   0.95 (  0.95)	Loss_d 0.190 (0.190)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.198 (0.182)	test_acc   0.92 (  0.92)	test_minacc   0.77 (  0.77)	test_majacc   0.94 (  0.95)	Loss_d 0.198 (0.182)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.74 (  0.73)
Test: [  20/  26]	Loss 0.175 (0.177)	test_acc   0.93 (  0.93)	test_minacc   0.75 (  0.79)	test_majacc   0.96 (  0.95)	Loss_d 0.175 (0.177)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.75 (  0.79)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.74 (  0.72)
Test: [  26/  26]	Loss 0.177 (0.183)	test_acc   0.92 (  0.92)	test_minacc   0.73 (  0.77)	test_majacc   0.96 (  0.95)	Loss_d 0.177 (0.183)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.73 (  0.77)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.74 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.24it/s]
Test: [  0/  1]	Loss 2.333 (2.333)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.91 (  0.91)	Loss_d 2.333 (2.333)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 2.333 (2.333)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.91 (  0.91)	Loss_d 2.333 (2.333)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.53 (  0.53)
Overall Timing[ 21/  1]	epoch_time 0.0450 (0.0466)	validation_time 0.0004 (0.0007)	train_time 0.0446 (0.0452)
record: (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
last accs (train_acc, test_acc) (0.9242000224590301, 0.35600000619888306)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.97it/s] 15%|#5        | 4/26 [00:00<00:01, 15.87it/s] 27%|##6       | 7/26 [00:00<00:00, 19.82it/s] 38%|###8      | 10/26 [00:00<00:00, 22.38it/s] 50%|#####     | 13/26 [00:00<00:00, 23.72it/s] 62%|######1   | 16/26 [00:00<00:00, 24.93it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.64it/s] 85%|########4 | 22/26 [00:00<00:00, 26.37it/s] 96%|#########6| 25/26 [00:01<00:00, 26.76it/s]100%|##########| 26/26 [00:01<00:00, 22.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0018, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.001 (0.001)	train_nll   0.21 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.90 (  0.91)	train_minacc   0.70 (  0.83)	train_majacc   0.94 (  0.93)	train_corr   0.00 (  0.00)	l1 23.0993 (23.1177)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.23it/s] 27%|##6       | 7/26 [00:00<00:00, 27.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.96it/s] 46%|####6     | 12/26 [00:00<00:00, 34.37it/s] 65%|######5   | 17/26 [00:00<00:00, 38.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.58it/s] 85%|########4 | 22/26 [00:00<00:00, 38.99it/s]100%|##########| 26/26 [00:00<00:00, 34.52it/s]
Test: [   0/  26]	Loss 0.241 (0.241)	test_acc   0.89 (  0.89)	test_minacc   0.66 (  0.66)	test_majacc   0.94 (  0.94)	Loss_d 0.241 (0.241)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.165 (0.188)	test_acc   0.93 (  0.92)	test_minacc   0.75 (  0.76)	test_majacc   0.96 (  0.95)	Loss_d 0.165 (0.188)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.76 (  0.74)
Test: [  20/  26]	Loss 0.192 (0.185)	test_acc   0.93 (  0.92)	test_minacc   0.70 (  0.75)	test_majacc   0.97 (  0.95)	Loss_d 0.192 (0.185)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.70 (  0.75)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.77 (  0.74)
Test: [  26/  26]	Loss 0.201 (0.187)	test_acc   0.94 (  0.92)	test_minacc   0.80 (  0.75)	test_majacc   0.96 (  0.95)	Loss_d 0.201 (0.187)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.80 (  0.75)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.73 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.04it/s]
Test: [  0/  1]	Loss 2.159 (2.159)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.90 (  0.90)	Loss_d 2.159 (2.159)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 2.159 (2.159)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.90 (  0.90)	Loss_d 2.159 (2.159)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.56 (  0.56)
Overall Timing[ 22/  1]	epoch_time 0.0428 (0.0465)	validation_time 0.0004 (0.0007)	train_time 0.0424 (0.0451)
record: (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
last accs (train_acc, test_acc) (0.9227000185251236, 0.3240000009536743)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.89it/s] 15%|#5        | 4/26 [00:00<00:01, 12.85it/s] 27%|##6       | 7/26 [00:00<00:01, 17.82it/s] 38%|###8      | 10/26 [00:00<00:00, 21.09it/s] 50%|#####     | 13/26 [00:00<00:00, 22.10it/s] 62%|######1   | 16/26 [00:00<00:00, 23.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.71it/s] 85%|########4 | 22/26 [00:01<00:00, 24.82it/s] 96%|#########6| 25/26 [00:01<00:00, 25.73it/s]100%|##########| 26/26 [00:01<00:00, 20.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
l1 at pgd_anneal_iters 23.09749412536621
set z to 21.9426194190979
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.001 (0.002)	train_nll   0.17 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.94 (  0.93)	train_minacc   0.88 (  0.81)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 23.1030 (23.0982)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.82it/s] 27%|##6       | 7/26 [00:00<00:00, 22.33it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.33it/s] 46%|####6     | 12/26 [00:00<00:00, 30.38it/s] 65%|######5   | 17/26 [00:00<00:00, 35.48it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.48it/s] 85%|########4 | 22/26 [00:00<00:00, 36.87it/s]100%|##########| 26/26 [00:00<00:00, 31.08it/s]
Test: [   0/  26]	Loss 0.176 (0.176)	test_acc   0.93 (  0.93)	test_minacc   0.81 (  0.81)	test_majacc   0.95 (  0.95)	Loss_d 0.176 (0.176)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.207 (0.183)	test_acc   0.91 (  0.92)	test_minacc   0.66 (  0.80)	test_majacc   0.95 (  0.94)	Loss_d 0.207 (0.183)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.66 (  0.80)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.78 (  0.72)
Test: [  20/  26]	Loss 0.189 (0.188)	test_acc   0.92 (  0.92)	test_minacc   0.75 (  0.78)	test_majacc   0.95 (  0.95)	Loss_d 0.189 (0.188)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.75 (  0.78)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.73 (  0.72)
Test: [  26/  26]	Loss 0.209 (0.193)	test_acc   0.91 (  0.92)	test_minacc   0.65 (  0.77)	test_majacc   0.96 (  0.95)	Loss_d 0.209 (0.193)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.65 (  0.77)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.75 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.06it/s]
Test: [  0/  1]	Loss 2.854 (2.854)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.88 (  0.88)	Loss_d 2.854 (2.854)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 2.854 (2.854)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.88 (  0.88)	Loss_d 2.854 (2.854)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.55 (  0.55)
Overall Timing[ 23/  1]	epoch_time 0.0434 (0.0463)	validation_time 0.0004 (0.0007)	train_time 0.0430 (0.0450)
record: (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
last accs (train_acc, test_acc) (0.9210000233054161, 0.328000009059906)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.18it/s] 19%|#9        | 5/26 [00:00<00:00, 22.36it/s] 31%|###       | 8/26 [00:00<00:00, 24.34it/s] 42%|####2     | 11/26 [00:00<00:00, 24.72it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.40it/s] 65%|######5   | 17/26 [00:00<00:00, 25.60it/s] 77%|#######6  | 20/26 [00:00<00:00, 25.96it/s] 88%|########8 | 23/26 [00:00<00:00, 26.28it/s]100%|##########| 26/26 [00:01<00:00, 24.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: tensor(0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.002 (0.002)	train_nll   0.20 (  0.17)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.92 (  0.93)	train_minacc   0.82 (  0.83)	train_majacc   0.93 (  0.95)	train_corr   0.00 (  0.00)	l1 23.1068 (23.0988)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.20it/s] 23%|##3       | 6/26 [00:00<00:00, 28.64it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.64it/s] 42%|####2     | 11/26 [00:00<00:00, 36.10it/s] 62%|######1   | 16/26 [00:00<00:00, 40.01it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.01it/s] 81%|########  | 21/26 [00:00<00:00, 38.98it/s]100%|##########| 26/26 [00:00<00:00, 42.16it/s]100%|##########| 26/26 [00:00<00:00, 34.76it/s]
Test: [   0/  26]	Loss 0.168 (0.168)	test_acc   0.94 (  0.94)	test_minacc   0.88 (  0.88)	test_majacc   0.95 (  0.95)	Loss_d 0.168 (0.168)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.203 (0.190)	test_acc   0.91 (  0.92)	test_minacc   0.80 (  0.86)	test_majacc   0.93 (  0.93)	Loss_d 0.203 (0.190)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.80 (  0.86)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.70 (  0.68)
Test: [  20/  26]	Loss 0.221 (0.192)	test_acc   0.91 (  0.92)	test_minacc   0.80 (  0.85)	test_majacc   0.94 (  0.93)	Loss_d 0.221 (0.192)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.80 (  0.85)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.69 (  0.67)
Test: [  26/  26]	Loss 0.199 (0.191)	test_acc   0.91 (  0.92)	test_minacc   0.78 (  0.85)	test_majacc   0.94 (  0.93)	Loss_d 0.199 (0.191)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.78 (  0.85)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.68 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.91it/s]
Test: [  0/  1]	Loss 2.396 (2.396)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.85 (  0.85)	Loss_d 2.396 (2.396)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 2.396 (2.396)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.85 (  0.85)	Loss_d 2.396 (2.396)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.35 (  0.35)
Overall Timing[ 24/  1]	epoch_time 0.0460 (0.0463)	validation_time 0.0004 (0.0007)	train_time 0.0455 (0.0450)
record: (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
last accs (train_acc, test_acc) (0.9199000142812729, 0.4130000174045563)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.19it/s] 12%|#1        | 3/26 [00:00<00:02,  9.99it/s] 23%|##3       | 6/26 [00:00<00:01, 15.95it/s] 35%|###4      | 9/26 [00:00<00:00, 19.60it/s] 46%|####6     | 12/26 [00:00<00:00, 21.66it/s] 58%|#####7    | 15/26 [00:00<00:00, 22.90it/s] 69%|######9   | 18/26 [00:00<00:00, 24.07it/s] 81%|########  | 21/26 [00:01<00:00, 25.03it/s] 92%|#########2| 24/26 [00:01<00:00, 25.52it/s]100%|##########| 26/26 [00:01<00:00, 20.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.001 (0.003)	train_nll   0.22 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.89 (  0.92)	train_minacc   0.73 (  0.81)	train_majacc   0.92 (  0.94)	train_corr   0.00 (  0.00)	l1 23.0476 (23.0696)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.35it/s] 23%|##3       | 6/26 [00:00<00:00, 28.86it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.86it/s] 42%|####2     | 11/26 [00:00<00:00, 36.49it/s] 62%|######1   | 16/26 [00:00<00:00, 40.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.53it/s] 81%|########  | 21/26 [00:00<00:00, 40.34it/s]100%|##########| 26/26 [00:00<00:00, 42.76it/s]100%|##########| 26/26 [00:00<00:00, 35.99it/s]
Test: [   0/  26]	Loss 0.168 (0.168)	test_acc   0.94 (  0.94)	test_minacc   0.76 (  0.76)	test_majacc   0.97 (  0.97)	Loss_d 0.168 (0.168)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.193 (0.166)	test_acc   0.93 (  0.93)	test_minacc   0.75 (  0.78)	test_majacc   0.96 (  0.96)	Loss_d 0.193 (0.166)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.75 (  0.78)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.78 (  0.76)
Test: [  20/  26]	Loss 0.176 (0.176)	test_acc   0.92 (  0.93)	test_minacc   0.73 (  0.76)	test_majacc   0.96 (  0.96)	Loss_d 0.176 (0.176)	test_acc_d   0.92 (  0.93)	test_minacc_d   0.73 (  0.76)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.74 (  0.75)
Test: [  26/  26]	Loss 0.156 (0.177)	test_acc   0.94 (  0.93)	test_minacc   0.85 (  0.76)	test_majacc   0.96 (  0.96)	Loss_d 0.156 (0.177)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.85 (  0.76)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.74 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.60it/s]
Test: [  0/  1]	Loss 2.649 (2.649)	test_acc   0.31 (  0.31)	test_minacc   0.25 (  0.25)	test_majacc   0.87 (  0.87)	Loss_d 2.649 (2.649)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 2.649 (2.649)	test_acc   0.31 (  0.31)	test_minacc   0.25 (  0.25)	test_majacc   0.87 (  0.87)	Loss_d 2.649 (2.649)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.60 (  0.60)
Overall Timing[ 25/  1]	epoch_time 0.0443 (0.0462)	validation_time 0.0004 (0.0007)	train_time 0.0439 (0.0450)
record: (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
last accs (train_acc, test_acc) (0.9272000184655189, 0.31300002336502075)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 15%|#5        | 4/26 [00:00<00:01, 17.62it/s] 27%|##6       | 7/26 [00:00<00:00, 22.11it/s] 38%|###8      | 10/26 [00:00<00:00, 23.37it/s] 50%|#####     | 13/26 [00:00<00:00, 24.30it/s] 62%|######1   | 16/26 [00:00<00:00, 25.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.43it/s] 85%|########4 | 22/26 [00:00<00:00, 25.80it/s] 96%|#########6| 25/26 [00:01<00:00, 26.05it/s]100%|##########| 26/26 [00:01<00:00, 23.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: tensor(9.2059e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.001 (0.002)	train_nll   0.21 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.92 (  0.91)	train_minacc   0.85 (  0.82)	train_majacc   0.93 (  0.93)	train_corr   0.00 (  0.00)	l1 23.0027 (23.0268)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.07it/s] 23%|##3       | 6/26 [00:00<00:00, 30.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.95it/s] 42%|####2     | 11/26 [00:00<00:00, 37.34it/s] 62%|######1   | 16/26 [00:00<00:00, 40.46it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.46it/s] 81%|########  | 21/26 [00:00<00:00, 39.73it/s]100%|##########| 26/26 [00:00<00:00, 42.84it/s]100%|##########| 26/26 [00:00<00:00, 35.92it/s]
Test: [   0/  26]	Loss 0.186 (0.186)	test_acc   0.93 (  0.93)	test_minacc   0.86 (  0.86)	test_majacc   0.94 (  0.94)	Loss_d 0.186 (0.186)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.169 (0.197)	test_acc   0.94 (  0.92)	test_minacc   0.82 (  0.78)	test_majacc   0.96 (  0.94)	Loss_d 0.169 (0.197)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.82 (  0.78)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.75 (  0.74)
Test: [  20/  26]	Loss 0.234 (0.211)	test_acc   0.91 (  0.91)	test_minacc   0.70 (  0.74)	test_majacc   0.94 (  0.94)	Loss_d 0.234 (0.211)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.70 (  0.74)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.74 (  0.74)
Test: [  26/  26]	Loss 0.218 (0.216)	test_acc   0.93 (  0.91)	test_minacc   0.80 (  0.73)	test_majacc   0.95 (  0.94)	Loss_d 0.218 (0.216)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.80 (  0.73)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.73 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.71it/s]
Test: [  0/  1]	Loss 2.299 (2.299)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.89 (  0.89)	Loss_d 2.299 (2.299)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 2.299 (2.299)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.89 (  0.89)	Loss_d 2.299 (2.299)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.54 (  0.54)
Overall Timing[ 26/  1]	epoch_time 0.0469 (0.0463)	validation_time 0.0004 (0.0007)	train_time 0.0465 (0.0450)
record: (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
last accs (train_acc, test_acc) (0.9107000257968902, 0.3440000116825104)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.44it/s] 15%|#5        | 4/26 [00:00<00:01, 20.53it/s] 27%|##6       | 7/26 [00:00<00:00, 23.92it/s] 38%|###8      | 10/26 [00:00<00:00, 25.45it/s] 50%|#####     | 13/26 [00:00<00:00, 26.05it/s] 62%|######1   | 16/26 [00:00<00:00, 26.50it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.10it/s] 85%|########4 | 22/26 [00:00<00:00, 27.65it/s] 96%|#########6| 25/26 [00:00<00:00, 28.31it/s]100%|##########| 26/26 [00:01<00:00, 24.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.004 (0.003)	train_nll   0.18 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm   9.86 (  9.86)	train_acc   0.93 (  0.92)	train_minacc   0.85 (  0.77)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 22.9616 (22.9833)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.62it/s]  8%|7         | 2/26 [00:00<00:05,  4.35it/s] 27%|##6       | 7/26 [00:00<00:01, 16.21it/s]                                               27%|##6       | 7/26 [00:00<00:01, 16.21it/s] 46%|####6     | 12/26 [00:00<00:00, 24.91it/s] 65%|######5   | 17/26 [00:00<00:00, 31.62it/s]                                                65%|######5   | 17/26 [00:00<00:00, 31.62it/s] 85%|########4 | 22/26 [00:00<00:00, 34.40it/s]100%|##########| 26/26 [00:01<00:00, 25.08it/s]
Test: [   0/  26]	Loss 0.174 (0.174)	test_acc   0.93 (  0.93)	test_minacc   0.86 (  0.86)	test_majacc   0.94 (  0.94)	Loss_d 0.174 (0.174)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.233 (0.215)	test_acc   0.90 (  0.91)	test_minacc   0.73 (  0.81)	test_majacc   0.93 (  0.92)	Loss_d 0.233 (0.215)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.73 (  0.81)	test_majacc_d   0.93 (  0.92)	test_corr_d   0.73 (  0.71)
Test: [  20/  26]	Loss 0.245 (0.224)	test_acc   0.88 (  0.90)	test_minacc   0.73 (  0.79)	test_majacc   0.91 (  0.92)	Loss_d 0.245 (0.224)	test_acc_d   0.88 (  0.90)	test_minacc_d   0.73 (  0.79)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.70 (  0.70)
Test: [  26/  26]	Loss 0.217 (0.226)	test_acc   0.91 (  0.90)	test_minacc   0.62 (  0.78)	test_majacc   0.96 (  0.92)	Loss_d 0.217 (0.226)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.62 (  0.78)	test_majacc_d   0.96 (  0.92)	test_corr_d   0.76 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.15it/s]
Test: [  0/  1]	Loss 2.362 (2.362)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.80 (  0.80)	Loss_d 2.362 (2.362)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 2.362 (2.362)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.80 (  0.80)	Loss_d 2.362 (2.362)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.47 (  0.47)
Overall Timing[ 27/  1]	epoch_time 0.0438 (0.0462)	validation_time 0.0005 (0.0007)	train_time 0.0433 (0.0450)
record: (train_acc, test_acc) (0.9465000138282776, 0.4220000207424164)
last accs (train_acc, test_acc) (0.901700020968914, 0.3800000250339508)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.45it/s] 19%|#9        | 5/26 [00:00<00:01, 20.08it/s] 31%|###       | 8/26 [00:00<00:00, 23.01it/s] 42%|####2     | 11/26 [00:00<00:00, 23.28it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.32it/s] 65%|######5   | 17/26 [00:00<00:00, 24.77it/s] 77%|#######6  | 20/26 [00:00<00:00, 25.49it/s] 88%|########8 | 23/26 [00:00<00:00, 25.55it/s]100%|##########| 26/26 [00:01<00:00, 26.72it/s]100%|##########| 26/26 [00:01<00:00, 23.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.001 (0.001)	train_nll   0.24 (  0.24)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.86)	train_acc   0.90 (  0.90)	train_minacc   0.73 (  0.86)	train_majacc   0.93 (  0.90)	train_corr   0.00 (  0.00)	l1 22.9527 (22.9530)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.91it/s] 23%|##3       | 6/26 [00:00<00:00, 31.46it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.46it/s] 42%|####2     | 11/26 [00:00<00:00, 37.67it/s] 62%|######1   | 16/26 [00:00<00:00, 41.46it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.46it/s] 81%|########  | 21/26 [00:00<00:00, 38.94it/s]100%|##########| 26/26 [00:00<00:00, 41.97it/s]100%|##########| 26/26 [00:00<00:00, 35.94it/s]
Test: [   0/  26]	Loss 0.214 (0.214)	test_acc   0.92 (  0.92)	test_minacc   0.88 (  0.88)	test_majacc   0.92 (  0.92)	Loss_d 0.214 (0.214)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.161 (0.191)	test_acc   0.93 (  0.92)	test_minacc   0.80 (  0.84)	test_majacc   0.95 (  0.94)	Loss_d 0.161 (0.191)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.80 (  0.84)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.75 (  0.70)
Test: [  20/  26]	Loss 0.207 (0.204)	test_acc   0.90 (  0.92)	test_minacc   0.78 (  0.81)	test_majacc   0.93 (  0.93)	Loss_d 0.207 (0.204)	test_acc_d   0.90 (  0.92)	test_minacc_d   0.78 (  0.81)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.251 (0.205)	test_acc   0.92 (  0.92)	test_minacc   0.80 (  0.82)	test_majacc   0.94 (  0.93)	Loss_d 0.251 (0.205)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.80 (  0.82)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.10it/s]
Test: [  0/  1]	Loss 2.092 (2.092)	test_acc   0.42 (  0.42)	test_minacc   0.38 (  0.38)	test_majacc   0.80 (  0.80)	Loss_d 2.092 (2.092)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 2.092 (2.092)	test_acc   0.42 (  0.42)	test_minacc   0.38 (  0.38)	test_majacc   0.80 (  0.80)	Loss_d 2.092 (2.092)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.34 (  0.34)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/64/checkpoints/model_best.pth
Overall Timing[ 28/  1]	epoch_time 0.0490 (0.0463)	validation_time 0.0005 (0.0007)	train_time 0.0485 (0.0451)
record: (train_acc, test_acc) (0.9165000228285789, 0.4240000247955322)
last accs (train_acc, test_acc) (0.9165000228285789, 0.4240000247955322)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 15%|#5        | 4/26 [00:00<00:01, 15.00it/s] 27%|##6       | 7/26 [00:00<00:00, 19.50it/s] 38%|###8      | 10/26 [00:00<00:00, 22.33it/s] 50%|#####     | 13/26 [00:00<00:00, 23.18it/s] 62%|######1   | 16/26 [00:00<00:00, 24.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.21it/s] 85%|########4 | 22/26 [00:00<00:00, 25.85it/s] 96%|#########6| 25/26 [00:01<00:00, 26.02it/s]100%|##########| 26/26 [00:01<00:00, 22.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.001 (0.002)	train_nll   0.24 (  0.22)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.90 (  0.91)	train_minacc   0.78 (  0.84)	train_majacc   0.93 (  0.92)	train_corr   0.00 (  0.00)	l1 22.9291 (22.9444)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.79it/s] 27%|##6       | 7/26 [00:00<00:00, 33.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.89it/s] 46%|####6     | 12/26 [00:00<00:00, 39.63it/s] 65%|######5   | 17/26 [00:00<00:00, 41.54it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.54it/s] 85%|########4 | 22/26 [00:00<00:00, 39.41it/s]100%|##########| 26/26 [00:00<00:00, 37.21it/s]
Test: [   0/  26]	Loss 0.278 (0.278)	test_acc   0.87 (  0.87)	test_minacc   0.86 (  0.86)	test_majacc   0.87 (  0.87)	Loss_d 0.278 (0.278)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.260 (0.279)	test_acc   0.87 (  0.87)	test_minacc   0.80 (  0.81)	test_majacc   0.88 (  0.88)	Loss_d 0.260 (0.279)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.80 (  0.81)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.67 (  0.65)
Test: [  20/  26]	Loss 0.258 (0.270)	test_acc   0.88 (  0.88)	test_minacc   0.80 (  0.81)	test_majacc   0.90 (  0.89)	Loss_d 0.258 (0.270)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.80 (  0.81)	test_majacc_d   0.90 (  0.89)	test_corr_d   0.66 (  0.64)
Test: [  26/  26]	Loss 0.241 (0.270)	test_acc   0.91 (  0.88)	test_minacc   0.78 (  0.81)	test_majacc   0.94 (  0.89)	Loss_d 0.241 (0.270)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.78 (  0.81)	test_majacc_d   0.94 (  0.89)	test_corr_d   0.68 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.18it/s]
Test: [  0/  1]	Loss 1.887 (1.887)	test_acc   0.45 (  0.45)	test_minacc   0.41 (  0.41)	test_majacc   0.80 (  0.80)	Loss_d 1.887 (1.887)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.887 (1.887)	test_acc   0.45 (  0.45)	test_minacc   0.41 (  0.41)	test_majacc   0.80 (  0.80)	Loss_d 1.887 (1.887)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.32 (  0.32)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/64/checkpoints/model_best.pth
Overall Timing[ 29/  1]	epoch_time 0.0439 (0.0462)	validation_time 0.0004 (0.0007)	train_time 0.0434 (0.0450)
record: (train_acc, test_acc) (0.8771000284552574, 0.44700002670288086)
last accs (train_acc, test_acc) (0.8771000284552574, 0.44700002670288086)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.32it/s] 15%|#5        | 4/26 [00:00<00:02, 10.99it/s] 27%|##6       | 7/26 [00:00<00:01, 15.71it/s] 38%|###8      | 10/26 [00:00<00:00, 18.85it/s] 50%|#####     | 13/26 [00:00<00:00, 21.03it/s] 62%|######1   | 16/26 [00:00<00:00, 23.19it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.53it/s] 85%|########4 | 22/26 [00:01<00:00, 25.49it/s] 96%|#########6| 25/26 [00:01<00:00, 26.00it/s]100%|##########| 26/26 [00:01<00:00, 20.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.004 (0.002)	train_nll   0.17 (  0.24)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.93 (  0.89)	train_minacc   0.80 (  0.82)	train_majacc   0.96 (  0.91)	train_corr   0.00 (  0.00)	l1 22.8906 (22.9172)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.94it/s] 19%|#9        | 5/26 [00:00<00:01, 18.70it/s] 38%|###8      | 10/26 [00:00<00:00, 29.47it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.47it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.23it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.23it/s] 92%|#########2| 24/26 [00:00<00:00, 38.01it/s]100%|##########| 26/26 [00:00<00:00, 30.30it/s]
Test: [   0/  26]	Loss 0.179 (0.179)	test_acc   0.92 (  0.92)	test_minacc   0.67 (  0.67)	test_majacc   0.96 (  0.96)	Loss_d 0.179 (0.179)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.227 (0.194)	test_acc   0.91 (  0.92)	test_minacc   0.61 (  0.68)	test_majacc   0.96 (  0.96)	Loss_d 0.227 (0.194)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.61 (  0.68)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.81 (  0.79)
Test: [  20/  26]	Loss 0.202 (0.191)	test_acc   0.92 (  0.92)	test_minacc   0.66 (  0.69)	test_majacc   0.97 (  0.96)	Loss_d 0.202 (0.191)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.66 (  0.69)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.79 (  0.78)
Test: [  26/  26]	Loss 0.210 (0.193)	test_acc   0.92 (  0.92)	test_minacc   0.60 (  0.68)	test_majacc   0.98 (  0.96)	Loss_d 0.210 (0.193)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.60 (  0.68)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.81 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.30it/s]
Test: [  0/  1]	Loss 2.206 (2.206)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.90 (  0.90)	Loss_d 2.206 (2.206)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 2.206 (2.206)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.90 (  0.90)	Loss_d 2.206 (2.206)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.58 (  0.58)
Overall Timing[ 30/  1]	epoch_time 0.0443 (0.0461)	validation_time 0.0005 (0.0007)	train_time 0.0438 (0.0450)
record: (train_acc, test_acc) (0.8771000284552574, 0.44700002670288086)
last accs (train_acc, test_acc) (0.9187000250220299, 0.33400002121925354)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.23it/s] 15%|#5        | 4/26 [00:00<00:01, 13.49it/s] 27%|##6       | 7/26 [00:00<00:01, 18.63it/s] 38%|###8      | 10/26 [00:00<00:00, 21.89it/s] 50%|#####     | 13/26 [00:00<00:00, 23.85it/s] 62%|######1   | 16/26 [00:00<00:00, 25.41it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.34it/s] 85%|########4 | 22/26 [00:00<00:00, 27.24it/s] 96%|#########6| 25/26 [00:01<00:00, 27.19it/s]100%|##########| 26/26 [00:01<00:00, 21.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.001 (0.002)	train_nll   0.23 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.90 (  0.91)	train_minacc   0.85 (  0.77)	train_majacc   0.91 (  0.94)	train_corr   0.00 (  0.00)	l1 22.8903 (22.9001)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.82it/s] 23%|##3       | 6/26 [00:00<00:00, 30.98it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.98it/s] 42%|####2     | 11/26 [00:00<00:00, 37.16it/s] 62%|######1   | 16/26 [00:00<00:00, 40.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.89it/s] 81%|########  | 21/26 [00:00<00:00, 39.05it/s]100%|##########| 26/26 [00:00<00:00, 41.71it/s]100%|##########| 26/26 [00:00<00:00, 35.46it/s]
Test: [   0/  26]	Loss 0.213 (0.213)	test_acc   0.92 (  0.92)	test_minacc   0.88 (  0.88)	test_majacc   0.93 (  0.93)	Loss_d 0.213 (0.213)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.235 (0.224)	test_acc   0.90 (  0.91)	test_minacc   0.75 (  0.85)	test_majacc   0.93 (  0.92)	Loss_d 0.235 (0.224)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.75 (  0.85)	test_majacc_d   0.93 (  0.92)	test_corr_d   0.71 (  0.68)
Test: [  20/  26]	Loss 0.230 (0.216)	test_acc   0.91 (  0.91)	test_minacc   0.81 (  0.85)	test_majacc   0.92 (  0.92)	Loss_d 0.230 (0.216)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.81 (  0.85)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.68 (  0.68)
Test: [  26/  26]	Loss 0.263 (0.219)	test_acc   0.90 (  0.91)	test_minacc   0.78 (  0.84)	test_majacc   0.92 (  0.92)	Loss_d 0.263 (0.219)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.78 (  0.84)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.67 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.55it/s]
Test: [  0/  1]	Loss 1.940 (1.940)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.83 (  0.83)	Loss_d 1.940 (1.940)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 1.940 (1.940)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.83 (  0.83)	Loss_d 1.940 (1.940)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.39 (  0.39)
Overall Timing[ 31/  1]	epoch_time 0.0456 (0.0461)	validation_time 0.0005 (0.0006)	train_time 0.0451 (0.0450)
record: (train_acc, test_acc) (0.8771000284552574, 0.44700002670288086)
last accs (train_acc, test_acc) (0.9098000212311744, 0.41600000858306885)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.76it/s] 15%|#5        | 4/26 [00:00<00:01, 14.13it/s] 27%|##6       | 7/26 [00:00<00:00, 19.07it/s] 38%|###8      | 10/26 [00:00<00:00, 22.22it/s] 50%|#####     | 13/26 [00:00<00:00, 23.96it/s] 62%|######1   | 16/26 [00:00<00:00, 24.87it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.57it/s] 85%|########4 | 22/26 [00:00<00:00, 26.14it/s] 96%|#########6| 25/26 [00:01<00:00, 26.46it/s]100%|##########| 26/26 [00:01<00:00, 21.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.003 (0.002)	train_nll   0.19 (  0.23)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.94 (  0.90)	train_minacc   0.85 (  0.76)	train_majacc   0.96 (  0.92)	train_corr   0.00 (  0.00)	l1 22.8424 (22.8649)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.90it/s] 23%|##3       | 6/26 [00:00<00:00, 24.12it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.12it/s] 42%|####2     | 11/26 [00:00<00:00, 32.58it/s] 62%|######1   | 16/26 [00:00<00:00, 36.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.59it/s] 81%|########  | 21/26 [00:00<00:00, 39.42it/s]100%|##########| 26/26 [00:00<00:00, 42.01it/s]100%|##########| 26/26 [00:00<00:00, 33.16it/s]
Test: [   0/  26]	Loss 0.212 (0.212)	test_acc   0.91 (  0.91)	test_minacc   0.74 (  0.74)	test_majacc   0.94 (  0.94)	Loss_d 0.212 (0.212)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.222 (0.212)	test_acc   0.91 (  0.91)	test_minacc   0.73 (  0.79)	test_majacc   0.94 (  0.93)	Loss_d 0.222 (0.212)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.73 (  0.79)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.74 (  0.72)
Test: [  20/  26]	Loss 0.159 (0.202)	test_acc   0.94 (  0.92)	test_minacc   0.83 (  0.80)	test_majacc   0.97 (  0.94)	Loss_d 0.159 (0.202)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.83 (  0.80)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.72 (  0.72)
Test: [  26/  26]	Loss 0.255 (0.203)	test_acc   0.92 (  0.92)	test_minacc   0.78 (  0.79)	test_majacc   0.94 (  0.94)	Loss_d 0.255 (0.203)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.73 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.56it/s]
Test: [  0/  1]	Loss 2.066 (2.066)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.88 (  0.88)	Loss_d 2.066 (2.066)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 2.066 (2.066)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.88 (  0.88)	Loss_d 2.066 (2.066)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.47 (  0.47)
Overall Timing[ 32/  1]	epoch_time 0.0440 (0.0460)	validation_time 0.0004 (0.0006)	train_time 0.0435 (0.0450)
record: (train_acc, test_acc) (0.8771000284552574, 0.44700002670288086)
last accs (train_acc, test_acc) (0.9187000203728676, 0.38100001215934753)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.67it/s] 15%|#5        | 4/26 [00:00<00:01, 14.02it/s] 27%|##6       | 7/26 [00:00<00:01, 17.84it/s] 38%|###8      | 10/26 [00:00<00:00, 20.26it/s] 50%|#####     | 13/26 [00:00<00:00, 22.82it/s] 62%|######1   | 16/26 [00:00<00:00, 24.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.04it/s] 85%|########4 | 22/26 [00:01<00:00, 25.70it/s] 96%|#########6| 25/26 [00:01<00:00, 26.13it/s]100%|##########| 26/26 [00:01<00:00, 21.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.011 (0.002)	train_nll   0.33 (  0.25)	train_penalty   0.01 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.87 (  0.89)	train_minacc   0.65 (  0.82)	train_majacc   0.91 (  0.90)	train_corr   0.00 (  0.00)	l1 22.8041 (22.8289)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s]  8%|7         | 2/26 [00:00<00:03,  6.40it/s] 27%|##6       | 7/26 [00:00<00:00, 21.05it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.05it/s] 46%|####6     | 12/26 [00:00<00:00, 29.41it/s] 65%|######5   | 17/26 [00:00<00:00, 34.95it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.95it/s] 85%|########4 | 22/26 [00:00<00:00, 36.14it/s]100%|##########| 26/26 [00:00<00:00, 28.44it/s]
Test: [   0/  26]	Loss 0.266 (0.266)	test_acc   0.86 (  0.86)	test_minacc   0.67 (  0.67)	test_majacc   0.90 (  0.90)	Loss_d 0.266 (0.266)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.191 (0.225)	test_acc   0.93 (  0.90)	test_minacc   0.71 (  0.73)	test_majacc   0.96 (  0.93)	Loss_d 0.191 (0.225)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.71 (  0.73)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.77 (  0.74)
Test: [  20/  26]	Loss 0.256 (0.232)	test_acc   0.88 (  0.90)	test_minacc   0.69 (  0.71)	test_majacc   0.92 (  0.93)	Loss_d 0.256 (0.232)	test_acc_d   0.88 (  0.90)	test_minacc_d   0.69 (  0.71)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.72 (  0.73)
Test: [  26/  26]	Loss 0.256 (0.235)	test_acc   0.90 (  0.90)	test_minacc   0.70 (  0.69)	test_majacc   0.94 (  0.93)	Loss_d 0.256 (0.235)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.70 (  0.69)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.76 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.67it/s]
Test: [  0/  1]	Loss 2.208 (2.208)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.87 (  0.87)	Loss_d 2.208 (2.208)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 2.208 (2.208)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.87 (  0.87)	Loss_d 2.208 (2.208)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.51 (  0.51)
Overall Timing[ 33/  1]	epoch_time 0.0446 (0.0460)	validation_time 0.0005 (0.0006)	train_time 0.0441 (0.0449)
record: (train_acc, test_acc) (0.8771000284552574, 0.44700002670288086)
last accs (train_acc, test_acc) (0.8950000244379044, 0.367000013589859)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.11it/s] 15%|#5        | 4/26 [00:00<00:01, 14.80it/s] 27%|##6       | 7/26 [00:00<00:00, 19.42it/s] 38%|###8      | 10/26 [00:00<00:00, 22.06it/s] 50%|#####     | 13/26 [00:00<00:00, 23.68it/s] 62%|######1   | 16/26 [00:00<00:00, 24.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.47it/s] 85%|########4 | 22/26 [00:00<00:00, 26.13it/s] 96%|#########6| 25/26 [00:01<00:00, 26.42it/s]100%|##########| 26/26 [00:01<00:00, 22.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.002 (0.002)	train_nll   0.22 (  0.22)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.91 (  0.91)	train_minacc   0.78 (  0.84)	train_majacc   0.94 (  0.92)	train_corr   0.00 (  0.00)	l1 22.7854 (22.7958)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.29it/s] 23%|##3       | 6/26 [00:00<00:00, 30.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.22it/s] 42%|####2     | 11/26 [00:00<00:00, 36.75it/s] 62%|######1   | 16/26 [00:00<00:00, 37.31it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.31it/s] 81%|########  | 21/26 [00:00<00:00, 39.88it/s]100%|##########| 26/26 [00:00<00:00, 42.12it/s]100%|##########| 26/26 [00:00<00:00, 35.92it/s]
Test: [   0/  26]	Loss 0.303 (0.303)	test_acc   0.87 (  0.87)	test_minacc   0.78 (  0.78)	test_majacc   0.89 (  0.89)	Loss_d 0.303 (0.303)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.284 (0.303)	test_acc   0.87 (  0.87)	test_minacc   0.73 (  0.74)	test_majacc   0.90 (  0.89)	Loss_d 0.284 (0.303)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.73 (  0.74)	test_majacc_d   0.90 (  0.89)	test_corr_d   0.68 (  0.66)
Test: [  20/  26]	Loss 0.247 (0.280)	test_acc   0.88 (  0.88)	test_minacc   0.72 (  0.75)	test_majacc   0.91 (  0.90)	Loss_d 0.247 (0.280)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.72 (  0.75)	test_majacc_d   0.91 (  0.90)	test_corr_d   0.68 (  0.66)
Test: [  26/  26]	Loss 0.259 (0.278)	test_acc   0.90 (  0.88)	test_minacc   0.82 (  0.76)	test_majacc   0.92 (  0.90)	Loss_d 0.259 (0.278)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.82 (  0.76)	test_majacc_d   0.92 (  0.90)	test_corr_d   0.67 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 42.92it/s]
Test: [  0/  1]	Loss 2.205 (2.205)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.83 (  0.83)	Loss_d 2.205 (2.205)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 2.205 (2.205)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.83 (  0.83)	Loss_d 2.205 (2.205)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.36 (  0.36)
Overall Timing[ 34/  1]	epoch_time 0.0438 (0.0459)	validation_time 0.0005 (0.0006)	train_time 0.0433 (0.0449)
record: (train_acc, test_acc) (0.8771000284552574, 0.44700002670288086)
last accs (train_acc, test_acc) (0.877700025677681, 0.42900002002716064)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.57it/s] 12%|#1        | 3/26 [00:00<00:01, 12.90it/s] 23%|##3       | 6/26 [00:00<00:01, 18.73it/s] 35%|###4      | 9/26 [00:00<00:00, 21.35it/s] 46%|####6     | 12/26 [00:00<00:00, 22.72it/s] 58%|#####7    | 15/26 [00:00<00:00, 23.83it/s] 69%|######9   | 18/26 [00:00<00:00, 24.90it/s] 81%|########  | 21/26 [00:00<00:00, 25.61it/s] 92%|#########2| 24/26 [00:01<00:00, 26.35it/s]100%|##########| 26/26 [00:01<00:00, 22.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.001 (0.002)	train_nll   0.26 (  0.22)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.89 (  0.91)	train_minacc   0.78 (  0.79)	train_majacc   0.91 (  0.93)	train_corr   0.00 (  0.00)	l1 22.7759 (22.7690)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.55it/s] 23%|##3       | 6/26 [00:00<00:00, 22.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.08it/s] 42%|####2     | 11/26 [00:00<00:00, 28.58it/s] 62%|######1   | 16/26 [00:00<00:00, 34.66it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.66it/s] 81%|########  | 21/26 [00:00<00:00, 37.51it/s]100%|##########| 26/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 31.09it/s]
Test: [   0/  26]	Loss 0.277 (0.277)	test_acc   0.87 (  0.87)	test_minacc   0.74 (  0.74)	test_majacc   0.89 (  0.89)	Loss_d 0.277 (0.277)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.275 (0.279)	test_acc   0.90 (  0.88)	test_minacc   0.77 (  0.74)	test_majacc   0.92 (  0.90)	Loss_d 0.275 (0.279)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.77 (  0.74)	test_majacc_d   0.92 (  0.90)	test_corr_d   0.69 (  0.68)
Test: [  20/  26]	Loss 0.232 (0.260)	test_acc   0.91 (  0.89)	test_minacc   0.81 (  0.77)	test_majacc   0.92 (  0.91)	Loss_d 0.232 (0.260)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.81 (  0.77)	test_majacc_d   0.92 (  0.91)	test_corr_d   0.65 (  0.67)
Test: [  26/  26]	Loss 0.242 (0.255)	test_acc   0.90 (  0.89)	test_minacc   0.80 (  0.78)	test_majacc   0.92 (  0.91)	Loss_d 0.242 (0.255)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.80 (  0.78)	test_majacc_d   0.92 (  0.91)	test_corr_d   0.67 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.13it/s]
Test: [  0/  1]	Loss 2.280 (2.280)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.84 (  0.84)	Loss_d 2.280 (2.280)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.280 (2.280)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.84 (  0.84)	Loss_d 2.280 (2.280)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.37 (  0.37)
Overall Timing[ 35/  1]	epoch_time 0.0451 (0.0459)	validation_time 0.0004 (0.0006)	train_time 0.0446 (0.0449)
record: (train_acc, test_acc) (0.8771000284552574, 0.44700002670288086)
last accs (train_acc, test_acc) (0.8909000211954117, 0.42500001192092896)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.98it/s] 15%|#5        | 4/26 [00:00<00:01, 12.14it/s] 27%|##6       | 7/26 [00:00<00:01, 16.50it/s] 38%|###8      | 10/26 [00:00<00:00, 19.74it/s] 50%|#####     | 13/26 [00:00<00:00, 21.66it/s] 62%|######1   | 16/26 [00:00<00:00, 23.04it/s] 73%|#######3  | 19/26 [00:00<00:00, 23.97it/s] 85%|########4 | 22/26 [00:01<00:00, 25.12it/s] 96%|#########6| 25/26 [00:01<00:00, 25.85it/s]100%|##########| 26/26 [00:01<00:00, 20.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.003 (0.002)	train_nll   0.28 (  0.25)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.88 (  0.89)	train_minacc   0.85 (  0.78)	train_majacc   0.89 (  0.91)	train_corr   0.00 (  0.00)	l1 22.7306 (22.7408)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.19it/s] 19%|#9        | 5/26 [00:00<00:01, 17.09it/s] 38%|###8      | 10/26 [00:00<00:00, 27.25it/s]                                                38%|###8      | 10/26 [00:00<00:00, 27.25it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.29it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.29it/s] 96%|#########6| 25/26 [00:00<00:00, 38.98it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
Test: [   0/  26]	Loss 0.305 (0.305)	test_acc   0.86 (  0.86)	test_minacc   0.83 (  0.83)	test_majacc   0.86 (  0.86)	Loss_d 0.305 (0.305)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.300 (0.291)	test_acc   0.87 (  0.87)	test_minacc   0.80 (  0.81)	test_majacc   0.88 (  0.88)	Loss_d 0.300 (0.291)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.80 (  0.81)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.62 (  0.64)
Test: [  20/  26]	Loss 0.280 (0.291)	test_acc   0.86 (  0.87)	test_minacc   0.78 (  0.80)	test_majacc   0.88 (  0.88)	Loss_d 0.280 (0.291)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.65 (  0.63)
Test: [  26/  26]	Loss 0.279 (0.286)	test_acc   0.89 (  0.87)	test_minacc   0.78 (  0.80)	test_majacc   0.91 (  0.88)	Loss_d 0.279 (0.286)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.91 (  0.88)	test_corr_d   0.67 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.96it/s]
Test: [  0/  1]	Loss 1.835 (1.835)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.80 (  0.80)	Loss_d 1.835 (1.835)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.835 (1.835)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.80 (  0.80)	Loss_d 1.835 (1.835)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.29 (  0.29)
Overall Timing[ 36/  1]	epoch_time 0.0427 (0.0458)	validation_time 0.0005 (0.0006)	train_time 0.0422 (0.0448)
record: (train_acc, test_acc) (0.8771000284552574, 0.44700002670288086)
last accs (train_acc, test_acc) (0.8701000198125839, 0.44300001859664917)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.96it/s] 15%|#5        | 4/26 [00:00<00:01, 19.10it/s] 27%|##6       | 7/26 [00:00<00:00, 22.96it/s] 38%|###8      | 10/26 [00:00<00:00, 24.91it/s] 50%|#####     | 13/26 [00:00<00:00, 25.44it/s] 62%|######1   | 16/26 [00:00<00:00, 26.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.46it/s] 85%|########4 | 22/26 [00:00<00:00, 26.83it/s] 96%|#########6| 25/26 [00:00<00:00, 27.10it/s]100%|##########| 26/26 [00:01<00:00, 24.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.002 (0.001)	train_nll   0.24 (  0.25)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.91 (  0.89)	train_minacc   0.75 (  0.81)	train_majacc   0.94 (  0.90)	train_corr   0.00 (  0.00)	l1 22.6992 (22.7161)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.12it/s] 19%|#9        | 5/26 [00:00<00:00, 22.70it/s]                                               19%|#9        | 5/26 [00:00<00:00, 22.70it/s] 42%|####2     | 11/26 [00:00<00:00, 36.48it/s] 62%|######1   | 16/26 [00:00<00:00, 38.46it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.46it/s] 81%|########  | 21/26 [00:00<00:00, 40.77it/s]100%|##########| 26/26 [00:00<00:00, 43.47it/s]100%|##########| 26/26 [00:00<00:00, 35.48it/s]
Test: [   0/  26]	Loss 0.281 (0.281)	test_acc   0.87 (  0.87)	test_minacc   0.74 (  0.74)	test_majacc   0.89 (  0.89)	Loss_d 0.281 (0.281)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.284 (0.276)	test_acc   0.88 (  0.88)	test_minacc   0.75 (  0.77)	test_majacc   0.90 (  0.89)	Loss_d 0.284 (0.276)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.75 (  0.77)	test_majacc_d   0.90 (  0.89)	test_corr_d   0.68 (  0.67)
Test: [  20/  26]	Loss 0.259 (0.272)	test_acc   0.89 (  0.88)	test_minacc   0.78 (  0.79)	test_majacc   0.91 (  0.90)	Loss_d 0.259 (0.272)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.91 (  0.90)	test_corr_d   0.68 (  0.66)
Test: [  26/  26]	Loss 0.286 (0.273)	test_acc   0.88 (  0.88)	test_minacc   0.68 (  0.78)	test_majacc   0.92 (  0.90)	Loss_d 0.286 (0.273)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.68 (  0.78)	test_majacc_d   0.92 (  0.90)	test_corr_d   0.73 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.83it/s]
Test: [  0/  1]	Loss 1.983 (1.983)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.85 (  0.85)	Loss_d 1.983 (1.983)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.983 (1.983)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.85 (  0.85)	Loss_d 1.983 (1.983)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.29 (  0.29)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/64/checkpoints/model_best.pth
Overall Timing[ 37/  1]	epoch_time 0.0453 (0.0458)	validation_time 0.0004 (0.0006)	train_time 0.0448 (0.0448)
record: (train_acc, test_acc) (0.8801000271439552, 0.4570000171661377)
last accs (train_acc, test_acc) (0.8801000271439552, 0.4570000171661377)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.43it/s] 12%|#1        | 3/26 [00:00<00:02, 10.22it/s] 23%|##3       | 6/26 [00:00<00:01, 16.28it/s] 35%|###4      | 9/26 [00:00<00:00, 20.22it/s] 46%|####6     | 12/26 [00:00<00:00, 21.98it/s] 58%|#####7    | 15/26 [00:01<00:00, 11.72it/s] 69%|######9   | 18/26 [00:01<00:00, 14.36it/s] 81%|########  | 21/26 [00:01<00:00, 16.84it/s] 92%|#########2| 24/26 [00:01<00:00, 19.40it/s]100%|##########| 26/26 [00:01<00:00, 16.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.001 (0.003)	train_nll   0.20 (  0.25)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.94 (  0.89)	train_minacc   0.75 (  0.78)	train_majacc   0.97 (  0.92)	train_corr   0.00 (  0.00)	l1 22.6603 (22.6666)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.76it/s] 23%|##3       | 6/26 [00:00<00:00, 26.80it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.80it/s] 42%|####2     | 11/26 [00:00<00:00, 33.99it/s] 62%|######1   | 16/26 [00:00<00:00, 38.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.47it/s] 81%|########  | 21/26 [00:00<00:00, 39.32it/s]100%|##########| 26/26 [00:00<00:00, 41.73it/s]100%|##########| 26/26 [00:00<00:00, 34.15it/s]
Test: [   0/  26]	Loss 0.277 (0.277)	test_acc   0.86 (  0.86)	test_minacc   0.59 (  0.59)	test_majacc   0.91 (  0.91)	Loss_d 0.277 (0.277)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.245 (0.241)	test_acc   0.90 (  0.90)	test_minacc   0.62 (  0.70)	test_majacc   0.94 (  0.93)	Loss_d 0.245 (0.241)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.62 (  0.70)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.76 (  0.75)
Test: [  20/  26]	Loss 0.245 (0.254)	test_acc   0.89 (  0.89)	test_minacc   0.70 (  0.68)	test_majacc   0.93 (  0.93)	Loss_d 0.245 (0.254)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.70 (  0.68)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.72 (  0.74)
Test: [  26/  26]	Loss 0.209 (0.249)	test_acc   0.92 (  0.90)	test_minacc   0.73 (  0.68)	test_majacc   0.96 (  0.93)	Loss_d 0.209 (0.249)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.73 (  0.68)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.75 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.83it/s]
Test: [  0/  1]	Loss 2.526 (2.526)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.88 (  0.88)	Loss_d 2.526 (2.526)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 2.526 (2.526)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.88 (  0.88)	Loss_d 2.526 (2.526)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.48 (  0.48)
Overall Timing[ 38/  1]	epoch_time 0.0501 (0.0459)	validation_time 0.0005 (0.0006)	train_time 0.0496 (0.0449)
record: (train_acc, test_acc) (0.8801000271439552, 0.4570000171661377)
last accs (train_acc, test_acc) (0.8958000181317329, 0.36500000953674316)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.88it/s] 15%|#5        | 4/26 [00:00<00:01, 17.06it/s] 27%|##6       | 7/26 [00:00<00:00, 20.94it/s] 38%|###8      | 10/26 [00:00<00:00, 21.94it/s] 50%|#####     | 13/26 [00:00<00:00, 23.14it/s] 62%|######1   | 16/26 [00:00<00:00, 24.50it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.11it/s] 85%|########4 | 22/26 [00:00<00:00, 26.48it/s] 96%|#########6| 25/26 [00:01<00:00, 26.82it/s]100%|##########| 26/26 [00:01<00:00, 22.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.004 (0.002)	train_nll   0.33 (  0.26)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.85 (  0.89)	train_minacc   0.80 (  0.84)	train_majacc   0.86 (  0.90)	train_corr   0.00 (  0.00)	l1 22.6249 (22.6297)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.60it/s] 23%|##3       | 6/26 [00:00<00:01, 19.25it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.25it/s] 42%|####2     | 11/26 [00:00<00:00, 28.13it/s] 62%|######1   | 16/26 [00:00<00:00, 34.48it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.48it/s] 81%|########  | 21/26 [00:00<00:00, 35.45it/s]100%|##########| 26/26 [00:00<00:00, 39.16it/s]100%|##########| 26/26 [00:00<00:00, 28.73it/s]
Test: [   0/  26]	Loss 0.334 (0.334)	test_acc   0.84 (  0.84)	test_minacc   0.81 (  0.81)	test_majacc   0.85 (  0.85)	Loss_d 0.334 (0.334)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.321 (0.331)	test_acc   0.85 (  0.84)	test_minacc   0.73 (  0.81)	test_majacc   0.87 (  0.85)	Loss_d 0.321 (0.331)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.73 (  0.81)	test_majacc_d   0.87 (  0.85)	test_corr_d   0.63 (  0.59)
Test: [  20/  26]	Loss 0.314 (0.335)	test_acc   0.84 (  0.84)	test_minacc   0.86 (  0.80)	test_majacc   0.84 (  0.85)	Loss_d 0.314 (0.335)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.86 (  0.80)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.56 (  0.58)
Test: [  26/  26]	Loss 0.267 (0.334)	test_acc   0.86 (  0.84)	test_minacc   0.78 (  0.79)	test_majacc   0.87 (  0.85)	Loss_d 0.267 (0.334)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.87 (  0.85)	test_corr_d   0.62 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.41it/s]
Test: [  0/  1]	Loss 1.983 (1.983)	test_acc   0.43 (  0.43)	test_minacc   0.39 (  0.39)	test_majacc   0.80 (  0.80)	Loss_d 1.983 (1.983)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.983 (1.983)	test_acc   0.43 (  0.43)	test_minacc   0.39 (  0.39)	test_majacc   0.80 (  0.80)	Loss_d 1.983 (1.983)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.34 (  0.34)
Overall Timing[ 39/  1]	epoch_time 0.0436 (0.0459)	validation_time 0.0004 (0.0006)	train_time 0.0432 (0.0449)
record: (train_acc, test_acc) (0.8801000271439552, 0.4570000171661377)
last accs (train_acc, test_acc) (0.8410000295042992, 0.4280000329017639)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.94it/s] 19%|#9        | 5/26 [00:00<00:01, 20.05it/s] 31%|###       | 8/26 [00:00<00:00, 22.23it/s] 42%|####2     | 11/26 [00:00<00:00, 23.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.49it/s] 65%|######5   | 17/26 [00:00<00:00, 25.17it/s] 77%|#######6  | 20/26 [00:00<00:00, 25.70it/s] 88%|########8 | 23/26 [00:00<00:00, 26.05it/s]100%|##########| 26/26 [00:01<00:00, 26.65it/s]100%|##########| 26/26 [00:01<00:00, 23.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.003 (0.002)	train_nll   0.19 (  0.25)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.93 (  0.89)	train_minacc   0.88 (  0.81)	train_majacc   0.94 (  0.90)	train_corr   0.00 (  0.00)	l1 22.5988 (22.6061)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.05it/s] 19%|#9        | 5/26 [00:00<00:00, 24.15it/s] 38%|###8      | 10/26 [00:00<00:00, 34.50it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.50it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.75it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.75it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.75it/s] 96%|#########6| 25/26 [00:00<00:00, 42.53it/s]100%|##########| 26/26 [00:00<00:00, 35.85it/s]
Test: [   0/  26]	Loss 0.233 (0.233)	test_acc   0.90 (  0.90)	test_minacc   0.84 (  0.84)	test_majacc   0.91 (  0.91)	Loss_d 0.233 (0.233)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.300 (0.267)	test_acc   0.87 (  0.88)	test_minacc   0.71 (  0.78)	test_majacc   0.90 (  0.90)	Loss_d 0.300 (0.267)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.71 (  0.78)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.66 (  0.67)
Test: [  20/  26]	Loss 0.271 (0.272)	test_acc   0.88 (  0.88)	test_minacc   0.78 (  0.79)	test_majacc   0.90 (  0.90)	Loss_d 0.271 (0.272)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.63 (  0.65)
Test: [  26/  26]	Loss 0.182 (0.263)	test_acc   0.92 (  0.88)	test_minacc   0.82 (  0.80)	test_majacc   0.94 (  0.90)	Loss_d 0.182 (0.263)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.94 (  0.90)	test_corr_d   0.70 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.29it/s]
Test: [  0/  1]	Loss 1.964 (1.964)	test_acc   0.45 (  0.45)	test_minacc   0.41 (  0.41)	test_majacc   0.81 (  0.81)	Loss_d 1.964 (1.964)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 1.964 (1.964)	test_acc   0.45 (  0.45)	test_minacc   0.41 (  0.41)	test_majacc   0.81 (  0.81)	Loss_d 1.964 (1.964)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.27 (  0.27)
Overall Timing[ 40/  1]	epoch_time 0.0436 (0.0458)	validation_time 0.0004 (0.0006)	train_time 0.0432 (0.0448)
record: (train_acc, test_acc) (0.8801000271439552, 0.4570000171661377)
last accs (train_acc, test_acc) (0.8844000188112259, 0.4540000259876251)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.25it/s] 15%|#5        | 4/26 [00:00<00:01, 16.60it/s] 27%|##6       | 7/26 [00:00<00:00, 20.39it/s] 38%|###8      | 10/26 [00:00<00:00, 22.69it/s] 50%|#####     | 13/26 [00:00<00:00, 24.33it/s] 62%|######1   | 16/26 [00:00<00:00, 25.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.98it/s] 85%|########4 | 22/26 [00:00<00:00, 26.84it/s] 96%|#########6| 25/26 [00:01<00:00, 26.95it/s]100%|##########| 26/26 [00:01<00:00, 23.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.002 (0.002)	train_nll   0.24 (  0.26)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.90 (  0.89)	train_minacc   0.90 (  0.80)	train_majacc   0.90 (  0.90)	train_corr   0.00 (  0.00)	l1 22.5767 (22.5821)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.55it/s] 31%|###       | 8/26 [00:00<00:00, 34.42it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.03it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.03it/s] 92%|#########2| 24/26 [00:00<00:00, 44.91it/s]100%|##########| 26/26 [00:00<00:00, 38.09it/s]
Test: [   0/  26]	Loss 0.285 (0.285)	test_acc   0.85 (  0.85)	test_minacc   0.67 (  0.67)	test_majacc   0.88 (  0.88)	Loss_d 0.285 (0.285)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.268 (0.266)	test_acc   0.87 (  0.87)	test_minacc   0.71 (  0.79)	test_majacc   0.90 (  0.89)	Loss_d 0.268 (0.266)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.71 (  0.79)	test_majacc_d   0.90 (  0.89)	test_corr_d   0.69 (  0.68)
Test: [  20/  26]	Loss 0.282 (0.279)	test_acc   0.85 (  0.87)	test_minacc   0.84 (  0.78)	test_majacc   0.86 (  0.88)	Loss_d 0.282 (0.279)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.86 (  0.88)	test_corr_d   0.62 (  0.66)
Test: [  26/  26]	Loss 0.262 (0.279)	test_acc   0.90 (  0.87)	test_minacc   0.80 (  0.78)	test_majacc   0.91 (  0.88)	Loss_d 0.262 (0.279)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.80 (  0.78)	test_majacc_d   0.91 (  0.88)	test_corr_d   0.70 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.48it/s]
Test: [  0/  1]	Loss 1.947 (1.947)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.82 (  0.82)	Loss_d 1.947 (1.947)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.947 (1.947)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.82 (  0.82)	Loss_d 1.947 (1.947)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.25 (  0.25)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/64/checkpoints/model_best.pth
Overall Timing[ 41/  1]	epoch_time 0.0430 (0.0457)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0448)
record: (train_acc, test_acc) (0.8691000257730483, 0.4870000183582306)
last accs (train_acc, test_acc) (0.8691000257730483, 0.4870000183582306)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 14.34it/s] 23%|##3       | 6/26 [00:00<00:01, 19.90it/s] 35%|###4      | 9/26 [00:00<00:00, 22.33it/s] 46%|####6     | 12/26 [00:00<00:00, 23.97it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.01it/s] 69%|######9   | 18/26 [00:00<00:00, 25.73it/s] 81%|########  | 21/26 [00:00<00:00, 26.01it/s] 92%|#########2| 24/26 [00:00<00:00, 26.40it/s]100%|##########| 26/26 [00:01<00:00, 23.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.002 (0.001)	train_nll   0.26 (  0.26)	train_penalty   0.00 (  0.00)	weight_norm   9.87 (  9.87)	train_acc   0.92 (  0.88)	train_minacc   0.80 (  0.79)	train_majacc   0.94 (  0.90)	train_corr   0.00 (  0.00)	l1 22.5441 (22.5686)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.46it/s] 23%|##3       | 6/26 [00:00<00:00, 21.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.47it/s] 42%|####2     | 11/26 [00:00<00:00, 27.89it/s] 62%|######1   | 16/26 [00:00<00:00, 33.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.58it/s] 81%|########  | 21/26 [00:00<00:00, 37.85it/s]100%|##########| 26/26 [00:00<00:00, 40.03it/s]100%|##########| 26/26 [00:00<00:00, 30.53it/s]
Test: [   0/  26]	Loss 0.229 (0.229)	test_acc   0.90 (  0.90)	test_minacc   0.79 (  0.79)	test_majacc   0.92 (  0.92)	Loss_d 0.229 (0.229)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.248 (0.237)	test_acc   0.88 (  0.90)	test_minacc   0.68 (  0.77)	test_majacc   0.92 (  0.92)	Loss_d 0.248 (0.237)	test_acc_d   0.88 (  0.90)	test_minacc_d   0.68 (  0.77)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.74 (  0.72)
Test: [  20/  26]	Loss 0.240 (0.249)	test_acc   0.91 (  0.89)	test_minacc   0.83 (  0.78)	test_majacc   0.92 (  0.91)	Loss_d 0.240 (0.249)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.83 (  0.78)	test_majacc_d   0.92 (  0.91)	test_corr_d   0.67 (  0.70)
Test: [  26/  26]	Loss 0.245 (0.249)	test_acc   0.92 (  0.89)	test_minacc   0.78 (  0.77)	test_majacc   0.95 (  0.91)	Loss_d 0.245 (0.249)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.78 (  0.77)	test_majacc_d   0.95 (  0.91)	test_corr_d   0.73 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.04it/s]
Test: [  0/  1]	Loss 2.272 (2.272)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.85 (  0.85)	Loss_d 2.272 (2.272)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 2.272 (2.272)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.85 (  0.85)	Loss_d 2.272 (2.272)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.43 (  0.43)
Overall Timing[ 42/  1]	epoch_time 0.0471 (0.0458)	validation_time 0.0004 (0.0006)	train_time 0.0467 (0.0448)
record: (train_acc, test_acc) (0.8691000257730483, 0.4870000183582306)
last accs (train_acc, test_acc) (0.8920000243782997, 0.3970000147819519)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 15%|#5        | 4/26 [00:00<00:01, 17.54it/s] 27%|##6       | 7/26 [00:00<00:00, 21.09it/s] 38%|###8      | 10/26 [00:00<00:00, 23.19it/s] 50%|#####     | 13/26 [00:00<00:00, 24.40it/s] 62%|######1   | 16/26 [00:00<00:00, 25.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.65it/s] 85%|########4 | 22/26 [00:00<00:00, 26.07it/s] 96%|#########6| 25/26 [00:01<00:00, 26.00it/s]