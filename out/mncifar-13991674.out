hello
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_201157-r0tegz0k
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/r0tegz0k
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1187
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5951, 3, 32, 32) (6049, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:38,  1.52s/it] 19%|#9        | 5/26 [00:01<00:05,  4.01it/s] 35%|###4      | 9/26 [00:01<00:02,  7.87it/s] 50%|#####     | 13/26 [00:01<00:01, 11.94it/s] 65%|######5   | 17/26 [00:01<00:00, 15.99it/s] 81%|########  | 21/26 [00:02<00:00, 19.69it/s] 96%|#########6| 25/26 [00:02<00:00, 22.96it/s]100%|##########| 26/26 [00:02<00:00, 10.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.437 (0.624)	train_nll   0.44 (  0.62)	train_penalty   0.06 (  0.46)	weight_norm  20.83 ( 18.05)	train_acc   0.85 (  0.79)	train_minacc   0.00 (  0.07)	train_majacc   0.99 (  0.92)	train_corr   0.00 (  0.00)	l1 7.8390 (9.1284)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.55it/s] 23%|##3       | 6/26 [00:00<00:00, 29.31it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.31it/s] 42%|####2     | 11/26 [00:00<00:00, 36.20it/s] 62%|######1   | 16/26 [00:00<00:00, 40.29it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.29it/s] 81%|########  | 21/26 [00:00<00:00, 38.83it/s]100%|##########| 26/26 [00:00<00:00, 41.80it/s]100%|##########| 26/26 [00:00<00:00, 34.94it/s]
Test: [   0/  26]	Loss 0.390 (0.390)	test_acc   0.86 (  0.86)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.390 (0.390)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.419 (0.415)	test_acc   0.84 (  0.85)	test_minacc   0.03 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.419 (0.415)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.03 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.98)
Test: [  20/  26]	Loss 0.434 (0.418)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.434 (0.418)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.429 (0.420)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.429 (0.420)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]
Test: [  0/  1]	Loss 1.637 (1.637)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 1.637 (1.637)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.637 (1.637)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 1.637 (1.637)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0747 (0.0747)	validation_time 0.0068 (0.0068)	train_time 0.0655 (0.0655)
record: (train_acc, test_acc) (0.8460000264644623, 0.10200000554323196)
last accs (train_acc, test_acc) (0.8460000264644623, 0.10200000554323196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.44it/s] 15%|#5        | 4/26 [00:00<00:01, 20.00it/s] 31%|###       | 8/26 [00:00<00:00, 27.36it/s] 46%|####6     | 12/26 [00:00<00:00, 30.71it/s] 62%|######1   | 16/26 [00:00<00:00, 31.10it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.83it/s] 92%|#########2| 24/26 [00:00<00:00, 33.64it/s]100%|##########| 26/26 [00:00<00:00, 29.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.418 (0.417)	train_nll   0.42 (  0.42)	train_penalty   0.06 (  0.06)	weight_norm  21.98 ( 21.62)	train_acc   0.85 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 7.6893 (7.7302)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.43it/s] 23%|##3       | 6/26 [00:00<00:00, 27.23it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.23it/s] 42%|####2     | 11/26 [00:00<00:00, 34.94it/s] 62%|######1   | 16/26 [00:00<00:00, 39.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.25it/s] 81%|########  | 21/26 [00:00<00:00, 37.07it/s]100%|##########| 26/26 [00:00<00:00, 40.12it/s]100%|##########| 26/26 [00:00<00:00, 33.23it/s]
Test: [   0/  26]	Loss 0.384 (0.384)	test_acc   0.86 (  0.86)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.384 (0.384)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.407 (0.403)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.407 (0.403)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.97)
Test: [  20/  26]	Loss 0.410 (0.405)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.410 (0.405)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.417 (0.407)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.417 (0.407)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.06it/s]
Test: [  0/  1]	Loss 1.687 (1.687)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 1.687 (1.687)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.687 (1.687)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 1.687 (1.687)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Overall Timing[  1/  1]	epoch_time 0.0405 (0.0576)	validation_time 0.0003 (0.0036)	train_time 0.0401 (0.0528)
record: (train_acc, test_acc) (0.8460000264644623, 0.10200000554323196)
last accs (train_acc, test_acc) (0.8483000242114067, 0.10000000149011612)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.18it/s]  8%|7         | 2/26 [00:00<00:03,  7.81it/s] 23%|##3       | 6/26 [00:00<00:01, 19.66it/s] 38%|###8      | 10/26 [00:00<00:00, 25.91it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.44it/s] 69%|######9   | 18/26 [00:00<00:00, 31.67it/s] 85%|########4 | 22/26 [00:00<00:00, 32.93it/s]100%|##########| 26/26 [00:00<00:00, 34.29it/s]100%|##########| 26/26 [00:00<00:00, 27.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.423 (0.407)	train_nll   0.42 (  0.41)	train_penalty   0.05 (  0.06)	weight_norm  22.09 ( 22.05)	train_acc   0.85 (  0.85)	train_minacc   0.03 (  0.01)	train_majacc   0.99 (  1.00)	train_corr   0.00 (  0.00)	l1 7.6741 (7.6657)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.14it/s] 23%|##3       | 6/26 [00:00<00:00, 29.67it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.67it/s] 42%|####2     | 11/26 [00:00<00:00, 36.59it/s] 62%|######1   | 16/26 [00:00<00:00, 40.85it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.85it/s] 81%|########  | 21/26 [00:00<00:00, 41.64it/s]100%|##########| 26/26 [00:00<00:00, 36.84it/s]
Test: [   0/  26]	Loss 0.377 (0.377)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.377 (0.377)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.398 (0.394)	test_acc   0.85 (  0.85)	test_minacc   0.07 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.398 (0.394)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.07 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.398 (0.395)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.398 (0.395)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.412 (0.396)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.412 (0.396)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.24it/s]
Test: [  0/  1]	Loss 1.606 (1.606)	test_acc   0.11 (  0.11)	test_minacc   0.02 (  0.02)	test_majacc   0.98 (  0.98)	Loss_d 1.606 (1.606)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.606 (1.606)	test_acc   0.11 (  0.11)	test_minacc   0.02 (  0.02)	test_majacc   0.98 (  0.98)	Loss_d 1.606 (1.606)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0425 (0.0526)	validation_time 0.0004 (0.0025)	train_time 0.0420 (0.0492)
record: (train_acc, test_acc) (0.8501000277996064, 0.1120000034570694)
last accs (train_acc, test_acc) (0.8501000277996064, 0.1120000034570694)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.34it/s] 15%|#5        | 4/26 [00:00<00:01, 15.52it/s] 31%|###       | 8/26 [00:00<00:00, 23.19it/s] 46%|####6     | 12/26 [00:00<00:00, 28.09it/s] 62%|######1   | 16/26 [00:00<00:00, 31.34it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.23it/s] 92%|#########2| 24/26 [00:00<00:00, 34.58it/s]100%|##########| 26/26 [00:00<00:00, 27.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.385 (0.395)	train_nll   0.39 (  0.40)	train_penalty   0.04 (  0.05)	weight_norm  22.12 ( 22.10)	train_acc   0.86 (  0.85)	train_minacc   0.06 (  0.02)	train_majacc   0.99 (  1.00)	train_corr   0.00 (  0.00)	l1 7.7660 (7.6868)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.74it/s] 23%|##3       | 6/26 [00:00<00:01, 15.88it/s]                                               23%|##3       | 6/26 [00:00<00:01, 15.88it/s] 42%|####2     | 11/26 [00:00<00:00, 25.12it/s] 62%|######1   | 16/26 [00:00<00:00, 31.94it/s]                                                62%|######1   | 16/26 [00:00<00:00, 31.94it/s] 81%|########  | 21/26 [00:00<00:00, 35.25it/s]100%|##########| 26/26 [00:00<00:00, 27.81it/s]
Test: [   0/  26]	Loss 0.343 (0.343)	test_acc   0.86 (  0.86)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 0.343 (0.343)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.368 (0.366)	test_acc   0.87 (  0.86)	test_minacc   0.20 (  0.10)	test_majacc   0.99 (  0.99)	Loss_d 0.368 (0.366)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.20 (  0.10)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.376 (0.370)	test_acc   0.85 (  0.85)	test_minacc   0.07 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.376 (0.370)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.07 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.93)
Test: [  26/  26]	Loss 0.361 (0.370)	test_acc   0.86 (  0.85)	test_minacc   0.08 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.361 (0.370)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.08 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.77it/s]
Test: [  0/  1]	Loss 1.655 (1.655)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   0.97 (  0.97)	Loss_d 1.655 (1.655)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.88)
Test: [  1/  1]	Loss 1.655 (1.655)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   0.97 (  0.97)	Loss_d 1.655 (1.655)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.88)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0430 (0.0502)	validation_time 0.0005 (0.0020)	train_time 0.0425 (0.0475)
record: (train_acc, test_acc) (0.8511000276207924, 0.15200001001358032)
last accs (train_acc, test_acc) (0.8511000276207924, 0.15200001001358032)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.94it/s]  8%|7         | 2/26 [00:00<00:03,  6.34it/s] 19%|#9        | 5/26 [00:00<00:01, 13.81it/s] 35%|###4      | 9/26 [00:00<00:00, 21.94it/s] 50%|#####     | 13/26 [00:00<00:00, 26.09it/s] 65%|######5   | 17/26 [00:00<00:00, 29.77it/s] 81%|########  | 21/26 [00:00<00:00, 32.12it/s] 96%|#########6| 25/26 [00:00<00:00, 33.56it/s]100%|##########| 26/26 [00:01<00:00, 24.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.357 (0.383)	train_nll   0.36 (  0.38)	train_penalty   0.02 (  0.05)	weight_norm  22.16 ( 22.14)	train_acc   0.86 (  0.85)	train_minacc   0.17 (  0.05)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 7.8703 (7.7245)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.93it/s] 23%|##3       | 6/26 [00:00<00:01, 18.90it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.90it/s] 42%|####2     | 11/26 [00:00<00:00, 28.04it/s] 62%|######1   | 16/26 [00:00<00:00, 34.14it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.14it/s] 81%|########  | 21/26 [00:00<00:00, 37.79it/s]100%|##########| 26/26 [00:00<00:00, 40.37it/s]100%|##########| 26/26 [00:00<00:00, 30.04it/s]
Test: [   0/  26]	Loss 0.324 (0.324)	test_acc   0.87 (  0.87)	test_minacc   0.19 (  0.19)	test_majacc   0.97 (  0.97)	Loss_d 0.324 (0.324)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.353 (0.348)	test_acc   0.86 (  0.86)	test_minacc   0.18 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 0.353 (0.348)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.18 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.360 (0.355)	test_acc   0.87 (  0.85)	test_minacc   0.14 (  0.14)	test_majacc   1.00 (  0.98)	Loss_d 0.360 (0.355)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.14 (  0.14)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.92 (  0.91)
Test: [  26/  26]	Loss 0.334 (0.354)	test_acc   0.88 (  0.85)	test_minacc   0.19 (  0.14)	test_majacc   0.99 (  0.98)	Loss_d 0.334 (0.354)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.19 (  0.14)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.71it/s]
Test: [  0/  1]	Loss 1.700 (1.700)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.98 (  0.98)	Loss_d 1.700 (1.700)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.700 (1.700)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.98 (  0.98)	Loss_d 1.700 (1.700)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.84 (  0.84)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0392 (0.0480)	validation_time 0.0003 (0.0017)	train_time 0.0388 (0.0458)
record: (train_acc, test_acc) (0.853300025999546, 0.1720000058412552)
last accs (train_acc, test_acc) (0.853300025999546, 0.1720000058412552)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.88it/s] 12%|#1        | 3/26 [00:00<00:01, 12.09it/s] 27%|##6       | 7/26 [00:00<00:00, 21.59it/s] 42%|####2     | 11/26 [00:00<00:00, 26.73it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.46it/s] 88%|########8 | 23/26 [00:00<00:00, 33.57it/s]100%|##########| 26/26 [00:00<00:00, 27.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.318 (0.365)	train_nll   0.32 (  0.37)	train_penalty   0.01 (  0.04)	weight_norm  22.22 ( 22.19)	train_acc   0.88 (  0.85)	train_minacc   0.36 (  0.11)	train_majacc   0.96 (  0.98)	train_corr   0.00 (  0.00)	l1 7.8248 (7.8184)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.75it/s] 31%|###       | 8/26 [00:00<00:00, 37.38it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.38it/s] 50%|#####     | 13/26 [00:00<00:00, 41.18it/s] 69%|######9   | 18/26 [00:00<00:00, 40.04it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.04it/s] 88%|########8 | 23/26 [00:00<00:00, 42.01it/s]100%|##########| 26/26 [00:00<00:00, 37.95it/s]
Test: [   0/  26]	Loss 0.318 (0.318)	test_acc   0.87 (  0.87)	test_minacc   0.34 (  0.34)	test_majacc   0.95 (  0.95)	Loss_d 0.318 (0.318)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.329 (0.334)	test_acc   0.86 (  0.86)	test_minacc   0.27 (  0.26)	test_majacc   0.97 (  0.96)	Loss_d 0.329 (0.334)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.27 (  0.26)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.87 (  0.88)
Test: [  20/  26]	Loss 0.345 (0.342)	test_acc   0.87 (  0.86)	test_minacc   0.22 (  0.26)	test_majacc   0.98 (  0.96)	Loss_d 0.345 (0.342)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.22 (  0.26)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.300 (0.338)	test_acc   0.89 (  0.86)	test_minacc   0.33 (  0.26)	test_majacc   0.99 (  0.96)	Loss_d 0.300 (0.338)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.33 (  0.26)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.88 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.61it/s]
Test: [  0/  1]	Loss 1.711 (1.711)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.95 (  0.95)	Loss_d 1.711 (1.711)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.75 (  0.75)
Test: [  1/  1]	Loss 1.711 (1.711)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.95 (  0.95)	Loss_d 1.711 (1.711)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.75 (  0.75)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0390 (0.0465)	validation_time 0.0004 (0.0015)	train_time 0.0385 (0.0446)
record: (train_acc, test_acc) (0.8567000181674957, 0.23200000822544098)
last accs (train_acc, test_acc) (0.8567000181674957, 0.23200000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.68it/s] 23%|##3       | 6/26 [00:00<00:00, 22.54it/s] 38%|###8      | 10/26 [00:00<00:00, 27.37it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.61it/s] 69%|######9   | 18/26 [00:00<00:00, 31.02it/s] 85%|########4 | 22/26 [00:00<00:00, 32.50it/s]100%|##########| 26/26 [00:00<00:00, 33.26it/s]100%|##########| 26/26 [00:00<00:00, 28.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.301 (0.347)	train_nll   0.30 (  0.35)	train_penalty   0.01 (  0.03)	weight_norm  22.28 ( 22.25)	train_acc   0.87 (  0.85)	train_minacc   0.31 (  0.15)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 7.4620 (7.6005)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.89it/s] 19%|#9        | 5/26 [00:00<00:01, 20.81it/s] 38%|###8      | 10/26 [00:00<00:00, 28.00it/s]                                                38%|###8      | 10/26 [00:00<00:00, 28.00it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.18it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.92it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.92it/s] 96%|#########6| 25/26 [00:00<00:00, 41.10it/s]100%|##########| 26/26 [00:00<00:00, 32.24it/s]
Test: [   0/  26]	Loss 0.342 (0.342)	test_acc   0.86 (  0.86)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 0.342 (0.342)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.335 (0.332)	test_acc   0.85 (  0.86)	test_minacc   0.38 (  0.34)	test_majacc   0.94 (  0.95)	Loss_d 0.335 (0.332)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.38 (  0.34)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.85 (  0.87)
Test: [  20/  26]	Loss 0.360 (0.340)	test_acc   0.85 (  0.85)	test_minacc   0.27 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 0.360 (0.340)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.27 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.89 (  0.87)
Test: [  26/  26]	Loss 0.292 (0.336)	test_acc   0.88 (  0.85)	test_minacc   0.39 (  0.34)	test_majacc   0.96 (  0.95)	Loss_d 0.292 (0.336)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.39 (  0.34)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.69it/s]
Test: [  0/  1]	Loss 1.649 (1.649)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 1.649 (1.649)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 1.649 (1.649)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 1.649 (1.649)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.76 (  0.76)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0400 (0.0456)	validation_time 0.0004 (0.0013)	train_time 0.0396 (0.0439)
record: (train_acc, test_acc) (0.8547000189423561, 0.26200002431869507)
last accs (train_acc, test_acc) (0.8547000189423561, 0.26200002431869507)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.85it/s] 19%|#9        | 5/26 [00:00<00:00, 21.11it/s] 35%|###4      | 9/26 [00:00<00:00, 25.94it/s] 50%|#####     | 13/26 [00:00<00:00, 29.08it/s] 65%|######5   | 17/26 [00:00<00:00, 30.92it/s] 81%|########  | 21/26 [00:00<00:00, 32.22it/s] 96%|#########6| 25/26 [00:00<00:00, 33.36it/s]100%|##########| 26/26 [00:00<00:00, 27.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.271 (0.329)	train_nll   0.27 (  0.33)	train_penalty   0.01 (  0.03)	weight_norm  22.34 ( 22.31)	train_acc   0.88 (  0.86)	train_minacc   0.39 (  0.25)	train_majacc   0.96 (  0.97)	train_corr   0.00 (  0.00)	l1 7.2616 (7.4331)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.97it/s] 19%|#9        | 5/26 [00:00<00:00, 22.92it/s] 38%|###8      | 10/26 [00:00<00:00, 33.08it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.86it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.07it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.07it/s] 96%|#########6| 25/26 [00:00<00:00, 39.98it/s]100%|##########| 26/26 [00:00<00:00, 33.25it/s]
Test: [   0/  26]	Loss 0.314 (0.314)	test_acc   0.87 (  0.87)	test_minacc   0.45 (  0.45)	test_majacc   0.93 (  0.93)	Loss_d 0.314 (0.314)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.313 (0.305)	test_acc   0.86 (  0.87)	test_minacc   0.43 (  0.43)	test_majacc   0.93 (  0.94)	Loss_d 0.313 (0.305)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.84 (  0.86)
Test: [  20/  26]	Loss 0.330 (0.314)	test_acc   0.87 (  0.86)	test_minacc   0.42 (  0.42)	test_majacc   0.95 (  0.94)	Loss_d 0.330 (0.314)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.87 (  0.86)
Test: [  26/  26]	Loss 0.258 (0.311)	test_acc   0.88 (  0.86)	test_minacc   0.42 (  0.42)	test_majacc   0.96 (  0.94)	Loss_d 0.258 (0.311)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.86 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.12it/s]
Test: [  0/  1]	Loss 1.688 (1.688)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.95 (  0.95)	Loss_d 1.688 (1.688)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 1.688 (1.688)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.95 (  0.95)	Loss_d 1.688 (1.688)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.69 (  0.69)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0399 (0.0449)	validation_time 0.0004 (0.0012)	train_time 0.0395 (0.0433)
record: (train_acc, test_acc) (0.8633000244498252, 0.3320000171661377)
last accs (train_acc, test_acc) (0.8633000244498252, 0.3320000171661377)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.75it/s] 12%|#1        | 3/26 [00:00<00:01, 14.77it/s] 27%|##6       | 7/26 [00:00<00:00, 23.93it/s] 42%|####2     | 11/26 [00:00<00:00, 28.62it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.66it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.71it/s] 88%|########8 | 23/26 [00:00<00:00, 33.14it/s]100%|##########| 26/26 [00:00<00:00, 27.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.257 (0.311)	train_nll   0.26 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.42 ( 22.38)	train_acc   0.90 (  0.86)	train_minacc   0.58 (  0.34)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.4538 (7.4942)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.82it/s] 15%|#5        | 4/26 [00:00<00:01, 19.97it/s] 35%|###4      | 9/26 [00:00<00:00, 31.33it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.33it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.44it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.44it/s] 92%|#########2| 24/26 [00:00<00:00, 40.23it/s]100%|##########| 26/26 [00:00<00:00, 34.59it/s]
Test: [   0/  26]	Loss 0.301 (0.301)	test_acc   0.89 (  0.89)	test_minacc   0.49 (  0.49)	test_majacc   0.95 (  0.95)	Loss_d 0.301 (0.301)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.268 (0.290)	test_acc   0.86 (  0.88)	test_minacc   0.42 (  0.48)	test_majacc   0.94 (  0.95)	Loss_d 0.268 (0.290)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.42 (  0.48)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.84 (  0.85)
Test: [  20/  26]	Loss 0.312 (0.300)	test_acc   0.85 (  0.87)	test_minacc   0.39 (  0.44)	test_majacc   0.94 (  0.95)	Loss_d 0.312 (0.300)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.39 (  0.44)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.86 (  0.85)
Test: [  26/  26]	Loss 0.232 (0.297)	test_acc   0.90 (  0.87)	test_minacc   0.56 (  0.45)	test_majacc   0.96 (  0.95)	Loss_d 0.232 (0.297)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.56 (  0.45)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.83 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.53it/s]
Test: [  0/  1]	Loss 1.793 (1.793)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.98 (  0.98)	Loss_d 1.793 (1.793)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 1.793 (1.793)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.98 (  0.98)	Loss_d 1.793 (1.793)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.65 (  0.65)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0401 (0.0443)	validation_time 0.0004 (0.0011)	train_time 0.0397 (0.0429)
record: (train_acc, test_acc) (0.8716000258326531, 0.3400000035762787)
last accs (train_acc, test_acc) (0.8716000258326531, 0.3400000035762787)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  9.72it/s] 23%|##3       | 6/26 [00:00<00:00, 20.72it/s] 38%|###8      | 10/26 [00:00<00:00, 25.80it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.65it/s] 69%|######9   | 18/26 [00:00<00:00, 31.41it/s] 85%|########4 | 22/26 [00:00<00:00, 33.63it/s]100%|##########| 26/26 [00:00<00:00, 34.16it/s]100%|##########| 26/26 [00:00<00:00, 27.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.225 (0.299)	train_nll   0.23 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.51 ( 22.46)	train_acc   0.90 (  0.87)	train_minacc   0.64 (  0.40)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5211 (7.5059)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.30it/s] 27%|##6       | 7/26 [00:00<00:00, 26.04it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.04it/s] 46%|####6     | 12/26 [00:00<00:00, 33.95it/s] 65%|######5   | 17/26 [00:00<00:00, 38.00it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.00it/s] 85%|########4 | 22/26 [00:00<00:00, 40.76it/s]100%|##########| 26/26 [00:00<00:00, 34.41it/s]
Test: [   0/  26]	Loss 0.294 (0.294)	test_acc   0.88 (  0.88)	test_minacc   0.58 (  0.58)	test_majacc   0.92 (  0.92)	Loss_d 0.294 (0.294)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.285 (0.279)	test_acc   0.86 (  0.88)	test_minacc   0.58 (  0.57)	test_majacc   0.91 (  0.94)	Loss_d 0.285 (0.279)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.91 (  0.94)	test_corr_d   0.80 (  0.82)
Test: [  20/  26]	Loss 0.276 (0.282)	test_acc   0.88 (  0.88)	test_minacc   0.56 (  0.57)	test_majacc   0.94 (  0.94)	Loss_d 0.276 (0.282)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.56 (  0.57)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.82 (  0.82)
Test: [  26/  26]	Loss 0.190 (0.276)	test_acc   0.94 (  0.88)	test_minacc   0.78 (  0.59)	test_majacc   0.96 (  0.94)	Loss_d 0.190 (0.276)	test_acc_d   0.94 (  0.88)	test_minacc_d   0.78 (  0.59)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.80 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.51it/s]
Test: [  0/  1]	Loss 1.750 (1.750)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.94 (  0.94)	Loss_d 1.750 (1.750)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 1.750 (1.750)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.94 (  0.94)	Loss_d 1.750 (1.750)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.58 (  0.58)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0436 (0.0443)	validation_time 0.0005 (0.0011)	train_time 0.0431 (0.0429)
record: (train_acc, test_acc) (0.884400021970272, 0.3790000081062317)
last accs (train_acc, test_acc) (0.884400021970272, 0.3790000081062317)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.87it/s] 19%|#9        | 5/26 [00:00<00:00, 23.31it/s] 35%|###4      | 9/26 [00:00<00:00, 29.15it/s] 50%|#####     | 13/26 [00:00<00:00, 31.31it/s] 65%|######5   | 17/26 [00:00<00:00, 32.49it/s] 81%|########  | 21/26 [00:00<00:00, 33.61it/s] 96%|#########6| 25/26 [00:00<00:00, 34.38it/s]100%|##########| 26/26 [00:00<00:00, 29.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.225 (0.286)	train_nll   0.22 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.63 ( 22.57)	train_acc   0.91 (  0.88)	train_minacc   0.58 (  0.45)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5172 (7.6342)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.75it/s] 35%|###4      | 9/26 [00:00<00:00, 39.61it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.11it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.89it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.89it/s] 92%|#########2| 24/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 38.38it/s]
Test: [   0/  26]	Loss 0.282 (0.282)	test_acc   0.89 (  0.89)	test_minacc   0.64 (  0.64)	test_majacc   0.93 (  0.93)	Loss_d 0.282 (0.282)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.269 (0.277)	test_acc   0.88 (  0.88)	test_minacc   0.52 (  0.55)	test_majacc   0.94 (  0.94)	Loss_d 0.269 (0.277)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.52 (  0.55)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.81 (  0.83)
Test: [  20/  26]	Loss 0.274 (0.282)	test_acc   0.89 (  0.88)	test_minacc   0.56 (  0.53)	test_majacc   0.95 (  0.95)	Loss_d 0.274 (0.282)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.56 (  0.53)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  26/  26]	Loss 0.191 (0.276)	test_acc   0.94 (  0.89)	test_minacc   0.75 (  0.55)	test_majacc   0.97 (  0.95)	Loss_d 0.191 (0.276)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.75 (  0.55)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.81 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.13it/s]
Test: [  0/  1]	Loss 1.815 (1.815)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.94 (  0.94)	Loss_d 1.815 (1.815)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 1.815 (1.815)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.94 (  0.94)	Loss_d 1.815 (1.815)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.62 (  0.62)
Overall Timing[ 10/  1]	epoch_time 0.0396 (0.0438)	validation_time 0.0003 (0.0010)	train_time 0.0393 (0.0426)
record: (train_acc, test_acc) (0.884400021970272, 0.3790000081062317)
last accs (train_acc, test_acc) (0.8874000217914582, 0.32500001788139343)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.11it/s] 19%|#9        | 5/26 [00:00<00:00, 22.19it/s] 35%|###4      | 9/26 [00:00<00:00, 27.76it/s] 50%|#####     | 13/26 [00:00<00:00, 30.40it/s] 65%|######5   | 17/26 [00:00<00:00, 31.82it/s] 81%|########  | 21/26 [00:00<00:00, 32.80it/s] 96%|#########6| 25/26 [00:00<00:00, 32.82it/s]100%|##########| 26/26 [00:00<00:00, 28.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.227 (0.290)	train_nll   0.23 (  0.29)	train_penalty   0.01 (  0.02)	weight_norm  22.80 ( 22.71)	train_acc   0.90 (  0.88)	train_minacc   0.42 (  0.46)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.2813 (7.7106)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.92it/s] 12%|#1        | 3/26 [00:00<00:02,  7.78it/s] 31%|###       | 8/26 [00:00<00:00, 19.73it/s]                                               31%|###       | 8/26 [00:00<00:00, 19.73it/s] 50%|#####     | 13/26 [00:00<00:00, 27.72it/s] 69%|######9   | 18/26 [00:00<00:00, 32.10it/s]                                                69%|######9   | 18/26 [00:00<00:00, 32.10it/s] 88%|########8 | 23/26 [00:00<00:00, 35.38it/s]100%|##########| 26/26 [00:01<00:00, 25.78it/s]
Test: [   0/  26]	Loss 0.308 (0.308)	test_acc   0.89 (  0.89)	test_minacc   0.49 (  0.49)	test_majacc   0.95 (  0.95)	Loss_d 0.308 (0.308)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.261 (0.290)	test_acc   0.90 (  0.88)	test_minacc   0.48 (  0.48)	test_majacc   0.98 (  0.95)	Loss_d 0.261 (0.290)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.83 (  0.85)
Test: [  20/  26]	Loss 0.280 (0.293)	test_acc   0.88 (  0.88)	test_minacc   0.42 (  0.45)	test_majacc   0.96 (  0.95)	Loss_d 0.280 (0.293)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.42 (  0.45)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.87 (  0.85)
Test: [  26/  26]	Loss 0.213 (0.289)	test_acc   0.92 (  0.88)	test_minacc   0.61 (  0.46)	test_majacc   0.98 (  0.95)	Loss_d 0.213 (0.289)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.61 (  0.46)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.85 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.23it/s]
Test: [  0/  1]	Loss 1.837 (1.837)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 1.837 (1.837)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.67 (  0.67)
Test: [  1/  1]	Loss 1.837 (1.837)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 1.837 (1.837)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.67 (  0.67)
Overall Timing[ 11/  1]	epoch_time 0.0425 (0.0437)	validation_time 0.0004 (0.0009)	train_time 0.0420 (0.0426)
record: (train_acc, test_acc) (0.884400021970272, 0.3790000081062317)
last accs (train_acc, test_acc) (0.879400020480156, 0.3050000071525574)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.03it/s] 23%|##3       | 6/26 [00:00<00:00, 25.27it/s] 38%|###8      | 10/26 [00:00<00:00, 29.00it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.95it/s] 69%|######9   | 18/26 [00:00<00:00, 32.15it/s] 85%|########4 | 22/26 [00:00<00:00, 33.41it/s]100%|##########| 26/26 [00:00<00:00, 34.03it/s]100%|##########| 26/26 [00:00<00:00, 29.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.211 (0.272)	train_nll   0.21 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  22.95 ( 22.88)	train_acc   0.93 (  0.88)	train_minacc   0.69 (  0.51)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.1320 (7.5780)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.74it/s] 27%|##6       | 7/26 [00:00<00:00, 28.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.70it/s] 46%|####6     | 12/26 [00:00<00:00, 36.05it/s] 65%|######5   | 17/26 [00:00<00:00, 39.93it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.93it/s] 85%|########4 | 22/26 [00:00<00:00, 40.73it/s]100%|##########| 26/26 [00:00<00:00, 35.52it/s]
Test: [   0/  26]	Loss 0.258 (0.258)	test_acc   0.88 (  0.88)	test_minacc   0.40 (  0.40)	test_majacc   0.96 (  0.96)	Loss_d 0.258 (0.258)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.248 (0.242)	test_acc   0.89 (  0.90)	test_minacc   0.50 (  0.49)	test_majacc   0.96 (  0.97)	Loss_d 0.248 (0.242)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.85 (  0.87)
Test: [  20/  26]	Loss 0.246 (0.242)	test_acc   0.90 (  0.90)	test_minacc   0.58 (  0.50)	test_majacc   0.96 (  0.97)	Loss_d 0.246 (0.242)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.85 (  0.86)
Test: [  26/  26]	Loss 0.186 (0.242)	test_acc   0.94 (  0.90)	test_minacc   0.67 (  0.51)	test_majacc   0.99 (  0.97)	Loss_d 0.186 (0.242)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.67 (  0.51)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.85 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.94it/s]
Test: [  0/  1]	Loss 1.831 (1.831)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 1.831 (1.831)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.68 (  0.68)
Test: [  1/  1]	Loss 1.831 (1.831)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 1.831 (1.831)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.68 (  0.68)
Overall Timing[ 12/  1]	epoch_time 0.0450 (0.0438)	validation_time 0.0004 (0.0009)	train_time 0.0446 (0.0427)
record: (train_acc, test_acc) (0.884400021970272, 0.3790000081062317)
last accs (train_acc, test_acc) (0.8980000202059746, 0.3060000240802765)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.24it/s] 12%|#1        | 3/26 [00:00<00:02,  8.13it/s] 27%|##6       | 7/26 [00:00<00:01, 17.27it/s] 42%|####2     | 11/26 [00:00<00:00, 23.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.67it/s] 88%|########8 | 23/26 [00:00<00:00, 31.63it/s]100%|##########| 26/26 [00:01<00:00, 23.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.184 (0.254)	train_nll   0.18 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.14 ( 23.04)	train_acc   0.92 (  0.89)	train_minacc   0.67 (  0.55)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.1120 (7.7452)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.66it/s] 19%|#9        | 5/26 [00:00<00:01, 19.62it/s] 38%|###8      | 10/26 [00:00<00:00, 30.06it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.06it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.43it/s] 77%|#######6  | 20/26 [00:00<00:00, 35.72it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 35.72it/s] 96%|#########6| 25/26 [00:00<00:00, 39.00it/s]100%|##########| 26/26 [00:00<00:00, 31.91it/s]
Test: [   0/  26]	Loss 0.259 (0.259)	test_acc   0.88 (  0.88)	test_minacc   0.38 (  0.38)	test_majacc   0.96 (  0.96)	Loss_d 0.259 (0.259)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.229 (0.252)	test_acc   0.90 (  0.89)	test_minacc   0.47 (  0.46)	test_majacc   0.98 (  0.97)	Loss_d 0.229 (0.252)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.47 (  0.46)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.85 (  0.86)
Test: [  20/  26]	Loss 0.237 (0.251)	test_acc   0.89 (  0.89)	test_minacc   0.44 (  0.47)	test_majacc   0.97 (  0.97)	Loss_d 0.237 (0.251)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.44 (  0.47)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
Test: [  26/  26]	Loss 0.155 (0.246)	test_acc   0.94 (  0.90)	test_minacc   0.67 (  0.48)	test_majacc   0.99 (  0.97)	Loss_d 0.155 (0.246)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.67 (  0.48)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.83 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.40it/s]
Test: [  0/  1]	Loss 1.940 (1.940)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.94 (  0.94)	Loss_d 1.940 (1.940)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 1.940 (1.940)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.94 (  0.94)	Loss_d 1.940 (1.940)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.72 (  0.72)
Overall Timing[ 13/  1]	epoch_time 0.0406 (0.0436)	validation_time 0.0003 (0.0009)	train_time 0.0403 (0.0425)
record: (train_acc, test_acc) (0.884400021970272, 0.3790000081062317)
last accs (train_acc, test_acc) (0.8971000237464904, 0.26500001549720764)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.40it/s] 15%|#5        | 4/26 [00:00<00:01, 15.81it/s] 31%|###       | 8/26 [00:00<00:00, 23.54it/s] 46%|####6     | 12/26 [00:00<00:00, 27.22it/s] 62%|######1   | 16/26 [00:00<00:00, 29.68it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.40it/s] 92%|#########2| 24/26 [00:00<00:00, 32.66it/s]100%|##########| 26/26 [00:00<00:00, 27.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.157 (0.242)	train_nll   0.16 (  0.24)	train_penalty   0.01 (  0.01)	weight_norm  23.38 ( 23.25)	train_acc   0.94 (  0.90)	train_minacc   0.78 (  0.60)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5222 (7.8325)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.73it/s] 27%|##6       | 7/26 [00:00<00:00, 27.75it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.75it/s] 42%|####2     | 11/26 [00:00<00:00, 32.42it/s] 62%|######1   | 16/26 [00:00<00:00, 37.19it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.19it/s] 81%|########  | 21/26 [00:00<00:00, 40.63it/s]100%|##########| 26/26 [00:00<00:00, 42.94it/s]100%|##########| 26/26 [00:00<00:00, 34.11it/s]
Test: [   0/  26]	Loss 0.228 (0.228)	test_acc   0.88 (  0.88)	test_minacc   0.47 (  0.47)	test_majacc   0.95 (  0.95)	Loss_d 0.228 (0.228)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.240 (0.237)	test_acc   0.91 (  0.90)	test_minacc   0.55 (  0.54)	test_majacc   0.98 (  0.97)	Loss_d 0.240 (0.237)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.55 (  0.54)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  20/  26]	Loss 0.205 (0.235)	test_acc   0.93 (  0.90)	test_minacc   0.66 (  0.55)	test_majacc   0.98 (  0.97)	Loss_d 0.205 (0.235)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.66 (  0.55)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.83 (  0.85)
Test: [  26/  26]	Loss 0.124 (0.228)	test_acc   0.97 (  0.91)	test_minacc   0.92 (  0.57)	test_majacc   0.98 (  0.97)	Loss_d 0.124 (0.228)	test_acc_d   0.97 (  0.91)	test_minacc_d   0.92 (  0.57)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.82 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.53it/s]
Test: [  0/  1]	Loss 2.146 (2.146)	test_acc   0.29 (  0.29)	test_minacc   0.21 (  0.21)	test_majacc   0.94 (  0.94)	Loss_d 2.146 (2.146)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 2.146 (2.146)	test_acc   0.29 (  0.29)	test_minacc   0.21 (  0.21)	test_majacc   0.94 (  0.94)	Loss_d 2.146 (2.146)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.72 (  0.72)
Overall Timing[ 14/  1]	epoch_time 0.0377 (0.0432)	validation_time 0.0006 (0.0008)	train_time 0.0370 (0.0422)
record: (train_acc, test_acc) (0.884400021970272, 0.3790000081062317)
last accs (train_acc, test_acc) (0.9060000208616257, 0.28600001335144043)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.25it/s] 23%|##3       | 6/26 [00:00<00:00, 25.06it/s] 38%|###8      | 10/26 [00:00<00:00, 29.40it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.93it/s] 69%|######9   | 18/26 [00:00<00:00, 32.92it/s] 85%|########4 | 22/26 [00:00<00:00, 33.57it/s]100%|##########| 26/26 [00:00<00:00, 34.72it/s]100%|##########| 26/26 [00:00<00:00, 30.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.002 (0.091)	train_nll   0.31 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  23.59 ( 23.50)	train_acc   0.85 (  0.88)	train_minacc   0.72 (  0.67)	train_majacc   0.87 (  0.92)	train_corr   0.00 (  0.00)	l1 6.6090 (7.5662)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.24it/s] 23%|##3       | 6/26 [00:00<00:01, 17.45it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.45it/s] 42%|####2     | 11/26 [00:00<00:00, 26.38it/s] 62%|######1   | 16/26 [00:00<00:00, 32.48it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.48it/s] 81%|########  | 21/26 [00:00<00:00, 33.14it/s]100%|##########| 26/26 [00:00<00:00, 36.94it/s]100%|##########| 26/26 [00:00<00:00, 27.56it/s]
Test: [   0/  26]	Loss 0.380 (0.380)	test_acc   0.82 (  0.82)	test_minacc   0.72 (  0.72)	test_majacc   0.83 (  0.83)	Loss_d 0.380 (0.380)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.369 (0.332)	test_acc   0.82 (  0.85)	test_minacc   0.68 (  0.75)	test_majacc   0.84 (  0.87)	Loss_d 0.369 (0.332)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.68 (  0.75)	test_majacc_d   0.84 (  0.87)	test_corr_d   0.66 (  0.67)
Test: [  20/  26]	Loss 0.360 (0.335)	test_acc   0.82 (  0.85)	test_minacc   0.66 (  0.73)	test_majacc   0.85 (  0.87)	Loss_d 0.360 (0.335)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.66 (  0.73)	test_majacc_d   0.85 (  0.87)	test_corr_d   0.67 (  0.67)
Test: [  26/  26]	Loss 0.340 (0.338)	test_acc   0.84 (  0.85)	test_minacc   0.72 (  0.73)	test_majacc   0.86 (  0.87)	Loss_d 0.340 (0.338)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.72 (  0.73)	test_majacc_d   0.86 (  0.87)	test_corr_d   0.66 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.90it/s]
Test: [  0/  1]	Loss 1.369 (1.369)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.92 (  0.92)	Loss_d 1.369 (1.369)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.369 (1.369)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.92 (  0.92)	Loss_d 1.369 (1.369)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.33 (  0.33)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0463 (0.0434)	validation_time 0.0005 (0.0008)	train_time 0.0458 (0.0424)
record: (train_acc, test_acc) (0.8465000239014625, 0.47200003266334534)
last accs (train_acc, test_acc) (0.8465000239014625, 0.47200003266334534)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 19%|#9        | 5/26 [00:00<00:00, 22.89it/s] 35%|###4      | 9/26 [00:00<00:00, 27.97it/s] 50%|#####     | 13/26 [00:00<00:00, 30.44it/s] 65%|######5   | 17/26 [00:00<00:00, 32.04it/s] 81%|########  | 21/26 [00:00<00:00, 33.06it/s] 96%|#########6| 25/26 [00:00<00:00, 34.08it/s]100%|##########| 26/26 [00:00<00:00, 29.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.001 (0.002)	train_nll   0.45 (  0.43)	train_penalty   0.00 (  0.00)	weight_norm  23.64 ( 23.62)	train_acc   0.76 (  0.79)	train_minacc   0.78 (  0.77)	train_majacc   0.76 (  0.79)	train_corr   0.00 (  0.00)	l1 5.6377 (6.0442)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 19%|#9        | 5/26 [00:00<00:00, 23.19it/s] 38%|###8      | 10/26 [00:00<00:00, 33.01it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.01it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.40it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.13it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.13it/s] 96%|#########6| 25/26 [00:00<00:00, 40.78it/s]100%|##########| 26/26 [00:00<00:00, 33.58it/s]
Test: [   0/  26]	Loss 0.443 (0.443)	test_acc   0.76 (  0.76)	test_minacc   0.81 (  0.81)	test_majacc   0.75 (  0.75)	Loss_d 0.443 (0.443)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.442 (0.413)	test_acc   0.78 (  0.78)	test_minacc   0.72 (  0.81)	test_majacc   0.79 (  0.78)	Loss_d 0.442 (0.413)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.72 (  0.81)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.57 (  0.57)
Test: [  20/  26]	Loss 0.417 (0.416)	test_acc   0.79 (  0.78)	test_minacc   0.78 (  0.79)	test_majacc   0.79 (  0.78)	Loss_d 0.417 (0.416)	test_acc_d   0.79 (  0.78)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.57 (  0.57)
Test: [  26/  26]	Loss 0.437 (0.419)	test_acc   0.77 (  0.78)	test_minacc   0.78 (  0.79)	test_majacc   0.77 (  0.78)	Loss_d 0.437 (0.419)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.54 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.67it/s]
Test: [  0/  1]	Loss 1.049 (1.049)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.85 (  0.85)	Loss_d 1.049 (1.049)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 1.049 (1.049)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.85 (  0.85)	Loss_d 1.049 (1.049)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.20 (  0.20)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0435 (0.0434)	validation_time 0.0005 (0.0008)	train_time 0.0430 (0.0424)
record: (train_acc, test_acc) (0.780600026845932, 0.6010000109672546)
last accs (train_acc, test_acc) (0.780600026845932, 0.6010000109672546)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.33it/s] 19%|#9        | 5/26 [00:00<00:01, 14.51it/s] 35%|###4      | 9/26 [00:00<00:00, 21.42it/s] 50%|#####     | 13/26 [00:00<00:00, 25.77it/s] 65%|######5   | 17/26 [00:00<00:00, 29.02it/s] 81%|########  | 21/26 [00:00<00:00, 31.30it/s] 96%|#########6| 25/26 [00:00<00:00, 32.62it/s]100%|##########| 26/26 [00:01<00:00, 24.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.004 (0.003)	train_nll   0.53 (  0.45)	train_penalty   0.00 (  0.00)	weight_norm  23.65 ( 23.65)	train_acc   0.70 (  0.76)	train_minacc   0.69 (  0.78)	train_majacc   0.71 (  0.75)	train_corr   0.00 (  0.00)	l1 5.6910 (5.6482)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.14it/s] 23%|##3       | 6/26 [00:00<00:00, 29.86it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.86it/s] 42%|####2     | 11/26 [00:00<00:00, 36.83it/s] 62%|######1   | 16/26 [00:00<00:00, 39.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.93it/s] 81%|########  | 21/26 [00:00<00:00, 38.14it/s]100%|##########| 26/26 [00:00<00:00, 41.28it/s]100%|##########| 26/26 [00:00<00:00, 35.34it/s]
Test: [   0/  26]	Loss 0.489 (0.489)	test_acc   0.73 (  0.73)	test_minacc   0.85 (  0.85)	test_majacc   0.71 (  0.71)	Loss_d 0.489 (0.489)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.473 (0.456)	test_acc   0.75 (  0.75)	test_minacc   0.77 (  0.80)	test_majacc   0.75 (  0.74)	Loss_d 0.473 (0.456)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.77 (  0.80)	test_majacc_d   0.75 (  0.74)	test_corr_d   0.52 (  0.50)
Test: [  20/  26]	Loss 0.447 (0.460)	test_acc   0.73 (  0.75)	test_minacc   0.76 (  0.79)	test_majacc   0.73 (  0.74)	Loss_d 0.447 (0.460)	test_acc_d   0.73 (  0.75)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.50 (  0.50)
Test: [  26/  26]	Loss 0.497 (0.463)	test_acc   0.70 (  0.75)	test_minacc   0.69 (  0.78)	test_majacc   0.71 (  0.74)	Loss_d 0.497 (0.463)	test_acc_d   0.70 (  0.75)	test_minacc_d   0.69 (  0.78)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.47 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.06it/s]
Test: [  0/  1]	Loss 1.035 (1.035)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.83 (  0.83)	Loss_d 1.035 (1.035)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.035 (1.035)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.83 (  0.83)	Loss_d 1.035 (1.035)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.12 (  0.12)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0393 (0.0432)	validation_time 0.0004 (0.0008)	train_time 0.0389 (0.0422)
record: (train_acc, test_acc) (0.7451000359058381, 0.6290000081062317)
last accs (train_acc, test_acc) (0.7451000359058381, 0.6290000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 19%|#9        | 5/26 [00:00<00:00, 22.20it/s] 35%|###4      | 9/26 [00:00<00:00, 27.89it/s] 50%|#####     | 13/26 [00:00<00:00, 30.46it/s] 65%|######5   | 17/26 [00:00<00:00, 32.18it/s] 81%|########  | 21/26 [00:00<00:00, 33.81it/s] 96%|#########6| 25/26 [00:00<00:00, 34.36it/s]100%|##########| 26/26 [00:00<00:00, 29.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.002)	train_nll   0.46 (  0.45)	train_penalty   0.00 (  0.00)	weight_norm  23.66 ( 23.66)	train_acc   0.71 (  0.75)	train_minacc   0.75 (  0.79)	train_majacc   0.70 (  0.74)	train_corr   0.00 (  0.00)	l1 5.6342 (5.5991)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.74it/s] 19%|#9        | 5/26 [00:00<00:00, 23.87it/s] 38%|###8      | 10/26 [00:00<00:00, 33.95it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.20it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.27it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.27it/s] 96%|#########6| 25/26 [00:00<00:00, 41.72it/s]100%|##########| 26/26 [00:00<00:00, 35.22it/s]
Test: [   0/  26]	Loss 0.481 (0.481)	test_acc   0.73 (  0.73)	test_minacc   0.83 (  0.83)	test_majacc   0.71 (  0.71)	Loss_d 0.481 (0.481)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.461 (0.460)	test_acc   0.76 (  0.74)	test_minacc   0.77 (  0.80)	test_majacc   0.76 (  0.73)	Loss_d 0.461 (0.460)	test_acc_d   0.76 (  0.74)	test_minacc_d   0.77 (  0.80)	test_majacc_d   0.76 (  0.73)	test_corr_d   0.52 (  0.50)
Test: [  20/  26]	Loss 0.452 (0.460)	test_acc   0.72 (  0.74)	test_minacc   0.75 (  0.79)	test_majacc   0.72 (  0.73)	Loss_d 0.452 (0.460)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.75 (  0.79)	test_majacc_d   0.72 (  0.73)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.470 (0.462)	test_acc   0.71 (  0.74)	test_minacc   0.78 (  0.79)	test_majacc   0.70 (  0.73)	Loss_d 0.470 (0.462)	test_acc_d   0.71 (  0.74)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.70 (  0.73)	test_corr_d   0.47 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.85it/s]
Test: [  0/  1]	Loss 1.073 (1.073)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.80 (  0.80)	Loss_d 1.073 (1.073)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.073 (1.073)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.80 (  0.80)	Loss_d 1.073 (1.073)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.11 (  0.11)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/139/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0377 (0.0429)	validation_time 0.0006 (0.0008)	train_time 0.0370 (0.0420)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.16it/s] 23%|##3       | 6/26 [00:00<00:00, 27.28it/s] 38%|###8      | 10/26 [00:00<00:00, 29.89it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.28it/s] 69%|######9   | 18/26 [00:00<00:00, 32.22it/s] 85%|########4 | 22/26 [00:00<00:00, 33.25it/s]100%|##########| 26/26 [00:00<00:00, 34.38it/s]100%|##########| 26/26 [00:00<00:00, 30.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.47 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  23.66 ( 23.66)	train_acc   0.72 (  0.74)	train_minacc   0.81 (  0.79)	train_majacc   0.71 (  0.73)	train_corr   0.00 (  0.00)	l1 5.5858 (5.6196)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.99it/s] 23%|##3       | 6/26 [00:00<00:00, 20.28it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.28it/s] 42%|####2     | 11/26 [00:00<00:00, 29.10it/s] 62%|######1   | 16/26 [00:00<00:00, 34.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.99it/s] 81%|########  | 21/26 [00:00<00:00, 35.00it/s]100%|##########| 26/26 [00:00<00:00, 38.61it/s]100%|##########| 26/26 [00:00<00:00, 29.83it/s]
Test: [   0/  26]	Loss 0.459 (0.459)	test_acc   0.75 (  0.75)	test_minacc   0.83 (  0.83)	test_majacc   0.74 (  0.74)	Loss_d 0.459 (0.459)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.452 (0.447)	test_acc   0.77 (  0.75)	test_minacc   0.75 (  0.78)	test_majacc   0.77 (  0.74)	Loss_d 0.452 (0.447)	test_acc_d   0.77 (  0.75)	test_minacc_d   0.75 (  0.78)	test_majacc_d   0.77 (  0.74)	test_corr_d   0.54 (  0.53)
Test: [  20/  26]	Loss 0.447 (0.448)	test_acc   0.73 (  0.75)	test_minacc   0.76 (  0.77)	test_majacc   0.73 (  0.74)	Loss_d 0.447 (0.448)	test_acc_d   0.73 (  0.75)	test_minacc_d   0.76 (  0.77)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.52 (  0.53)
Test: [  26/  26]	Loss 0.467 (0.450)	test_acc   0.72 (  0.74)	test_minacc   0.81 (  0.78)	test_majacc   0.71 (  0.74)	Loss_d 0.467 (0.450)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.81 (  0.78)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.50 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.47it/s]
Test: [  0/  1]	Loss 1.084 (1.084)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.81 (  0.81)	Loss_d 1.084 (1.084)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.084 (1.084)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.81 (  0.81)	Loss_d 1.084 (1.084)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.16 (  0.16)
Overall Timing[ 19/  1]	epoch_time 0.0427 (0.0429)	validation_time 0.0004 (0.0008)	train_time 0.0423 (0.0420)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.7428000342249871, 0.6170000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.34it/s] 23%|##3       | 6/26 [00:00<00:00, 24.98it/s] 38%|###8      | 10/26 [00:00<00:00, 28.20it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.62it/s] 69%|######9   | 18/26 [00:00<00:00, 30.87it/s] 85%|########4 | 22/26 [00:00<00:00, 32.58it/s]100%|##########| 26/26 [00:00<00:00, 33.25it/s]100%|##########| 26/26 [00:00<00:00, 28.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.47 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  23.66 ( 23.66)	train_acc   0.73 (  0.74)	train_minacc   0.83 (  0.79)	train_majacc   0.71 (  0.73)	train_corr   0.00 (  0.00)	l1 5.6242 (5.6126)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.26it/s] 23%|##3       | 6/26 [00:00<00:00, 31.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.57it/s] 42%|####2     | 11/26 [00:00<00:00, 37.93it/s] 62%|######1   | 16/26 [00:00<00:00, 41.97it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.97it/s] 81%|########  | 21/26 [00:00<00:00, 39.27it/s]100%|##########| 26/26 [00:00<00:00, 41.84it/s]100%|##########| 26/26 [00:00<00:00, 36.01it/s]
Test: [   0/  26]	Loss 0.471 (0.471)	test_acc   0.74 (  0.74)	test_minacc   0.83 (  0.83)	test_majacc   0.72 (  0.72)	Loss_d 0.471 (0.471)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.462 (0.457)	test_acc   0.75 (  0.74)	test_minacc   0.77 (  0.81)	test_majacc   0.75 (  0.72)	Loss_d 0.462 (0.457)	test_acc_d   0.75 (  0.74)	test_minacc_d   0.77 (  0.81)	test_majacc_d   0.75 (  0.72)	test_corr_d   0.52 (  0.50)
Test: [  20/  26]	Loss 0.454 (0.457)	test_acc   0.72 (  0.74)	test_minacc   0.76 (  0.80)	test_majacc   0.72 (  0.73)	Loss_d 0.454 (0.457)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.72 (  0.73)	test_corr_d   0.50 (  0.50)
Test: [  26/  26]	Loss 0.471 (0.458)	test_acc   0.73 (  0.74)	test_minacc   0.83 (  0.80)	test_majacc   0.71 (  0.73)	Loss_d 0.471 (0.458)	test_acc_d   0.73 (  0.74)	test_minacc_d   0.83 (  0.80)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.48 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.94it/s]
Test: [  0/  1]	Loss 1.078 (1.078)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.80 (  0.80)	Loss_d 1.078 (1.078)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.078 (1.078)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.80 (  0.80)	Loss_d 1.078 (1.078)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.13 (  0.13)
Overall Timing[ 20/  1]	epoch_time 0.0411 (0.0428)	validation_time 0.0004 (0.0007)	train_time 0.0407 (0.0419)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.7378000302910804, 0.6270000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.59it/s] 19%|#9        | 5/26 [00:00<00:00, 23.70it/s] 35%|###4      | 9/26 [00:00<00:00, 29.02it/s] 50%|#####     | 13/26 [00:00<00:00, 31.62it/s] 65%|######5   | 17/26 [00:00<00:00, 32.61it/s] 81%|########  | 21/26 [00:00<00:00, 33.67it/s] 96%|#########6| 25/26 [00:00<00:00, 34.60it/s]100%|##########| 26/26 [00:00<00:00, 29.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.46 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  23.66 ( 23.66)	train_acc   0.73 (  0.74)	train_minacc   0.83 (  0.80)	train_majacc   0.71 (  0.73)	train_corr   0.00 (  0.00)	l1 5.6430 (5.6360)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.47it/s] 23%|##3       | 6/26 [00:00<00:00, 30.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.47it/s] 42%|####2     | 11/26 [00:00<00:00, 37.43it/s] 62%|######1   | 16/26 [00:00<00:00, 41.34it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.34it/s] 81%|########  | 21/26 [00:00<00:00, 39.31it/s]100%|##########| 26/26 [00:00<00:00, 42.26it/s]100%|##########| 26/26 [00:00<00:00, 35.98it/s]
Test: [   0/  26]	Loss 0.463 (0.463)	test_acc   0.74 (  0.74)	test_minacc   0.83 (  0.83)	test_majacc   0.73 (  0.73)	Loss_d 0.463 (0.463)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.457 (0.453)	test_acc   0.76 (  0.74)	test_minacc   0.77 (  0.80)	test_majacc   0.75 (  0.73)	Loss_d 0.457 (0.453)	test_acc_d   0.76 (  0.74)	test_minacc_d   0.77 (  0.80)	test_majacc_d   0.75 (  0.73)	test_corr_d   0.53 (  0.51)
Test: [  20/  26]	Loss 0.451 (0.452)	test_acc   0.73 (  0.74)	test_minacc   0.76 (  0.79)	test_majacc   0.72 (  0.73)	Loss_d 0.451 (0.452)	test_acc_d   0.73 (  0.74)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.72 (  0.73)	test_corr_d   0.50 (  0.51)
Test: [  26/  26]	Loss 0.465 (0.454)	test_acc   0.73 (  0.74)	test_minacc   0.83 (  0.80)	test_majacc   0.71 (  0.73)	Loss_d 0.465 (0.454)	test_acc_d   0.73 (  0.74)	test_minacc_d   0.83 (  0.80)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.49 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.39it/s]
Test: [  0/  1]	Loss 1.094 (1.094)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.80 (  0.80)	Loss_d 1.094 (1.094)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.094 (1.094)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.80 (  0.80)	Loss_d 1.094 (1.094)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.15 (  0.15)
Overall Timing[ 21/  1]	epoch_time 0.0383 (0.0426)	validation_time 0.0004 (0.0007)	train_time 0.0378 (0.0417)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.7402000315189362, 0.6230000257492065)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.15it/s] 19%|#9        | 5/26 [00:00<00:00, 22.55it/s] 35%|###4      | 9/26 [00:00<00:00, 27.31it/s] 50%|#####     | 13/26 [00:00<00:00, 29.77it/s] 65%|######5   | 17/26 [00:00<00:00, 30.89it/s] 81%|########  | 21/26 [00:00<00:00, 31.98it/s] 96%|#########6| 25/26 [00:00<00:00, 32.51it/s]100%|##########| 26/26 [00:00<00:00, 28.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.46 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  23.66 ( 23.66)	train_acc   0.72 (  0.74)	train_minacc   0.83 (  0.80)	train_majacc   0.71 (  0.73)	train_corr   0.00 (  0.00)	l1 5.6505 (5.6664)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.64it/s] 23%|##3       | 6/26 [00:00<00:00, 26.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.84it/s] 42%|####2     | 11/26 [00:00<00:00, 33.30it/s] 62%|######1   | 16/26 [00:00<00:00, 37.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.55it/s] 81%|########  | 21/26 [00:00<00:00, 37.81it/s]100%|##########| 26/26 [00:00<00:00, 40.83it/s]100%|##########| 26/26 [00:00<00:00, 32.30it/s]
Test: [   0/  26]	Loss 0.457 (0.457)	test_acc   0.75 (  0.75)	test_minacc   0.85 (  0.85)	test_majacc   0.74 (  0.74)	Loss_d 0.457 (0.457)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.453 (0.448)	test_acc   0.75 (  0.74)	test_minacc   0.75 (  0.80)	test_majacc   0.75 (  0.73)	Loss_d 0.453 (0.448)	test_acc_d   0.75 (  0.74)	test_minacc_d   0.75 (  0.80)	test_majacc_d   0.75 (  0.73)	test_corr_d   0.53 (  0.52)
Test: [  20/  26]	Loss 0.447 (0.447)	test_acc   0.73 (  0.75)	test_minacc   0.76 (  0.79)	test_majacc   0.72 (  0.74)	Loss_d 0.447 (0.447)	test_acc_d   0.73 (  0.75)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.72 (  0.74)	test_corr_d   0.51 (  0.52)
Test: [  26/  26]	Loss 0.461 (0.449)	test_acc   0.72 (  0.74)	test_minacc   0.83 (  0.80)	test_majacc   0.71 (  0.73)	Loss_d 0.461 (0.449)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.83 (  0.80)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.49 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.20it/s]
Test: [  0/  1]	Loss 1.100 (1.100)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.81 (  0.81)	Loss_d 1.100 (1.100)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.100 (1.100)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.81 (  0.81)	Loss_d 1.100 (1.100)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.16 (  0.16)
Overall Timing[ 22/  1]	epoch_time 0.0419 (0.0425)	validation_time 0.0004 (0.0007)	train_time 0.0416 (0.0417)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.7424000286459923, 0.6190000176429749)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.32it/s] 23%|##3       | 6/26 [00:00<00:00, 25.80it/s] 35%|###4      | 9/26 [00:00<00:00, 25.02it/s] 50%|#####     | 13/26 [00:00<00:00, 27.06it/s] 65%|######5   | 17/26 [00:00<00:00, 29.49it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.37it/s] 92%|#########2| 24/26 [00:00<00:00, 30.52it/s]100%|##########| 26/26 [00:00<00:00, 27.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 5.638654708862305
set z to 5.582268161773682
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 374 tensor(-0.0074, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 268 tensor(-0.0049, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 199 tensor(0.0189, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 174 tensor(0.0104, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 172 tensor(0.0031, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.001 (0.068)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.07)	weight_norm  25.17 ( 24.07)	train_acc   0.59 (  0.70)	train_minacc   0.56 (  0.55)	train_majacc   0.59 (  0.73)	train_corr   0.00 (  0.00)	l1 6.3613 (6.7651)	zero_count 0.0000 (40.1310)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.67it/s] 27%|##6       | 7/26 [00:00<00:00, 33.76it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.76it/s] 46%|####6     | 12/26 [00:00<00:00, 39.28it/s] 65%|######5   | 17/26 [00:00<00:00, 42.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.11it/s] 85%|########4 | 22/26 [00:00<00:00, 40.25it/s]100%|##########| 26/26 [00:00<00:00, 37.77it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.636 (0.636)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.625 (0.653)	test_acc   0.52 (  0.51)	test_minacc   0.43 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.625 (0.653)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.34 (  0.39)
Test: [  20/  26]	Loss 0.628 (0.650)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.628 (0.650)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
Test: [  26/  26]	Loss 0.649 (0.649)	test_acc   0.54 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.649 (0.649)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.68it/s]
Test: [  0/  1]	Loss 1.532 (1.532)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.532 (1.532)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.532 (1.532)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.532 (1.532)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 23/  1]	epoch_time 0.0419 (0.0425)	validation_time 0.0004 (0.0007)	train_time 0.0415 (0.0417)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.5000000101029873, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 14.11it/s] 27%|##6       | 7/26 [00:00<00:00, 21.83it/s] 42%|####2     | 11/26 [00:00<00:00, 26.80it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.46it/s] 69%|######9   | 18/26 [00:00<00:00, 28.84it/s] 85%|########4 | 22/26 [00:00<00:00, 28.97it/s]100%|##########| 26/26 [00:00<00:00, 30.88it/s]100%|##########| 26/26 [00:00<00:00, 26.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 170 tensor(0.0016, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 172 tensor(0.0024, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 177 tensor(0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 227 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 264 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 274 tensor(-0.0010, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.031 (0.007)	train_nll   0.76 (  0.66)	train_penalty   0.03 (  0.01)	weight_norm  26.52 ( 26.02)	train_acc   0.74 (  0.63)	train_minacc   0.36 (  0.42)	train_majacc   0.81 (  0.67)	train_corr   0.00 (  0.00)	l1 5.7558 (5.8143)	zero_count 0.0000 (73.4760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.66it/s] 27%|##6       | 7/26 [00:00<00:00, 28.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.16it/s] 46%|####6     | 12/26 [00:00<00:00, 35.98it/s] 65%|######5   | 17/26 [00:00<00:00, 36.82it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.82it/s] 85%|########4 | 22/26 [00:00<00:00, 40.36it/s]100%|##########| 26/26 [00:00<00:00, 33.42it/s]
Test: [   0/  26]	Loss 0.650 (0.650)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.650 (0.650)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.727 (0.671)	test_acc   0.52 (  0.51)	test_minacc   0.43 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.727 (0.671)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.30 (  0.36)
Test: [  20/  26]	Loss 0.649 (0.663)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.649 (0.663)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.33 (  0.36)
Test: [  26/  26]	Loss 0.675 (0.661)	test_acc   0.54 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.675 (0.661)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.31 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.92it/s]
Test: [  0/  1]	Loss 1.047 (1.047)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.047 (1.047)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.047 (1.047)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.047 (1.047)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Overall Timing[ 24/  1]	epoch_time 0.0426 (0.0425)	validation_time 0.0005 (0.0007)	train_time 0.0421 (0.0417)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.5000000101029873, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.24it/s] 19%|#9        | 5/26 [00:00<00:01, 20.93it/s] 31%|###       | 8/26 [00:00<00:00, 23.73it/s] 42%|####2     | 11/26 [00:00<00:00, 24.78it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.34it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.18it/s] 88%|########8 | 23/26 [00:00<00:00, 30.09it/s]100%|##########| 26/26 [00:01<00:00, 25.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 289 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 308 tensor(-0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 358 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 343 tensor(-0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 331 tensor(-0.0006, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.003 (0.003)	train_nll   0.70 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  26.92 ( 26.78)	train_acc   0.68 (  0.62)	train_minacc   0.42 (  0.49)	train_majacc   0.72 (  0.64)	train_corr   0.00 (  0.00)	l1 5.5741 (5.5900)	zero_count 0.0000 (38.3370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.42it/s] 27%|##6       | 7/26 [00:00<00:00, 33.02it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.02it/s] 46%|####6     | 12/26 [00:00<00:00, 38.01it/s] 65%|######5   | 17/26 [00:00<00:00, 41.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.35it/s] 85%|########4 | 22/26 [00:00<00:00, 40.19it/s]100%|##########| 26/26 [00:00<00:00, 37.65it/s]
Test: [   0/  26]	Loss 0.671 (0.671)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.671 (0.671)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.668 (0.670)	test_acc   0.52 (  0.51)	test_minacc   0.43 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.668 (0.670)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.23 (  0.25)
Test: [  20/  26]	Loss 0.673 (0.671)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.673 (0.671)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.27 (  0.26)
Test: [  26/  26]	Loss 0.696 (0.672)	test_acc   0.54 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.696 (0.672)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.23 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.70it/s]
Test: [  0/  1]	Loss 0.907 (0.907)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.907 (0.907)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.907 (0.907)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.907 (0.907)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 25/  1]	epoch_time 0.0408 (0.0425)	validation_time 0.0003 (0.0007)	train_time 0.0404 (0.0417)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.5000000101029873, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.18it/s] 19%|#9        | 5/26 [00:00<00:01, 15.00it/s] 35%|###4      | 9/26 [00:00<00:00, 21.99it/s] 46%|####6     | 12/26 [00:00<00:00, 23.89it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.99it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.81it/s] 85%|########4 | 22/26 [00:00<00:00, 26.95it/s]100%|##########| 26/26 [00:01<00:00, 30.05it/s]100%|##########| 26/26 [00:01<00:00, 23.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 328 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 326 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 375 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 388 tensor(-6.0056e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.001)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.98 ( 26.96)	train_acc   0.54 (  0.51)	train_minacc   0.58 (  0.50)	train_majacc   0.54 (  0.51)	train_corr   0.00 (  0.00)	l1 5.5735 (5.5844)	zero_count 0.0000 (31.4730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 23%|##3       | 6/26 [00:00<00:00, 22.37it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.37it/s] 42%|####2     | 11/26 [00:00<00:00, 30.96it/s] 62%|######1   | 16/26 [00:00<00:00, 36.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.40it/s] 81%|########  | 21/26 [00:00<00:00, 37.72it/s]100%|##########| 26/26 [00:00<00:00, 40.77it/s]100%|##########| 26/26 [00:00<00:00, 31.95it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.678 (0.678)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.684 (0.680)	test_acc   0.52 (  0.51)	test_minacc   0.43 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.684 (0.680)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.13 (  0.21)
Test: [  20/  26]	Loss 0.673 (0.681)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.673 (0.681)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.24 (  0.20)
Test: [  26/  26]	Loss 0.683 (0.682)	test_acc   0.54 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.683 (0.682)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.12 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.21it/s]
Test: [  0/  1]	Loss 0.904 (0.904)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.904 (0.904)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 0.904 (0.904)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.904 (0.904)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 26/  1]	epoch_time 0.0437 (0.0425)	validation_time 0.0004 (0.0007)	train_time 0.0433 (0.0417)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.5000000101029873, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 19%|#9        | 5/26 [00:00<00:00, 23.06it/s] 35%|###4      | 9/26 [00:00<00:00, 27.74it/s] 50%|#####     | 13/26 [00:00<00:00, 28.97it/s] 65%|######5   | 17/26 [00:00<00:00, 31.14it/s] 81%|########  | 21/26 [00:00<00:00, 30.26it/s] 96%|#########6| 25/26 [00:00<00:00, 29.84it/s]100%|##########| 26/26 [00:00<00:00, 27.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 363 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 392 tensor(5.5740e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.98)	train_acc   0.54 (  0.53)	train_minacc   0.58 (  0.54)	train_majacc   0.54 (  0.53)	train_corr   0.00 (  0.00)	l1 5.5819 (5.5773)	zero_count 0.0000 (10.4130)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.94it/s] 15%|#5        | 4/26 [00:00<00:02,  9.59it/s] 35%|###4      | 9/26 [00:00<00:00, 20.71it/s]                                               35%|###4      | 9/26 [00:00<00:00, 20.71it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.37it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.87it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 30.87it/s] 92%|#########2| 24/26 [00:00<00:00, 35.44it/s]100%|##########| 26/26 [00:00<00:00, 27.96it/s]
Test: [   0/  26]	Loss 0.681 (0.681)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.681 (0.681)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.682 (0.682)	test_acc   0.52 (  0.51)	test_minacc   0.43 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.682 (0.682)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.14 (  0.13)
Test: [  20/  26]	Loss 0.672 (0.682)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.672 (0.682)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.16 (  0.14)
Test: [  26/  26]	Loss 0.683 (0.683)	test_acc   0.54 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.683 (0.683)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.11 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.90it/s]
Test: [  0/  1]	Loss 0.856 (0.856)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.856 (0.856)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.856 (0.856)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.856 (0.856)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 27/  1]	epoch_time 0.0441 (0.0426)	validation_time 0.0005 (0.0007)	train_time 0.0436 (0.0418)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.5000000101029873, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.41it/s] 19%|#9        | 5/26 [00:00<00:01, 18.45it/s] 35%|###4      | 9/26 [00:00<00:00, 24.65it/s] 50%|#####     | 13/26 [00:00<00:00, 27.75it/s] 65%|######5   | 17/26 [00:00<00:00, 29.42it/s] 81%|########  | 21/26 [00:00<00:00, 30.92it/s] 96%|#########6| 25/26 [00:00<00:00, 31.75it/s]100%|##########| 26/26 [00:00<00:00, 26.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.55 (  0.50)	train_minacc   0.61 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 5.5750 (5.5748)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.79it/s] 15%|#5        | 4/26 [00:00<00:01, 16.17it/s] 35%|###4      | 9/26 [00:00<00:00, 28.55it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.01it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.01it/s] 96%|#########6| 25/26 [00:00<00:00, 40.91it/s]100%|##########| 26/26 [00:00<00:00, 32.99it/s]
Test: [   0/  26]	Loss 0.677 (0.677)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.677 (0.677)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.680 (0.679)	test_acc   0.52 (  0.51)	test_minacc   0.47 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.680 (0.679)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.14 (  0.15)
Test: [  20/  26]	Loss 0.669 (0.679)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.669 (0.679)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.18 (  0.15)
Test: [  26/  26]	Loss 0.682 (0.680)	test_acc   0.55 (  0.50)	test_minacc   0.61 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.682 (0.680)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.61 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.12 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.64it/s]
Test: [  0/  1]	Loss 0.855 (0.855)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.855 (0.855)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.855 (0.855)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.855 (0.855)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 28/  1]	epoch_time 0.0393 (0.0424)	validation_time 0.0005 (0.0006)	train_time 0.0388 (0.0417)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.5002000105082989, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 19%|#9        | 5/26 [00:00<00:00, 22.85it/s] 35%|###4      | 9/26 [00:00<00:00, 26.85it/s] 46%|####6     | 12/26 [00:00<00:00, 26.02it/s] 62%|######1   | 16/26 [00:00<00:00, 28.17it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.75it/s] 92%|#########2| 24/26 [00:00<00:00, 30.91it/s]100%|##########| 26/26 [00:00<00:00, 26.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 426 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.54 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 5.5813 (5.5808)	zero_count 0.0000 (3.3150)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.40it/s] 23%|##3       | 6/26 [00:00<00:00, 24.46it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.46it/s] 42%|####2     | 11/26 [00:00<00:00, 32.77it/s] 65%|######5   | 17/26 [00:00<00:00, 37.51it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.51it/s] 85%|########4 | 22/26 [00:00<00:00, 40.18it/s]100%|##########| 26/26 [00:00<00:00, 32.94it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.678 (0.678)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.681 (0.680)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.681 (0.680)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.14 (  0.15)
Test: [  20/  26]	Loss 0.669 (0.680)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.669 (0.680)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.18 (  0.15)
Test: [  26/  26]	Loss 0.683 (0.681)	test_acc   0.54 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.683 (0.681)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.12 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.10it/s]
Test: [  0/  1]	Loss 0.856 (0.856)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.856 (0.856)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.856 (0.856)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.856 (0.856)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 29/  1]	epoch_time 0.0471 (0.0426)	validation_time 0.0003 (0.0006)	train_time 0.0467 (0.0419)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.4999000089466572, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 19%|#9        | 5/26 [00:00<00:01, 18.78it/s] 31%|###       | 8/26 [00:00<00:00, 21.63it/s] 42%|####2     | 11/26 [00:00<00:00, 23.10it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.61it/s] 69%|######9   | 18/26 [00:00<00:00, 26.24it/s] 81%|########  | 21/26 [00:00<00:00, 25.85it/s] 96%|#########6| 25/26 [00:01<00:00, 28.04it/s]100%|##########| 26/26 [00:01<00:00, 23.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 435 tensor(-5.1345e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 431 tensor(-1.1600e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 430 tensor(-6.6414e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 429 tensor(-6.1579e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 431 tensor(-4.9969e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.54 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 5.5835 (5.5825)	zero_count 0.0000 (12.4410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 19%|#9        | 5/26 [00:00<00:00, 23.23it/s] 38%|###8      | 10/26 [00:00<00:00, 33.69it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.69it/s] 62%|######1   | 16/26 [00:00<00:00, 39.56it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.56it/s] 81%|########  | 21/26 [00:00<00:00, 40.35it/s]100%|##########| 26/26 [00:00<00:00, 42.52it/s]100%|##########| 26/26 [00:00<00:00, 34.58it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.679 (0.679)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.681 (0.680)	test_acc   0.51 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.681 (0.680)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.14 (  0.14)
Test: [  20/  26]	Loss 0.669 (0.680)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.669 (0.680)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.17 (  0.15)
Test: [  26/  26]	Loss 0.683 (0.681)	test_acc   0.54 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.683 (0.681)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.11 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.78it/s]
Test: [  0/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 30/  1]	epoch_time 0.0444 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0440 (0.0419)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.4998000101149082, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.19it/s] 19%|#9        | 5/26 [00:00<00:01, 17.85it/s] 35%|###4      | 9/26 [00:00<00:00, 24.55it/s] 46%|####6     | 12/26 [00:00<00:00, 25.28it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.40it/s] 85%|########4 | 22/26 [00:00<00:00, 27.31it/s] 96%|#########6| 25/26 [00:01<00:00, 26.83it/s]100%|##########| 26/26 [00:01<00:00, 24.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 436 tensor(-3.0738e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 425 tensor(-7.1638e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 426 tensor(-2.3272e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 428 tensor(-2.0685e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 426 tensor(-2.6790e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 426 tensor(-4.6567e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.54 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 5.5823 (5.5830)	zero_count 85.0000 (18.0760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.56it/s] 23%|##3       | 6/26 [00:00<00:00, 22.17it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.17it/s] 42%|####2     | 11/26 [00:00<00:00, 30.71it/s] 62%|######1   | 16/26 [00:00<00:00, 36.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.50it/s] 81%|########  | 21/26 [00:00<00:00, 36.77it/s]100%|##########| 26/26 [00:00<00:00, 40.21it/s]100%|##########| 26/26 [00:00<00:00, 31.25it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.679 (0.679)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.682 (0.680)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.682 (0.680)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.13 (  0.14)
Test: [  20/  26]	Loss 0.670 (0.681)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.670 (0.681)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.17 (  0.14)
Test: [  26/  26]	Loss 0.683 (0.681)	test_acc   0.54 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.683 (0.681)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.11 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.05it/s]
Test: [  0/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 31/  1]	epoch_time 0.0446 (0.0427)	validation_time 0.0005 (0.0006)	train_time 0.0441 (0.0420)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.4999000089466572, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.32it/s] 15%|#5        | 4/26 [00:00<00:01, 14.43it/s] 31%|###       | 8/26 [00:00<00:00, 21.86it/s] 42%|####2     | 11/26 [00:00<00:00, 22.85it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.71it/s] 69%|######9   | 18/26 [00:00<00:00, 27.13it/s] 81%|########  | 21/26 [00:00<00:00, 26.49it/s] 92%|#########2| 24/26 [00:01<00:00, 26.58it/s]100%|##########| 26/26 [00:01<00:00, 22.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 430 tensor(-1.9593e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 423 tensor(-6.2787e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 422 tensor(-3.5103e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 424 tensor(-1.8950e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 421 tensor(-2.6712e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 421 tensor(-1.4057e-06, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.54 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 5.5827 (5.5830)	zero_count 0.0000 (20.2800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 31.47it/s] 35%|###4      | 9/26 [00:00<00:00, 39.59it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.59it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.92it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.92it/s] 92%|#########2| 24/26 [00:00<00:00, 40.28it/s]100%|##########| 26/26 [00:00<00:00, 37.72it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.679 (0.679)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.682 (0.681)	test_acc   0.52 (  0.51)	test_minacc   0.45 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.682 (0.681)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.45 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.13 (  0.14)
Test: [  20/  26]	Loss 0.670 (0.681)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.670 (0.681)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.17 (  0.14)
Test: [  26/  26]	Loss 0.684 (0.682)	test_acc   0.54 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.684 (0.682)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.11 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.91it/s]
Test: [  0/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 32/  1]	epoch_time 0.0466 (0.0428)	validation_time 0.0005 (0.0006)	train_time 0.0461 (0.0421)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.5000000101029873, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.05it/s] 19%|#9        | 5/26 [00:00<00:01, 19.47it/s] 31%|###       | 8/26 [00:00<00:00, 20.80it/s] 46%|####6     | 12/26 [00:00<00:00, 25.91it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.79it/s] 69%|######9   | 18/26 [00:00<00:00, 25.59it/s] 85%|########4 | 22/26 [00:00<00:00, 28.45it/s] 96%|#########6| 25/26 [00:00<00:00, 27.40it/s]100%|##########| 26/26 [00:01<00:00, 24.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 427 tensor(-1.7893e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 422 tensor(-4.9927e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 421 tensor(-4.1887e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 424 tensor(-1.5674e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 423 tensor(-2.1874e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 423 tensor(-1.5081e-06, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.55 (  0.50)	train_minacc   0.61 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 5.5830 (5.5829)	zero_count 0.0000 (20.5920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.78it/s] 19%|#9        | 5/26 [00:00<00:00, 23.87it/s] 38%|###8      | 10/26 [00:00<00:00, 33.96it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.90it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.91it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.91it/s] 96%|#########6| 25/26 [00:00<00:00, 41.37it/s]100%|##########| 26/26 [00:00<00:00, 35.56it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.679 (0.679)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.682 (0.681)	test_acc   0.52 (  0.51)	test_minacc   0.47 (  0.50)	test_majacc   0.53 (  0.51)	Loss_d 0.682 (0.681)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.13 (  0.13)
Test: [  20/  26]	Loss 0.670 (0.681)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.670 (0.681)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.17 (  0.14)
Test: [  26/  26]	Loss 0.684 (0.682)	test_acc   0.55 (  0.50)	test_minacc   0.61 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.684 (0.682)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.61 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.10 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.77it/s]
Test: [  0/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 33/  1]	epoch_time 0.0418 (0.0428)	validation_time 0.0003 (0.0006)	train_time 0.0414 (0.0421)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.5000000103116036, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.45it/s] 15%|#5        | 4/26 [00:00<00:01, 17.47it/s] 27%|##6       | 7/26 [00:00<00:00, 21.16it/s] 42%|####2     | 11/26 [00:00<00:00, 26.48it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.21it/s] 65%|######5   | 17/26 [00:00<00:00, 26.19it/s] 81%|########  | 21/26 [00:00<00:00, 28.92it/s] 92%|#########2| 24/26 [00:00<00:00, 28.48it/s]100%|##########| 26/26 [00:01<00:00, 24.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 425 tensor(-1.4126e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 427 tensor(-3.2844e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 420 tensor(-5.1614e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 423 tensor(-1.3642e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 421 tensor(-2.0599e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 422 tensor(-1.4688e-06, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.56 (  0.50)	train_minacc   0.64 (  0.51)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 5.5834 (5.5829)	zero_count 0.0000 (20.5530)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 23%|##3       | 6/26 [00:00<00:00, 24.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.63it/s] 42%|####2     | 11/26 [00:00<00:00, 33.50it/s] 62%|######1   | 16/26 [00:00<00:00, 38.70it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.70it/s] 81%|########  | 21/26 [00:00<00:00, 35.95it/s]100%|##########| 26/26 [00:00<00:00, 39.76it/s]100%|##########| 26/26 [00:00<00:00, 32.18it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.679 (0.679)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.683 (0.681)	test_acc   0.51 (  0.50)	test_minacc   0.52 (  0.51)	test_majacc   0.51 (  0.50)	Loss_d 0.683 (0.681)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  20/  26]	Loss 0.671 (0.681)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.671 (0.681)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.17 (  0.14)
Test: [  26/  26]	Loss 0.684 (0.682)	test_acc   0.55 (  0.50)	test_minacc   0.61 (  0.51)	test_majacc   0.54 (  0.50)	Loss_d 0.684 (0.682)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.61 (  0.51)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.10 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.81it/s]
Test: [  0/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 34/  1]	epoch_time 0.0429 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0424 (0.0421)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.49920000940561293, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.28it/s] 19%|#9        | 5/26 [00:00<00:00, 22.71it/s] 31%|###       | 8/26 [00:00<00:00, 23.94it/s] 42%|####2     | 11/26 [00:00<00:00, 24.68it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.51it/s] 69%|######9   | 18/26 [00:00<00:00, 27.16it/s] 81%|########  | 21/26 [00:00<00:00, 26.49it/s] 96%|#########6| 25/26 [00:00<00:00, 29.03it/s]100%|##########| 26/26 [00:01<00:00, 24.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 423 tensor(-1.1662e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 426 tensor(-1.5399e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 421 tensor(-5.8045e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 419 tensor(-1.8267e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 422 tensor(-1.3539e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 420 tensor(-1.9832e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.53 (  0.50)	train_minacc   0.61 (  0.51)	train_majacc   0.52 (  0.50)	train_corr   0.00 (  0.00)	l1 5.5836 (5.5829)	zero_count 0.0000 (20.7870)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.20it/s] 19%|#9        | 5/26 [00:00<00:01, 16.97it/s] 38%|###8      | 10/26 [00:00<00:00, 27.61it/s]                                                38%|###8      | 10/26 [00:00<00:00, 27.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.50it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.61it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 33.61it/s] 92%|#########2| 24/26 [00:00<00:00, 37.47it/s]100%|##########| 26/26 [00:00<00:00, 29.47it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.679 (0.679)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.683 (0.681)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.683 (0.681)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.671 (0.681)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.49)	Loss_d 0.671 (0.681)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.685 (0.682)	test_acc   0.54 (  0.50)	test_minacc   0.64 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.685 (0.682)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.64 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.10 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.28it/s]
Test: [  0/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 35/  1]	epoch_time 0.0446 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0441 (0.0422)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.49760001024603845, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.78it/s] 19%|#9        | 5/26 [00:00<00:01, 19.28it/s] 35%|###4      | 9/26 [00:00<00:00, 25.58it/s] 46%|####6     | 12/26 [00:00<00:00, 26.00it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.94it/s] 85%|########4 | 22/26 [00:00<00:00, 27.64it/s] 96%|#########6| 25/26 [00:00<00:00, 27.25it/s]100%|##########| 26/26 [00:01<00:00, 24.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 425 tensor(-1.9040e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 420 tensor(-5.3562e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 418 tensor(-1.7947e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 421 tensor(-1.0508e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 421 tensor(-1.7842e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 420 tensor(-4.2247e-07, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.53 (  0.50)	train_minacc   0.61 (  0.51)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.5823 (5.5830)	zero_count 90.0000 (19.8390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.87it/s] 19%|#9        | 5/26 [00:00<00:00, 24.50it/s] 38%|###8      | 10/26 [00:00<00:00, 33.50it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.50it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.54it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.85it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.85it/s] 96%|#########6| 25/26 [00:00<00:00, 40.30it/s]100%|##########| 26/26 [00:00<00:00, 34.38it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.679 (0.679)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.683 (0.681)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.51 (  0.50)	Loss_d 0.683 (0.681)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.671 (0.681)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.52)	test_majacc   0.53 (  0.49)	Loss_d 0.671 (0.681)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.52)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.685 (0.682)	test_acc   0.53 (  0.50)	test_minacc   0.61 (  0.51)	test_majacc   0.51 (  0.49)	Loss_d 0.685 (0.682)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.61 (  0.51)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.10 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.06it/s]
Test: [  0/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 36/  1]	epoch_time 0.0475 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0470 (0.0423)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.4971000094413757, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.58it/s] 15%|#5        | 4/26 [00:00<00:01, 11.58it/s] 31%|###       | 8/26 [00:00<00:00, 19.54it/s] 42%|####2     | 11/26 [00:00<00:00, 21.67it/s] 54%|#####3    | 14/26 [00:00<00:00, 22.85it/s] 69%|######9   | 18/26 [00:00<00:00, 26.88it/s] 81%|########  | 21/26 [00:00<00:00, 26.26it/s] 92%|#########2| 24/26 [00:01<00:00, 26.42it/s]100%|##########| 26/26 [00:01<00:00, 21.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 424 tensor(-1.6931e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 422 tensor(-4.7785e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 417 tensor(-2.2781e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 423 tensor(-4.4422e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 419 tensor(-1.2046e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 419 tensor(-9.9682e-07, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.50 (  0.50)	train_minacc   0.64 (  0.51)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 5.5826 (5.5829)	zero_count 0.0000 (21.0990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.56it/s] 27%|##6       | 7/26 [00:00<00:00, 34.22it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.22it/s] 46%|####6     | 12/26 [00:00<00:00, 39.29it/s] 65%|######5   | 17/26 [00:00<00:00, 40.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.94it/s] 85%|########4 | 22/26 [00:00<00:00, 39.77it/s]100%|##########| 26/26 [00:00<00:00, 37.74it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.678 (0.678)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.683 (0.681)	test_acc   0.51 (  0.50)	test_minacc   0.55 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.683 (0.681)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.671 (0.681)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.52)	test_majacc   0.53 (  0.49)	Loss_d 0.671 (0.681)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.52)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.685 (0.682)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.685 (0.682)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.10 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.94it/s]
Test: [  0/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 37/  1]	epoch_time 0.0429 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0423)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.4953000074625015, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.06it/s] 15%|#5        | 4/26 [00:00<00:01, 14.37it/s] 31%|###       | 8/26 [00:00<00:00, 19.72it/s] 46%|####6     | 12/26 [00:00<00:00, 24.51it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.08it/s] 69%|######9   | 18/26 [00:00<00:00, 25.83it/s] 85%|########4 | 22/26 [00:00<00:00, 28.90it/s] 96%|#########6| 25/26 [00:01<00:00, 27.92it/s]100%|##########| 26/26 [00:01<00:00, 23.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 421 tensor(-1.2113e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 419 tensor(-3.8192e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 415 tensor(-2.8255e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 423 tensor(-9.7842e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 420 tensor(-7.7019e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 418 tensor(-9.8099e-07, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.50 (  0.49)	train_minacc   0.64 (  0.52)	train_majacc   0.47 (  0.49)	train_corr   0.00 (  0.00)	l1 5.5829 (5.5828)	zero_count 0.0000 (21.4110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.72it/s] 23%|##3       | 6/26 [00:00<00:00, 27.30it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.30it/s] 42%|####2     | 11/26 [00:00<00:00, 35.10it/s] 62%|######1   | 16/26 [00:00<00:00, 39.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.76it/s] 81%|########  | 21/26 [00:00<00:00, 38.37it/s]100%|##########| 26/26 [00:00<00:00, 41.41it/s]100%|##########| 26/26 [00:00<00:00, 34.06it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.50 (  0.50)	Loss_d 0.678 (0.678)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.683 (0.681)	test_acc   0.50 (  0.50)	test_minacc   0.57 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.683 (0.681)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.57 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.671 (0.681)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.53)	test_majacc   0.53 (  0.49)	Loss_d 0.671 (0.681)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.53)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.685 (0.682)	test_acc   0.50 (  0.49)	test_minacc   0.64 (  0.52)	test_majacc   0.48 (  0.49)	Loss_d 0.685 (0.682)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.64 (  0.52)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.10 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.84it/s]
Test: [  0/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.857 (0.857)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.857 (0.857)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 38/  1]	epoch_time 0.0466 (0.0431)	validation_time 0.0003 (0.0006)	train_time 0.0462 (0.0424)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.4942000108063221, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 12%|#1        | 3/26 [00:00<00:01, 13.23it/s] 27%|##6       | 7/26 [00:00<00:00, 20.39it/s] 42%|####2     | 11/26 [00:00<00:00, 25.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.90it/s] 65%|######5   | 17/26 [00:00<00:00, 25.88it/s] 81%|########  | 21/26 [00:00<00:00, 28.48it/s] 92%|#########2| 24/26 [00:00<00:00, 28.01it/s]100%|##########| 26/26 [00:01<00:00, 24.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 419 tensor(-8.5717e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 420 tensor(-2.6968e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 418 tensor(-3.5985e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 422 tensor(-7.1018e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 421 tensor(-5.7627e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 419 tensor(-9.3778e-07, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.50 (  0.49)	train_minacc   0.61 (  0.52)	train_majacc   0.48 (  0.49)	train_corr   0.00 (  0.00)	l1 5.5831 (5.5828)	zero_count 0.0000 (21.3720)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.19it/s] 31%|###       | 8/26 [00:00<00:00, 32.60it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.60it/s] 50%|#####     | 13/26 [00:00<00:00, 38.09it/s] 69%|######9   | 18/26 [00:00<00:00, 41.25it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.25it/s] 88%|########8 | 23/26 [00:00<00:00, 43.55it/s]100%|##########| 26/26 [00:00<00:00, 37.71it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.47 (  0.47)	test_minacc   0.34 (  0.34)	test_majacc   0.49 (  0.49)	Loss_d 0.678 (0.678)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.683 (0.682)	test_acc   0.49 (  0.50)	test_minacc   0.57 (  0.52)	test_majacc   0.48 (  0.50)	Loss_d 0.683 (0.682)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.57 (  0.52)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.671 (0.681)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.53)	test_majacc   0.53 (  0.49)	Loss_d 0.671 (0.681)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.53)	test_majacc_d   0.53 (  0.49)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.685 (0.682)	test_acc   0.50 (  0.49)	test_minacc   0.64 (  0.53)	test_majacc   0.48 (  0.49)	Loss_d 0.685 (0.682)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.64 (  0.53)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.10 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.87it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 39/  1]	epoch_time 0.0442 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0437 (0.0424)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.49240000975131987, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.88it/s] 19%|#9        | 5/26 [00:00<00:01, 17.85it/s] 31%|###       | 8/26 [00:00<00:00, 20.87it/s] 42%|####2     | 11/26 [00:00<00:00, 22.35it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.43it/s] 69%|######9   | 18/26 [00:00<00:00, 25.09it/s] 81%|########  | 21/26 [00:00<00:00, 25.11it/s] 96%|#########6| 25/26 [00:01<00:00, 28.15it/s]100%|##########| 26/26 [00:01<00:00, 22.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 422 tensor(-8.6800e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 422 tensor(-1.4632e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 420 tensor(-4.1703e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 418 tensor(-7.1810e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 422 tensor(-6.0873e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 418 tensor(-1.1210e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 418 tensor(-1.1380e-09, device='cuda:0')
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.50 (  0.49)	train_minacc   0.64 (  0.53)	train_majacc   0.48 (  0.48)	train_corr   0.00 (  0.00)	l1 5.5833 (5.5828)	zero_count 0.0000 (21.1770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.94it/s] 31%|###       | 8/26 [00:00<00:00, 36.52it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.52it/s] 50%|#####     | 13/26 [00:00<00:00, 40.43it/s] 69%|######9   | 18/26 [00:00<00:00, 42.33it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.33it/s] 88%|########8 | 23/26 [00:00<00:00, 39.72it/s]100%|##########| 26/26 [00:00<00:00, 37.45it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.47 (  0.47)	test_minacc   0.36 (  0.36)	test_majacc   0.49 (  0.49)	Loss_d 0.678 (0.678)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.683 (0.682)	test_acc   0.48 (  0.50)	test_minacc   0.58 (  0.54)	test_majacc   0.46 (  0.49)	Loss_d 0.683 (0.682)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.671 (0.681)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.54)	test_majacc   0.53 (  0.48)	Loss_d 0.671 (0.681)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.53 (  0.48)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.685 (0.682)	test_acc   0.50 (  0.49)	test_minacc   0.64 (  0.53)	test_majacc   0.47 (  0.48)	Loss_d 0.685 (0.682)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.64 (  0.53)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.09 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.23it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 40/  1]	epoch_time 0.0471 (0.0432)	validation_time 0.0004 (0.0006)	train_time 0.0467 (0.0425)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.489500008136034, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.35it/s] 19%|#9        | 5/26 [00:00<00:01, 20.53it/s] 35%|###4      | 9/26 [00:00<00:00, 26.51it/s] 46%|####6     | 12/26 [00:00<00:00, 26.68it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.48it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.51it/s] 85%|########4 | 22/26 [00:00<00:00, 28.41it/s] 96%|#########6| 25/26 [00:00<00:00, 27.39it/s]100%|##########| 26/26 [00:01<00:00, 25.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 420 tensor(-1.5936e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 420 tensor(-4.1398e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 418 tensor(-9.6619e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 423 tensor(6.4103e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 419 tensor(-7.5726e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 418 tensor(-2.7882e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.51 (  0.49)	train_minacc   0.67 (  0.54)	train_majacc   0.48 (  0.48)	train_corr   0.00 (  0.00)	l1 5.5823 (5.5828)	zero_count 92.0000 (16.4570)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 32.38it/s] 35%|###4      | 9/26 [00:00<00:00, 34.63it/s]                                               35%|###4      | 9/26 [00:00<00:00, 34.63it/s] 54%|#####3    | 14/26 [00:00<00:00, 39.80it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.34it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.34it/s] 92%|#########2| 24/26 [00:00<00:00, 43.96it/s]100%|##########| 26/26 [00:00<00:00, 37.58it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.47 (  0.47)	test_minacc   0.38 (  0.38)	test_majacc   0.48 (  0.48)	Loss_d 0.678 (0.678)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.683 (0.682)	test_acc   0.47 (  0.49)	test_minacc   0.58 (  0.54)	test_majacc   0.45 (  0.49)	Loss_d 0.683 (0.682)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.45 (  0.49)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.671 (0.682)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.55)	test_majacc   0.53 (  0.48)	Loss_d 0.671 (0.682)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.55)	test_majacc_d   0.53 (  0.48)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.685 (0.682)	test_acc   0.51 (  0.49)	test_minacc   0.67 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.685 (0.682)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.67 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.89it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 41/  1]	epoch_time 0.0456 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0452 (0.0426)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.48770000928640367, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.11it/s] 15%|#5        | 4/26 [00:00<00:01, 14.96it/s] 27%|##6       | 7/26 [00:00<00:00, 20.04it/s] 38%|###8      | 10/26 [00:00<00:00, 22.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.38it/s] 69%|######9   | 18/26 [00:00<00:00, 27.49it/s] 81%|########  | 21/26 [00:00<00:00, 26.60it/s] 92%|#########2| 24/26 [00:01<00:00, 26.47it/s]100%|##########| 26/26 [00:01<00:00, 22.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 420 tensor(-1.2901e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 421 tensor(-3.9074e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 418 tensor(-1.6467e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 436 tensor(5.7504e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 423 tensor(-3.5650e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 425 tensor(-7.1973e-07, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.50 (  0.49)	train_minacc   0.69 (  0.55)	train_majacc   0.47 (  0.47)	train_corr   0.00 (  0.00)	l1 5.5825 (5.5827)	zero_count 0.0000 (20.6700)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.42it/s] 23%|##3       | 6/26 [00:00<00:00, 26.48it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.48it/s] 42%|####2     | 11/26 [00:00<00:00, 33.69it/s] 62%|######1   | 16/26 [00:00<00:00, 37.87it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.87it/s] 81%|########  | 21/26 [00:00<00:00, 37.22it/s]100%|##########| 26/26 [00:00<00:00, 33.29it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.46 (  0.46)	test_minacc   0.38 (  0.38)	test_majacc   0.48 (  0.48)	Loss_d 0.678 (0.678)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.683 (0.682)	test_acc   0.47 (  0.49)	test_minacc   0.60 (  0.55)	test_majacc   0.45 (  0.48)	Loss_d 0.683 (0.682)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.60 (  0.55)	test_majacc_d   0.45 (  0.48)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.671 (0.682)	test_acc   0.53 (  0.49)	test_minacc   0.51 (  0.56)	test_majacc   0.53 (  0.47)	Loss_d 0.671 (0.682)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.51 (  0.56)	test_majacc_d   0.53 (  0.47)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.686 (0.682)	test_acc   0.50 (  0.49)	test_minacc   0.67 (  0.55)	test_majacc   0.47 (  0.47)	Loss_d 0.686 (0.682)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.67 (  0.55)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.09 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.31it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 42/  1]	epoch_time 0.0494 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0490 (0.0428)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.4858000071942806, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.93it/s] 12%|#1        | 3/26 [00:00<00:01, 15.45it/s] 27%|##6       | 7/26 [00:00<00:00, 24.26it/s] 38%|###8      | 10/26 [00:00<00:00, 25.27it/s] 50%|#####     | 13/26 [00:00<00:00, 25.28it/s] 65%|######5   | 17/26 [00:00<00:00, 28.76it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.68it/s] 88%|########8 | 23/26 [00:00<00:00, 27.27it/s]100%|##########| 26/26 [00:01<00:00, 25.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 418 tensor(-9.1840e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 420 tensor(-3.3299e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 415 tensor(-2.2638e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 440 tensor(7.8392e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 429 tensor(4.6575e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 423 tensor(-6.6015e-07, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.50 (  0.48)	train_minacc   0.69 (  0.56)	train_majacc   0.47 (  0.47)	train_corr   0.00 (  0.00)	l1 5.5826 (5.5827)	zero_count 0.0000 (20.2410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 23%|##3       | 6/26 [00:00<00:00, 27.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.24it/s] 42%|####2     | 11/26 [00:00<00:00, 35.14it/s] 65%|######5   | 17/26 [00:00<00:00, 40.24it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.24it/s] 85%|########4 | 22/26 [00:00<00:00, 41.42it/s]100%|##########| 26/26 [00:00<00:00, 35.96it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.46 (  0.46)	test_minacc   0.40 (  0.40)	test_majacc   0.47 (  0.47)	Loss_d 0.678 (0.678)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.683 (0.682)	test_acc   0.46 (  0.49)	test_minacc   0.63 (  0.56)	test_majacc   0.43 (  0.48)	Loss_d 0.683 (0.682)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.63 (  0.56)	test_majacc_d   0.43 (  0.48)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.671 (0.682)	test_acc   0.53 (  0.48)	test_minacc   0.51 (  0.57)	test_majacc   0.53 (  0.47)	Loss_d 0.671 (0.682)	test_acc_d   0.53 (  0.48)	test_minacc_d   0.51 (  0.57)	test_majacc_d   0.53 (  0.47)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.686 (0.682)	test_acc   0.50 (  0.48)	test_minacc   0.69 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.686 (0.682)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.69 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.09 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.73it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 43/  1]	epoch_time 0.0419 (0.0434)	validation_time 0.0005 (0.0006)	train_time 0.0414 (0.0427)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.48320000913739203, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.26it/s] 15%|#5        | 4/26 [00:00<00:01, 15.74it/s] 27%|##6       | 7/26 [00:00<00:00, 20.03it/s] 42%|####2     | 11/26 [00:00<00:00, 25.69it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.09it/s] 65%|######5   | 17/26 [00:00<00:00, 25.89it/s] 81%|########  | 21/26 [00:00<00:00, 28.67it/s] 92%|#########2| 24/26 [00:00<00:00, 28.28it/s]100%|##########| 26/26 [00:01<00:00, 24.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 419 tensor(-5.6880e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 420 tensor(-2.4250e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 415 tensor(-2.9378e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 436 tensor(6.0450e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 432 tensor(3.3808e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 422 tensor(-6.2789e-07, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.49 (  0.48)	train_minacc   0.67 (  0.57)	train_majacc   0.46 (  0.46)	train_corr   0.00 (  0.00)	l1 5.5828 (5.5827)	zero_count 0.0000 (20.3190)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.79it/s] 27%|##6       | 7/26 [00:00<00:00, 29.30it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.30it/s] 46%|####6     | 12/26 [00:00<00:00, 35.39it/s] 65%|######5   | 17/26 [00:00<00:00, 38.73it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.73it/s] 85%|########4 | 22/26 [00:00<00:00, 41.78it/s]100%|##########| 26/26 [00:00<00:00, 34.38it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.47 (  0.47)	Loss_d 0.678 (0.678)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.684 (0.682)	test_acc   0.45 (  0.48)	test_minacc   0.65 (  0.57)	test_majacc   0.41 (  0.47)	Loss_d 0.684 (0.682)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.65 (  0.57)	test_majacc_d   0.41 (  0.47)	test_corr_d   0.12 (  0.13)
Test: [  20/  26]	Loss 0.672 (0.682)	test_acc   0.52 (  0.48)	test_minacc   0.51 (  0.57)	test_majacc   0.53 (  0.46)	Loss_d 0.672 (0.682)	test_acc_d   0.52 (  0.48)	test_minacc_d   0.51 (  0.57)	test_majacc_d   0.53 (  0.46)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.686 (0.682)	test_acc   0.50 (  0.48)	test_minacc   0.67 (  0.57)	test_majacc   0.47 (  0.46)	Loss_d 0.686 (0.682)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.09 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.97it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 44/  1]	epoch_time 0.0431 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0427 (0.0427)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.4798000063896179, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.21it/s] 19%|#9        | 5/26 [00:00<00:01, 16.46it/s] 31%|###       | 8/26 [00:00<00:00, 19.61it/s] 42%|####2     | 11/26 [00:00<00:00, 21.63it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.32it/s] 69%|######9   | 18/26 [00:00<00:00, 25.34it/s] 81%|########  | 21/26 [00:00<00:00, 25.20it/s] 96%|#########6| 25/26 [00:01<00:00, 28.17it/s]100%|##########| 26/26 [00:01<00:00, 22.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 423 tensor(-6.8602e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 418 tensor(-1.3918e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 417 tensor(-3.3869e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 421 tensor(-2.4972e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 445 tensor(9.6116e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 424 tensor(-7.3040e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.48 (  0.48)	train_minacc   0.67 (  0.57)	train_majacc   0.45 (  0.46)	train_corr   0.00 (  0.00)	l1 5.5828 (5.5827)	zero_count 0.0000 (20.2800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.60it/s] 23%|##3       | 6/26 [00:00<00:01, 19.15it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.15it/s] 42%|####2     | 11/26 [00:00<00:00, 28.12it/s] 62%|######1   | 16/26 [00:00<00:00, 34.74it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.74it/s] 81%|########  | 21/26 [00:00<00:00, 34.86it/s]100%|##########| 26/26 [00:00<00:00, 38.93it/s]100%|##########| 26/26 [00:00<00:00, 29.24it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.47 (  0.47)	Loss_d 0.678 (0.678)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.684 (0.682)	test_acc   0.43 (  0.48)	test_minacc   0.63 (  0.57)	test_majacc   0.40 (  0.47)	Loss_d 0.684 (0.682)	test_acc_d   0.43 (  0.48)	test_minacc_d   0.63 (  0.57)	test_majacc_d   0.40 (  0.47)	test_corr_d   0.12 (  0.12)
Test: [  20/  26]	Loss 0.672 (0.682)	test_acc   0.52 (  0.48)	test_minacc   0.51 (  0.57)	test_majacc   0.52 (  0.46)	Loss_d 0.672 (0.682)	test_acc_d   0.52 (  0.48)	test_minacc_d   0.51 (  0.57)	test_majacc_d   0.52 (  0.46)	test_corr_d   0.17 (  0.13)
Test: [  26/  26]	Loss 0.686 (0.682)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.57)	test_majacc   0.45 (  0.46)	Loss_d 0.686 (0.682)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.09 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.47it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 45/  1]	epoch_time 0.0427 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0423 (0.0427)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.47660000786185264, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.45it/s] 19%|#9        | 5/26 [00:00<00:01, 16.88it/s] 35%|###4      | 9/26 [00:00<00:00, 23.44it/s] 46%|####6     | 12/26 [00:00<00:00, 24.54it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.06it/s] 85%|########4 | 22/26 [00:00<00:00, 27.16it/s] 96%|#########6| 25/26 [00:01<00:00, 26.62it/s]100%|##########| 26/26 [00:01<00:00, 23.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 417 tensor(-1.3849e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 417 tensor(-3.4440e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 418 tensor(-5.8950e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 452 tensor(9.8841e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 427 tensor(-3.6208e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 422 tensor(-1.9051e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.47 (  0.47)	train_minacc   0.67 (  0.58)	train_majacc   0.44 (  0.46)	train_corr   0.00 (  0.00)	l1 5.5823 (5.5827)	zero_count 84.0000 (18.7530)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.12it/s] 12%|#1        | 3/26 [00:00<00:01, 13.54it/s] 31%|###       | 8/26 [00:00<00:00, 27.84it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.84it/s] 50%|#####     | 13/26 [00:00<00:00, 34.72it/s] 69%|######9   | 18/26 [00:00<00:00, 39.30it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.30it/s] 88%|########8 | 23/26 [00:00<00:00, 38.07it/s]100%|##########| 26/26 [00:00<00:00, 32.88it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.46 (  0.46)	test_minacc   0.47 (  0.47)	test_majacc   0.46 (  0.46)	Loss_d 0.678 (0.678)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.684 (0.682)	test_acc   0.43 (  0.48)	test_minacc   0.67 (  0.58)	test_majacc   0.39 (  0.46)	Loss_d 0.684 (0.682)	test_acc_d   0.43 (  0.48)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.39 (  0.46)	test_corr_d   0.11 (  0.12)
Test: [  20/  26]	Loss 0.672 (0.682)	test_acc   0.52 (  0.47)	test_minacc   0.51 (  0.58)	test_majacc   0.52 (  0.45)	Loss_d 0.672 (0.682)	test_acc_d   0.52 (  0.47)	test_minacc_d   0.51 (  0.58)	test_majacc_d   0.52 (  0.45)	test_corr_d   0.16 (  0.13)
Test: [  26/  26]	Loss 0.686 (0.682)	test_acc   0.47 (  0.47)	test_minacc   0.67 (  0.58)	test_majacc   0.44 (  0.46)	Loss_d 0.686 (0.682)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.09 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.05it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.858 (0.858)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 46/  1]	epoch_time 0.0442 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0437 (0.0427)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.4744000092744827, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 15%|#5        | 4/26 [00:00<00:01, 17.37it/s] 31%|###       | 8/26 [00:00<00:00, 24.57it/s] 42%|####2     | 11/26 [00:00<00:00, 24.74it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.95it/s] 69%|######9   | 18/26 [00:00<00:00, 27.66it/s] 81%|########  | 21/26 [00:00<00:00, 26.80it/s] 92%|#########2| 24/26 [00:00<00:00, 26.30it/s]100%|##########| 26/26 [00:01<00:00, 24.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 415 tensor(-1.0557e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 414 tensor(-3.2701e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 411 tensor(-1.2326e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 467 tensor(1.5844e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 441 tensor(8.4148e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 432 tensor(-7.1250e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.48 (  0.47)	train_minacc   0.67 (  0.58)	train_majacc   0.45 (  0.45)	train_corr   0.00 (  0.00)	l1 5.5823 (5.5826)	zero_count 0.0000 (19.3440)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.65it/s] 12%|#1        | 3/26 [00:00<00:02,  8.90it/s] 35%|###4      | 9/26 [00:00<00:00, 24.05it/s]                                               35%|###4      | 9/26 [00:00<00:00, 24.05it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.87it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.04it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 34.04it/s] 92%|#########2| 24/26 [00:00<00:00, 37.82it/s]100%|##########| 26/26 [00:00<00:00, 27.53it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.46 (  0.46)	test_minacc   0.47 (  0.47)	test_majacc   0.45 (  0.45)	Loss_d 0.678 (0.678)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.684 (0.682)	test_acc   0.43 (  0.47)	test_minacc   0.65 (  0.58)	test_majacc   0.38 (  0.46)	Loss_d 0.684 (0.682)	test_acc_d   0.43 (  0.47)	test_minacc_d   0.65 (  0.58)	test_majacc_d   0.38 (  0.46)	test_corr_d   0.11 (  0.12)
Test: [  20/  26]	Loss 0.672 (0.682)	test_acc   0.51 (  0.47)	test_minacc   0.51 (  0.59)	test_majacc   0.51 (  0.45)	Loss_d 0.672 (0.682)	test_acc_d   0.51 (  0.47)	test_minacc_d   0.51 (  0.59)	test_majacc_d   0.51 (  0.45)	test_corr_d   0.16 (  0.13)
Test: [  26/  26]	Loss 0.686 (0.682)	test_acc   0.48 (  0.47)	test_minacc   0.67 (  0.58)	test_majacc   0.45 (  0.45)	Loss_d 0.686 (0.682)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.09 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.18it/s]
Test: [  0/  1]	Loss 0.859 (0.859)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.859 (0.859)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.859 (0.859)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.859 (0.859)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 47/  1]	epoch_time 0.0429 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0427)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.47130000913143155, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 12%|#1        | 3/26 [00:00<00:01, 12.62it/s] 27%|##6       | 7/26 [00:00<00:00, 21.63it/s] 38%|###8      | 10/26 [00:00<00:00, 23.53it/s] 50%|#####     | 13/26 [00:00<00:00, 24.16it/s] 65%|######5   | 17/26 [00:00<00:00, 27.51it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.02it/s] 88%|########8 | 23/26 [00:00<00:00, 26.52it/s]100%|##########| 26/26 [00:01<00:00, 23.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 419 tensor(-8.0495e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 415 tensor(-2.9436e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 413 tensor(-1.9315e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 470 tensor(1.6148e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 449 tensor(6.4320e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 441 tensor(-7.1526e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.48 (  0.47)	train_minacc   0.67 (  0.59)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.5823 (5.5827)	zero_count 0.0000 (18.2520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 23%|##3       | 6/26 [00:00<00:00, 29.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.75it/s] 42%|####2     | 11/26 [00:00<00:00, 36.20it/s] 62%|######1   | 16/26 [00:00<00:00, 40.85it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.85it/s] 81%|########  | 21/26 [00:00<00:00, 39.11it/s]100%|##########| 26/26 [00:00<00:00, 41.92it/s]100%|##########| 26/26 [00:00<00:00, 34.98it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.45 (  0.45)	test_minacc   0.49 (  0.49)	test_majacc   0.45 (  0.45)	Loss_d 0.678 (0.678)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.684 (0.682)	test_acc   0.42 (  0.47)	test_minacc   0.65 (  0.58)	test_majacc   0.38 (  0.45)	Loss_d 0.684 (0.682)	test_acc_d   0.42 (  0.47)	test_minacc_d   0.65 (  0.58)	test_majacc_d   0.38 (  0.45)	test_corr_d   0.11 (  0.12)
Test: [  20/  26]	Loss 0.672 (0.682)	test_acc   0.51 (  0.47)	test_minacc   0.51 (  0.59)	test_majacc   0.50 (  0.45)	Loss_d 0.672 (0.682)	test_acc_d   0.51 (  0.47)	test_minacc_d   0.51 (  0.59)	test_majacc_d   0.50 (  0.45)	test_corr_d   0.16 (  0.13)
Test: [  26/  26]	Loss 0.686 (0.682)	test_acc   0.48 (  0.47)	test_minacc   0.67 (  0.59)	test_majacc   0.44 (  0.45)	Loss_d 0.686 (0.682)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.67 (  0.59)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.09 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.43it/s]
Test: [  0/  1]	Loss 0.859 (0.859)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.859 (0.859)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.859 (0.859)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.859 (0.859)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 48/  1]	epoch_time 0.0446 (0.0434)	validation_time 0.0007 (0.0006)	train_time 0.0439 (0.0428)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.4705000066459179, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.06it/s] 15%|#5        | 4/26 [00:00<00:01, 19.37it/s] 27%|##6       | 7/26 [00:00<00:00, 23.18it/s] 42%|####2     | 11/26 [00:00<00:00, 27.33it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.77it/s] 65%|######5   | 17/26 [00:00<00:00, 26.06it/s] 81%|########  | 21/26 [00:00<00:00, 28.74it/s] 92%|#########2| 24/26 [00:00<00:00, 28.18it/s]100%|##########| 26/26 [00:01<00:00, 25.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 423 tensor(-6.1292e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 417 tensor(-2.4332e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 412 tensor(-2.5528e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 461 tensor(1.2251e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 454 tensor(1.1989e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 441 tensor(-6.6455e-07, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  26.99 ( 26.99)	train_acc   0.48 (  0.47)	train_minacc   0.67 (  0.60)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.5824 (5.5826)	zero_count 0.0000 (17.8620)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.94it/s] 23%|##3       | 6/26 [00:00<00:00, 31.96it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.96it/s] 42%|####2     | 11/26 [00:00<00:00, 37.97it/s] 62%|######1   | 16/26 [00:00<00:00, 41.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.41it/s] 81%|########  | 21/26 [00:00<00:00, 38.67it/s]100%|##########| 26/26 [00:00<00:00, 41.70it/s]100%|##########| 26/26 [00:00<00:00, 35.98it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.45 (  0.45)	test_minacc   0.49 (  0.49)	test_majacc   0.44 (  0.44)	Loss_d 0.678 (0.678)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.684 (0.682)	test_acc   0.42 (  0.47)	test_minacc   0.63 (  0.60)	test_majacc   0.38 (  0.45)	Loss_d 0.684 (0.682)	test_acc_d   0.42 (  0.47)	test_minacc_d   0.63 (  0.60)	test_majacc_d   0.38 (  0.45)	test_corr_d   0.11 (  0.12)
Test: [  20/  26]	Loss 0.672 (0.682)	test_acc   0.50 (  0.47)	test_minacc   0.51 (  0.60)	test_majacc   0.50 (  0.44)	Loss_d 0.672 (0.682)	test_acc_d   0.50 (  0.47)	test_minacc_d   0.51 (  0.60)	test_majacc_d   0.50 (  0.44)	test_corr_d   0.16 (  0.13)
Test: [  26/  26]	Loss 0.686 (0.682)	test_acc   0.47 (  0.47)	test_minacc   0.67 (  0.60)	test_majacc   0.44 (  0.45)	Loss_d 0.686 (0.682)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.67 (  0.60)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.09 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.53it/s]
Test: [  0/  1]	Loss 0.859 (0.859)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.859 (0.859)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.859 (0.859)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.859 (0.859)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 49/  1]	epoch_time 0.0449 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0445 (0.0428)
record: (train_acc, test_acc) (0.7371000292897224, 0.6300000548362732)
last accs (train_acc, test_acc) (0.47010000836849214, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.163 MB of 0.163 MB uploadedwandb: \ 0.163 MB of 0.163 MB uploadedwandb: | 0.163 MB of 0.163 MB uploadedwandb: / 0.186 MB of 0.194 MB uploaded (0.003 MB deduped)wandb: - 0.504 MB of 0.504 MB uploaded (0.003 MB deduped)wandb: \ 0.504 MB of 0.504 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/diagnostics/epoch_time_val █▂▂▂▁▁▁▁▁▂▂▂▃▂▁▁▂▁▂▂▂▂▂▁▂▂▃▂▂▃▂▃▃▃▃▂▂▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/diagnostics/train_time_val █▂▂▂▁▂▂▂▂▂▃▂▃▂▁▁▂▁▂▂▂▃▃▁▃▃▃▂▃▃▂▃▃▃▄▂▂▃▂▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/Loss_avg ▆▆▆▆▇▆▆▇▇▇▇█▄▂▂▂▂▃▃▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/Loss_d_avg ▆▆▆▆▇▆▆▇▇▇▇█▄▂▂▂▂▃▃▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/Loss_d_val ▆▆▆▆▇▆▆▇▇▇▇█▄▂▂▂▂▃▃▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/Loss_val ▆▆▆▆▇▆▆▇▇▇▇█▄▂▂▂▂▃▃▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_acc_avg ▁▁▁▂▃▃▄▄▄▄▄▃▆██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_acc_d_avg ▁▁▁▂▃▃▄▄▄▄▄▃▆██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_acc_d_val ▁▁▁▂▃▃▄▄▄▄▄▃▆██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_acc_val ▁▁▁▂▃▃▄▄▄▄▄▃▆██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_corr_d_avg ███▇▆▆▆▅▅▆▆▆▃▂▁▁▁▂▂▁▂▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_corr_d_val ███▇▆▆▆▅▅▆▆▆▃▂▁▁▁▂▂▁▂▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_majacc_avg ████▇█▇█▇██▇▇▆▆▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_majacc_d_avg ████▇█▇█▇██▇▇▆▆▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_majacc_d_val ████▇█▇█▇██▇▇▆▆▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_majacc_val ████▇█▇█▇██▇▇▆▆▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_minacc_avg ▁▁▁▂▃▃▄▄▄▄▄▃▆██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_minacc_d_avg ▁▁▁▂▃▃▄▄▄▄▄▃▆██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_minacc_d_val ▁▁▁▂▃▃▄▄▄▄▄▃▆██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_minacc_val ▁▁▁▂▃▃▄▄▄▄▄▃▆██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/Loss_avg █▆▆▅▅▅▅▄▄▄▄▄▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/Loss_val ███▇▆▆▅▅▅▅▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/l1_avg █▅▅▅▅▅▅▅▅▅▅▅▅▂▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/l1_val ██▇██▇▆▇▇▆▆▆▄▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇█████▆▆▆▅▅▅▅▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_acc_val ▇▇▇▇▇▇▇██▇██▇▅▅▅▅▅▅▃▄▂▂▂▂▂▂▂▂▂▁▁▁▂▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_majacc_avg ▇██████▇▇▇▇▇▇▅▅▅▅▅▅▅▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_majacc_val ███████▇████▆▅▄▄▄▄▄▃▅▂▂▂▂▂▂▂▂▂▁▁▂▂▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_minacc_avg ▂▁▁▁▂▂▃▄▅▅▅▆▇██████▆▅▅▆▅▅▅▅▅▅▅▅▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_minacc_val ▁▁▁▁▄▄▄▆▆▅▇▇▇█▇▇███▆▅▆▆▆▆▆▆▆▆▆▆▆▆▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_nll_avg ▇▄▃▃▃▃▂▂▂▂▁▁▁▄▄▄▄▄▄▆████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_nll_val ▄▄▄▄▃▃▂▂▂▂▁▁▃▅▆▅▅▅▅▆████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_penalty_avg █▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_penalty_val ██▇▆▃▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/weight_norm_avg ▁▄▄▄▄▄▄▄▅▅▅▅▅▅▅▅▅▅▅▆████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/weight_norm_val ▁▂▂▂▃▃▃▃▃▃▃▄▄▄▄▄▄▄▄▆████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██▆▃▁▃▄▅▅▅▄▅▅▅▄▅▅▅▄▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▇▁▁▁█▁▁▁█▁▁▁▇▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/diagnostics/epoch_time_val 0.04492
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/diagnostics/train_time_val 0.04448
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/diagnostics/validation_time_val 0.00042
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/Loss_avg 0.8589
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/Loss_d_avg 0.8589
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/Loss_d_val 0.8589
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/Loss_val 0.8589
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_corr_d_avg 0.10682
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_corr_d_val 0.10682
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/Loss_avg 7e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/Loss_val 7e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/l1_avg 5.58261
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/l1_val 5.58241
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_acc_avg 0.4712
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_acc_val 0.476
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_majacc_avg 0.44899
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_majacc_val 0.44393
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_minacc_avg 0.59725
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_minacc_val 0.66667
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_nll_avg 0.68233
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_nll_val 0.686
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/weight_norm_avg 26.99028
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/weight_norm_val 26.9903
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/zero_count_avg 17.862
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/139/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/r0tegz0k
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_201157-r0tegz0k/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_201448-8be2axdl
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/8be2axdl
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1189
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5991, 3, 32, 32) (6009, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:33,  1.34s/it] 19%|#9        | 5/26 [00:01<00:04,  4.47it/s] 35%|###4      | 9/26 [00:01<00:01,  8.62it/s] 50%|#####     | 13/26 [00:01<00:01, 12.98it/s] 65%|######5   | 17/26 [00:01<00:00, 17.29it/s] 81%|########  | 21/26 [00:01<00:00, 21.41it/s] 96%|#########6| 25/26 [00:01<00:00, 24.89it/s]100%|##########| 26/26 [00:02<00:00, 10.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.457 (0.597)	train_nll   0.46 (  0.60)	train_penalty   0.05 (  0.34)	weight_norm  20.82 ( 18.06)	train_acc   0.83 (  0.79)	train_minacc   0.02 (  0.09)	train_majacc   1.00 (  0.92)	train_corr   0.00 (  0.00)	l1 7.1652 (8.4978)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.94it/s] 23%|##3       | 6/26 [00:00<00:00, 25.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.95it/s] 42%|####2     | 11/26 [00:00<00:00, 34.08it/s] 62%|######1   | 16/26 [00:00<00:00, 39.00it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.00it/s] 81%|########  | 21/26 [00:00<00:00, 37.27it/s]100%|##########| 26/26 [00:00<00:00, 40.33it/s]100%|##########| 26/26 [00:00<00:00, 32.62it/s]
Test: [   0/  26]	Loss 0.446 (0.446)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.446 (0.446)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.417 (0.430)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.417 (0.430)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.98)
Test: [  20/  26]	Loss 0.498 (0.429)	test_acc   0.82 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.498 (0.429)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.446 (0.430)	test_acc   0.83 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.446 (0.430)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]
Test: [  0/  1]	Loss 1.607 (1.607)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.607 (1.607)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.607 (1.607)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.607 (1.607)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0744 (0.0744)	validation_time 0.0067 (0.0067)	train_time 0.0656 (0.0656)
record: (train_acc, test_acc) (0.8465000244379044, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8465000244379044, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.86it/s] 19%|#9        | 5/26 [00:00<00:01, 15.72it/s] 35%|###4      | 9/26 [00:00<00:00, 22.10it/s] 50%|#####     | 13/26 [00:00<00:00, 25.68it/s] 65%|######5   | 17/26 [00:00<00:00, 28.15it/s] 81%|########  | 21/26 [00:00<00:00, 29.76it/s] 96%|#########6| 25/26 [00:00<00:00, 31.51it/s]100%|##########| 26/26 [00:01<00:00, 24.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.439 (0.417)	train_nll   0.44 (  0.42)	train_penalty   0.07 (  0.06)	weight_norm  21.95 ( 21.60)	train_acc   0.83 (  0.85)	train_minacc   0.02 (  0.00)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.8232 (6.9954)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.73it/s] 23%|##3       | 6/26 [00:00<00:00, 32.55it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.55it/s] 42%|####2     | 11/26 [00:00<00:00, 37.73it/s] 62%|######1   | 16/26 [00:00<00:00, 41.18it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.18it/s] 81%|########  | 21/26 [00:00<00:00, 38.60it/s]100%|##########| 26/26 [00:00<00:00, 41.65it/s]100%|##########| 26/26 [00:00<00:00, 35.39it/s]
Test: [   0/  26]	Loss 0.422 (0.422)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.422 (0.422)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.402 (0.408)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.402 (0.408)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.464 (0.409)	test_acc   0.82 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.464 (0.409)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.436 (0.410)	test_acc   0.83 (  0.85)	test_minacc   0.02 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.436 (0.410)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.02 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.52it/s]
Test: [  0/  1]	Loss 1.546 (1.546)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.546 (1.546)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.546 (1.546)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.546 (1.546)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Overall Timing[  1/  1]	epoch_time 0.0406 (0.0575)	validation_time 0.0005 (0.0036)	train_time 0.0401 (0.0529)
record: (train_acc, test_acc) (0.8465000244379044, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8486000208258628, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.59it/s] 19%|#9        | 5/26 [00:00<00:01, 14.88it/s] 35%|###4      | 9/26 [00:00<00:00, 21.85it/s] 50%|#####     | 13/26 [00:00<00:00, 25.89it/s] 65%|######5   | 17/26 [00:00<00:00, 28.35it/s] 81%|########  | 21/26 [00:00<00:00, 30.06it/s] 96%|#########6| 25/26 [00:00<00:00, 31.36it/s]100%|##########| 26/26 [00:01<00:00, 24.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.427 (0.407)	train_nll   0.43 (  0.41)	train_penalty   0.07 (  0.06)	weight_norm  22.07 ( 22.03)	train_acc   0.83 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.8137 (6.9113)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.83it/s] 23%|##3       | 6/26 [00:00<00:01, 15.90it/s]                                               23%|##3       | 6/26 [00:00<00:01, 15.90it/s] 42%|####2     | 11/26 [00:00<00:00, 24.90it/s] 62%|######1   | 16/26 [00:00<00:00, 31.13it/s]                                                62%|######1   | 16/26 [00:00<00:00, 31.13it/s] 81%|########  | 21/26 [00:00<00:00, 32.87it/s]100%|##########| 26/26 [00:00<00:00, 37.17it/s]100%|##########| 26/26 [00:00<00:00, 26.21it/s]
Test: [   0/  26]	Loss 0.406 (0.406)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.406 (0.406)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.386 (0.394)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.386 (0.394)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.453 (0.396)	test_acc   0.82 (  0.85)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.453 (0.396)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.422 (0.397)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.422 (0.397)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.05it/s]
Test: [  0/  1]	Loss 1.561 (1.561)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.561 (1.561)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.561 (1.561)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.561 (1.561)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0458 (0.0536)	validation_time 0.0004 (0.0025)	train_time 0.0454 (0.0504)
record: (train_acc, test_acc) (0.8486000232696533, 0.10900000482797623)
last accs (train_acc, test_acc) (0.8486000232696533, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.22it/s] 19%|#9        | 5/26 [00:00<00:00, 22.12it/s] 35%|###4      | 9/26 [00:00<00:00, 27.74it/s] 50%|#####     | 13/26 [00:00<00:00, 30.31it/s] 65%|######5   | 17/26 [00:00<00:00, 31.46it/s] 81%|########  | 21/26 [00:00<00:00, 32.03it/s] 96%|#########6| 25/26 [00:00<00:00, 32.63it/s]100%|##########| 26/26 [00:00<00:00, 28.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.422 (0.397)	train_nll   0.42 (  0.40)	train_penalty   0.06 (  0.05)	weight_norm  22.12 ( 22.10)	train_acc   0.83 (  0.85)	train_minacc   0.05 (  0.03)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 6.6615 (6.8881)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.65it/s] 27%|##6       | 7/26 [00:00<00:00, 34.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.09it/s] 46%|####6     | 12/26 [00:00<00:00, 39.45it/s] 65%|######5   | 17/26 [00:00<00:00, 42.17it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.17it/s] 85%|########4 | 22/26 [00:00<00:00, 43.68it/s]100%|##########| 26/26 [00:00<00:00, 36.71it/s]
Test: [   0/  26]	Loss 0.393 (0.393)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.393 (0.393)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.373 (0.381)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.373 (0.381)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.447 (0.385)	test_acc   0.83 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.447 (0.385)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.417 (0.385)	test_acc   0.84 (  0.85)	test_minacc   0.05 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.417 (0.385)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.05 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.65it/s]
Test: [  0/  1]	Loss 1.512 (1.512)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.512 (1.512)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.512 (1.512)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.512 (1.512)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0387 (0.0499)	validation_time 0.0006 (0.0020)	train_time 0.0381 (0.0473)
record: (train_acc, test_acc) (0.8483000164031982, 0.11100000888109207)
last accs (train_acc, test_acc) (0.8483000164031982, 0.11100000888109207)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.57it/s] 19%|#9        | 5/26 [00:00<00:00, 23.60it/s] 35%|###4      | 9/26 [00:00<00:00, 29.03it/s] 50%|#####     | 13/26 [00:00<00:00, 32.04it/s] 65%|######5   | 17/26 [00:00<00:00, 32.58it/s] 81%|########  | 21/26 [00:00<00:00, 33.33it/s] 96%|#########6| 25/26 [00:00<00:00, 33.71it/s]100%|##########| 26/26 [00:00<00:00, 29.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.412 (0.378)	train_nll   0.41 (  0.38)	train_penalty   0.05 (  0.04)	weight_norm  22.18 ( 22.15)	train_acc   0.84 (  0.85)	train_minacc   0.12 (  0.08)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 6.8051 (6.9395)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.83it/s] 27%|##6       | 7/26 [00:00<00:00, 25.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.92it/s] 46%|####6     | 12/26 [00:00<00:00, 33.02it/s] 65%|######5   | 17/26 [00:00<00:00, 34.46it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.46it/s] 85%|########4 | 22/26 [00:00<00:00, 38.09it/s]100%|##########| 26/26 [00:00<00:00, 31.36it/s]
Test: [   0/  26]	Loss 0.373 (0.373)	test_acc   0.84 (  0.84)	test_minacc   0.08 (  0.08)	test_majacc   0.98 (  0.98)	Loss_d 0.373 (0.373)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.347 (0.359)	test_acc   0.86 (  0.85)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.347 (0.359)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.415 (0.362)	test_acc   0.83 (  0.85)	test_minacc   0.06 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.415 (0.362)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.06 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.403 (0.363)	test_acc   0.83 (  0.85)	test_minacc   0.05 (  0.09)	test_majacc   0.99 (  0.98)	Loss_d 0.403 (0.363)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.05 (  0.09)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.68it/s]
Test: [  0/  1]	Loss 1.550 (1.550)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 1.550 (1.550)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.88 (  0.88)
Test: [  1/  1]	Loss 1.550 (1.550)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 1.550 (1.550)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.88 (  0.88)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0446 (0.0489)	validation_time 0.0004 (0.0017)	train_time 0.0442 (0.0467)
record: (train_acc, test_acc) (0.8496000277400017, 0.1380000114440918)
last accs (train_acc, test_acc) (0.8496000277400017, 0.1380000114440918)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 19%|#9        | 5/26 [00:00<00:00, 22.80it/s] 35%|###4      | 9/26 [00:00<00:00, 28.32it/s] 50%|#####     | 13/26 [00:00<00:00, 31.38it/s] 65%|######5   | 17/26 [00:00<00:00, 33.20it/s] 81%|########  | 21/26 [00:00<00:00, 34.26it/s] 96%|#########6| 25/26 [00:00<00:00, 34.94it/s]100%|##########| 26/26 [00:00<00:00, 29.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.375 (0.361)	train_nll   0.38 (  0.36)	train_penalty   0.04 (  0.03)	weight_norm  22.25 ( 22.22)	train_acc   0.85 (  0.85)	train_minacc   0.17 (  0.11)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 6.7472 (6.9569)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.72it/s] 23%|##3       | 6/26 [00:00<00:00, 22.52it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.52it/s] 42%|####2     | 11/26 [00:00<00:00, 31.17it/s] 62%|######1   | 16/26 [00:00<00:00, 36.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.25it/s] 81%|########  | 21/26 [00:00<00:00, 36.61it/s]100%|##########| 26/26 [00:00<00:00, 39.82it/s]100%|##########| 26/26 [00:00<00:00, 30.77it/s]
Test: [   0/  26]	Loss 0.354 (0.354)	test_acc   0.85 (  0.85)	test_minacc   0.17 (  0.17)	test_majacc   0.97 (  0.97)	Loss_d 0.354 (0.354)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.314 (0.334)	test_acc   0.88 (  0.86)	test_minacc   0.23 (  0.18)	test_majacc   0.99 (  0.98)	Loss_d 0.314 (0.334)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.23 (  0.18)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.394 (0.339)	test_acc   0.83 (  0.85)	test_minacc   0.16 (  0.17)	test_majacc   0.98 (  0.97)	Loss_d 0.394 (0.339)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.16 (  0.17)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.92 (  0.91)
Test: [  26/  26]	Loss 0.360 (0.340)	test_acc   0.87 (  0.85)	test_minacc   0.26 (  0.17)	test_majacc   0.99 (  0.98)	Loss_d 0.360 (0.340)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.26 (  0.17)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.94it/s]
Test: [  0/  1]	Loss 1.552 (1.552)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.98 (  0.98)	Loss_d 1.552 (1.552)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.83)
Test: [  1/  1]	Loss 1.552 (1.552)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.98 (  0.98)	Loss_d 1.552 (1.552)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.83)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0416 (0.0476)	validation_time 0.0004 (0.0015)	train_time 0.0412 (0.0458)
record: (train_acc, test_acc) (0.8549000278115273, 0.17800000309944153)
last accs (train_acc, test_acc) (0.8549000278115273, 0.17800000309944153)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.67it/s] 27%|##6       | 7/26 [00:00<00:00, 28.16it/s] 42%|####2     | 11/26 [00:00<00:00, 30.67it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.06it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.01it/s] 88%|########8 | 23/26 [00:00<00:00, 33.55it/s]100%|##########| 26/26 [00:00<00:00, 29.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.358 (0.339)	train_nll   0.36 (  0.34)	train_penalty   0.04 (  0.03)	weight_norm  22.34 ( 22.29)	train_acc   0.84 (  0.86)	train_minacc   0.14 (  0.21)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 6.7093 (7.0290)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.58it/s] 23%|##3       | 6/26 [00:00<00:00, 30.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.21it/s] 42%|####2     | 11/26 [00:00<00:00, 37.28it/s] 62%|######1   | 16/26 [00:00<00:00, 40.33it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.33it/s] 81%|########  | 21/26 [00:00<00:00, 38.63it/s]100%|##########| 26/26 [00:00<00:00, 41.73it/s]100%|##########| 26/26 [00:00<00:00, 34.76it/s]
Test: [   0/  26]	Loss 0.350 (0.350)	test_acc   0.86 (  0.86)	test_minacc   0.17 (  0.17)	test_majacc   0.99 (  0.99)	Loss_d 0.350 (0.350)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.312 (0.329)	test_acc   0.87 (  0.86)	test_minacc   0.23 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 0.312 (0.329)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.23 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.368 (0.330)	test_acc   0.85 (  0.86)	test_minacc   0.21 (  0.17)	test_majacc   0.99 (  0.98)	Loss_d 0.368 (0.330)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.21 (  0.17)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  26/  26]	Loss 0.339 (0.330)	test_acc   0.85 (  0.86)	test_minacc   0.14 (  0.17)	test_majacc   0.99 (  0.98)	Loss_d 0.339 (0.330)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.14 (  0.17)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.67it/s]
Test: [  0/  1]	Loss 1.647 (1.647)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.98 (  0.98)	Loss_d 1.647 (1.647)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.81 (  0.81)
Test: [  1/  1]	Loss 1.647 (1.647)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.98 (  0.98)	Loss_d 1.647 (1.647)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.81 (  0.81)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0440 (0.0471)	validation_time 0.0004 (0.0013)	train_time 0.0435 (0.0455)
record: (train_acc, test_acc) (0.8585000268816948, 0.18000000715255737)
last accs (train_acc, test_acc) (0.8585000268816948, 0.18000000715255737)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s] 19%|#9        | 5/26 [00:00<00:01, 20.51it/s] 35%|###4      | 9/26 [00:00<00:00, 26.70it/s] 50%|#####     | 13/26 [00:00<00:00, 30.33it/s] 65%|######5   | 17/26 [00:00<00:00, 31.85it/s] 81%|########  | 21/26 [00:00<00:00, 31.61it/s] 96%|#########6| 25/26 [00:00<00:00, 32.76it/s]100%|##########| 26/26 [00:00<00:00, 27.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.318 (0.323)	train_nll   0.32 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.44 ( 22.39)	train_acc   0.88 (  0.86)	train_minacc   0.45 (  0.29)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7368 (6.9777)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.98it/s] 23%|##3       | 6/26 [00:00<00:00, 27.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.97it/s] 42%|####2     | 11/26 [00:00<00:00, 34.88it/s] 62%|######1   | 16/26 [00:00<00:00, 39.92it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.92it/s] 81%|########  | 21/26 [00:00<00:00, 38.44it/s]100%|##########| 26/26 [00:00<00:00, 41.04it/s]100%|##########| 26/26 [00:00<00:00, 33.55it/s]
Test: [   0/  26]	Loss 0.338 (0.338)	test_acc   0.86 (  0.86)	test_minacc   0.25 (  0.25)	test_majacc   0.97 (  0.97)	Loss_d 0.338 (0.338)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.309 (0.317)	test_acc   0.88 (  0.86)	test_minacc   0.30 (  0.28)	test_majacc   0.98 (  0.97)	Loss_d 0.309 (0.317)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.30 (  0.28)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  20/  26]	Loss 0.328 (0.316)	test_acc   0.85 (  0.86)	test_minacc   0.31 (  0.29)	test_majacc   0.97 (  0.96)	Loss_d 0.328 (0.316)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.31 (  0.29)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  26/  26]	Loss 0.294 (0.314)	test_acc   0.87 (  0.86)	test_minacc   0.38 (  0.29)	test_majacc   0.97 (  0.96)	Loss_d 0.294 (0.314)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.38 (  0.29)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.90 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.37it/s]
Test: [  0/  1]	Loss 1.677 (1.677)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 1.677 (1.677)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 1.677 (1.677)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 1.677 (1.677)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0428 (0.0466)	validation_time 0.0004 (0.0012)	train_time 0.0424 (0.0451)
record: (train_acc, test_acc) (0.8635000216960907, 0.22100001573562622)
last accs (train_acc, test_acc) (0.8635000216960907, 0.22100001573562622)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.44it/s] 23%|##3       | 6/26 [00:00<00:00, 28.62it/s] 38%|###8      | 10/26 [00:00<00:00, 31.75it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.87it/s] 69%|######9   | 18/26 [00:00<00:00, 32.85it/s] 85%|########4 | 22/26 [00:00<00:00, 33.68it/s]100%|##########| 26/26 [00:00<00:00, 34.53it/s]100%|##########| 26/26 [00:00<00:00, 30.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.322 (0.319)	train_nll   0.32 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.57 ( 22.50)	train_acc   0.88 (  0.86)	train_minacc   0.57 (  0.32)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 6.3710 (6.8525)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.98it/s] 27%|##6       | 7/26 [00:00<00:00, 33.80it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.80it/s] 46%|####6     | 12/26 [00:00<00:00, 39.94it/s] 65%|######5   | 17/26 [00:00<00:00, 39.21it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.21it/s] 85%|########4 | 22/26 [00:00<00:00, 40.27it/s]100%|##########| 26/26 [00:00<00:00, 36.62it/s]
Test: [   0/  26]	Loss 0.344 (0.344)	test_acc   0.85 (  0.85)	test_minacc   0.42 (  0.42)	test_majacc   0.93 (  0.93)	Loss_d 0.344 (0.344)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.300 (0.319)	test_acc   0.88 (  0.87)	test_minacc   0.44 (  0.45)	test_majacc   0.95 (  0.94)	Loss_d 0.300 (0.319)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.44 (  0.45)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.86 (  0.84)
Test: [  20/  26]	Loss 0.360 (0.316)	test_acc   0.86 (  0.87)	test_minacc   0.47 (  0.48)	test_majacc   0.95 (  0.94)	Loss_d 0.360 (0.316)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.47 (  0.48)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.83 (  0.84)
Test: [  26/  26]	Loss 0.320 (0.316)	test_acc   0.89 (  0.87)	test_minacc   0.55 (  0.48)	test_majacc   0.96 (  0.94)	Loss_d 0.320 (0.316)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.55 (  0.48)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.85 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.44it/s]
Test: [  0/  1]	Loss 1.468 (1.468)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.97 (  0.97)	Loss_d 1.468 (1.468)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 1.468 (1.468)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.97 (  0.97)	Loss_d 1.468 (1.468)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.74 (  0.74)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0456 (0.0465)	validation_time 0.0004 (0.0011)	train_time 0.0452 (0.0451)
record: (train_acc, test_acc) (0.8696000210046768, 0.2680000066757202)
last accs (train_acc, test_acc) (0.8696000210046768, 0.2680000066757202)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.32it/s] 23%|##3       | 6/26 [00:00<00:00, 23.64it/s] 38%|###8      | 10/26 [00:00<00:00, 28.12it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.81it/s] 69%|######9   | 18/26 [00:00<00:00, 32.24it/s] 85%|########4 | 22/26 [00:00<00:00, 33.69it/s]100%|##########| 26/26 [00:00<00:00, 34.02it/s]100%|##########| 26/26 [00:00<00:00, 28.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.284 (0.311)	train_nll   0.28 (  0.31)	train_penalty   0.02 (  0.02)	weight_norm  22.72 ( 22.65)	train_acc   0.89 (  0.86)	train_minacc   0.60 (  0.32)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 5.8838 (6.7374)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.87it/s] 23%|##3       | 6/26 [00:00<00:00, 26.96it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.96it/s] 42%|####2     | 11/26 [00:00<00:00, 34.71it/s] 62%|######1   | 16/26 [00:00<00:00, 39.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.06it/s] 81%|########  | 21/26 [00:00<00:00, 39.71it/s]100%|##########| 26/26 [00:00<00:00, 41.74it/s]100%|##########| 26/26 [00:00<00:00, 34.15it/s]
Test: [   0/  26]	Loss 0.321 (0.321)	test_acc   0.85 (  0.85)	test_minacc   0.50 (  0.50)	test_majacc   0.91 (  0.91)	Loss_d 0.321 (0.321)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.265 (0.284)	test_acc   0.92 (  0.88)	test_minacc   0.61 (  0.59)	test_majacc   0.97 (  0.93)	Loss_d 0.265 (0.284)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.97 (  0.93)	test_corr_d   0.84 (  0.82)
Test: [  20/  26]	Loss 0.304 (0.286)	test_acc   0.87 (  0.88)	test_minacc   0.59 (  0.60)	test_majacc   0.93 (  0.93)	Loss_d 0.304 (0.286)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.59 (  0.60)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.80 (  0.81)
Test: [  26/  26]	Loss 0.265 (0.287)	test_acc   0.90 (  0.88)	test_minacc   0.62 (  0.60)	test_majacc   0.96 (  0.93)	Loss_d 0.265 (0.287)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.62 (  0.60)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.81 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.55it/s]
Test: [  0/  1]	Loss 1.400 (1.400)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 1.400 (1.400)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 1.400 (1.400)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 1.400 (1.400)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.65 (  0.65)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0410 (0.0459)	validation_time 0.0004 (0.0011)	train_time 0.0405 (0.0446)
record: (train_acc, test_acc) (0.8815000217556953, 0.3410000205039978)
last accs (train_acc, test_acc) (0.8815000217556953, 0.3410000205039978)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.70it/s] 23%|##3       | 6/26 [00:00<00:00, 24.33it/s] 38%|###8      | 10/26 [00:00<00:00, 29.18it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.93it/s] 69%|######9   | 18/26 [00:00<00:00, 32.57it/s] 85%|########4 | 22/26 [00:00<00:00, 33.63it/s]100%|##########| 26/26 [00:00<00:00, 34.38it/s]100%|##########| 26/26 [00:00<00:00, 28.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.264 (0.287)	train_nll   0.26 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.89 ( 22.81)	train_acc   0.90 (  0.87)	train_minacc   0.55 (  0.44)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5573 (6.8562)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s]  8%|7         | 2/26 [00:00<00:04,  5.38it/s] 27%|##6       | 7/26 [00:00<00:00, 19.07it/s]                                               27%|##6       | 7/26 [00:00<00:00, 19.07it/s] 46%|####6     | 12/26 [00:00<00:00, 28.08it/s] 69%|######9   | 18/26 [00:00<00:00, 33.85it/s]                                                69%|######9   | 18/26 [00:00<00:00, 33.85it/s] 92%|#########2| 24/26 [00:00<00:00, 39.87it/s]100%|##########| 26/26 [00:00<00:00, 28.23it/s]
Test: [   0/  26]	Loss 0.288 (0.288)	test_acc   0.87 (  0.87)	test_minacc   0.57 (  0.57)	test_majacc   0.93 (  0.93)	Loss_d 0.288 (0.288)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.245 (0.267)	test_acc   0.92 (  0.89)	test_minacc   0.70 (  0.62)	test_majacc   0.96 (  0.93)	Loss_d 0.245 (0.267)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.70 (  0.62)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.277 (0.265)	test_acc   0.89 (  0.89)	test_minacc   0.64 (  0.64)	test_majacc   0.95 (  0.93)	Loss_d 0.277 (0.265)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.80 (  0.81)
Test: [  26/  26]	Loss 0.236 (0.265)	test_acc   0.92 (  0.89)	test_minacc   0.69 (  0.64)	test_majacc   0.96 (  0.93)	Loss_d 0.236 (0.265)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.69 (  0.64)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.82 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.36it/s]
Test: [  0/  1]	Loss 1.644 (1.644)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.97 (  0.97)	Loss_d 1.644 (1.644)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 1.644 (1.644)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.97 (  0.97)	Loss_d 1.644 (1.644)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.73 (  0.73)
Overall Timing[ 10/  1]	epoch_time 0.0396 (0.0454)	validation_time 0.0003 (0.0010)	train_time 0.0392 (0.0441)
record: (train_acc, test_acc) (0.8815000217556953, 0.3410000205039978)
last accs (train_acc, test_acc) (0.8896000232696534, 0.2750000059604645)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.97it/s] 12%|#1        | 3/26 [00:00<00:01, 11.74it/s] 27%|##6       | 7/26 [00:00<00:00, 21.66it/s] 42%|####2     | 11/26 [00:00<00:00, 26.33it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.08it/s] 88%|########8 | 23/26 [00:00<00:00, 32.48it/s]100%|##########| 26/26 [00:00<00:00, 26.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.227 (0.271)	train_nll   0.23 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.07 ( 22.98)	train_acc   0.91 (  0.88)	train_minacc   0.67 (  0.51)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 6.3170 (6.9609)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 27%|##6       | 7/26 [00:00<00:00, 31.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.46it/s] 46%|####6     | 12/26 [00:00<00:00, 37.83it/s] 65%|######5   | 17/26 [00:00<00:00, 37.66it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.66it/s] 85%|########4 | 22/26 [00:00<00:00, 40.57it/s]100%|##########| 26/26 [00:00<00:00, 34.42it/s]
Test: [   0/  26]	Loss 0.283 (0.283)	test_acc   0.89 (  0.89)	test_minacc   0.55 (  0.55)	test_majacc   0.95 (  0.95)	Loss_d 0.283 (0.283)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.242 (0.253)	test_acc   0.92 (  0.89)	test_minacc   0.68 (  0.60)	test_majacc   0.95 (  0.94)	Loss_d 0.242 (0.253)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.68 (  0.60)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.83 (  0.83)
Test: [  20/  26]	Loss 0.248 (0.246)	test_acc   0.93 (  0.90)	test_minacc   0.73 (  0.64)	test_majacc   0.97 (  0.94)	Loss_d 0.248 (0.246)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.73 (  0.64)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.80 (  0.82)
Test: [  26/  26]	Loss 0.201 (0.244)	test_acc   0.94 (  0.90)	test_minacc   0.79 (  0.64)	test_majacc   0.97 (  0.94)	Loss_d 0.201 (0.244)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.79 (  0.64)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.82 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.02it/s]
Test: [  0/  1]	Loss 1.738 (1.738)	test_acc   0.33 (  0.33)	test_minacc   0.25 (  0.25)	test_majacc   0.99 (  0.99)	Loss_d 1.738 (1.738)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 1.738 (1.738)	test_acc   0.33 (  0.33)	test_minacc   0.25 (  0.25)	test_majacc   0.99 (  0.99)	Loss_d 1.738 (1.738)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
Overall Timing[ 11/  1]	epoch_time 0.0410 (0.0450)	validation_time 0.0004 (0.0009)	train_time 0.0405 (0.0438)
record: (train_acc, test_acc) (0.8815000217556953, 0.3410000205039978)
last accs (train_acc, test_acc) (0.8988000257611275, 0.32600000500679016)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.64it/s] 23%|##3       | 6/26 [00:00<00:00, 23.16it/s] 38%|###8      | 10/26 [00:00<00:00, 28.43it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.27it/s] 69%|######9   | 18/26 [00:00<00:00, 33.08it/s] 85%|########4 | 22/26 [00:00<00:00, 33.97it/s]100%|##########| 26/26 [00:00<00:00, 35.30it/s]100%|##########| 26/26 [00:00<00:00, 29.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.233 (0.253)	train_nll   0.23 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.29 ( 23.18)	train_acc   0.90 (  0.89)	train_minacc   0.67 (  0.58)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 7.1754 (7.0931)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.05it/s] 27%|##6       | 7/26 [00:00<00:00, 31.47it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.47it/s] 46%|####6     | 12/26 [00:00<00:00, 37.53it/s] 65%|######5   | 17/26 [00:00<00:00, 40.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.77it/s] 85%|########4 | 22/26 [00:00<00:00, 40.95it/s]100%|##########| 26/26 [00:00<00:00, 35.43it/s]
Test: [   0/  26]	Loss 0.244 (0.244)	test_acc   0.88 (  0.88)	test_minacc   0.62 (  0.62)	test_majacc   0.93 (  0.93)	Loss_d 0.244 (0.244)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.226 (0.223)	test_acc   0.90 (  0.91)	test_minacc   0.63 (  0.67)	test_majacc   0.95 (  0.95)	Loss_d 0.226 (0.223)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.63 (  0.67)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.81)
Test: [  20/  26]	Loss 0.207 (0.212)	test_acc   0.94 (  0.92)	test_minacc   0.83 (  0.71)	test_majacc   0.96 (  0.95)	Loss_d 0.207 (0.212)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.83 (  0.71)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.75 (  0.80)
Test: [  26/  26]	Loss 0.150 (0.207)	test_acc   0.96 (  0.92)	test_minacc   0.86 (  0.72)	test_majacc   0.98 (  0.95)	Loss_d 0.150 (0.207)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.86 (  0.72)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.80 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.30it/s]
Test: [  0/  1]	Loss 1.995 (1.995)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 1.995 (1.995)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 1.995 (1.995)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 1.995 (1.995)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.60 (  0.60)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0441 (0.0449)	validation_time 0.0004 (0.0009)	train_time 0.0437 (0.0438)
record: (train_acc, test_acc) (0.9190000196695328, 0.3620000183582306)
last accs (train_acc, test_acc) (0.9190000196695328, 0.3620000183582306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.34it/s] 19%|#9        | 5/26 [00:00<00:00, 23.48it/s] 35%|###4      | 9/26 [00:00<00:00, 28.57it/s] 50%|#####     | 13/26 [00:00<00:00, 29.74it/s] 65%|######5   | 17/26 [00:00<00:00, 31.59it/s] 81%|########  | 21/26 [00:00<00:00, 33.12it/s] 96%|#########6| 25/26 [00:00<00:00, 34.36it/s]100%|##########| 26/26 [00:00<00:00, 28.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.183 (0.236)	train_nll   0.18 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  23.58 ( 23.44)	train_acc   0.93 (  0.90)	train_minacc   0.74 (  0.62)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.3951 (7.2013)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.06it/s] 23%|##3       | 6/26 [00:00<00:00, 20.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.66it/s] 42%|####2     | 11/26 [00:00<00:00, 30.10it/s] 65%|######5   | 17/26 [00:00<00:00, 35.44it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.44it/s] 85%|########4 | 22/26 [00:00<00:00, 38.16it/s]100%|##########| 26/26 [00:00<00:00, 31.15it/s]
Test: [   0/  26]	Loss 0.217 (0.217)	test_acc   0.93 (  0.93)	test_minacc   0.82 (  0.82)	test_majacc   0.95 (  0.95)	Loss_d 0.217 (0.217)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.207 (0.211)	test_acc   0.92 (  0.91)	test_minacc   0.70 (  0.72)	test_majacc   0.95 (  0.95)	Loss_d 0.207 (0.211)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.70 (  0.72)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.78)
Test: [  20/  26]	Loss 0.191 (0.203)	test_acc   0.93 (  0.92)	test_minacc   0.80 (  0.75)	test_majacc   0.95 (  0.95)	Loss_d 0.191 (0.203)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.80 (  0.75)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.73 (  0.77)
Test: [  26/  26]	Loss 0.140 (0.196)	test_acc   0.97 (  0.92)	test_minacc   0.88 (  0.76)	test_majacc   0.99 (  0.95)	Loss_d 0.140 (0.196)	test_acc_d   0.97 (  0.92)	test_minacc_d   0.88 (  0.76)	test_majacc_d   0.99 (  0.95)	test_corr_d   0.79 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.56it/s]
Test: [  0/  1]	Loss 2.027 (2.027)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 2.027 (2.027)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 2.027 (2.027)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 2.027 (2.027)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.51 (  0.51)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0403 (0.0446)	validation_time 0.0004 (0.0009)	train_time 0.0399 (0.0436)
record: (train_acc, test_acc) (0.9229000223875046, 0.4020000100135803)
last accs (train_acc, test_acc) (0.9229000223875046, 0.4020000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.83it/s] 15%|#5        | 4/26 [00:00<00:01, 18.00it/s] 31%|###       | 8/26 [00:00<00:00, 24.67it/s] 46%|####6     | 12/26 [00:00<00:00, 27.53it/s] 62%|######1   | 16/26 [00:00<00:00, 29.95it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.51it/s] 92%|#########2| 24/26 [00:00<00:00, 32.71it/s]100%|##########| 26/26 [00:00<00:00, 27.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.167 (0.211)	train_nll   0.17 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm  23.88 ( 23.73)	train_acc   0.94 (  0.92)	train_minacc   0.86 (  0.68)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5422 (7.3946)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.42it/s] 23%|##3       | 6/26 [00:00<00:01, 17.02it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.02it/s] 42%|####2     | 11/26 [00:00<00:00, 26.00it/s] 62%|######1   | 16/26 [00:00<00:00, 32.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.52it/s] 81%|########  | 21/26 [00:00<00:00, 36.62it/s]100%|##########| 26/26 [00:00<00:00, 39.70it/s]100%|##########| 26/26 [00:00<00:00, 28.21it/s]
Test: [   0/  26]	Loss 0.213 (0.213)	test_acc   0.91 (  0.91)	test_minacc   0.63 (  0.63)	test_majacc   0.96 (  0.96)	Loss_d 0.213 (0.213)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.170 (0.202)	test_acc   0.95 (  0.92)	test_minacc   0.77 (  0.69)	test_majacc   0.98 (  0.96)	Loss_d 0.170 (0.202)	test_acc_d   0.95 (  0.92)	test_minacc_d   0.77 (  0.69)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.80 (  0.79)
Test: [  20/  26]	Loss 0.196 (0.197)	test_acc   0.93 (  0.92)	test_minacc   0.83 (  0.72)	test_majacc   0.96 (  0.96)	Loss_d 0.196 (0.197)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.83 (  0.72)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.78)
Test: [  26/  26]	Loss 0.113 (0.187)	test_acc   0.96 (  0.93)	test_minacc   0.90 (  0.74)	test_majacc   0.98 (  0.96)	Loss_d 0.113 (0.187)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.90 (  0.74)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.75 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.77it/s]
Test: [  0/  1]	Loss 2.398 (2.398)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.93 (  0.93)	Loss_d 2.398 (2.398)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 2.398 (2.398)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.93 (  0.93)	Loss_d 2.398 (2.398)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.59 (  0.59)
Overall Timing[ 14/  1]	epoch_time 0.0420 (0.0444)	validation_time 0.0005 (0.0008)	train_time 0.0415 (0.0434)
record: (train_acc, test_acc) (0.9229000223875046, 0.4020000100135803)
last accs (train_acc, test_acc) (0.9268000229001045, 0.3410000205039978)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.25it/s] 12%|#1        | 3/26 [00:00<00:02, 11.23it/s] 27%|##6       | 7/26 [00:00<00:00, 20.49it/s] 42%|####2     | 11/26 [00:00<00:00, 25.71it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.33it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.03it/s] 88%|########8 | 23/26 [00:00<00:00, 32.46it/s]100%|##########| 26/26 [00:01<00:00, 25.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.010 (0.086)	train_nll   0.41 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  24.17 ( 24.04)	train_acc   0.81 (  0.88)	train_minacc   0.71 (  0.68)	train_majacc   0.83 (  0.91)	train_corr   0.00 (  0.00)	l1 5.3535 (7.0342)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 23%|##3       | 6/26 [00:00<00:00, 24.17it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.17it/s] 42%|####2     | 11/26 [00:00<00:00, 32.56it/s] 62%|######1   | 16/26 [00:00<00:00, 37.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.25it/s] 81%|########  | 21/26 [00:00<00:00, 38.59it/s]100%|##########| 26/26 [00:00<00:00, 32.81it/s]
Test: [   0/  26]	Loss 0.425 (0.425)	test_acc   0.79 (  0.79)	test_minacc   0.73 (  0.73)	test_majacc   0.81 (  0.81)	Loss_d 0.425 (0.425)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.425 (0.423)	test_acc   0.79 (  0.79)	test_minacc   0.70 (  0.75)	test_majacc   0.81 (  0.79)	Loss_d 0.425 (0.423)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.70 (  0.75)	test_majacc_d   0.81 (  0.79)	test_corr_d   0.58 (  0.59)
Test: [  20/  26]	Loss 0.418 (0.419)	test_acc   0.78 (  0.79)	test_minacc   0.74 (  0.76)	test_majacc   0.79 (  0.79)	Loss_d 0.418 (0.419)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.74 (  0.76)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.58 (  0.58)
Test: [  26/  26]	Loss 0.431 (0.421)	test_acc   0.81 (  0.79)	test_minacc   0.74 (  0.75)	test_majacc   0.82 (  0.80)	Loss_d 0.431 (0.421)	test_acc_d   0.81 (  0.79)	test_minacc_d   0.74 (  0.75)	test_majacc_d   0.82 (  0.80)	test_corr_d   0.59 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.11it/s]
Test: [  0/  1]	Loss 1.193 (1.193)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.88 (  0.88)	Loss_d 1.193 (1.193)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.193 (1.193)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.88 (  0.88)	Loss_d 1.193 (1.193)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.30 (  0.30)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0429 (0.0443)	validation_time 0.0003 (0.0008)	train_time 0.0425 (0.0434)
record: (train_acc, test_acc) (0.7892000246047973, 0.5139999985694885)
last accs (train_acc, test_acc) (0.7892000246047973, 0.5139999985694885)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 19%|#9        | 5/26 [00:00<00:00, 22.21it/s] 35%|###4      | 9/26 [00:00<00:00, 28.45it/s] 50%|#####     | 13/26 [00:00<00:00, 32.04it/s] 65%|######5   | 17/26 [00:00<00:00, 34.01it/s] 81%|########  | 21/26 [00:00<00:00, 35.14it/s] 96%|#########6| 25/26 [00:00<00:00, 35.42it/s]100%|##########| 26/26 [00:00<00:00, 29.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.002 (0.001)	train_nll   0.53 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  24.24 ( 24.22)	train_acc   0.69 (  0.71)	train_minacc   0.81 (  0.83)	train_majacc   0.67 (  0.69)	train_corr   0.00 (  0.00)	l1 4.1516 (4.4932)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.23it/s] 27%|##6       | 7/26 [00:00<00:00, 29.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.87it/s] 46%|####6     | 12/26 [00:00<00:00, 36.79it/s] 65%|######5   | 17/26 [00:00<00:00, 39.78it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.78it/s] 85%|########4 | 22/26 [00:00<00:00, 38.37it/s]100%|##########| 26/26 [00:00<00:00, 35.03it/s]
Test: [   0/  26]	Loss 0.533 (0.533)	test_acc   0.70 (  0.70)	test_minacc   0.80 (  0.80)	test_majacc   0.68 (  0.68)	Loss_d 0.533 (0.533)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.543 (0.532)	test_acc   0.66 (  0.69)	test_minacc   0.75 (  0.81)	test_majacc   0.65 (  0.67)	Loss_d 0.543 (0.532)	test_acc_d   0.66 (  0.69)	test_minacc_d   0.75 (  0.81)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.38 (  0.40)
Test: [  20/  26]	Loss 0.510 (0.531)	test_acc   0.70 (  0.69)	test_minacc   0.84 (  0.82)	test_majacc   0.67 (  0.66)	Loss_d 0.510 (0.531)	test_acc_d   0.70 (  0.69)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.67 (  0.66)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.527 (0.532)	test_acc   0.69 (  0.69)	test_minacc   0.79 (  0.82)	test_majacc   0.67 (  0.66)	Loss_d 0.527 (0.532)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.79 (  0.82)	test_majacc_d   0.67 (  0.66)	test_corr_d   0.39 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.24it/s]
Test: [  0/  1]	Loss 0.824 (0.824)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.80 (  0.80)	Loss_d 0.824 (0.824)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.824 (0.824)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.80 (  0.80)	Loss_d 0.824 (0.824)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.06 (  0.06)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0401 (0.0441)	validation_time 0.0004 (0.0008)	train_time 0.0396 (0.0431)
record: (train_acc, test_acc) (0.6865000283122062, 0.628000020980835)
last accs (train_acc, test_acc) (0.6865000283122062, 0.628000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 19%|#9        | 5/26 [00:00<00:00, 21.88it/s] 35%|###4      | 9/26 [00:00<00:00, 28.18it/s] 50%|#####     | 13/26 [00:00<00:00, 30.92it/s] 65%|######5   | 17/26 [00:00<00:00, 32.98it/s] 81%|########  | 21/26 [00:00<00:00, 34.19it/s] 96%|#########6| 25/26 [00:00<00:00, 34.40it/s]100%|##########| 26/26 [00:00<00:00, 29.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.001)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  24.25 ( 24.25)	train_acc   0.66 (  0.67)	train_minacc   0.74 (  0.81)	train_majacc   0.64 (  0.64)	train_corr   0.00 (  0.00)	l1 4.1353 (4.1603)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.62it/s] 27%|##6       | 7/26 [00:00<00:00, 33.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.34it/s] 46%|####6     | 12/26 [00:00<00:00, 39.93it/s] 65%|######5   | 17/26 [00:00<00:00, 41.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.69it/s] 85%|########4 | 22/26 [00:00<00:00, 43.11it/s]100%|##########| 26/26 [00:00<00:00, 36.46it/s]
Test: [   0/  26]	Loss 0.541 (0.541)	test_acc   0.69 (  0.69)	test_minacc   0.78 (  0.78)	test_majacc   0.67 (  0.67)	Loss_d 0.541 (0.541)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.544 (0.538)	test_acc   0.66 (  0.68)	test_minacc   0.72 (  0.78)	test_majacc   0.65 (  0.67)	Loss_d 0.544 (0.538)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.39 (  0.41)
Test: [  20/  26]	Loss 0.528 (0.538)	test_acc   0.67 (  0.68)	test_minacc   0.79 (  0.79)	test_majacc   0.64 (  0.66)	Loss_d 0.528 (0.538)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.64 (  0.66)	test_corr_d   0.41 (  0.40)
Test: [  26/  26]	Loss 0.542 (0.538)	test_acc   0.66 (  0.68)	test_minacc   0.71 (  0.78)	test_majacc   0.65 (  0.66)	Loss_d 0.542 (0.538)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.71 (  0.78)	test_majacc_d   0.65 (  0.66)	test_corr_d   0.40 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.43it/s]
Test: [  0/  1]	Loss 0.861 (0.861)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.78 (  0.78)	Loss_d 0.861 (0.861)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.861 (0.861)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.78 (  0.78)	Loss_d 0.861 (0.861)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.10 (  0.10)
Overall Timing[ 17/  1]	epoch_time 0.0406 (0.0439)	validation_time 0.0004 (0.0008)	train_time 0.0402 (0.0430)
record: (train_acc, test_acc) (0.6865000283122062, 0.628000020980835)
last accs (train_acc, test_acc) (0.6773000333309174, 0.6210000514984131)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.98it/s] 19%|#9        | 5/26 [00:00<00:00, 25.96it/s] 35%|###4      | 9/26 [00:00<00:00, 30.82it/s] 50%|#####     | 13/26 [00:00<00:00, 32.91it/s] 65%|######5   | 17/26 [00:00<00:00, 34.30it/s] 81%|########  | 21/26 [00:00<00:00, 35.56it/s] 96%|#########6| 25/26 [00:00<00:00, 36.25it/s]100%|##########| 26/26 [00:00<00:00, 31.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.001)	train_nll   0.58 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  24.26 ( 24.25)	train_acc   0.65 (  0.66)	train_minacc   0.79 (  0.80)	train_majacc   0.62 (  0.64)	train_corr   0.00 (  0.00)	l1 4.1265 (4.1112)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 34.11it/s] 35%|###4      | 9/26 [00:00<00:00, 38.10it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.10it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.93it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.18it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.18it/s] 92%|#########2| 24/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 37.96it/s]
Test: [   0/  26]	Loss 0.566 (0.566)	test_acc   0.65 (  0.65)	test_minacc   0.77 (  0.77)	test_majacc   0.63 (  0.63)	Loss_d 0.566 (0.566)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.561 (0.563)	test_acc   0.66 (  0.65)	test_minacc   0.81 (  0.81)	test_majacc   0.64 (  0.63)	Loss_d 0.561 (0.563)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.34 (  0.36)
Test: [  20/  26]	Loss 0.557 (0.563)	test_acc   0.65 (  0.65)	test_minacc   0.86 (  0.81)	test_majacc   0.61 (  0.62)	Loss_d 0.557 (0.563)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.86 (  0.81)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.35 (  0.35)
Test: [  26/  26]	Loss 0.567 (0.562)	test_acc   0.66 (  0.65)	test_minacc   0.79 (  0.81)	test_majacc   0.63 (  0.62)	Loss_d 0.567 (0.562)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.79 (  0.81)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.34 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.95it/s]
Test: [  0/  1]	Loss 0.852 (0.852)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.76 (  0.76)	Loss_d 0.852 (0.852)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.852 (0.852)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.76 (  0.76)	Loss_d 0.852 (0.852)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.05 (  0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/141/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0426 (0.0438)	validation_time 0.0003 (0.0007)	train_time 0.0422 (0.0429)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.14it/s] 15%|#5        | 4/26 [00:00<00:01, 16.12it/s] 31%|###       | 8/26 [00:00<00:00, 24.92it/s] 46%|####6     | 12/26 [00:00<00:00, 29.47it/s] 62%|######1   | 16/26 [00:00<00:00, 32.10it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.86it/s] 92%|#########2| 24/26 [00:00<00:00, 34.99it/s]100%|##########| 26/26 [00:00<00:00, 28.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  24.26 ( 24.26)	train_acc   0.66 (  0.66)	train_minacc   0.79 (  0.80)	train_majacc   0.63 (  0.63)	train_corr   0.00 (  0.00)	l1 4.1167 (4.0753)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.53it/s] 23%|##3       | 6/26 [00:00<00:00, 27.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.03it/s] 42%|####2     | 11/26 [00:00<00:00, 34.97it/s] 62%|######1   | 16/26 [00:00<00:00, 39.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.99it/s] 81%|########  | 21/26 [00:00<00:00, 37.84it/s]100%|##########| 26/26 [00:00<00:00, 41.00it/s]100%|##########| 26/26 [00:00<00:00, 33.58it/s]
Test: [   0/  26]	Loss 0.571 (0.571)	test_acc   0.65 (  0.65)	test_minacc   0.77 (  0.77)	test_majacc   0.63 (  0.63)	Loss_d 0.571 (0.571)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.564 (0.571)	test_acc   0.66 (  0.65)	test_minacc   0.84 (  0.81)	test_majacc   0.63 (  0.62)	Loss_d 0.564 (0.571)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.33 (  0.34)
Test: [  20/  26]	Loss 0.571 (0.571)	test_acc   0.64 (  0.64)	test_minacc   0.84 (  0.81)	test_majacc   0.59 (  0.61)	Loss_d 0.571 (0.571)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.33 (  0.33)
Test: [  26/  26]	Loss 0.568 (0.570)	test_acc   0.66 (  0.64)	test_minacc   0.79 (  0.81)	test_majacc   0.63 (  0.61)	Loss_d 0.568 (0.570)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.79 (  0.81)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.34 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.51it/s]
Test: [  0/  1]	Loss 0.870 (0.870)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.73 (  0.73)	Loss_d 0.870 (0.870)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.870 (0.870)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.73 (  0.73)	Loss_d 0.870 (0.870)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.05 (  0.05)
Overall Timing[ 19/  1]	epoch_time 0.0401 (0.0436)	validation_time 0.0004 (0.0007)	train_time 0.0397 (0.0428)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.6423000144958496, 0.6370000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.44it/s] 19%|#9        | 5/26 [00:00<00:00, 24.01it/s] 35%|###4      | 9/26 [00:00<00:00, 29.42it/s] 50%|#####     | 13/26 [00:00<00:00, 32.16it/s] 65%|######5   | 17/26 [00:00<00:00, 33.81it/s] 81%|########  | 21/26 [00:00<00:00, 34.88it/s] 96%|#########6| 25/26 [00:00<00:00, 35.38it/s]100%|##########| 26/26 [00:00<00:00, 30.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  24.26 ( 24.26)	train_acc   0.68 (  0.66)	train_minacc   0.81 (  0.80)	train_majacc   0.65 (  0.63)	train_corr   0.00 (  0.00)	l1 4.0687 (4.0696)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.85it/s] 23%|##3       | 6/26 [00:00<00:00, 30.83it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.83it/s] 42%|####2     | 11/26 [00:00<00:00, 36.93it/s] 62%|######1   | 16/26 [00:00<00:00, 41.21it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.21it/s] 81%|########  | 21/26 [00:00<00:00, 39.06it/s]100%|##########| 26/26 [00:00<00:00, 42.21it/s]100%|##########| 26/26 [00:00<00:00, 35.03it/s]
Test: [   0/  26]	Loss 0.558 (0.558)	test_acc   0.66 (  0.66)	test_minacc   0.75 (  0.75)	test_majacc   0.64 (  0.64)	Loss_d 0.558 (0.558)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.555 (0.560)	test_acc   0.66 (  0.65)	test_minacc   0.82 (  0.81)	test_majacc   0.63 (  0.63)	Loss_d 0.555 (0.560)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.82 (  0.81)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.36 (  0.37)
Test: [  20/  26]	Loss 0.564 (0.560)	test_acc   0.65 (  0.65)	test_minacc   0.84 (  0.80)	test_majacc   0.61 (  0.62)	Loss_d 0.564 (0.560)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.35 (  0.36)
Test: [  26/  26]	Loss 0.556 (0.559)	test_acc   0.68 (  0.65)	test_minacc   0.81 (  0.80)	test_majacc   0.65 (  0.63)	Loss_d 0.556 (0.559)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.81 (  0.80)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.37 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 29.20it/s]
Test: [  0/  1]	Loss 0.888 (0.888)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.75 (  0.75)	Loss_d 0.888 (0.888)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.888 (0.888)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.75 (  0.75)	Loss_d 0.888 (0.888)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.10 (  0.10)
Overall Timing[ 20/  1]	epoch_time 0.0412 (0.0435)	validation_time 0.0006 (0.0007)	train_time 0.0405 (0.0427)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.6519000123143196, 0.6260000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.00it/s] 15%|#5        | 4/26 [00:00<00:01, 18.60it/s] 31%|###       | 8/26 [00:00<00:00, 25.71it/s] 46%|####6     | 12/26 [00:00<00:00, 29.39it/s] 62%|######1   | 16/26 [00:00<00:00, 31.87it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.47it/s] 92%|#########2| 24/26 [00:00<00:00, 34.49it/s]100%|##########| 26/26 [00:00<00:00, 28.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  24.26 ( 24.26)	train_acc   0.69 (  0.66)	train_minacc   0.81 (  0.80)	train_majacc   0.67 (  0.63)	train_corr   0.00 (  0.00)	l1 4.0297 (4.0638)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.54it/s] 23%|##3       | 6/26 [00:00<00:01, 19.03it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.03it/s] 42%|####2     | 11/26 [00:00<00:00, 28.09it/s] 62%|######1   | 16/26 [00:00<00:00, 34.00it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.00it/s] 81%|########  | 21/26 [00:00<00:00, 34.65it/s]100%|##########| 26/26 [00:00<00:00, 38.64it/s]100%|##########| 26/26 [00:00<00:00, 28.67it/s]
Test: [   0/  26]	Loss 0.545 (0.545)	test_acc   0.67 (  0.67)	test_minacc   0.77 (  0.77)	test_majacc   0.65 (  0.65)	Loss_d 0.545 (0.545)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.547 (0.547)	test_acc   0.67 (  0.67)	test_minacc   0.82 (  0.80)	test_majacc   0.64 (  0.64)	Loss_d 0.547 (0.547)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.38 (  0.40)
Test: [  20/  26]	Loss 0.548 (0.546)	test_acc   0.67 (  0.67)	test_minacc   0.84 (  0.79)	test_majacc   0.64 (  0.64)	Loss_d 0.548 (0.546)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.548 (0.547)	test_acc   0.69 (  0.67)	test_minacc   0.81 (  0.79)	test_majacc   0.66 (  0.64)	Loss_d 0.548 (0.547)	test_acc_d   0.69 (  0.67)	test_minacc_d   0.81 (  0.79)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.39 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.40it/s]
Test: [  0/  1]	Loss 0.894 (0.894)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.76 (  0.76)	Loss_d 0.894 (0.894)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.894 (0.894)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.76 (  0.76)	Loss_d 0.894 (0.894)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.13 (  0.13)
Overall Timing[ 21/  1]	epoch_time 0.0445 (0.0436)	validation_time 0.0004 (0.0007)	train_time 0.0440 (0.0427)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.6658000293374061, 0.6140000224113464)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.89it/s]  8%|7         | 2/26 [00:00<00:02,  8.81it/s] 23%|##3       | 6/26 [00:00<00:00, 21.23it/s] 38%|###8      | 10/26 [00:00<00:00, 27.14it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.08it/s] 69%|######9   | 18/26 [00:00<00:00, 31.85it/s] 85%|########4 | 22/26 [00:00<00:00, 33.35it/s]100%|##########| 26/26 [00:00<00:00, 34.15it/s]100%|##########| 26/26 [00:00<00:00, 27.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  24.26 ( 24.26)	train_acc   0.68 (  0.66)	train_minacc   0.79 (  0.80)	train_majacc   0.65 (  0.63)	train_corr   0.00 (  0.00)	l1 4.0258 (4.0587)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.59it/s] 12%|#1        | 3/26 [00:00<00:02, 10.69it/s] 31%|###       | 8/26 [00:00<00:00, 24.36it/s]                                               31%|###       | 8/26 [00:00<00:00, 24.36it/s] 50%|#####     | 13/26 [00:00<00:00, 31.68it/s] 69%|######9   | 18/26 [00:00<00:00, 36.71it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.71it/s] 88%|########8 | 23/26 [00:00<00:00, 36.54it/s]100%|##########| 26/26 [00:00<00:00, 29.30it/s]
Test: [   0/  26]	Loss 0.542 (0.542)	test_acc   0.68 (  0.68)	test_minacc   0.78 (  0.78)	test_majacc   0.66 (  0.66)	Loss_d 0.542 (0.542)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.546 (0.542)	test_acc   0.66 (  0.67)	test_minacc   0.77 (  0.78)	test_majacc   0.64 (  0.65)	Loss_d 0.546 (0.542)	test_acc_d   0.66 (  0.67)	test_minacc_d   0.77 (  0.78)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.39 (  0.41)
Test: [  20/  26]	Loss 0.540 (0.541)	test_acc   0.68 (  0.67)	test_minacc   0.84 (  0.79)	test_majacc   0.64 (  0.65)	Loss_d 0.540 (0.541)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.39 (  0.40)
Test: [  26/  26]	Loss 0.550 (0.542)	test_acc   0.68 (  0.67)	test_minacc   0.79 (  0.79)	test_majacc   0.65 (  0.65)	Loss_d 0.550 (0.542)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.39 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.56it/s]
Test: [  0/  1]	Loss 0.894 (0.894)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.77 (  0.77)	Loss_d 0.894 (0.894)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.894 (0.894)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.77 (  0.77)	Loss_d 0.894 (0.894)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.14 (  0.14)
Overall Timing[ 22/  1]	epoch_time 0.0456 (0.0436)	validation_time 0.0004 (0.0007)	train_time 0.0451 (0.0428)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.6695000299811363, 0.609000027179718)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 15%|#5        | 4/26 [00:00<00:01, 16.43it/s] 31%|###       | 8/26 [00:00<00:00, 20.77it/s] 46%|####6     | 12/26 [00:00<00:00, 25.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.13it/s] 69%|######9   | 18/26 [00:00<00:00, 27.18it/s] 85%|########4 | 22/26 [00:00<00:00, 30.10it/s]100%|##########| 26/26 [00:00<00:00, 31.52it/s]100%|##########| 26/26 [00:01<00:00, 24.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 4.026244640350342
set z to 3.9859821939468385
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 393 tensor(-0.0064, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 241 tensor(-0.0098, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 189 tensor(0.0148, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 165 tensor(0.0088, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 158 tensor(0.0032, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.002 (0.038)	train_nll   0.51 (  0.55)	train_penalty   0.00 (  0.04)	weight_norm  24.96 ( 24.45)	train_acc   0.75 (  0.68)	train_minacc   0.55 (  0.61)	train_majacc   0.79 (  0.69)	train_corr   0.00 (  0.00)	l1 4.9956 (5.1899)	zero_count 0.0000 (41.1840)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.64it/s] 19%|#9        | 5/26 [00:00<00:00, 23.95it/s] 38%|###8      | 10/26 [00:00<00:00, 31.81it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.89it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.91it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.91it/s] 96%|#########6| 25/26 [00:00<00:00, 42.02it/s]100%|##########| 26/26 [00:00<00:00, 34.09it/s]
Test: [   0/  26]	Loss 0.567 (0.567)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.567 (0.567)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.564 (0.545)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.564 (0.545)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.56 (  0.55)
Test: [  20/  26]	Loss 0.537 (0.547)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.537 (0.547)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.49 (  0.54)
Test: [  26/  26]	Loss 0.549 (0.548)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.549 (0.548)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.46 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.17it/s]
Test: [  0/  1]	Loss 1.147 (1.147)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.147 (1.147)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 1.147 (1.147)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.147 (1.147)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.00 ( -0.00)
Overall Timing[ 23/  1]	epoch_time 0.0432 (0.0436)	validation_time 0.0004 (0.0007)	train_time 0.0428 (0.0428)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.05it/s] 15%|#5        | 4/26 [00:00<00:01, 15.11it/s] 27%|##6       | 7/26 [00:00<00:00, 20.44it/s] 42%|####2     | 11/26 [00:00<00:00, 25.46it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.79it/s] 69%|######9   | 18/26 [00:00<00:00, 28.50it/s] 85%|########4 | 22/26 [00:00<00:00, 29.64it/s]100%|##########| 26/26 [00:01<00:00, 24.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 154 tensor(0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 153 tensor(0.0027, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 153 tensor(0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 153 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 178 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 178 tensor(6.4611e-05, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.001)	train_nll   0.60 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  25.44 ( 25.29)	train_acc   0.52 (  0.59)	train_minacc   0.64 (  0.67)	train_majacc   0.50 (  0.58)	train_corr   0.00 (  0.00)	l1 4.0757 (4.2207)	zero_count 0.0000 (82.5630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.21it/s] 23%|##3       | 6/26 [00:00<00:01, 17.76it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.76it/s] 42%|####2     | 11/26 [00:00<00:00, 27.02it/s] 62%|######1   | 16/26 [00:00<00:00, 33.05it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.05it/s] 81%|########  | 21/26 [00:00<00:00, 33.66it/s]100%|##########| 26/26 [00:00<00:00, 37.78it/s]100%|##########| 26/26 [00:00<00:00, 27.47it/s]
Test: [   0/  26]	Loss 0.585 (0.585)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.585 (0.585)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.593 (0.593)	test_acc   0.46 (  0.50)	test_minacc   0.42 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.45 (  0.40)
Test: [  20/  26]	Loss 0.575 (0.591)	test_acc   0.55 (  0.50)	test_minacc   0.59 (  0.52)	test_majacc   0.54 (  0.50)	Loss_d 0.575 (0.591)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.59 (  0.52)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.39 (  0.41)
Test: [  26/  26]	Loss 0.602 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.33 (  0.52)	test_majacc   0.54 (  0.50)	Loss_d 0.602 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.33 (  0.52)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.27 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.56it/s]
Test: [  0/  1]	Loss 1.035 (1.035)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.035 (1.035)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.035 (1.035)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.035 (1.035)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.05 (  0.05)
Overall Timing[ 24/  1]	epoch_time 0.0479 (0.0438)	validation_time 0.0004 (0.0007)	train_time 0.0475 (0.0430)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.49920000606775283, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.70it/s] 19%|#9        | 5/26 [00:00<00:01, 17.38it/s] 35%|###4      | 9/26 [00:00<00:00, 23.50it/s] 50%|#####     | 13/26 [00:00<00:00, 27.01it/s] 65%|######5   | 17/26 [00:00<00:00, 28.94it/s] 81%|########  | 21/26 [00:00<00:00, 30.35it/s] 96%|#########6| 25/26 [00:00<00:00, 32.43it/s]100%|##########| 26/26 [00:01<00:00, 25.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 181 tensor(1.4331e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 173 tensor(1.5360e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 180 tensor(4.2191e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 184 tensor(-3.0393e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 206 tensor(-1.2718e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 302 tensor(3.4488e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 302 tensor(1.1803e-08, device='cuda:0')
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.47 ( 25.46)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.61)	train_majacc   0.54 (  0.48)	train_corr   0.00 (  0.00)	l1 3.9911 (4.0130)	zero_count 0.0000 (76.5960)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.23it/s] 27%|##6       | 7/26 [00:00<00:00, 33.43it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.43it/s] 46%|####6     | 12/26 [00:00<00:00, 39.91it/s] 65%|######5   | 17/26 [00:00<00:00, 42.28it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.28it/s] 85%|########4 | 22/26 [00:00<00:00, 40.43it/s]100%|##########| 26/26 [00:00<00:00, 37.22it/s]
Test: [   0/  26]	Loss 0.589 (0.589)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.589 (0.589)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.602 (0.597)	test_acc   0.46 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.602 (0.597)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.585 (0.596)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.51)	test_majacc   0.54 (  0.50)	Loss_d 0.585 (0.596)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.51)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.37 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.596)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.51)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.596)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.51)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.28 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.43it/s]
Test: [  0/  1]	Loss 1.029 (1.029)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.029 (1.029)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 1.029 (1.029)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.029 (1.029)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Overall Timing[ 25/  1]	epoch_time 0.0409 (0.0437)	validation_time 0.0003 (0.0007)	train_time 0.0405 (0.0429)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.4990000086128712, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.94it/s] 15%|#5        | 4/26 [00:00<00:01, 16.91it/s] 27%|##6       | 7/26 [00:00<00:00, 21.87it/s] 42%|####2     | 11/26 [00:00<00:00, 25.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.26it/s] 85%|########4 | 22/26 [00:00<00:00, 28.76it/s] 96%|#########6| 25/26 [00:00<00:00, 28.07it/s]100%|##########| 26/26 [00:01<00:00, 24.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 237 tensor(-4.8782e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 230 tensor(-2.7187e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 381 tensor(-1.5953e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 262 tensor(-2.4008e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 403 tensor(4.3056e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 403 tensor(6.7631e-07, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.55)	train_majacc   0.54 (  0.49)	train_corr   0.00 (  0.00)	l1 3.9860 (3.9994)	zero_count 108.0000 (47.2770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.19it/s] 31%|###       | 8/26 [00:00<00:00, 37.94it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.94it/s] 50%|#####     | 13/26 [00:00<00:00, 37.90it/s] 69%|######9   | 18/26 [00:00<00:00, 40.25it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.25it/s] 88%|########8 | 23/26 [00:00<00:00, 42.00it/s]100%|##########| 26/26 [00:00<00:00, 36.84it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.592 (0.592)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.601 (0.597)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.601 (0.597)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.43 (  0.39)
Test: [  20/  26]	Loss 0.588 (0.596)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.588 (0.596)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.596)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.596)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.45it/s]
Test: [  0/  1]	Loss 1.042 (1.042)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.042 (1.042)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.042 (1.042)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.042 (1.042)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 26/  1]	epoch_time 0.0434 (0.0437)	validation_time 0.0006 (0.0007)	train_time 0.0428 (0.0429)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.49990000972151755, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.57it/s] 15%|#5        | 4/26 [00:00<00:01, 16.44it/s] 31%|###       | 8/26 [00:00<00:00, 22.66it/s] 42%|####2     | 11/26 [00:00<00:00, 24.93it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.15it/s] 69%|######9   | 18/26 [00:00<00:00, 27.36it/s] 81%|########  | 21/26 [00:00<00:00, 26.55it/s] 92%|#########2| 24/26 [00:00<00:00, 26.55it/s]100%|##########| 26/26 [00:01<00:00, 23.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 359 tensor(-2.8998e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 254 tensor(-3.1166e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 421 tensor(2.5318e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 299 tensor(-1.6930e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 316 tensor(1.2349e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 416 tensor(1.4346e-05, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.51)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9888 (3.9906)	zero_count 0.0000 (39.5460)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.06it/s] 23%|##3       | 6/26 [00:00<00:00, 26.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.13it/s] 42%|####2     | 11/26 [00:00<00:00, 33.98it/s] 62%|######1   | 16/26 [00:00<00:00, 38.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.55it/s] 81%|########  | 21/26 [00:00<00:00, 37.56it/s]100%|##########| 26/26 [00:00<00:00, 40.59it/s]100%|##########| 26/26 [00:00<00:00, 32.53it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.600 (0.597)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.600 (0.597)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.43 (  0.39)
Test: [  20/  26]	Loss 0.589 (0.596)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.589 (0.596)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.596)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.602 (0.596)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.38it/s]
Test: [  0/  1]	Loss 1.047 (1.047)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.047 (1.047)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.047 (1.047)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.047 (1.047)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 27/  1]	epoch_time 0.0454 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0450 (0.0430)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.77it/s] 15%|#5        | 4/26 [00:00<00:01, 13.34it/s] 31%|###       | 8/26 [00:00<00:00, 20.75it/s] 46%|####6     | 12/26 [00:00<00:00, 24.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.49it/s] 69%|######9   | 18/26 [00:00<00:00, 25.47it/s] 85%|########4 | 22/26 [00:00<00:00, 28.57it/s]100%|##########| 26/26 [00:01<00:00, 29.94it/s]100%|##########| 26/26 [00:01<00:00, 24.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 388 tensor(7.9683e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 255 tensor(-3.6494e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 248 tensor(3.3513e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 398 tensor(1.5228e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 246 tensor(-7.6294e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 406 tensor(1.9515e-05, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9932 (3.9919)	zero_count 0.0000 (43.4850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.38it/s] 27%|##6       | 7/26 [00:00<00:01, 15.93it/s]                                               27%|##6       | 7/26 [00:00<00:01, 15.93it/s] 46%|####6     | 12/26 [00:00<00:00, 24.30it/s] 65%|######5   | 17/26 [00:00<00:00, 30.28it/s]                                                65%|######5   | 17/26 [00:00<00:00, 30.28it/s] 85%|########4 | 22/26 [00:00<00:00, 33.64it/s]100%|##########| 26/26 [00:01<00:00, 25.53it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.600 (0.597)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.600 (0.597)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.43 (  0.39)
Test: [  20/  26]	Loss 0.590 (0.595)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.590 (0.595)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.596)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.602 (0.596)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.44it/s]
Test: [  0/  1]	Loss 1.046 (1.046)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.046 (1.046)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.046 (1.046)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.046 (1.046)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 28/  1]	epoch_time 0.0466 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0462 (0.0431)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 15%|#5        | 4/26 [00:00<00:01, 16.86it/s] 27%|##6       | 7/26 [00:00<00:00, 21.48it/s] 42%|####2     | 11/26 [00:00<00:00, 26.77it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.66it/s] 65%|######5   | 17/26 [00:00<00:00, 26.34it/s] 81%|########  | 21/26 [00:00<00:00, 29.27it/s] 92%|#########2| 24/26 [00:00<00:00, 29.16it/s]100%|##########| 26/26 [00:01<00:00, 24.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 398 tensor(1.0105e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 251 tensor(-2.5386e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 236 tensor(-8.3346e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 425 tensor(2.6870e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 308 tensor(-1.0487e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 396 tensor(1.9511e-05, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9913 (3.9903)	zero_count 0.0000 (40.6380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.24it/s] 19%|#9        | 5/26 [00:00<00:01, 19.41it/s] 38%|###8      | 10/26 [00:00<00:00, 30.38it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.38it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.28it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 36.28it/s] 81%|########  | 21/26 [00:00<00:00, 38.32it/s]100%|##########| 26/26 [00:00<00:00, 41.11it/s]100%|##########| 26/26 [00:00<00:00, 31.62it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.599 (0.596)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.599 (0.596)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.43 (  0.39)
Test: [  20/  26]	Loss 0.589 (0.594)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.589 (0.594)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.595)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.595)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.35it/s]
Test: [  0/  1]	Loss 1.051 (1.051)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.051 (1.051)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.051 (1.051)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.051 (1.051)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 29/  1]	epoch_time 0.0464 (0.0439)	validation_time 0.0003 (0.0006)	train_time 0.0460 (0.0432)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 19%|#9        | 5/26 [00:00<00:01, 18.35it/s] 31%|###       | 8/26 [00:00<00:00, 21.18it/s] 42%|####2     | 11/26 [00:00<00:00, 23.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.18it/s] 69%|######9   | 18/26 [00:00<00:00, 26.91it/s] 81%|########  | 21/26 [00:00<00:00, 27.62it/s] 96%|#########6| 25/26 [00:00<00:00, 30.80it/s]100%|##########| 26/26 [00:01<00:00, 24.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 430 tensor(1.4892e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 351 tensor(-1.2186e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 255 tensor(-1.9643e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 427 tensor(1.6466e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 358 tensor(1.9080e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 319 tensor(5.8509e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 319 tensor(1.8626e-08, device='cuda:0')
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9887 (3.9891)	zero_count 0.0000 (33.1110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.35it/s] 31%|###       | 8/26 [00:00<00:00, 37.82it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.82it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.47it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.47it/s] 92%|#########2| 24/26 [00:00<00:00, 42.00it/s]100%|##########| 26/26 [00:00<00:00, 38.89it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.598 (0.595)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.598 (0.595)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.43 (  0.39)
Test: [  20/  26]	Loss 0.589 (0.594)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.589 (0.594)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.601 (0.594)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.594)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.45it/s]
Test: [  0/  1]	Loss 1.054 (1.054)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.054 (1.054)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.054 (1.054)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.054 (1.054)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 30/  1]	epoch_time 0.0439 (0.0439)	validation_time 0.0005 (0.0006)	train_time 0.0434 (0.0432)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 19%|#9        | 5/26 [00:00<00:01, 20.24it/s] 35%|###4      | 9/26 [00:00<00:00, 26.55it/s] 50%|#####     | 13/26 [00:00<00:00, 28.36it/s] 65%|######5   | 17/26 [00:00<00:00, 29.65it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.34it/s] 92%|#########2| 24/26 [00:00<00:00, 31.36it/s]100%|##########| 26/26 [00:00<00:00, 26.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 370 tensor(1.1399e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 259 tensor(-1.5047e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 249 tensor(-1.0347e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 366 tensor(1.0846e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 244 tensor(-3.2678e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 424 tensor(5.4892e-06, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9860 (3.9910)	zero_count 267.0000 (45.3630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.66it/s] 23%|##3       | 6/26 [00:00<00:00, 26.96it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.96it/s] 42%|####2     | 11/26 [00:00<00:00, 34.53it/s] 62%|######1   | 16/26 [00:00<00:00, 39.20it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.20it/s] 81%|########  | 21/26 [00:00<00:00, 38.07it/s]100%|##########| 26/26 [00:00<00:00, 41.02it/s]100%|##########| 26/26 [00:00<00:00, 33.21it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.596 (0.595)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.596 (0.595)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.589 (0.593)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.589 (0.593)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.601 (0.594)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.594)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.02it/s]
Test: [  0/  1]	Loss 1.057 (1.057)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.057 (1.057)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.057 (1.057)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.057 (1.057)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 31/  1]	epoch_time 0.0410 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0405 (0.0431)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 15%|#5        | 4/26 [00:00<00:01, 15.36it/s] 31%|###       | 8/26 [00:00<00:00, 22.68it/s] 42%|####2     | 11/26 [00:00<00:00, 24.77it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.35it/s] 69%|######9   | 18/26 [00:00<00:00, 29.25it/s] 81%|########  | 21/26 [00:00<00:00, 28.91it/s] 96%|#########6| 25/26 [00:00<00:00, 29.76it/s]100%|##########| 26/26 [00:01<00:00, 24.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 405 tensor(1.6723e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 266 tensor(-1.2892e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 247 tensor(-3.4302e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 318 tensor(6.5943e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 240 tensor(-1.5304e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 240 tensor(1.0140e-06, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9869 (3.9893)	zero_count 0.0000 (45.4740)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.76it/s] 23%|##3       | 6/26 [00:00<00:00, 31.12it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.12it/s] 42%|####2     | 11/26 [00:00<00:00, 37.65it/s] 62%|######1   | 16/26 [00:00<00:00, 41.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.65it/s] 81%|########  | 21/26 [00:00<00:00, 39.51it/s]100%|##########| 26/26 [00:00<00:00, 42.61it/s]100%|##########| 26/26 [00:00<00:00, 35.60it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.596 (0.594)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.596 (0.594)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.43 (  0.39)
Test: [  20/  26]	Loss 0.589 (0.593)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.589 (0.593)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.601 (0.594)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.594)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.29it/s]
Test: [  0/  1]	Loss 1.056 (1.056)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.056 (1.056)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.056 (1.056)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.056 (1.056)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 32/  1]	epoch_time 0.0432 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0427 (0.0431)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.42it/s] 12%|#1        | 3/26 [00:00<00:01, 12.51it/s] 27%|##6       | 7/26 [00:00<00:00, 21.46it/s] 38%|###8      | 10/26 [00:00<00:00, 23.37it/s] 50%|#####     | 13/26 [00:00<00:00, 25.23it/s] 65%|######5   | 17/26 [00:00<00:00, 28.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.18it/s] 88%|########8 | 23/26 [00:00<00:00, 28.31it/s]100%|##########| 26/26 [00:01<00:00, 24.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 416 tensor(9.5996e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 378 tensor(1.9281e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 242 tensor(-9.7791e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 400 tensor(6.4159e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 264 tensor(1.7724e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 244 tensor(-2.4620e-07, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9878 (3.9881)	zero_count 0.0000 (43.9140)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.47it/s] 31%|###       | 8/26 [00:00<00:00, 37.05it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.05it/s] 50%|#####     | 13/26 [00:00<00:00, 36.64it/s] 69%|######9   | 18/26 [00:00<00:00, 40.27it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.27it/s] 88%|########8 | 23/26 [00:00<00:00, 42.34it/s]100%|##########| 26/26 [00:00<00:00, 36.32it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.596 (0.594)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.596 (0.594)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.39)
Test: [  20/  26]	Loss 0.589 (0.593)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.589 (0.593)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.601 (0.593)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.593)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.80it/s]
Test: [  0/  1]	Loss 1.057 (1.057)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.057 (1.057)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.057 (1.057)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.057 (1.057)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 33/  1]	epoch_time 0.0495 (0.0440)	validation_time 0.0007 (0.0006)	train_time 0.0488 (0.0433)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.21it/s] 23%|##3       | 6/26 [00:00<00:00, 22.89it/s] 35%|###4      | 9/26 [00:00<00:00, 23.85it/s] 50%|#####     | 13/26 [00:00<00:00, 26.61it/s] 65%|######5   | 17/26 [00:00<00:00, 28.21it/s] 81%|########  | 21/26 [00:00<00:00, 31.01it/s] 96%|#########6| 25/26 [00:00<00:00, 29.72it/s]100%|##########| 26/26 [00:01<00:00, 25.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 412 tensor(5.4761e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 398 tensor(1.0374e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 250 tensor(-1.3384e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 248 tensor(9.1250e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 378 tensor(9.0542e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 280 tensor(-7.5429e-07, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9870 (3.9875)	zero_count 0.0000 (44.3040)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.48it/s] 31%|###       | 8/26 [00:00<00:00, 40.63it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.63it/s] 50%|#####     | 13/26 [00:00<00:00, 42.50it/s] 69%|######9   | 18/26 [00:00<00:00, 43.95it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.95it/s] 88%|########8 | 23/26 [00:00<00:00, 44.22it/s]100%|##########| 26/26 [00:00<00:00, 37.90it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.595 (0.594)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.595 (0.594)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.589 (0.593)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.589 (0.593)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.601 (0.593)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.593)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.47it/s]
Test: [  0/  1]	Loss 1.058 (1.058)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.058 (1.058)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.058 (1.058)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.058 (1.058)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 34/  1]	epoch_time 0.0452 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0447 (0.0433)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.99it/s] 15%|#5        | 4/26 [00:00<00:01, 15.16it/s] 27%|##6       | 7/26 [00:00<00:00, 19.35it/s] 42%|####2     | 11/26 [00:00<00:00, 23.65it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.47it/s] 69%|######9   | 18/26 [00:00<00:00, 27.76it/s] 81%|########  | 21/26 [00:00<00:00, 28.07it/s] 96%|#########6| 25/26 [00:00<00:00, 30.02it/s]100%|##########| 26/26 [00:01<00:00, 23.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 432 tensor(4.1214e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 397 tensor(9.0359e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 275 tensor(-6.6679e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 254 tensor(-1.8391e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 328 tensor(5.8286e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 244 tensor(7.3958e-08, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 244 tensor(9.7314e-10, device='cuda:0')
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9883 (3.9874)	zero_count 0.0000 (42.9000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.12it/s] 35%|###4      | 9/26 [00:00<00:00, 36.62it/s]                                               35%|###4      | 9/26 [00:00<00:00, 36.62it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.11it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.16it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.16it/s] 92%|#########2| 24/26 [00:00<00:00, 42.64it/s]100%|##########| 26/26 [00:00<00:00, 36.24it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.595 (0.594)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.595 (0.594)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.39)
Test: [  20/  26]	Loss 0.589 (0.593)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.589 (0.593)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.601 (0.593)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.593)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.49it/s]
Test: [  0/  1]	Loss 1.058 (1.058)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.058 (1.058)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.058 (1.058)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.058 (1.058)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 35/  1]	epoch_time 0.0479 (0.0441)	validation_time 0.0004 (0.0006)	train_time 0.0474 (0.0434)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.66it/s] 19%|#9        | 5/26 [00:00<00:00, 21.45it/s] 35%|###4      | 9/26 [00:00<00:00, 27.66it/s] 46%|####6     | 12/26 [00:00<00:00, 27.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.52it/s] 88%|########8 | 23/26 [00:00<00:00, 30.68it/s]100%|##########| 26/26 [00:00<00:00, 26.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 361 tensor(5.5146e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 290 tensor(2.0589e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 245 tensor(-2.3503e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 238 tensor(1.6629e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 231 tensor(1.4685e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 238 tensor(-4.2796e-07, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9860 (3.9872)	zero_count 280.0000 (52.9030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.27it/s] 23%|##3       | 6/26 [00:00<00:01, 17.91it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.91it/s] 42%|####2     | 11/26 [00:00<00:00, 26.96it/s] 62%|######1   | 16/26 [00:00<00:00, 33.19it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.19it/s] 81%|########  | 21/26 [00:00<00:00, 34.54it/s]100%|##########| 26/26 [00:00<00:00, 38.50it/s]100%|##########| 26/26 [00:00<00:00, 28.01it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.594 (0.594)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.594 (0.594)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.589 (0.593)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.589 (0.593)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.601 (0.593)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.593)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.67it/s]
Test: [  0/  1]	Loss 1.058 (1.058)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.058 (1.058)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.058 (1.058)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.058 (1.058)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 36/  1]	epoch_time 0.0454 (0.0441)	validation_time 0.0003 (0.0006)	train_time 0.0450 (0.0435)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.38it/s] 15%|#5        | 4/26 [00:00<00:01, 16.43it/s] 31%|###       | 8/26 [00:00<00:00, 24.21it/s] 42%|####2     | 11/26 [00:00<00:00, 25.12it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.19it/s] 69%|######9   | 18/26 [00:00<00:00, 28.85it/s] 81%|########  | 21/26 [00:00<00:00, 29.08it/s] 96%|#########6| 25/26 [00:00<00:00, 29.94it/s]100%|##########| 26/26 [00:01<00:00, 25.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 343 tensor(3.1584e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 369 tensor(5.1859e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 265 tensor(-1.3176e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 239 tensor(-8.8116e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 243 tensor(2.4115e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 235 tensor(-7.0616e-07, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9869 (3.9869)	zero_count 0.0000 (53.3910)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.50it/s] 19%|#9        | 5/26 [00:00<00:00, 23.96it/s] 38%|###8      | 10/26 [00:00<00:00, 30.67it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.67it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.32it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.41it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.41it/s] 96%|#########6| 25/26 [00:00<00:00, 41.02it/s]100%|##########| 26/26 [00:00<00:00, 33.39it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.594 (0.594)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.594 (0.594)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.588 (0.592)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.588 (0.592)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.601 (0.593)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.601 (0.593)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.32it/s]
Test: [  0/  1]	Loss 1.059 (1.059)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.059 (1.059)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.059 (1.059)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.059 (1.059)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 37/  1]	epoch_time 0.0463 (0.0442)	validation_time 0.0005 (0.0006)	train_time 0.0458 (0.0435)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.47it/s] 15%|#5        | 4/26 [00:00<00:01, 16.71it/s] 31%|###       | 8/26 [00:00<00:00, 21.76it/s] 46%|####6     | 12/26 [00:00<00:00, 26.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.85it/s] 69%|######9   | 18/26 [00:00<00:00, 27.66it/s] 85%|########4 | 22/26 [00:00<00:00, 30.32it/s]100%|##########| 26/26 [00:00<00:00, 29.56it/s]100%|##########| 26/26 [00:01<00:00, 24.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 272 tensor(1.5082e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 382 tensor(4.6887e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 278 tensor(3.9053e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 241 tensor(-1.0049e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 248 tensor(3.1818e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 231 tensor(5.4466e-08, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9867 (3.9866)	zero_count 0.0000 (54.9900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.23it/s] 19%|#9        | 5/26 [00:00<00:00, 24.92it/s] 38%|###8      | 10/26 [00:00<00:00, 34.63it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.63it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.32it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.32it/s] 96%|#########6| 25/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 33.71it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.594 (0.594)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.594 (0.594)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.588 (0.592)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.588 (0.592)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.600 (0.593)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.600 (0.593)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.76it/s]
Test: [  0/  1]	Loss 1.059 (1.059)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.059 (1.059)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.059 (1.059)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.059 (1.059)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 38/  1]	epoch_time 0.0427 (0.0442)	validation_time 0.0004 (0.0006)	train_time 0.0422 (0.0435)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.63it/s] 23%|##3       | 6/26 [00:00<00:00, 24.44it/s] 35%|###4      | 9/26 [00:00<00:00, 25.62it/s] 46%|####6     | 12/26 [00:00<00:00, 26.64it/s] 62%|######1   | 16/26 [00:00<00:00, 30.02it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.52it/s] 92%|#########2| 24/26 [00:00<00:00, 30.57it/s]100%|##########| 26/26 [00:00<00:00, 26.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 228 tensor(4.5185e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 241 tensor(1.8630e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 225 tensor(1.6341e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 228 tensor(3.2171e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 240 tensor(2.8205e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 228 tensor(1.3649e-06, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9866 (3.9866)	zero_count 0.0000 (65.2470)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.21it/s] 19%|#9        | 5/26 [00:00<00:00, 25.24it/s] 38%|###8      | 10/26 [00:00<00:00, 33.53it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.53it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.64it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.77it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.77it/s] 96%|#########6| 25/26 [00:00<00:00, 41.69it/s]100%|##########| 26/26 [00:00<00:00, 34.65it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.594 (0.593)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.594 (0.593)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.588 (0.592)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.588 (0.592)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.600 (0.592)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.600 (0.592)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.56it/s]
Test: [  0/  1]	Loss 1.060 (1.060)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.060 (1.060)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.060 (1.060)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.060 (1.060)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 39/  1]	epoch_time 0.0427 (0.0441)	validation_time 0.0007 (0.0006)	train_time 0.0420 (0.0435)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.14it/s] 19%|#9        | 5/26 [00:00<00:00, 23.68it/s] 31%|###       | 8/26 [00:00<00:00, 25.90it/s] 42%|####2     | 11/26 [00:00<00:00, 27.06it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.63it/s] 88%|########8 | 23/26 [00:00<00:00, 31.32it/s]100%|##########| 26/26 [00:00<00:00, 27.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 243 tensor(4.1137e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 224 tensor(1.0830e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 232 tensor(1.9125e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 293 tensor(2.3655e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 224 tensor(7.6506e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 219 tensor(1.0848e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 219 tensor(5.4186e-09, device='cuda:0')
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9868 (3.9866)	zero_count 0.0000 (63.2580)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.10it/s] 19%|#9        | 5/26 [00:00<00:01, 18.92it/s]                                               19%|#9        | 5/26 [00:00<00:01, 18.92it/s] 42%|####2     | 11/26 [00:00<00:00, 32.90it/s] 62%|######1   | 16/26 [00:00<00:00, 38.17it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.17it/s] 81%|########  | 21/26 [00:00<00:00, 38.38it/s]100%|##########| 26/26 [00:00<00:00, 41.34it/s]100%|##########| 26/26 [00:00<00:00, 32.01it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.593 (0.593)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.593 (0.593)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.588 (0.592)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.588 (0.592)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.600 (0.592)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.600 (0.592)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.96it/s]
Test: [  0/  1]	Loss 1.060 (1.060)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.060 (1.060)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.060 (1.060)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.060 (1.060)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 40/  1]	epoch_time 0.0440 (0.0441)	validation_time 0.0004 (0.0006)	train_time 0.0436 (0.0435)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.26it/s] 23%|##3       | 6/26 [00:00<00:00, 25.79it/s] 38%|###8      | 10/26 [00:00<00:00, 27.16it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.82it/s] 65%|######5   | 17/26 [00:00<00:00, 28.98it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.15it/s] 92%|#########2| 24/26 [00:00<00:00, 31.67it/s]100%|##########| 26/26 [00:00<00:00, 27.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 219 tensor(1.1021e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 219 tensor(1.0664e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 371 tensor(4.2165e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 245 tensor(-1.0041e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 231 tensor(9.3209e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 227 tensor(1.2235e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9860 (3.9865)	zero_count 280.0000 (56.9980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 24.05it/s] 38%|###8      | 10/26 [00:00<00:00, 38.96it/s]                                                38%|###8      | 10/26 [00:00<00:00, 38.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 43.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 44.62it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 44.62it/s] 96%|#########6| 25/26 [00:00<00:00, 41.91it/s]100%|##########| 26/26 [00:00<00:00, 37.33it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.593 (0.593)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.593 (0.593)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.588 (0.592)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.588 (0.592)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.600 (0.592)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.600 (0.592)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.11it/s]
Test: [  0/  1]	Loss 1.061 (1.061)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.061 (1.061)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.061 (1.061)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.061 (1.061)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 41/  1]	epoch_time 0.0432 (0.0441)	validation_time 0.0005 (0.0006)	train_time 0.0427 (0.0435)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 15%|#5        | 4/26 [00:00<00:01, 17.76it/s] 31%|###       | 8/26 [00:00<00:00, 25.88it/s] 42%|####2     | 11/26 [00:00<00:00, 26.43it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.51it/s] 69%|######9   | 18/26 [00:00<00:00, 28.89it/s] 85%|########4 | 22/26 [00:00<00:00, 29.95it/s]100%|##########| 26/26 [00:00<00:00, 30.56it/s]100%|##########| 26/26 [00:01<00:00, 25.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 316 tensor(1.8389e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 229 tensor(3.2238e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 352 tensor(3.7924e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 248 tensor(-8.3303e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 226 tensor(1.0051e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 223 tensor(3.6934e-07, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9864 (3.9865)	zero_count 0.0000 (57.2520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 35.98it/s] 38%|###8      | 10/26 [00:00<00:00, 46.44it/s]                                                38%|###8      | 10/26 [00:00<00:00, 46.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 44.54it/s] 77%|#######6  | 20/26 [00:00<00:00, 45.19it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 45.19it/s] 96%|#########6| 25/26 [00:00<00:00, 42.77it/s]100%|##########| 26/26 [00:00<00:00, 39.73it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.593 (0.593)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.593 (0.593)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.588 (0.592)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.588 (0.592)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.600 (0.592)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.600 (0.592)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.40it/s]
Test: [  0/  1]	Loss 1.062 (1.062)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.062 (1.062)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.062 (1.062)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.062 (1.062)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 42/  1]	epoch_time 0.0422 (0.0441)	validation_time 0.0004 (0.0006)	train_time 0.0418 (0.0434)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.68it/s] 19%|#9        | 5/26 [00:00<00:01, 18.17it/s] 31%|###       | 8/26 [00:00<00:00, 22.34it/s] 46%|####6     | 12/26 [00:00<00:00, 27.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.66it/s] 69%|######9   | 18/26 [00:00<00:00, 26.95it/s] 85%|########4 | 22/26 [00:00<00:00, 29.77it/s]100%|##########| 26/26 [00:00<00:00, 31.35it/s]100%|##########| 26/26 [00:01<00:00, 25.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 350 tensor(1.9026e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 233 tensor(-1.1819e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 231 tensor(1.8303e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 387 tensor(4.1963e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 249 tensor(-5.7507e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 235 tensor(1.0406e-07, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9866 (3.9867)	zero_count 0.0000 (54.3270)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.13it/s] 23%|##3       | 6/26 [00:00<00:00, 28.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.00it/s] 42%|####2     | 11/26 [00:00<00:00, 35.52it/s] 62%|######1   | 16/26 [00:00<00:00, 38.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.65it/s] 81%|########  | 21/26 [00:00<00:00, 37.20it/s]100%|##########| 26/26 [00:00<00:00, 40.61it/s]100%|##########| 26/26 [00:00<00:00, 33.43it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.590 (0.590)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.593 (0.593)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.593 (0.593)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.588 (0.591)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.588 (0.591)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.599 (0.592)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.599 (0.592)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.24it/s]
Test: [  0/  1]	Loss 1.062 (1.062)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.062 (1.062)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.062 (1.062)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.062 (1.062)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 43/  1]	epoch_time 0.0417 (0.0440)	validation_time 0.0003 (0.0006)	train_time 0.0413 (0.0434)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.61it/s] 15%|#5        | 4/26 [00:00<00:01, 16.19it/s] 27%|##6       | 7/26 [00:00<00:00, 21.19it/s] 42%|####2     | 11/26 [00:00<00:00, 25.89it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.80it/s] 65%|######5   | 17/26 [00:00<00:00, 26.67it/s] 81%|########  | 21/26 [00:00<00:00, 29.55it/s] 96%|#########6| 25/26 [00:00<00:00, 29.03it/s]100%|##########| 26/26 [00:01<00:00, 24.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 235 tensor(4.7583e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 239 tensor(1.1941e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 232 tensor(6.2419e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 401 tensor(5.4937e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 360 tensor(5.9902e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 261 tensor(-1.1948e-06, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9866 (3.9866)	zero_count 0.0000 (53.1960)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.17it/s] 27%|##6       | 7/26 [00:00<00:00, 27.21it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.21it/s] 46%|####6     | 12/26 [00:00<00:00, 34.61it/s] 65%|######5   | 17/26 [00:00<00:00, 38.67it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.67it/s] 85%|########4 | 22/26 [00:00<00:00, 37.80it/s]100%|##########| 26/26 [00:00<00:00, 33.95it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.590 (0.590)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.592 (0.592)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.592 (0.592)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.587 (0.591)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.587 (0.591)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.599 (0.591)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.599 (0.591)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.09it/s]
Test: [  0/  1]	Loss 1.063 (1.063)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.063 (1.063)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.063 (1.063)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.063 (1.063)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 44/  1]	epoch_time 0.0423 (0.0440)	validation_time 0.0005 (0.0006)	train_time 0.0418 (0.0433)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 19%|#9        | 5/26 [00:00<00:01, 17.16it/s] 31%|###       | 8/26 [00:00<00:00, 20.50it/s] 42%|####2     | 11/26 [00:00<00:00, 23.41it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.50it/s] 69%|######9   | 18/26 [00:00<00:00, 27.48it/s] 81%|########  | 21/26 [00:00<00:00, 27.19it/s] 96%|#########6| 25/26 [00:01<00:00, 29.95it/s]100%|##########| 26/26 [00:01<00:00, 23.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 379 tensor(4.4484e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 379 tensor(2.7926e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 248 tensor(-1.0734e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 393 tensor(5.2833e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 356 tensor(1.4986e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 247 tensor(-2.1679e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9874 (3.9865)	zero_count 0.0000 (40.9500)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.83it/s] 23%|##3       | 6/26 [00:00<00:01, 19.82it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.82it/s] 42%|####2     | 11/26 [00:00<00:00, 28.55it/s] 62%|######1   | 16/26 [00:00<00:00, 34.78it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.78it/s] 81%|########  | 21/26 [00:00<00:00, 35.39it/s]100%|##########| 26/26 [00:00<00:00, 39.33it/s]100%|##########| 26/26 [00:00<00:00, 29.23it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.590 (0.590)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.592 (0.592)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.592 (0.592)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.587 (0.591)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.587 (0.591)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.599 (0.591)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.599 (0.591)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.20it/s]
Test: [  0/  1]	Loss 1.064 (1.064)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.064 (1.064)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.064 (1.064)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.064 (1.064)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 45/  1]	epoch_time 0.0421 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0416 (0.0433)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.47it/s] 15%|#5        | 4/26 [00:00<00:01, 18.43it/s] 27%|##6       | 7/26 [00:00<00:00, 20.70it/s] 38%|###8      | 10/26 [00:00<00:00, 23.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.91it/s] 65%|######5   | 17/26 [00:00<00:00, 26.66it/s] 81%|########  | 21/26 [00:00<00:00, 28.73it/s] 96%|#########6| 25/26 [00:00<00:00, 29.97it/s]100%|##########| 26/26 [00:01<00:00, 24.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 391 tensor(3.0246e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 245 tensor(-4.5261e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 318 tensor(2.1009e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 351 tensor(3.5770e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 240 tensor(-1.2554e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 237 tensor(-4.0371e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9860 (3.9866)	zero_count 271.0000 (45.8920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.90it/s] 23%|##3       | 6/26 [00:00<00:00, 25.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.77it/s] 42%|####2     | 11/26 [00:00<00:00, 34.43it/s] 62%|######1   | 16/26 [00:00<00:00, 39.18it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.18it/s] 81%|########  | 21/26 [00:00<00:00, 38.02it/s]100%|##########| 26/26 [00:00<00:00, 33.65it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.590 (0.590)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.592 (0.592)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.592 (0.592)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.587 (0.591)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.587 (0.591)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.599 (0.591)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.599 (0.591)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.37it/s]
Test: [  0/  1]	Loss 1.065 (1.065)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.065 (1.065)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.065 (1.065)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.065 (1.065)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 46/  1]	epoch_time 0.0433 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0429 (0.0433)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.95it/s] 19%|#9        | 5/26 [00:00<00:01, 18.54it/s] 35%|###4      | 9/26 [00:00<00:00, 22.82it/s] 50%|#####     | 13/26 [00:00<00:00, 25.86it/s] 62%|######1   | 16/26 [00:00<00:00, 26.60it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.94it/s] 88%|########8 | 23/26 [00:00<00:00, 29.09it/s]100%|##########| 26/26 [00:01<00:00, 24.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 381 tensor(2.1701e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 325 tensor(1.0583e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 249 tensor(1.0538e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 368 tensor(4.0324e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 265 tensor(-5.2882e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 238 tensor(-1.1761e-06, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9867 (3.9868)	zero_count 0.0000 (48.3990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.48it/s] 23%|##3       | 6/26 [00:00<00:00, 25.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.51it/s] 42%|####2     | 11/26 [00:00<00:00, 34.01it/s] 62%|######1   | 16/26 [00:00<00:00, 39.44it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.44it/s] 81%|########  | 21/26 [00:00<00:00, 41.97it/s]100%|##########| 26/26 [00:00<00:00, 35.50it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.590 (0.590)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.592 (0.592)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.592 (0.592)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.587 (0.591)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.587 (0.591)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.599 (0.591)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.599 (0.591)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.03it/s]
Test: [  0/  1]	Loss 1.065 (1.065)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.065 (1.065)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.065 (1.065)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.065 (1.065)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 47/  1]	epoch_time 0.0461 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0457 (0.0433)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.97it/s] 15%|#5        | 4/26 [00:00<00:01, 14.72it/s] 31%|###       | 8/26 [00:00<00:00, 20.76it/s] 46%|####6     | 12/26 [00:00<00:00, 25.48it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.00it/s] 69%|######9   | 18/26 [00:00<00:00, 26.44it/s] 85%|########4 | 22/26 [00:00<00:00, 29.38it/s]100%|##########| 26/26 [00:01<00:00, 30.32it/s]100%|##########| 26/26 [00:01<00:00, 23.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 235 tensor(3.5561e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 394 tensor(3.9348e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 254 tensor(-1.3436e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 405 tensor(4.8183e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 382 tensor(3.3173e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 260 tensor(-4.3993e-06, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9864 (3.9866)	zero_count 0.0000 (45.1620)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:02, 10.25it/s] 31%|###       | 8/26 [00:00<00:00, 22.75it/s]                                               31%|###       | 8/26 [00:00<00:00, 22.75it/s] 50%|#####     | 13/26 [00:00<00:00, 30.03it/s] 65%|######5   | 17/26 [00:00<00:00, 32.53it/s]                                                65%|######5   | 17/26 [00:00<00:00, 32.53it/s] 81%|########  | 21/26 [00:00<00:00, 34.75it/s]100%|##########| 26/26 [00:00<00:00, 29.73it/s]
Test: [   0/  26]	Loss 0.589 (0.589)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.589 (0.589)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.591 (0.591)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.591 (0.591)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.587 (0.590)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.587 (0.590)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.598 (0.590)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.598 (0.590)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.94it/s]
Test: [  0/  1]	Loss 1.066 (1.066)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.066 (1.066)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.066 (1.066)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.066 (1.066)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 48/  1]	epoch_time 0.0449 (0.0440)	validation_time 0.0003 (0.0006)	train_time 0.0445 (0.0434)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.76it/s] 23%|##3       | 6/26 [00:00<00:00, 24.76it/s] 35%|###4      | 9/26 [00:00<00:00, 24.70it/s] 46%|####6     | 12/26 [00:00<00:00, 26.25it/s] 62%|######1   | 16/26 [00:00<00:00, 30.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.03it/s] 92%|#########2| 24/26 [00:00<00:00, 31.34it/s]100%|##########| 26/26 [00:00<00:00, 27.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 251 tensor(-2.2423e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 421 tensor(2.9763e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 311 tensor(-3.5151e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 273 tensor(1.1242e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 391 tensor(6.9366e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 289 tensor(-3.6248e-06, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.48)	train_acc   0.51 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 3.9858 (3.9866)	zero_count 0.0000 (45.2010)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.76it/s] 23%|##3       | 6/26 [00:00<00:00, 29.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.99it/s] 46%|####6     | 12/26 [00:00<00:00, 39.17it/s] 69%|######9   | 18/26 [00:00<00:00, 45.32it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.32it/s] 92%|#########2| 24/26 [00:00<00:00, 47.06it/s]100%|##########| 26/26 [00:00<00:00, 39.77it/s]
Test: [   0/  26]	Loss 0.589 (0.589)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.589 (0.589)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.591 (0.591)	test_acc   0.47 (  0.50)	test_minacc   0.42 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.591 (0.591)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.45 (  0.40)
Test: [  20/  26]	Loss 0.586 (0.590)	test_acc   0.55 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.586 (0.590)	test_acc_d   0.55 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.37 (  0.41)
Test: [  26/  26]	Loss 0.598 (0.590)	test_acc   0.51 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.598 (0.590)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.29 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.41it/s]
Test: [  0/  1]	Loss 1.066 (1.066)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.066 (1.066)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.066 (1.066)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.066 (1.066)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 49/  1]	epoch_time 0.0395 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0391 (0.0433)
record: (train_acc, test_acc) (0.6489000141024589, 0.6420000195503235)
last accs (train_acc, test_acc) (0.5000000097155571, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.161 MB of 0.161 MB uploadedwandb: \ 0.161 MB of 0.161 MB uploadedwandb: | 0.184 MB of 0.190 MB uploaded (0.003 MB deduped)wandb: / 0.505 MB of 0.505 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/diagnostics/epoch_time_val █▁▂▁▂▂▂▂▁▁▂▁▂▁▁▂▁▂▂▂▁▂▂▃▂▁▂▃▃▂▂▂▂▂▂▂▂▂▂▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/diagnostics/train_time_val █▂▃▁▂▂▂▃▁▂▂▁▂▁▂▂▂▃▃▂▂▂▃▃▂▂▂▄▃▃▃▂▂▂▂▂▂▂▃▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/Loss_avg ▆▅▅▅▅▆▆▅▆▆██▃▁▁▁▁▁▁▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/Loss_d_avg ▆▅▅▅▅▆▆▅▆▆██▃▁▁▁▁▁▁▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/Loss_d_val ▆▅▅▅▅▆▆▅▆▆██▃▁▁▁▁▁▁▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/Loss_val ▆▅▅▅▅▆▆▅▆▆██▃▁▁▁▁▁▁▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_acc_avg ▁▁▁▁▂▂▂▃▃▄▄▅▆██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_acc_d_avg ▁▁▁▁▂▂▂▃▃▄▄▅▆██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_acc_d_val ▁▁▁▁▂▂▂▃▃▄▄▅▆██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_acc_val ▁▁▁▁▂▂▂▃▃▄▄▅▆██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_corr_d_avg ████▇▇▇▆▆▆▅▅▃▁▂▁▂▂▂▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_corr_d_val ████▇▇▇▆▆▆▅▅▃▁▂▁▂▂▂▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_majacc_avg ██████████▇▇▆▅▅▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_majacc_d_avg ██████████▇▇▆▅▅▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_majacc_d_val ██████████▇▇▆▅▅▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_majacc_val ██████████▇▇▆▅▅▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_minacc_avg ▁▁▁▁▂▂▂▃▃▄▄▅▆██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_minacc_d_avg ▁▁▁▁▂▂▂▃▃▄▄▅▆██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_minacc_d_val ▁▁▁▁▂▂▂▃▃▄▄▅▆██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_minacc_val ▁▁▁▁▂▂▂▃▃▄▄▅▆██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/Loss_val ███▇▇▆▆▆▅▄▅▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/l1_avg █▆▆▆▆▆▆▅▅▆▆▆▆▂▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/l1_val █▇▇▆▇▇▇▆▆▆██▄▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇▇████▅▄▄▄▄▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_acc_val ▆▆▆▆▇▆▇▇▇█▇█▆▄▃▃▄▄▄▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_majacc_avg ▇██████▇▇▇▇▇▇▄▃▃▃▃▃▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_majacc_val ███████▇█▇▇█▅▃▂▂▃▃▃▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_minacc_avg ▂▁▁▁▂▃▃▄▅▅▆▆▇██████▆▆▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_minacc_val ▁▁▁▁▂▂▅▆▆▇▇▇▇█▇████▆▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_nll_avg █▅▄▄▃▃▃▃▂▂▁▁▂▆▇▇▇▇▇▇████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_nll_val ▆▅▅▅▄▄▃▃▂▂▂▁▅▇▇█▇▇▇▇████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_penalty_avg █▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_penalty_val ▆██▇▅▅▃▃▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/weight_norm_avg ▁▄▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇▇████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/weight_norm_val ▁▃▃▃▃▃▃▄▄▄▅▅▆▆▆▆▆▆▆▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▅█▅▅▅▄▅▅▅▅▆▆▆▇▆▆▆▅▅▅▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▄▁▁▁█▁▁▁█▁▁▁█▁▁▁█▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/diagnostics/epoch_time_val 0.03953
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/diagnostics/train_time_val 0.03911
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/diagnostics/validation_time_val 0.0004
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/Loss_avg 1.06646
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/Loss_d_avg 1.06646
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/Loss_d_val 1.06646
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/Loss_val 1.06646
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_corr_d_avg 0.10159
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_corr_d_val 0.10159
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/Loss_val 6e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/l1_avg 3.98658
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/l1_val 3.98578
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_acc_val 0.508
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_majacc_avg 0.50003
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_majacc_val 0.54327
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_minacc_avg 0.49965
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_minacc_val 0.33333
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_nll_avg 0.59052
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_nll_val 0.59843
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/weight_norm_avg 25.4784
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/weight_norm_val 25.47841
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/zero_count_avg 45.201
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/141/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/8be2axdl
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_201448-8be2axdl/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_201742-latrznh1
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/latrznh1
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1225
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6019, 3, 32, 32) (5981, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:33,  1.33s/it] 19%|#9        | 5/26 [00:01<00:04,  4.46it/s] 35%|###4      | 9/26 [00:01<00:01,  8.63it/s] 50%|#####     | 13/26 [00:01<00:01, 12.95it/s] 65%|######5   | 17/26 [00:01<00:00, 17.04it/s] 81%|########  | 21/26 [00:01<00:00, 20.76it/s] 96%|#########6| 25/26 [00:02<00:00, 24.22it/s]100%|##########| 26/26 [00:02<00:00, 10.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.463 (0.571)	train_nll   0.46 (  0.57)	train_penalty   0.08 (  0.33)	weight_norm  20.89 ( 18.14)	train_acc   0.84 (  0.81)	train_minacc   0.00 (  0.06)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 7.1691 (8.4744)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 23%|##3       | 6/26 [00:00<00:00, 23.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.97it/s] 42%|####2     | 11/26 [00:00<00:00, 32.65it/s] 62%|######1   | 16/26 [00:00<00:00, 37.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.08it/s] 81%|########  | 21/26 [00:00<00:00, 37.20it/s]100%|##########| 26/26 [00:00<00:00, 40.19it/s]100%|##########| 26/26 [00:00<00:00, 31.83it/s]
Test: [   0/  26]	Loss 0.416 (0.416)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.416 (0.416)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.427 (0.431)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.427 (0.431)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.97)
Test: [  20/  26]	Loss 0.384 (0.424)	test_acc   0.87 (  0.85)	test_minacc   0.04 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.384 (0.424)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.04 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.469 (0.425)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.469 (0.425)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]
Test: [  0/  1]	Loss 1.923 (1.923)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.923 (1.923)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.923 (1.923)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.923 (1.923)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0775 (0.0775)	validation_time 0.0068 (0.0068)	train_time 0.0644 (0.0644)
record: (train_acc, test_acc) (0.8460000257492065, 0.1120000034570694)
last accs (train_acc, test_acc) (0.8460000257492065, 0.1120000034570694)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.18it/s] 19%|#9        | 5/26 [00:00<00:00, 22.32it/s] 35%|###4      | 9/26 [00:00<00:00, 27.97it/s] 50%|#####     | 13/26 [00:00<00:00, 30.74it/s] 65%|######5   | 17/26 [00:00<00:00, 32.76it/s] 81%|########  | 21/26 [00:00<00:00, 34.05it/s] 96%|#########6| 25/26 [00:00<00:00, 34.52it/s]100%|##########| 26/26 [00:00<00:00, 28.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.444 (0.415)	train_nll   0.44 (  0.41)	train_penalty   0.06 (  0.06)	weight_norm  21.99 ( 21.65)	train_acc   0.84 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.5130 (6.6208)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.36it/s] 31%|###       | 8/26 [00:00<00:00, 36.91it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.91it/s] 50%|#####     | 13/26 [00:00<00:00, 37.95it/s] 69%|######9   | 18/26 [00:00<00:00, 40.06it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.06it/s] 88%|########8 | 23/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 37.03it/s]
Test: [   0/  26]	Loss 0.405 (0.405)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.405 (0.405)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.407 (0.412)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.407 (0.412)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.373 (0.405)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.373 (0.405)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.445 (0.406)	test_acc   0.83 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.445 (0.406)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.15it/s]
Test: [  0/  1]	Loss 1.818 (1.818)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.818 (1.818)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.818 (1.818)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.818 (1.818)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Overall Timing[  1/  1]	epoch_time 0.0403 (0.0589)	validation_time 0.0004 (0.0036)	train_time 0.0399 (0.0521)
record: (train_acc, test_acc) (0.8460000257492065, 0.1120000034570694)
last accs (train_acc, test_acc) (0.8478000162243843, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.23it/s] 19%|#9        | 5/26 [00:00<00:00, 23.71it/s] 35%|###4      | 9/26 [00:00<00:00, 27.75it/s] 50%|#####     | 13/26 [00:00<00:00, 29.76it/s] 65%|######5   | 17/26 [00:00<00:00, 31.25it/s] 81%|########  | 21/26 [00:00<00:00, 32.08it/s] 96%|#########6| 25/26 [00:00<00:00, 33.37it/s]100%|##########| 26/26 [00:00<00:00, 28.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.440 (0.402)	train_nll   0.44 (  0.40)	train_penalty   0.04 (  0.05)	weight_norm  22.10 ( 22.06)	train_acc   0.82 (  0.85)	train_minacc   0.24 (  0.02)	train_majacc   0.93 (  0.99)	train_corr   0.00 (  0.00)	l1 6.5144 (6.4304)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.25it/s] 31%|###       | 8/26 [00:00<00:00, 37.60it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.60it/s] 50%|#####     | 13/26 [00:00<00:00, 41.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.87it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.87it/s] 96%|#########6| 25/26 [00:00<00:00, 46.50it/s]100%|##########| 26/26 [00:00<00:00, 40.89it/s]
Test: [   0/  26]	Loss 0.374 (0.374)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.374 (0.374)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.403 (0.401)	test_acc   0.83 (  0.84)	test_minacc   0.02 (  0.05)	test_majacc   0.98 (  0.99)	Loss_d 0.403 (0.401)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.02 (  0.05)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.369 (0.393)	test_acc   0.86 (  0.85)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.99)	Loss_d 0.369 (0.393)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.427 (0.392)	test_acc   0.82 (  0.85)	test_minacc   0.17 (  0.06)	test_majacc   0.95 (  0.99)	Loss_d 0.427 (0.392)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.17 (  0.06)	test_majacc_d   0.95 (  0.99)	test_corr_d   0.92 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.59it/s]
Test: [  0/  1]	Loss 1.754 (1.754)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.754 (1.754)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.754 (1.754)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.754 (1.754)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0422 (0.0534)	validation_time 0.0004 (0.0025)	train_time 0.0418 (0.0487)
record: (train_acc, test_acc) (0.8473000277876854, 0.12000000476837158)
last accs (train_acc, test_acc) (0.8473000277876854, 0.12000000476837158)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.43it/s] 19%|#9        | 5/26 [00:00<00:00, 23.32it/s] 35%|###4      | 9/26 [00:00<00:00, 28.80it/s] 50%|#####     | 13/26 [00:00<00:00, 31.22it/s] 65%|######5   | 17/26 [00:00<00:00, 32.56it/s] 81%|########  | 21/26 [00:00<00:00, 33.49it/s] 96%|#########6| 25/26 [00:00<00:00, 34.12it/s]100%|##########| 26/26 [00:00<00:00, 29.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.412 (0.383)	train_nll   0.41 (  0.38)	train_penalty   0.04 (  0.05)	weight_norm  22.15 ( 22.12)	train_acc   0.82 (  0.85)	train_minacc   0.20 (  0.06)	train_majacc   0.95 (  0.99)	train_corr   0.00 (  0.00)	l1 6.5811 (6.4656)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.40it/s] 23%|##3       | 6/26 [00:00<00:00, 31.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.13it/s] 42%|####2     | 11/26 [00:00<00:00, 36.94it/s] 62%|######1   | 16/26 [00:00<00:00, 40.77it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.77it/s] 81%|########  | 21/26 [00:00<00:00, 38.51it/s]100%|##########| 26/26 [00:00<00:00, 41.42it/s]100%|##########| 26/26 [00:00<00:00, 34.96it/s]
Test: [   0/  26]	Loss 0.356 (0.356)	test_acc   0.85 (  0.85)	test_minacc   0.08 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.356 (0.356)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.398 (0.394)	test_acc   0.84 (  0.85)	test_minacc   0.08 (  0.07)	test_majacc   0.97 (  0.98)	Loss_d 0.398 (0.394)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.08 (  0.07)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.91 (  0.92)
Test: [  20/  26]	Loss 0.361 (0.386)	test_acc   0.85 (  0.85)	test_minacc   0.06 (  0.07)	test_majacc   0.97 (  0.98)	Loss_d 0.361 (0.386)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.06 (  0.07)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  26/  26]	Loss 0.411 (0.384)	test_acc   0.81 (  0.85)	test_minacc   0.20 (  0.08)	test_majacc   0.93 (  0.98)	Loss_d 0.411 (0.384)	test_acc_d   0.81 (  0.85)	test_minacc_d   0.20 (  0.08)	test_majacc_d   0.93 (  0.98)	test_corr_d   0.89 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.59it/s]
Test: [  0/  1]	Loss 1.868 (1.868)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.868 (1.868)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.88 (  0.88)
Test: [  1/  1]	Loss 1.868 (1.868)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.868 (1.868)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.88 (  0.88)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0416 (0.0504)	validation_time 0.0004 (0.0020)	train_time 0.0411 (0.0468)
record: (train_acc, test_acc) (0.8471000292897224, 0.12300000339746475)
last accs (train_acc, test_acc) (0.8471000292897224, 0.12300000339746475)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.44it/s] 15%|#5        | 4/26 [00:00<00:01, 16.71it/s] 31%|###       | 8/26 [00:00<00:00, 23.27it/s] 46%|####6     | 12/26 [00:00<00:00, 27.36it/s] 62%|######1   | 16/26 [00:00<00:00, 29.81it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.32it/s] 92%|#########2| 24/26 [00:00<00:00, 32.87it/s]100%|##########| 26/26 [00:00<00:00, 26.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.374 (0.363)	train_nll   0.37 (  0.36)	train_penalty   0.02 (  0.03)	weight_norm  22.20 ( 22.18)	train_acc   0.82 (  0.85)	train_minacc   0.27 (  0.12)	train_majacc   0.93 (  0.98)	train_corr   0.00 (  0.00)	l1 6.3740 (6.3769)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 23%|##3       | 6/26 [00:00<00:00, 25.12it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.12it/s] 42%|####2     | 11/26 [00:00<00:00, 33.09it/s] 62%|######1   | 16/26 [00:00<00:00, 37.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.93it/s] 81%|########  | 21/26 [00:00<00:00, 39.23it/s]100%|##########| 26/26 [00:00<00:00, 41.45it/s]100%|##########| 26/26 [00:00<00:00, 33.20it/s]
Test: [   0/  26]	Loss 0.326 (0.326)	test_acc   0.87 (  0.87)	test_minacc   0.36 (  0.36)	test_majacc   0.96 (  0.96)	Loss_d 0.326 (0.326)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.372 (0.359)	test_acc   0.84 (  0.85)	test_minacc   0.22 (  0.26)	test_majacc   0.95 (  0.96)	Loss_d 0.372 (0.359)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.22 (  0.26)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.324 (0.347)	test_acc   0.87 (  0.86)	test_minacc   0.34 (  0.27)	test_majacc   0.95 (  0.96)	Loss_d 0.324 (0.347)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.34 (  0.27)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.90 (  0.89)
Test: [  26/  26]	Loss 0.368 (0.345)	test_acc   0.84 (  0.86)	test_minacc   0.39 (  0.27)	test_majacc   0.93 (  0.96)	Loss_d 0.368 (0.345)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.39 (  0.27)	test_majacc_d   0.93 (  0.96)	test_corr_d   0.85 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.30it/s]
Test: [  0/  1]	Loss 1.731 (1.731)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 1.731 (1.731)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 1.731 (1.731)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 1.731 (1.731)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0418 (0.0487)	validation_time 0.0003 (0.0017)	train_time 0.0414 (0.0457)
record: (train_acc, test_acc) (0.8568000221252441, 0.24300001561641693)
last accs (train_acc, test_acc) (0.8568000221252441, 0.24300001561641693)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 19%|#9        | 5/26 [00:00<00:00, 21.35it/s] 35%|###4      | 9/26 [00:00<00:00, 26.88it/s] 50%|#####     | 13/26 [00:00<00:00, 29.01it/s] 65%|######5   | 17/26 [00:00<00:00, 30.29it/s] 81%|########  | 21/26 [00:00<00:00, 31.95it/s] 96%|#########6| 25/26 [00:00<00:00, 33.49it/s]100%|##########| 26/26 [00:00<00:00, 27.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.353 (0.343)	train_nll   0.35 (  0.34)	train_penalty   0.01 (  0.03)	weight_norm  22.27 ( 22.24)	train_acc   0.84 (  0.86)	train_minacc   0.29 (  0.18)	train_majacc   0.94 (  0.98)	train_corr   0.00 (  0.00)	l1 6.3467 (6.4050)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.63it/s] 19%|#9        | 5/26 [00:00<00:01, 20.28it/s] 38%|###8      | 10/26 [00:00<00:00, 30.68it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.68it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.22it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.70it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.70it/s] 96%|#########6| 25/26 [00:00<00:00, 40.72it/s]100%|##########| 26/26 [00:00<00:00, 31.95it/s]
Test: [   0/  26]	Loss 0.320 (0.320)	test_acc   0.87 (  0.87)	test_minacc   0.39 (  0.39)	test_majacc   0.96 (  0.96)	Loss_d 0.320 (0.320)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.361 (0.346)	test_acc   0.83 (  0.85)	test_minacc   0.27 (  0.30)	test_majacc   0.93 (  0.95)	Loss_d 0.361 (0.346)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.27 (  0.30)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.86 (  0.88)
Test: [  20/  26]	Loss 0.318 (0.335)	test_acc   0.87 (  0.86)	test_minacc   0.34 (  0.32)	test_majacc   0.95 (  0.95)	Loss_d 0.318 (0.335)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.34 (  0.32)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.341 (0.333)	test_acc   0.83 (  0.86)	test_minacc   0.37 (  0.33)	test_majacc   0.92 (  0.95)	Loss_d 0.341 (0.333)	test_acc_d   0.83 (  0.86)	test_minacc_d   0.37 (  0.33)	test_majacc_d   0.92 (  0.95)	test_corr_d   0.84 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.12it/s]
Test: [  0/  1]	Loss 1.691 (1.691)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 1.691 (1.691)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.75 (  0.75)
Test: [  1/  1]	Loss 1.691 (1.691)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 1.691 (1.691)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.75 (  0.75)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0398 (0.0472)	validation_time 0.0004 (0.0015)	train_time 0.0393 (0.0447)
record: (train_acc, test_acc) (0.856400022804737, 0.2680000066757202)
last accs (train_acc, test_acc) (0.856400022804737, 0.2680000066757202)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.42it/s] 23%|##3       | 6/26 [00:00<00:00, 20.22it/s] 38%|###8      | 10/26 [00:00<00:00, 25.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.54it/s] 69%|######9   | 18/26 [00:00<00:00, 30.12it/s] 85%|########4 | 22/26 [00:00<00:00, 31.74it/s]100%|##########| 26/26 [00:00<00:00, 32.67it/s]100%|##########| 26/26 [00:00<00:00, 27.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.347 (0.335)	train_nll   0.35 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.34 ( 22.30)	train_acc   0.84 (  0.86)	train_minacc   0.29 (  0.21)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 6.2415 (6.3933)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.42it/s] 31%|###       | 8/26 [00:00<00:00, 38.84it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.84it/s] 50%|#####     | 13/26 [00:00<00:00, 41.41it/s] 69%|######9   | 18/26 [00:00<00:00, 40.71it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.71it/s] 88%|########8 | 23/26 [00:00<00:00, 42.70it/s]100%|##########| 26/26 [00:00<00:00, 38.55it/s]
Test: [   0/  26]	Loss 0.318 (0.318)	test_acc   0.87 (  0.87)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 0.318 (0.318)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.358 (0.342)	test_acc   0.84 (  0.86)	test_minacc   0.25 (  0.30)	test_majacc   0.95 (  0.96)	Loss_d 0.358 (0.342)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.25 (  0.30)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.87 (  0.88)
Test: [  20/  26]	Loss 0.323 (0.332)	test_acc   0.87 (  0.86)	test_minacc   0.34 (  0.32)	test_majacc   0.95 (  0.96)	Loss_d 0.323 (0.332)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.34 (  0.32)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.90 (  0.88)
Test: [  26/  26]	Loss 0.332 (0.330)	test_acc   0.84 (  0.86)	test_minacc   0.34 (  0.32)	test_majacc   0.94 (  0.96)	Loss_d 0.332 (0.330)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.34 (  0.32)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.86 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.67it/s]
Test: [  0/  1]	Loss 1.727 (1.727)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 1.727 (1.727)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 1.727 (1.727)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 1.727 (1.727)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0497 (0.0476)	validation_time 0.0004 (0.0013)	train_time 0.0493 (0.0453)
record: (train_acc, test_acc) (0.8624000204205513, 0.2939999997615814)
last accs (train_acc, test_acc) (0.8624000204205513, 0.2939999997615814)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.53it/s] 15%|#5        | 4/26 [00:00<00:01, 12.05it/s] 31%|###       | 8/26 [00:00<00:00, 19.91it/s] 46%|####6     | 12/26 [00:00<00:00, 24.74it/s] 62%|######1   | 16/26 [00:00<00:00, 27.89it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.23it/s] 92%|#########2| 24/26 [00:00<00:00, 31.18it/s]100%|##########| 26/26 [00:01<00:00, 23.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.346 (0.328)	train_nll   0.35 (  0.33)	train_penalty   0.01 (  0.02)	weight_norm  22.42 ( 22.38)	train_acc   0.85 (  0.86)	train_minacc   0.46 (  0.27)	train_majacc   0.93 (  0.97)	train_corr   0.00 (  0.00)	l1 6.2322 (6.2485)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.88it/s] 23%|##3       | 6/26 [00:00<00:01, 18.42it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.42it/s] 42%|####2     | 11/26 [00:00<00:00, 27.55it/s] 62%|######1   | 16/26 [00:00<00:00, 33.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.68it/s] 81%|########  | 21/26 [00:00<00:00, 36.84it/s]100%|##########| 26/26 [00:00<00:00, 40.28it/s]100%|##########| 26/26 [00:00<00:00, 28.91it/s]
Test: [   0/  26]	Loss 0.300 (0.300)	test_acc   0.87 (  0.87)	test_minacc   0.36 (  0.36)	test_majacc   0.96 (  0.96)	Loss_d 0.300 (0.300)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.354 (0.328)	test_acc   0.86 (  0.87)	test_minacc   0.32 (  0.33)	test_majacc   0.95 (  0.96)	Loss_d 0.354 (0.328)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.32 (  0.33)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.87 (  0.89)
Test: [  20/  26]	Loss 0.303 (0.322)	test_acc   0.87 (  0.87)	test_minacc   0.30 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 0.303 (0.322)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.30 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.89)
Test: [  26/  26]	Loss 0.326 (0.320)	test_acc   0.85 (  0.87)	test_minacc   0.44 (  0.33)	test_majacc   0.93 (  0.96)	Loss_d 0.326 (0.320)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.44 (  0.33)	test_majacc_d   0.93 (  0.96)	test_corr_d   0.85 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.79it/s]
Test: [  0/  1]	Loss 1.777 (1.777)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.97 (  0.97)	Loss_d 1.777 (1.777)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 1.777 (1.777)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.97 (  0.97)	Loss_d 1.777 (1.777)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.74 (  0.74)
Overall Timing[  7/  1]	epoch_time 0.0413 (0.0468)	validation_time 0.0004 (0.0012)	train_time 0.0408 (0.0448)
record: (train_acc, test_acc) (0.8624000204205513, 0.2939999997615814)
last accs (train_acc, test_acc) (0.868400020480156, 0.2840000092983246)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.59it/s] 15%|#5        | 4/26 [00:00<00:01, 13.33it/s] 31%|###       | 8/26 [00:00<00:00, 21.59it/s] 46%|####6     | 12/26 [00:00<00:00, 26.00it/s] 62%|######1   | 16/26 [00:00<00:00, 28.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.05it/s] 92%|#########2| 24/26 [00:00<00:00, 31.82it/s]100%|##########| 26/26 [00:01<00:00, 25.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.319 (0.315)	train_nll   0.32 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.53 ( 22.48)	train_acc   0.86 (  0.86)	train_minacc   0.41 (  0.31)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 6.2888 (6.3873)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s] 23%|##3       | 6/26 [00:00<00:00, 24.65it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.65it/s] 42%|####2     | 11/26 [00:00<00:00, 32.87it/s] 65%|######5   | 17/26 [00:00<00:00, 36.60it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.60it/s] 85%|########4 | 22/26 [00:00<00:00, 40.07it/s]100%|##########| 26/26 [00:00<00:00, 32.69it/s]
Test: [   0/  26]	Loss 0.279 (0.279)	test_acc   0.88 (  0.88)	test_minacc   0.42 (  0.42)	test_majacc   0.96 (  0.96)	Loss_d 0.279 (0.279)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.318 (0.304)	test_acc   0.87 (  0.87)	test_minacc   0.47 (  0.42)	test_majacc   0.95 (  0.95)	Loss_d 0.318 (0.304)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.47 (  0.42)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.84 (  0.86)
Test: [  20/  26]	Loss 0.278 (0.297)	test_acc   0.88 (  0.87)	test_minacc   0.40 (  0.43)	test_majacc   0.95 (  0.95)	Loss_d 0.278 (0.297)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.40 (  0.43)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.86)
Test: [  26/  26]	Loss 0.305 (0.296)	test_acc   0.88 (  0.87)	test_minacc   0.59 (  0.44)	test_majacc   0.94 (  0.95)	Loss_d 0.305 (0.296)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.59 (  0.44)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.82 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.22it/s]
Test: [  0/  1]	Loss 1.693 (1.693)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.97 (  0.97)	Loss_d 1.693 (1.693)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 1.693 (1.693)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.97 (  0.97)	Loss_d 1.693 (1.693)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.62 (  0.62)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0426 (0.0463)	validation_time 0.0004 (0.0011)	train_time 0.0421 (0.0445)
record: (train_acc, test_acc) (0.8749000260829926, 0.359000027179718)
last accs (train_acc, test_acc) (0.8749000260829926, 0.359000027179718)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.34it/s] 19%|#9        | 5/26 [00:00<00:01, 20.74it/s] 35%|###4      | 9/26 [00:00<00:00, 26.60it/s] 50%|#####     | 13/26 [00:00<00:00, 29.83it/s] 65%|######5   | 17/26 [00:00<00:00, 31.40it/s] 81%|########  | 21/26 [00:00<00:00, 32.15it/s] 96%|#########6| 25/26 [00:00<00:00, 32.84it/s]100%|##########| 26/26 [00:00<00:00, 27.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.295 (0.298)	train_nll   0.30 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.65 ( 22.60)	train_acc   0.88 (  0.87)	train_minacc   0.54 (  0.41)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 6.3686 (6.5132)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.51it/s] 27%|##6       | 7/26 [00:00<00:00, 34.28it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.28it/s] 46%|####6     | 12/26 [00:00<00:00, 40.38it/s] 65%|######5   | 17/26 [00:00<00:00, 42.18it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.18it/s] 85%|########4 | 22/26 [00:00<00:00, 40.22it/s]100%|##########| 26/26 [00:00<00:00, 37.44it/s]
Test: [   0/  26]	Loss 0.279 (0.279)	test_acc   0.90 (  0.90)	test_minacc   0.51 (  0.51)	test_majacc   0.97 (  0.97)	Loss_d 0.279 (0.279)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.279 (0.279)	test_acc   0.87 (  0.88)	test_minacc   0.49 (  0.47)	test_majacc   0.94 (  0.95)	Loss_d 0.279 (0.279)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.49 (  0.47)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.84 (  0.85)
Test: [  20/  26]	Loss 0.253 (0.270)	test_acc   0.88 (  0.88)	test_minacc   0.42 (  0.48)	test_majacc   0.95 (  0.95)	Loss_d 0.253 (0.270)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.42 (  0.48)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.85)
Test: [  26/  26]	Loss 0.274 (0.269)	test_acc   0.89 (  0.89)	test_minacc   0.63 (  0.50)	test_majacc   0.94 (  0.95)	Loss_d 0.274 (0.269)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.63 (  0.50)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.81 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.38it/s]
Test: [  0/  1]	Loss 1.732 (1.732)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 1.732 (1.732)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.63 (  0.63)
Test: [  1/  1]	Loss 1.732 (1.732)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 1.732 (1.732)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.63 (  0.63)
Overall Timing[  9/  1]	epoch_time 0.0390 (0.0456)	validation_time 0.0004 (0.0010)	train_time 0.0386 (0.0439)
record: (train_acc, test_acc) (0.8749000260829926, 0.359000027179718)
last accs (train_acc, test_acc) (0.8856000222563744, 0.3370000123977661)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.13it/s] 19%|#9        | 5/26 [00:00<00:00, 23.03it/s] 35%|###4      | 9/26 [00:00<00:00, 28.68it/s] 50%|#####     | 13/26 [00:00<00:00, 31.43it/s] 65%|######5   | 17/26 [00:00<00:00, 32.47it/s] 81%|########  | 21/26 [00:00<00:00, 33.12it/s] 96%|#########6| 25/26 [00:00<00:00, 33.69it/s]100%|##########| 26/26 [00:00<00:00, 28.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.277 (0.281)	train_nll   0.28 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.79 ( 22.72)	train_acc   0.89 (  0.88)	train_minacc   0.61 (  0.48)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 6.3540 (6.5181)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.92it/s] 23%|##3       | 6/26 [00:00<00:00, 29.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.90it/s] 42%|####2     | 11/26 [00:00<00:00, 37.47it/s] 65%|######5   | 17/26 [00:00<00:00, 40.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.81it/s] 88%|########8 | 23/26 [00:00<00:00, 45.28it/s]100%|##########| 26/26 [00:00<00:00, 37.52it/s]
Test: [   0/  26]	Loss 0.264 (0.264)	test_acc   0.90 (  0.90)	test_minacc   0.63 (  0.63)	test_majacc   0.95 (  0.95)	Loss_d 0.264 (0.264)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.240 (0.253)	test_acc   0.89 (  0.90)	test_minacc   0.61 (  0.59)	test_majacc   0.95 (  0.95)	Loss_d 0.240 (0.253)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.83)
Test: [  20/  26]	Loss 0.244 (0.251)	test_acc   0.90 (  0.90)	test_minacc   0.56 (  0.61)	test_majacc   0.95 (  0.95)	Loss_d 0.244 (0.251)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.56 (  0.61)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.83)
Test: [  26/  26]	Loss 0.232 (0.248)	test_acc   0.92 (  0.90)	test_minacc   0.71 (  0.62)	test_majacc   0.96 (  0.95)	Loss_d 0.232 (0.248)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.71 (  0.62)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.80 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.46it/s]
Test: [  0/  1]	Loss 1.765 (1.765)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.92 (  0.92)	Loss_d 1.765 (1.765)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 1.765 (1.765)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.92 (  0.92)	Loss_d 1.765 (1.765)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.49 (  0.49)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0406 (0.0451)	validation_time 0.0005 (0.0010)	train_time 0.0401 (0.0435)
record: (train_acc, test_acc) (0.8997000191807747, 0.4410000145435333)
last accs (train_acc, test_acc) (0.8997000191807747, 0.4410000145435333)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.03it/s] 19%|#9        | 5/26 [00:00<00:00, 21.87it/s] 35%|###4      | 9/26 [00:00<00:00, 27.69it/s] 50%|#####     | 13/26 [00:00<00:00, 29.26it/s] 65%|######5   | 17/26 [00:00<00:00, 29.98it/s] 81%|########  | 21/26 [00:00<00:00, 30.20it/s] 96%|#########6| 25/26 [00:00<00:00, 31.28it/s]100%|##########| 26/26 [00:00<00:00, 27.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.244 (0.269)	train_nll   0.24 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  22.99 ( 22.89)	train_acc   0.91 (  0.89)	train_minacc   0.63 (  0.50)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 6.2859 (6.5003)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s] 23%|##3       | 6/26 [00:00<00:00, 24.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.68it/s] 42%|####2     | 11/26 [00:00<00:00, 32.63it/s] 62%|######1   | 16/26 [00:00<00:00, 37.04it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.04it/s] 81%|########  | 21/26 [00:00<00:00, 37.61it/s]100%|##########| 26/26 [00:00<00:00, 32.25it/s]
Test: [   0/  26]	Loss 0.244 (0.244)	test_acc   0.89 (  0.89)	test_minacc   0.63 (  0.63)	test_majacc   0.94 (  0.94)	Loss_d 0.244 (0.244)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.252 (0.249)	test_acc   0.88 (  0.89)	test_minacc   0.63 (  0.61)	test_majacc   0.93 (  0.94)	Loss_d 0.252 (0.249)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.63 (  0.61)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.79 (  0.82)
Test: [  20/  26]	Loss 0.242 (0.246)	test_acc   0.91 (  0.90)	test_minacc   0.62 (  0.64)	test_majacc   0.95 (  0.94)	Loss_d 0.242 (0.246)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.62 (  0.64)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.85 (  0.81)
Test: [  26/  26]	Loss 0.202 (0.244)	test_acc   0.93 (  0.90)	test_minacc   0.78 (  0.66)	test_majacc   0.96 (  0.94)	Loss_d 0.202 (0.244)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.78 (  0.66)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.80 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.42it/s]
Test: [  0/  1]	Loss 1.765 (1.765)	test_acc   0.45 (  0.45)	test_minacc   0.39 (  0.39)	test_majacc   0.91 (  0.91)	Loss_d 1.765 (1.765)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 1.765 (1.765)	test_acc   0.45 (  0.45)	test_minacc   0.39 (  0.39)	test_majacc   0.91 (  0.91)	Loss_d 1.765 (1.765)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.45 (  0.45)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0417 (0.0448)	validation_time 0.0003 (0.0009)	train_time 0.0414 (0.0434)
record: (train_acc, test_acc) (0.8990000160336494, 0.44600000977516174)
last accs (train_acc, test_acc) (0.8990000160336494, 0.44600000977516174)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.92it/s] 12%|#1        | 3/26 [00:00<00:01, 12.86it/s] 27%|##6       | 7/26 [00:00<00:00, 22.19it/s] 42%|####2     | 11/26 [00:00<00:00, 26.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.50it/s] 88%|########8 | 23/26 [00:00<00:00, 32.63it/s]100%|##########| 26/26 [00:00<00:00, 26.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.243 (0.259)	train_nll   0.24 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  23.27 ( 23.13)	train_acc   0.90 (  0.89)	train_minacc   0.66 (  0.55)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 6.2753 (6.7859)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.85it/s] 27%|##6       | 7/26 [00:00<00:00, 22.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.70it/s] 46%|####6     | 12/26 [00:00<00:00, 30.47it/s] 65%|######5   | 17/26 [00:00<00:00, 33.92it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.92it/s] 85%|########4 | 22/26 [00:00<00:00, 37.15it/s]100%|##########| 26/26 [00:00<00:00, 29.90it/s]
Test: [   0/  26]	Loss 0.235 (0.235)	test_acc   0.91 (  0.91)	test_minacc   0.58 (  0.58)	test_majacc   0.97 (  0.97)	Loss_d 0.235 (0.235)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.241 (0.245)	test_acc   0.90 (  0.90)	test_minacc   0.59 (  0.54)	test_majacc   0.96 (  0.96)	Loss_d 0.241 (0.245)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.59 (  0.54)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.81 (  0.84)
Test: [  20/  26]	Loss 0.235 (0.243)	test_acc   0.91 (  0.90)	test_minacc   0.56 (  0.56)	test_majacc   0.96 (  0.96)	Loss_d 0.235 (0.243)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.84)
Test: [  26/  26]	Loss 0.218 (0.243)	test_acc   0.90 (  0.90)	test_minacc   0.63 (  0.56)	test_majacc   0.95 (  0.96)	Loss_d 0.218 (0.243)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.63 (  0.56)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.80 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.73it/s]
Test: [  0/  1]	Loss 1.820 (1.820)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 1.820 (1.820)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 1.820 (1.820)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 1.820 (1.820)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.59 (  0.59)
Overall Timing[ 12/  1]	epoch_time 0.0452 (0.0449)	validation_time 0.0004 (0.0009)	train_time 0.0447 (0.0435)
record: (train_acc, test_acc) (0.8990000160336494, 0.44600000977516174)
last accs (train_acc, test_acc) (0.8970000136494637, 0.3700000047683716)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.06it/s] 23%|##3       | 6/26 [00:00<00:00, 22.96it/s] 38%|###8      | 10/26 [00:00<00:00, 28.22it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.19it/s] 69%|######9   | 18/26 [00:00<00:00, 32.92it/s] 85%|########4 | 22/26 [00:00<00:00, 34.21it/s]100%|##########| 26/26 [00:00<00:00, 35.00it/s]100%|##########| 26/26 [00:00<00:00, 29.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.217 (0.240)	train_nll   0.22 (  0.24)	train_penalty   0.01 (  0.01)	weight_norm  23.60 ( 23.44)	train_acc   0.90 (  0.90)	train_minacc   0.63 (  0.60)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.4186 (7.2405)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.56it/s] 23%|##3       | 6/26 [00:00<00:01, 15.01it/s]                                               23%|##3       | 6/26 [00:00<00:01, 15.01it/s] 42%|####2     | 11/26 [00:00<00:00, 24.20it/s] 65%|######5   | 17/26 [00:00<00:00, 31.27it/s]                                                65%|######5   | 17/26 [00:00<00:00, 31.27it/s] 85%|########4 | 22/26 [00:00<00:00, 35.76it/s]100%|##########| 26/26 [00:00<00:00, 26.04it/s]
Test: [   0/  26]	Loss 0.245 (0.245)	test_acc   0.92 (  0.92)	test_minacc   0.61 (  0.61)	test_majacc   0.97 (  0.97)	Loss_d 0.245 (0.245)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.258 (0.238)	test_acc   0.91 (  0.91)	test_minacc   0.73 (  0.62)	test_majacc   0.95 (  0.96)	Loss_d 0.258 (0.238)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.73 (  0.62)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.80 (  0.83)
Test: [  20/  26]	Loss 0.203 (0.226)	test_acc   0.91 (  0.91)	test_minacc   0.58 (  0.65)	test_majacc   0.96 (  0.96)	Loss_d 0.203 (0.226)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.58 (  0.65)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.82)
Test: [  26/  26]	Loss 0.184 (0.224)	test_acc   0.94 (  0.91)	test_minacc   0.83 (  0.66)	test_majacc   0.96 (  0.96)	Loss_d 0.184 (0.224)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.83 (  0.66)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.14it/s]
Test: [  0/  1]	Loss 1.811 (1.811)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 1.811 (1.811)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 1.811 (1.811)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 1.811 (1.811)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.59 (  0.59)
Overall Timing[ 13/  1]	epoch_time 0.0433 (0.0447)	validation_time 0.0006 (0.0009)	train_time 0.0426 (0.0434)
record: (train_acc, test_acc) (0.8990000160336494, 0.44600000977516174)
last accs (train_acc, test_acc) (0.9138000215888024, 0.37400001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.88it/s] 19%|#9        | 5/26 [00:00<00:00, 21.66it/s] 35%|###4      | 9/26 [00:00<00:00, 26.76it/s] 50%|#####     | 13/26 [00:00<00:00, 28.41it/s] 65%|######5   | 17/26 [00:00<00:00, 30.64it/s] 81%|########  | 21/26 [00:00<00:00, 32.18it/s] 96%|#########6| 25/26 [00:00<00:00, 33.03it/s]100%|##########| 26/26 [00:00<00:00, 27.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.207 (0.229)	train_nll   0.21 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.94 ( 23.78)	train_acc   0.91 (  0.91)	train_minacc   0.68 (  0.62)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.1858 (7.4312)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.25it/s] 19%|#9        | 5/26 [00:00<00:00, 25.72it/s] 38%|###8      | 10/26 [00:00<00:00, 31.26it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.66it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.90it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.90it/s] 96%|#########6| 25/26 [00:00<00:00, 41.68it/s]100%|##########| 26/26 [00:00<00:00, 34.18it/s]
Test: [   0/  26]	Loss 0.276 (0.276)	test_acc   0.88 (  0.88)	test_minacc   0.51 (  0.51)	test_majacc   0.95 (  0.95)	Loss_d 0.276 (0.276)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.223 (0.238)	test_acc   0.91 (  0.90)	test_minacc   0.68 (  0.58)	test_majacc   0.95 (  0.96)	Loss_d 0.223 (0.238)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.68 (  0.58)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.79 (  0.82)
Test: [  20/  26]	Loss 0.191 (0.220)	test_acc   0.93 (  0.91)	test_minacc   0.60 (  0.62)	test_majacc   0.98 (  0.96)	Loss_d 0.191 (0.220)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.60 (  0.62)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.84 (  0.82)
Test: [  26/  26]	Loss 0.155 (0.215)	test_acc   0.94 (  0.91)	test_minacc   0.80 (  0.63)	test_majacc   0.97 (  0.96)	Loss_d 0.155 (0.215)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.80 (  0.63)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.78 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.30it/s]
Test: [  0/  1]	Loss 2.229 (2.229)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 2.229 (2.229)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 2.229 (2.229)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 2.229 (2.229)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.58 (  0.58)
Overall Timing[ 14/  1]	epoch_time 0.0444 (0.0447)	validation_time 0.0004 (0.0008)	train_time 0.0439 (0.0434)
record: (train_acc, test_acc) (0.8990000160336494, 0.44600000977516174)
last accs (train_acc, test_acc) (0.9127000135183334, 0.3570000231266022)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.58it/s] 23%|##3       | 6/26 [00:00<00:00, 22.48it/s] 38%|###8      | 10/26 [00:00<00:00, 27.39it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.18it/s] 69%|######9   | 18/26 [00:00<00:00, 31.61it/s] 85%|########4 | 22/26 [00:00<00:00, 32.71it/s]100%|##########| 26/26 [00:00<00:00, 33.55it/s]100%|##########| 26/26 [00:00<00:00, 28.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.005 (0.090)	train_nll   0.25 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  24.24 ( 24.12)	train_acc   0.90 (  0.89)	train_minacc   0.78 (  0.70)	train_majacc   0.92 (  0.92)	train_corr   0.00 (  0.00)	l1 6.0388 (6.9709)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.97it/s] 23%|##3       | 6/26 [00:00<00:00, 32.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.22it/s] 42%|####2     | 11/26 [00:00<00:00, 34.18it/s] 62%|######1   | 16/26 [00:00<00:00, 38.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.53it/s] 81%|########  | 21/26 [00:00<00:00, 40.52it/s]100%|##########| 26/26 [00:00<00:00, 42.96it/s]100%|##########| 26/26 [00:00<00:00, 35.41it/s]
Test: [   0/  26]	Loss 0.267 (0.267)	test_acc   0.88 (  0.88)	test_minacc   0.75 (  0.75)	test_majacc   0.90 (  0.90)	Loss_d 0.267 (0.267)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.321 (0.278)	test_acc   0.84 (  0.88)	test_minacc   0.61 (  0.72)	test_majacc   0.88 (  0.91)	Loss_d 0.321 (0.278)	test_acc_d   0.84 (  0.88)	test_minacc_d   0.61 (  0.72)	test_majacc_d   0.88 (  0.91)	test_corr_d   0.73 (  0.74)
Test: [  20/  26]	Loss 0.268 (0.274)	test_acc   0.89 (  0.88)	test_minacc   0.66 (  0.73)	test_majacc   0.93 (  0.91)	Loss_d 0.268 (0.274)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.66 (  0.73)	test_majacc_d   0.93 (  0.91)	test_corr_d   0.78 (  0.74)
Test: [  26/  26]	Loss 0.260 (0.274)	test_acc   0.90 (  0.88)	test_minacc   0.78 (  0.73)	test_majacc   0.92 (  0.91)	Loss_d 0.260 (0.274)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.78 (  0.73)	test_majacc_d   0.92 (  0.91)	test_corr_d   0.73 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.53it/s]
Test: [  0/  1]	Loss 1.726 (1.726)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.87 (  0.87)	Loss_d 1.726 (1.726)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 1.726 (1.726)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.87 (  0.87)	Loss_d 1.726 (1.726)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.37 (  0.37)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0385 (0.0443)	validation_time 0.0003 (0.0008)	train_time 0.0381 (0.0431)
record: (train_acc, test_acc) (0.8784000217318535, 0.48100003600120544)
last accs (train_acc, test_acc) (0.8784000217318535, 0.48100003600120544)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 15%|#5        | 4/26 [00:00<00:01, 15.52it/s] 31%|###       | 8/26 [00:00<00:00, 23.69it/s] 46%|####6     | 12/26 [00:00<00:00, 28.38it/s] 62%|######1   | 16/26 [00:00<00:00, 30.97it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.46it/s] 92%|#########2| 24/26 [00:00<00:00, 33.42it/s]100%|##########| 26/26 [00:00<00:00, 27.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.003)	train_nll   0.38 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  24.31 ( 24.28)	train_acc   0.80 (  0.83)	train_minacc   0.90 (  0.78)	train_majacc   0.78 (  0.84)	train_corr   0.00 (  0.00)	l1 5.4994 (5.6235)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 23%|##3       | 6/26 [00:00<00:00, 27.25it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.25it/s] 42%|####2     | 11/26 [00:00<00:00, 34.85it/s] 62%|######1   | 16/26 [00:00<00:00, 39.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.16it/s] 81%|########  | 21/26 [00:00<00:00, 36.76it/s]100%|##########| 26/26 [00:00<00:00, 39.89it/s]100%|##########| 26/26 [00:00<00:00, 32.63it/s]
Test: [   0/  26]	Loss 0.366 (0.366)	test_acc   0.80 (  0.80)	test_minacc   0.81 (  0.81)	test_majacc   0.80 (  0.80)	Loss_d 0.366 (0.366)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.390 (0.381)	test_acc   0.77 (  0.79)	test_minacc   0.80 (  0.82)	test_majacc   0.76 (  0.79)	Loss_d 0.390 (0.381)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.80 (  0.82)	test_majacc_d   0.76 (  0.79)	test_corr_d   0.53 (  0.56)
Test: [  20/  26]	Loss 0.388 (0.384)	test_acc   0.81 (  0.79)	test_minacc   0.82 (  0.83)	test_majacc   0.80 (  0.79)	Loss_d 0.388 (0.384)	test_acc_d   0.81 (  0.79)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.80 (  0.79)	test_corr_d   0.60 (  0.56)
Test: [  26/  26]	Loss 0.372 (0.382)	test_acc   0.81 (  0.79)	test_minacc   0.90 (  0.83)	test_majacc   0.79 (  0.79)	Loss_d 0.372 (0.382)	test_acc_d   0.81 (  0.79)	test_minacc_d   0.90 (  0.83)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.55 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.86it/s]
Test: [  0/  1]	Loss 1.332 (1.332)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.71 (  0.71)	Loss_d 1.332 (1.332)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.332 (1.332)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.71 (  0.71)	Loss_d 1.332 (1.332)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.03 (  0.03)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0444 (0.0443)	validation_time 0.0005 (0.0008)	train_time 0.0439 (0.0431)
record: (train_acc, test_acc) (0.7937000278234482, 0.6170000433921814)
last accs (train_acc, test_acc) (0.7937000278234482, 0.6170000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.85it/s] 15%|#5        | 4/26 [00:00<00:01, 18.59it/s] 31%|###       | 8/26 [00:00<00:00, 24.97it/s] 46%|####6     | 12/26 [00:00<00:00, 28.66it/s] 62%|######1   | 16/26 [00:00<00:00, 30.65it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.91it/s] 92%|#########2| 24/26 [00:00<00:00, 33.01it/s]100%|##########| 26/26 [00:00<00:00, 27.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.001 (0.001)	train_nll   0.39 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  24.32 ( 24.31)	train_acc   0.80 (  0.80)	train_minacc   0.85 (  0.79)	train_majacc   0.79 (  0.80)	train_corr   0.00 (  0.00)	l1 5.5949 (5.3935)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.44it/s] 19%|#9        | 5/26 [00:00<00:00, 22.42it/s]                                               19%|#9        | 5/26 [00:00<00:00, 22.42it/s] 42%|####2     | 11/26 [00:00<00:00, 34.77it/s] 62%|######1   | 16/26 [00:00<00:00, 38.56it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.56it/s] 81%|########  | 21/26 [00:00<00:00, 38.05it/s]100%|##########| 26/26 [00:00<00:00, 40.73it/s]100%|##########| 26/26 [00:00<00:00, 32.40it/s]
Test: [   0/  26]	Loss 0.390 (0.390)	test_acc   0.78 (  0.78)	test_minacc   0.80 (  0.80)	test_majacc   0.78 (  0.78)	Loss_d 0.390 (0.390)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.413 (0.409)	test_acc   0.77 (  0.77)	test_minacc   0.78 (  0.81)	test_majacc   0.76 (  0.77)	Loss_d 0.413 (0.409)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.78 (  0.81)	test_majacc_d   0.76 (  0.77)	test_corr_d   0.52 (  0.53)
Test: [  20/  26]	Loss 0.413 (0.409)	test_acc   0.78 (  0.78)	test_minacc   0.80 (  0.81)	test_majacc   0.78 (  0.77)	Loss_d 0.413 (0.409)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.80 (  0.81)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.57 (  0.53)
Test: [  26/  26]	Loss 0.395 (0.405)	test_acc   0.80 (  0.78)	test_minacc   0.88 (  0.82)	test_majacc   0.78 (  0.77)	Loss_d 0.395 (0.405)	test_acc_d   0.80 (  0.78)	test_minacc_d   0.88 (  0.82)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.53 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.44it/s]
Test: [  0/  1]	Loss 1.368 (1.368)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.71 (  0.71)	Loss_d 1.368 (1.368)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 1.368 (1.368)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.71 (  0.71)	Loss_d 1.368 (1.368)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.01 (  0.01)
Overall Timing[ 17/  1]	epoch_time 0.0390 (0.0440)	validation_time 0.0004 (0.0008)	train_time 0.0386 (0.0429)
record: (train_acc, test_acc) (0.7937000278234482, 0.6170000433921814)
last accs (train_acc, test_acc) (0.7778000248670578, 0.6170000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.22it/s] 19%|#9        | 5/26 [00:00<00:00, 23.57it/s] 35%|###4      | 9/26 [00:00<00:00, 28.47it/s] 50%|#####     | 13/26 [00:00<00:00, 31.12it/s] 65%|######5   | 17/26 [00:00<00:00, 32.10it/s] 81%|########  | 21/26 [00:00<00:00, 33.50it/s] 96%|#########6| 25/26 [00:00<00:00, 31.99it/s]100%|##########| 26/26 [00:00<00:00, 28.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.001 (0.001)	train_nll   0.34 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  24.32 ( 24.32)	train_acc   0.84 (  0.80)	train_minacc   0.88 (  0.80)	train_majacc   0.84 (  0.80)	train_corr   0.00 (  0.00)	l1 5.4451 (5.4264)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.43it/s] 23%|##3       | 6/26 [00:00<00:00, 31.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.24it/s] 42%|####2     | 11/26 [00:00<00:00, 34.63it/s] 62%|######1   | 16/26 [00:00<00:00, 38.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.76it/s] 81%|########  | 21/26 [00:00<00:00, 40.94it/s]100%|##########| 26/26 [00:00<00:00, 43.33it/s]100%|##########| 26/26 [00:00<00:00, 35.89it/s]
Test: [   0/  26]	Loss 0.353 (0.353)	test_acc   0.82 (  0.82)	test_minacc   0.81 (  0.81)	test_majacc   0.82 (  0.82)	Loss_d 0.353 (0.353)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.403 (0.381)	test_acc   0.77 (  0.79)	test_minacc   0.76 (  0.80)	test_majacc   0.77 (  0.79)	Loss_d 0.403 (0.381)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.77 (  0.79)	test_corr_d   0.56 (  0.58)
Test: [  20/  26]	Loss 0.376 (0.379)	test_acc   0.80 (  0.79)	test_minacc   0.84 (  0.81)	test_majacc   0.79 (  0.79)	Loss_d 0.376 (0.379)	test_acc_d   0.80 (  0.79)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.61 (  0.58)
Test: [  26/  26]	Loss 0.347 (0.376)	test_acc   0.84 (  0.79)	test_minacc   0.88 (  0.81)	test_majacc   0.83 (  0.79)	Loss_d 0.347 (0.376)	test_acc_d   0.84 (  0.79)	test_minacc_d   0.88 (  0.81)	test_majacc_d   0.83 (  0.79)	test_corr_d   0.60 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.92it/s]
Test: [  0/  1]	Loss 1.387 (1.387)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.74 (  0.74)	Loss_d 1.387 (1.387)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.387 (1.387)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.74 (  0.74)	Loss_d 1.387 (1.387)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.11 (  0.11)
Overall Timing[ 18/  1]	epoch_time 0.0413 (0.0439)	validation_time 0.0004 (0.0008)	train_time 0.0408 (0.0428)
record: (train_acc, test_acc) (0.7937000278234482, 0.6170000433921814)
last accs (train_acc, test_acc) (0.7942000254392624, 0.6000000238418579)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:04,  5.55it/s] 23%|##3       | 6/26 [00:00<00:01, 14.67it/s] 38%|###8      | 10/26 [00:00<00:00, 20.67it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.97it/s] 69%|######9   | 18/26 [00:00<00:00, 27.80it/s] 85%|########4 | 22/26 [00:00<00:00, 30.02it/s]100%|##########| 26/26 [00:01<00:00, 31.63it/s]100%|##########| 26/26 [00:01<00:00, 23.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.001)	train_nll   0.36 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  24.32 ( 24.32)	train_acc   0.80 (  0.79)	train_minacc   0.85 (  0.83)	train_majacc   0.79 (  0.79)	train_corr   0.00 (  0.00)	l1 5.6014 (5.4459)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.39it/s] 15%|#5        | 4/26 [00:00<00:01, 11.71it/s] 35%|###4      | 9/26 [00:00<00:00, 22.63it/s]                                               35%|###4      | 9/26 [00:00<00:00, 22.63it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.28it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 33.28it/s] 92%|#########2| 24/26 [00:00<00:00, 37.61it/s]100%|##########| 26/26 [00:00<00:00, 27.36it/s]
Test: [   0/  26]	Loss 0.357 (0.357)	test_acc   0.82 (  0.82)	test_minacc   0.81 (  0.81)	test_majacc   0.82 (  0.82)	Loss_d 0.357 (0.357)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.401 (0.374)	test_acc   0.76 (  0.79)	test_minacc   0.78 (  0.82)	test_majacc   0.75 (  0.78)	Loss_d 0.401 (0.374)	test_acc_d   0.76 (  0.79)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.75 (  0.78)	test_corr_d   0.56 (  0.58)
Test: [  20/  26]	Loss 0.371 (0.378)	test_acc   0.80 (  0.79)	test_minacc   0.82 (  0.83)	test_majacc   0.79 (  0.78)	Loss_d 0.371 (0.378)	test_acc_d   0.80 (  0.79)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.60 (  0.58)
Test: [  26/  26]	Loss 0.359 (0.376)	test_acc   0.81 (  0.79)	test_minacc   0.85 (  0.83)	test_majacc   0.80 (  0.78)	Loss_d 0.359 (0.376)	test_acc_d   0.81 (  0.79)	test_minacc_d   0.85 (  0.83)	test_majacc_d   0.80 (  0.78)	test_corr_d   0.59 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.40it/s]
Test: [  0/  1]	Loss 1.406 (1.406)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.68 (  0.68)	Loss_d 1.406 (1.406)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.406 (1.406)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.68 (  0.68)	Loss_d 1.406 (1.406)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.09 (  0.09)
Overall Timing[ 19/  1]	epoch_time 0.0461 (0.0440)	validation_time 0.0003 (0.0007)	train_time 0.0457 (0.0429)
record: (train_acc, test_acc) (0.7937000278234482, 0.6170000433921814)
last accs (train_acc, test_acc) (0.7890000269412994, 0.5990000367164612)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.71it/s] 19%|#9        | 5/26 [00:00<00:00, 21.84it/s] 35%|###4      | 9/26 [00:00<00:00, 26.40it/s] 50%|#####     | 13/26 [00:00<00:00, 28.65it/s] 65%|######5   | 17/26 [00:00<00:00, 29.86it/s] 81%|########  | 21/26 [00:00<00:00, 31.13it/s] 96%|#########6| 25/26 [00:00<00:00, 32.59it/s]100%|##########| 26/26 [00:00<00:00, 27.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.37 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  24.33 ( 24.32)	train_acc   0.80 (  0.79)	train_minacc   0.93 (  0.83)	train_majacc   0.77 (  0.79)	train_corr   0.00 (  0.00)	l1 5.7156 (5.4903)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.70it/s] 23%|##3       | 6/26 [00:00<00:00, 30.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.99it/s] 42%|####2     | 11/26 [00:00<00:00, 37.59it/s] 62%|######1   | 16/26 [00:00<00:00, 38.64it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.64it/s] 81%|########  | 21/26 [00:00<00:00, 38.89it/s]100%|##########| 26/26 [00:00<00:00, 41.62it/s]100%|##########| 26/26 [00:00<00:00, 34.70it/s]
Test: [   0/  26]	Loss 0.380 (0.380)	test_acc   0.81 (  0.81)	test_minacc   0.86 (  0.86)	test_majacc   0.80 (  0.80)	Loss_d 0.380 (0.380)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.416 (0.397)	test_acc   0.75 (  0.77)	test_minacc   0.80 (  0.83)	test_majacc   0.75 (  0.76)	Loss_d 0.416 (0.397)	test_acc_d   0.75 (  0.77)	test_minacc_d   0.80 (  0.83)	test_majacc_d   0.75 (  0.76)	test_corr_d   0.51 (  0.53)
Test: [  20/  26]	Loss 0.409 (0.407)	test_acc   0.77 (  0.77)	test_minacc   0.84 (  0.84)	test_majacc   0.76 (  0.76)	Loss_d 0.409 (0.407)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.56 (  0.52)
Test: [  26/  26]	Loss 0.376 (0.403)	test_acc   0.79 (  0.77)	test_minacc   0.93 (  0.85)	test_majacc   0.77 (  0.76)	Loss_d 0.376 (0.403)	test_acc_d   0.79 (  0.77)	test_minacc_d   0.93 (  0.85)	test_majacc_d   0.77 (  0.76)	test_corr_d   0.53 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.21it/s]
Test: [  0/  1]	Loss 1.378 (1.378)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.69 (  0.69)	Loss_d 1.378 (1.378)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 1.378 (1.378)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.69 (  0.69)	Loss_d 1.378 (1.378)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.00 ( -0.00)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/143/checkpoints/model_best.pth
Overall Timing[ 20/  1]	epoch_time 0.0431 (0.0440)	validation_time 0.0004 (0.0007)	train_time 0.0427 (0.0429)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.79it/s] 19%|#9        | 5/26 [00:00<00:00, 24.50it/s] 35%|###4      | 9/26 [00:00<00:00, 29.80it/s] 50%|#####     | 13/26 [00:00<00:00, 31.83it/s] 65%|######5   | 17/26 [00:00<00:00, 33.24it/s] 81%|########  | 21/26 [00:00<00:00, 32.99it/s] 96%|#########6| 25/26 [00:00<00:00, 33.86it/s]100%|##########| 26/26 [00:00<00:00, 29.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.35 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  24.33 ( 24.33)	train_acc   0.81 (  0.79)	train_minacc   0.93 (  0.83)	train_majacc   0.78 (  0.78)	train_corr   0.00 (  0.00)	l1 5.6764 (5.5604)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.40it/s] 23%|##3       | 6/26 [00:00<00:00, 21.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.63it/s] 42%|####2     | 11/26 [00:00<00:00, 30.60it/s] 62%|######1   | 16/26 [00:00<00:00, 35.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.59it/s] 81%|########  | 21/26 [00:00<00:00, 36.07it/s]100%|##########| 26/26 [00:00<00:00, 39.43it/s]100%|##########| 26/26 [00:00<00:00, 30.30it/s]
Test: [   0/  26]	Loss 0.351 (0.351)	test_acc   0.83 (  0.83)	test_minacc   0.85 (  0.85)	test_majacc   0.82 (  0.82)	Loss_d 0.351 (0.351)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.403 (0.374)	test_acc   0.76 (  0.79)	test_minacc   0.78 (  0.84)	test_majacc   0.75 (  0.78)	Loss_d 0.403 (0.374)	test_acc_d   0.76 (  0.79)	test_minacc_d   0.78 (  0.84)	test_majacc_d   0.75 (  0.78)	test_corr_d   0.54 (  0.57)
Test: [  20/  26]	Loss 0.393 (0.386)	test_acc   0.77 (  0.78)	test_minacc   0.82 (  0.84)	test_majacc   0.76 (  0.77)	Loss_d 0.393 (0.386)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.76 (  0.77)	test_corr_d   0.59 (  0.56)
Test: [  26/  26]	Loss 0.361 (0.384)	test_acc   0.81 (  0.78)	test_minacc   0.93 (  0.84)	test_majacc   0.78 (  0.77)	Loss_d 0.361 (0.384)	test_acc_d   0.81 (  0.78)	test_minacc_d   0.93 (  0.84)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.57 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.19it/s]
Test: [  0/  1]	Loss 1.416 (1.416)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.68 (  0.68)	Loss_d 1.416 (1.416)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 1.416 (1.416)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.68 (  0.68)	Loss_d 1.416 (1.416)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.06 (  0.06)
Overall Timing[ 21/  1]	epoch_time 0.0394 (0.0438)	validation_time 0.0004 (0.0007)	train_time 0.0390 (0.0427)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.781600029706955, 0.6100000143051147)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.61it/s] 23%|##3       | 6/26 [00:00<00:00, 25.31it/s] 38%|###8      | 10/26 [00:00<00:00, 29.52it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.06it/s] 69%|######9   | 18/26 [00:00<00:00, 33.59it/s] 85%|########4 | 22/26 [00:00<00:00, 34.42it/s]100%|##########| 26/26 [00:00<00:00, 35.14it/s]100%|##########| 26/26 [00:00<00:00, 29.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.35 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm  24.33 ( 24.33)	train_acc   0.82 (  0.79)	train_minacc   0.90 (  0.84)	train_majacc   0.80 (  0.79)	train_corr   0.00 (  0.00)	l1 5.8186 (5.6035)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.97it/s] 23%|##3       | 6/26 [00:00<00:00, 29.98it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.98it/s] 42%|####2     | 11/26 [00:00<00:00, 34.30it/s] 62%|######1   | 16/26 [00:00<00:00, 38.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.55it/s] 81%|########  | 21/26 [00:00<00:00, 41.37it/s]100%|##########| 26/26 [00:00<00:00, 43.37it/s]100%|##########| 26/26 [00:00<00:00, 35.29it/s]
Test: [   0/  26]	Loss 0.358 (0.358)	test_acc   0.83 (  0.83)	test_minacc   0.83 (  0.83)	test_majacc   0.82 (  0.82)	Loss_d 0.358 (0.358)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.392 (0.362)	test_acc   0.76 (  0.79)	test_minacc   0.81 (  0.85)	test_majacc   0.76 (  0.78)	Loss_d 0.392 (0.362)	test_acc_d   0.76 (  0.79)	test_minacc_d   0.81 (  0.85)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.54 (  0.57)
Test: [  20/  26]	Loss 0.396 (0.383)	test_acc   0.76 (  0.78)	test_minacc   0.86 (  0.85)	test_majacc   0.74 (  0.77)	Loss_d 0.396 (0.383)	test_acc_d   0.76 (  0.78)	test_minacc_d   0.86 (  0.85)	test_majacc_d   0.74 (  0.77)	test_corr_d   0.58 (  0.56)
Test: [  26/  26]	Loss 0.356 (0.382)	test_acc   0.82 (  0.78)	test_minacc   0.90 (  0.85)	test_majacc   0.80 (  0.77)	Loss_d 0.356 (0.382)	test_acc_d   0.82 (  0.78)	test_minacc_d   0.90 (  0.85)	test_majacc_d   0.80 (  0.77)	test_corr_d   0.57 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.99it/s]
Test: [  0/  1]	Loss 1.442 (1.442)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.69 (  0.69)	Loss_d 1.442 (1.442)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.442 (1.442)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.69 (  0.69)	Loss_d 1.442 (1.442)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.05 (  0.05)
Overall Timing[ 22/  1]	epoch_time 0.0400 (0.0436)	validation_time 0.0006 (0.0007)	train_time 0.0394 (0.0426)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.780700029015541, 0.6170000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.87it/s] 19%|#9        | 5/26 [00:00<00:00, 22.88it/s] 31%|###       | 8/26 [00:00<00:00, 24.14it/s] 46%|####6     | 12/26 [00:00<00:00, 27.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.03it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.92it/s] 88%|########8 | 23/26 [00:00<00:00, 29.94it/s]100%|##########| 26/26 [00:00<00:00, 26.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 5.914733409881592
set z to 5.855586075782776
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 375 tensor(-0.0098, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 260 tensor(-0.0169, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 208 tensor(0.0143, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 182 tensor(0.0078, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 178 tensor(0.0029, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.001 (0.044)	train_nll   0.55 (  0.46)	train_penalty   0.00 (  0.04)	weight_norm  26.15 ( 24.85)	train_acc   0.75 (  0.76)	train_minacc   0.73 (  0.65)	train_majacc   0.75 (  0.77)	train_corr   0.00 (  0.00)	l1 7.4446 (7.4040)	zero_count 0.0000 (39.7410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.25it/s] 23%|##3       | 6/26 [00:00<00:00, 29.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.99it/s] 42%|####2     | 11/26 [00:00<00:00, 36.58it/s] 62%|######1   | 16/26 [00:00<00:00, 40.97it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.97it/s] 81%|########  | 21/26 [00:00<00:00, 38.69it/s]100%|##########| 26/26 [00:00<00:00, 41.77it/s]100%|##########| 26/26 [00:00<00:00, 34.67it/s]
Test: [   0/  26]	Loss 0.643 (0.643)	test_acc   0.53 (  0.53)	test_minacc   0.56 (  0.56)	test_majacc   0.52 (  0.52)	Loss_d 0.643 (0.643)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.644 (0.628)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.644 (0.628)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.611 (0.615)	test_acc   0.49 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.48 (  0.50)	Loss_d 0.611 (0.615)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.44 (  0.43)
Test: [  26/  26]	Loss 0.664 (0.616)	test_acc   0.44 (  0.50)	test_minacc   0.63 (  0.50)	test_majacc   0.41 (  0.50)	Loss_d 0.664 (0.616)	test_acc_d   0.44 (  0.50)	test_minacc_d   0.63 (  0.50)	test_majacc_d   0.41 (  0.50)	test_corr_d   0.50 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.00it/s]
Test: [  0/  1]	Loss 1.436 (1.436)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.436 (1.436)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.436 (1.436)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.436 (1.436)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 23/  1]	epoch_time 0.0429 (0.0436)	validation_time 0.0003 (0.0007)	train_time 0.0426 (0.0426)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.500000013589859, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.06it/s] 19%|#9        | 5/26 [00:00<00:00, 22.55it/s] 31%|###       | 8/26 [00:00<00:00, 24.40it/s] 46%|####6     | 12/26 [00:00<00:00, 26.47it/s] 62%|######1   | 16/26 [00:00<00:00, 27.59it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.71it/s] 85%|########4 | 22/26 [00:00<00:00, 28.16it/s]100%|##########| 26/26 [00:00<00:00, 30.35it/s]100%|##########| 26/26 [00:00<00:00, 26.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 175 tensor(0.0013, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 170 tensor(0.0021, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 170 tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 168 tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 168 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 168 tensor(0.0001, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.002)	train_nll   0.62 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.38 ( 26.99)	train_acc   0.51 (  0.59)	train_minacc   0.90 (  0.74)	train_majacc   0.44 (  0.56)	train_corr   0.00 (  0.00)	l1 6.0572 (6.3340)	zero_count 0.0000 (79.4430)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.40it/s] 23%|##3       | 6/26 [00:00<00:00, 26.65it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.65it/s] 42%|####2     | 11/26 [00:00<00:00, 35.05it/s] 62%|######1   | 16/26 [00:00<00:00, 38.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.76it/s] 81%|########  | 21/26 [00:00<00:00, 37.58it/s]100%|##########| 26/26 [00:00<00:00, 40.51it/s]100%|##########| 26/26 [00:00<00:00, 32.89it/s]
Test: [   0/  26]	Loss 0.618 (0.618)	test_acc   0.50 (  0.50)	test_minacc   0.86 (  0.86)	test_majacc   0.44 (  0.44)	Loss_d 0.618 (0.618)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.669 (0.635)	test_acc   0.46 (  0.48)	test_minacc   0.81 (  0.84)	test_majacc   0.40 (  0.41)	Loss_d 0.669 (0.635)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.35 (  0.32)
Test: [  20/  26]	Loss 0.615 (0.626)	test_acc   0.46 (  0.48)	test_minacc   0.88 (  0.85)	test_majacc   0.39 (  0.41)	Loss_d 0.615 (0.626)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.88 (  0.85)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.34 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.625)	test_acc   0.47 (  0.48)	test_minacc   0.88 (  0.85)	test_majacc   0.39 (  0.41)	Loss_d 0.624 (0.625)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.88 (  0.85)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.41 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.55it/s]
Test: [  0/  1]	Loss 1.310 (1.310)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.49 (  0.49)	Loss_d 1.310 (1.310)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 1.310 (1.310)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.49 (  0.49)	Loss_d 1.310 (1.310)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.06 (  0.06)
Overall Timing[ 24/  1]	epoch_time 0.0429 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0424 (0.0426)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.47800000885128974, 0.687000036239624)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.66it/s] 19%|#9        | 5/26 [00:00<00:01, 20.30it/s] 35%|###4      | 9/26 [00:00<00:00, 25.69it/s] 50%|#####     | 13/26 [00:00<00:00, 27.91it/s] 62%|######1   | 16/26 [00:00<00:00, 28.07it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.15it/s] 92%|#########2| 24/26 [00:00<00:00, 29.85it/s]100%|##########| 26/26 [00:01<00:00, 24.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 168 tensor(2.6796e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 173 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 238 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 249 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 258 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 388 tensor(-8.4537e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.46)	train_acc   0.50 (  0.50)	train_minacc   0.90 (  0.86)	train_majacc   0.42 (  0.44)	train_corr   0.00 (  0.00)	l1 5.8507 (5.8941)	zero_count 0.0000 (70.6680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.21it/s] 23%|##3       | 6/26 [00:00<00:00, 26.52it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.52it/s] 42%|####2     | 11/26 [00:00<00:00, 34.19it/s] 62%|######1   | 16/26 [00:00<00:00, 39.31it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.31it/s] 81%|########  | 21/26 [00:00<00:00, 38.00it/s]100%|##########| 26/26 [00:00<00:00, 41.25it/s]100%|##########| 26/26 [00:00<00:00, 33.32it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.48 (  0.48)	test_minacc   0.85 (  0.85)	test_majacc   0.42 (  0.42)	Loss_d 0.654 (0.654)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.652 (0.640)	test_acc   0.48 (  0.48)	test_minacc   0.78 (  0.83)	test_majacc   0.43 (  0.42)	Loss_d 0.652 (0.640)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.78 (  0.83)	test_majacc_d   0.43 (  0.42)	test_corr_d   0.26 (  0.28)
Test: [  20/  26]	Loss 0.637 (0.637)	test_acc   0.47 (  0.48)	test_minacc   0.86 (  0.83)	test_majacc   0.41 (  0.42)	Loss_d 0.637 (0.637)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.86 (  0.83)	test_majacc_d   0.41 (  0.42)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.644 (0.636)	test_acc   0.48 (  0.48)	test_minacc   0.88 (  0.83)	test_majacc   0.41 (  0.42)	Loss_d 0.644 (0.636)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.88 (  0.83)	test_majacc_d   0.41 (  0.42)	test_corr_d   0.38 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.37it/s]
Test: [  0/  1]	Loss 0.965 (0.965)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.47 (  0.47)	Loss_d 0.965 (0.965)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.20 ( -0.20)
Test: [  1/  1]	Loss 0.965 (0.965)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.47 (  0.47)	Loss_d 0.965 (0.965)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.20 ( -0.20)
Overall Timing[ 25/  1]	epoch_time 0.0431 (0.0435)	validation_time 0.0005 (0.0007)	train_time 0.0425 (0.0426)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.48260000517964363, 0.6860000491142273)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.25it/s] 23%|##3       | 6/26 [00:00<00:00, 22.96it/s] 38%|###8      | 10/26 [00:00<00:00, 25.39it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.70it/s] 69%|######9   | 18/26 [00:00<00:00, 30.90it/s] 85%|########4 | 22/26 [00:00<00:00, 29.59it/s] 96%|#########6| 25/26 [00:00<00:00, 28.35it/s]100%|##########| 26/26 [00:00<00:00, 26.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 338 tensor(-8.2763e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 347 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 423 tensor(3.6496e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 395 tensor(0.0002, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 391 tensor(3.4695e-05, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  27.51 ( 27.51)	train_acc   0.44 (  0.52)	train_minacc   0.63 (  0.76)	train_majacc   0.41 (  0.48)	train_corr   0.00 (  0.00)	l1 5.8558 (5.8629)	zero_count 116.0000 (24.2720)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.27it/s] 23%|##3       | 6/26 [00:00<00:00, 23.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.10it/s] 42%|####2     | 11/26 [00:00<00:00, 31.64it/s] 62%|######1   | 16/26 [00:00<00:00, 36.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.65it/s] 81%|########  | 21/26 [00:00<00:00, 39.33it/s]100%|##########| 26/26 [00:00<00:00, 42.22it/s]100%|##########| 26/26 [00:00<00:00, 32.10it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.53 (  0.53)	test_minacc   0.56 (  0.56)	test_majacc   0.52 (  0.52)	Loss_d 0.648 (0.648)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.646 (0.636)	test_acc   0.47 (  0.50)	test_minacc   0.44 (  0.47)	test_majacc   0.47 (  0.50)	Loss_d 0.646 (0.636)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.44 (  0.47)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.29 (  0.30)
Test: [  20/  26]	Loss 0.636 (0.635)	test_acc   0.49 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.48 (  0.50)	Loss_d 0.636 (0.635)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.29 (  0.30)
Test: [  26/  26]	Loss 0.636 (0.634)	test_acc   0.44 (  0.50)	test_minacc   0.63 (  0.50)	test_majacc   0.41 (  0.50)	Loss_d 0.636 (0.634)	test_acc_d   0.44 (  0.50)	test_minacc_d   0.63 (  0.50)	test_majacc_d   0.41 (  0.50)	test_corr_d   0.40 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.32it/s]
Test: [  0/  1]	Loss 1.047 (1.047)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.047 (1.047)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 1.047 (1.047)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.047 (1.047)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Overall Timing[ 26/  1]	epoch_time 0.0459 (0.0436)	validation_time 0.0005 (0.0007)	train_time 0.0454 (0.0427)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.500300012409687, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.25it/s] 12%|#1        | 3/26 [00:00<00:02, 11.19it/s] 23%|##3       | 6/26 [00:00<00:01, 17.66it/s] 38%|###8      | 10/26 [00:00<00:00, 23.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.62it/s] 69%|######9   | 18/26 [00:00<00:00, 28.48it/s] 85%|########4 | 22/26 [00:00<00:00, 30.70it/s]100%|##########| 26/26 [00:01<00:00, 32.01it/s]100%|##########| 26/26 [00:01<00:00, 24.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 381 tensor(7.5570e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.44 (  0.50)	train_minacc   0.68 (  0.51)	train_majacc   0.39 (  0.49)	train_corr   0.00 (  0.00)	l1 5.7710 (5.8127)	zero_count 0.0000 (9.7500)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.84it/s] 27%|##6       | 7/26 [00:00<00:00, 32.72it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.72it/s] 46%|####6     | 12/26 [00:00<00:00, 38.61it/s] 65%|######5   | 17/26 [00:00<00:00, 41.09it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.09it/s] 85%|########4 | 22/26 [00:00<00:00, 43.41it/s]100%|##########| 26/26 [00:00<00:00, 37.20it/s]
Test: [   0/  26]	Loss 0.641 (0.641)	test_acc   0.51 (  0.51)	test_minacc   0.56 (  0.56)	test_majacc   0.50 (  0.50)	Loss_d 0.641 (0.641)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.642 (0.636)	test_acc   0.46 (  0.48)	test_minacc   0.44 (  0.50)	test_majacc   0.47 (  0.47)	Loss_d 0.642 (0.636)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.639 (0.636)	test_acc   0.49 (  0.48)	test_minacc   0.58 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.639 (0.636)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.636 (0.636)	test_acc   0.45 (  0.48)	test_minacc   0.68 (  0.53)	test_majacc   0.40 (  0.48)	Loss_d 0.636 (0.636)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.68 (  0.53)	test_majacc_d   0.40 (  0.48)	test_corr_d   0.37 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.58it/s]
Test: [  0/  1]	Loss 1.011 (1.011)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.011 (1.011)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.011 (1.011)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.011 (1.011)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 27/  1]	epoch_time 0.0447 (0.0436)	validation_time 0.0004 (0.0007)	train_time 0.0442 (0.0427)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.483500008225441, 0.5080000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.18it/s] 19%|#9        | 5/26 [00:00<00:00, 22.60it/s] 35%|###4      | 9/26 [00:00<00:00, 27.07it/s] 50%|#####     | 13/26 [00:00<00:00, 29.39it/s] 65%|######5   | 17/26 [00:00<00:00, 30.97it/s] 81%|########  | 21/26 [00:00<00:00, 31.98it/s] 96%|#########6| 25/26 [00:00<00:00, 32.52it/s]100%|##########| 26/26 [00:00<00:00, 27.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.45 (  0.50)	train_minacc   0.63 (  0.51)	train_majacc   0.41 (  0.49)	train_corr   0.00 (  0.00)	l1 5.8063 (5.8042)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.56it/s] 27%|##6       | 7/26 [00:00<00:00, 28.06it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.06it/s] 46%|####6     | 12/26 [00:00<00:00, 35.81it/s] 65%|######5   | 17/26 [00:00<00:00, 39.38it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.38it/s] 85%|########4 | 22/26 [00:00<00:00, 41.64it/s]100%|##########| 26/26 [00:00<00:00, 34.07it/s]
Test: [   0/  26]	Loss 0.646 (0.646)	test_acc   0.53 (  0.53)	test_minacc   0.56 (  0.56)	test_majacc   0.52 (  0.52)	Loss_d 0.646 (0.646)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.647 (0.641)	test_acc   0.47 (  0.49)	test_minacc   0.44 (  0.48)	test_majacc   0.47 (  0.49)	Loss_d 0.647 (0.641)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.44 (  0.48)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.644 (0.641)	test_acc   0.49 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.644 (0.641)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.27 (  0.28)
Test: [  26/  26]	Loss 0.643 (0.640)	test_acc   0.45 (  0.50)	test_minacc   0.63 (  0.50)	test_majacc   0.41 (  0.50)	Loss_d 0.643 (0.640)	test_acc_d   0.45 (  0.50)	test_minacc_d   0.63 (  0.50)	test_majacc_d   0.41 (  0.50)	test_corr_d   0.36 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.43it/s]
Test: [  0/  1]	Loss 1.021 (1.021)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.021 (1.021)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.021 (1.021)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.021 (1.021)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 28/  1]	epoch_time 0.0416 (0.0436)	validation_time 0.0003 (0.0006)	train_time 0.0412 (0.0427)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4967000062763691, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.21it/s] 15%|#5        | 4/26 [00:00<00:01, 17.05it/s] 31%|###       | 8/26 [00:00<00:00, 24.85it/s] 46%|####6     | 12/26 [00:00<00:00, 29.35it/s] 62%|######1   | 16/26 [00:00<00:00, 32.34it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.28it/s] 92%|#########2| 24/26 [00:00<00:00, 35.70it/s]100%|##########| 26/26 [00:00<00:00, 28.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.45 (  0.50)	train_minacc   0.63 (  0.51)	train_majacc   0.41 (  0.49)	train_corr   0.00 (  0.00)	l1 5.8078 (5.8076)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 19%|#9        | 5/26 [00:00<00:00, 23.66it/s] 38%|###8      | 10/26 [00:00<00:00, 33.69it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.69it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.17it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.43it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.43it/s] 96%|#########6| 25/26 [00:00<00:00, 40.12it/s]100%|##########| 26/26 [00:00<00:00, 33.46it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.53 (  0.53)	test_minacc   0.56 (  0.56)	test_majacc   0.52 (  0.52)	Loss_d 0.645 (0.645)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.647 (0.640)	test_acc   0.47 (  0.49)	test_minacc   0.44 (  0.49)	test_majacc   0.47 (  0.49)	Loss_d 0.647 (0.640)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.643 (0.640)	test_acc   0.49 (  0.49)	test_minacc   0.58 (  0.50)	test_majacc   0.47 (  0.49)	Loss_d 0.643 (0.640)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.643 (0.640)	test_acc   0.45 (  0.49)	test_minacc   0.63 (  0.51)	test_majacc   0.41 (  0.49)	Loss_d 0.643 (0.640)	test_acc_d   0.45 (  0.49)	test_minacc_d   0.63 (  0.51)	test_majacc_d   0.41 (  0.49)	test_corr_d   0.36 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.67it/s]
Test: [  0/  1]	Loss 1.029 (1.029)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.029 (1.029)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.029 (1.029)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.029 (1.029)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 29/  1]	epoch_time 0.0423 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0418 (0.0427)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.49400000876188277, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.11it/s] 19%|#9        | 5/26 [00:00<00:01, 19.37it/s] 35%|###4      | 9/26 [00:00<00:00, 24.65it/s] 50%|#####     | 13/26 [00:00<00:00, 27.85it/s] 65%|######5   | 17/26 [00:00<00:00, 29.63it/s] 81%|########  | 21/26 [00:00<00:00, 31.30it/s] 96%|#########6| 25/26 [00:00<00:00, 32.60it/s]100%|##########| 26/26 [00:00<00:00, 26.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.45 (  0.49)	train_minacc   0.63 (  0.51)	train_majacc   0.41 (  0.49)	train_corr   0.00 (  0.00)	l1 5.8088 (5.8111)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 23%|##3       | 6/26 [00:00<00:00, 24.28it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.28it/s] 42%|####2     | 11/26 [00:00<00:00, 32.98it/s] 62%|######1   | 16/26 [00:00<00:00, 38.67it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.67it/s] 81%|########  | 21/26 [00:00<00:00, 38.68it/s]100%|##########| 26/26 [00:00<00:00, 33.66it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.53 (  0.53)	test_minacc   0.56 (  0.56)	test_majacc   0.52 (  0.52)	Loss_d 0.645 (0.645)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.647 (0.640)	test_acc   0.46 (  0.49)	test_minacc   0.44 (  0.49)	test_majacc   0.47 (  0.49)	Loss_d 0.647 (0.640)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.643 (0.640)	test_acc   0.48 (  0.49)	test_minacc   0.58 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.643 (0.640)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.642 (0.640)	test_acc   0.45 (  0.49)	test_minacc   0.63 (  0.51)	test_majacc   0.41 (  0.49)	Loss_d 0.642 (0.640)	test_acc_d   0.45 (  0.49)	test_minacc_d   0.63 (  0.51)	test_majacc_d   0.41 (  0.49)	test_corr_d   0.36 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.69it/s]
Test: [  0/  1]	Loss 1.033 (1.033)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.033 (1.033)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.033 (1.033)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.033 (1.033)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 30/  1]	epoch_time 0.0419 (0.0435)	validation_time 0.0006 (0.0006)	train_time 0.0412 (0.0426)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4903000078201294, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.76it/s] 19%|#9        | 5/26 [00:00<00:00, 23.67it/s] 35%|###4      | 9/26 [00:00<00:00, 28.22it/s] 50%|#####     | 13/26 [00:00<00:00, 29.36it/s] 65%|######5   | 17/26 [00:00<00:00, 31.19it/s] 81%|########  | 21/26 [00:00<00:00, 32.68it/s] 96%|#########6| 25/26 [00:00<00:00, 33.66it/s]100%|##########| 26/26 [00:00<00:00, 28.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.45 (  0.49)	train_minacc   0.66 (  0.51)	train_majacc   0.41 (  0.49)	train_corr   0.00 (  0.00)	l1 5.8101 (5.8110)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.61it/s] 23%|##3       | 6/26 [00:00<00:00, 22.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.29it/s] 42%|####2     | 11/26 [00:00<00:00, 30.93it/s] 62%|######1   | 16/26 [00:00<00:00, 36.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.65it/s] 81%|########  | 21/26 [00:00<00:00, 36.89it/s]100%|##########| 26/26 [00:00<00:00, 40.17it/s]100%|##########| 26/26 [00:00<00:00, 31.00it/s]
Test: [   0/  26]	Loss 0.646 (0.646)	test_acc   0.53 (  0.53)	test_minacc   0.56 (  0.56)	test_majacc   0.52 (  0.52)	Loss_d 0.646 (0.646)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.647 (0.640)	test_acc   0.46 (  0.48)	test_minacc   0.44 (  0.49)	test_majacc   0.47 (  0.48)	Loss_d 0.647 (0.640)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.642 (0.640)	test_acc   0.48 (  0.48)	test_minacc   0.58 (  0.51)	test_majacc   0.47 (  0.48)	Loss_d 0.642 (0.640)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.642 (0.640)	test_acc   0.45 (  0.49)	test_minacc   0.66 (  0.51)	test_majacc   0.41 (  0.48)	Loss_d 0.642 (0.640)	test_acc_d   0.45 (  0.49)	test_minacc_d   0.66 (  0.51)	test_majacc_d   0.41 (  0.48)	test_corr_d   0.36 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.12it/s]
Test: [  0/  1]	Loss 1.036 (1.036)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.036 (1.036)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.036 (1.036)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.036 (1.036)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 31/  1]	epoch_time 0.0395 (0.0434)	validation_time 0.0003 (0.0006)	train_time 0.0391 (0.0425)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4859000071287155, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.95it/s] 19%|#9        | 5/26 [00:00<00:01, 18.91it/s] 35%|###4      | 9/26 [00:00<00:00, 24.98it/s] 50%|#####     | 13/26 [00:00<00:00, 28.11it/s] 65%|######5   | 17/26 [00:00<00:00, 29.53it/s] 81%|########  | 21/26 [00:00<00:00, 31.03it/s] 96%|#########6| 25/26 [00:00<00:00, 32.22it/s]100%|##########| 26/26 [00:00<00:00, 26.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.45 (  0.48)	train_minacc   0.66 (  0.51)	train_majacc   0.41 (  0.48)	train_corr   0.00 (  0.00)	l1 5.8106 (5.8117)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 27%|##6       | 7/26 [00:00<00:00, 32.01it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.01it/s] 46%|####6     | 12/26 [00:00<00:00, 38.91it/s] 65%|######5   | 17/26 [00:00<00:00, 38.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.29it/s] 81%|########  | 21/26 [00:00<00:00, 38.67it/s]100%|##########| 26/26 [00:00<00:00, 41.12it/s]100%|##########| 26/26 [00:00<00:00, 34.63it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.52 (  0.52)	test_minacc   0.56 (  0.56)	test_majacc   0.51 (  0.51)	Loss_d 0.645 (0.645)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.647 (0.640)	test_acc   0.46 (  0.48)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.47)	Loss_d 0.647 (0.640)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.642 (0.640)	test_acc   0.48 (  0.48)	test_minacc   0.58 (  0.51)	test_majacc   0.46 (  0.47)	Loss_d 0.642 (0.640)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.642 (0.640)	test_acc   0.45 (  0.48)	test_minacc   0.66 (  0.52)	test_majacc   0.41 (  0.47)	Loss_d 0.642 (0.640)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.66 (  0.52)	test_majacc_d   0.41 (  0.47)	test_corr_d   0.36 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.44it/s]
Test: [  0/  1]	Loss 1.038 (1.038)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.038 (1.038)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.038 (1.038)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.038 (1.038)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 32/  1]	epoch_time 0.0413 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0409 (0.0425)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.48070000743865965, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.82it/s] 19%|#9        | 5/26 [00:00<00:00, 23.61it/s] 35%|###4      | 9/26 [00:00<00:00, 28.42it/s] 50%|#####     | 13/26 [00:00<00:00, 30.21it/s] 65%|######5   | 17/26 [00:00<00:00, 31.53it/s] 81%|########  | 21/26 [00:00<00:00, 32.24it/s] 96%|#########6| 25/26 [00:00<00:00, 33.15it/s]100%|##########| 26/26 [00:00<00:00, 28.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.45 (  0.48)	train_minacc   0.66 (  0.52)	train_majacc   0.41 (  0.47)	train_corr   0.00 (  0.00)	l1 5.8114 (5.8121)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.23it/s] 27%|##6       | 7/26 [00:00<00:00, 26.73it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.73it/s] 46%|####6     | 12/26 [00:00<00:00, 33.79it/s] 65%|######5   | 17/26 [00:00<00:00, 35.18it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.18it/s] 85%|########4 | 22/26 [00:00<00:00, 38.77it/s]100%|##########| 26/26 [00:00<00:00, 32.06it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.51 (  0.51)	test_minacc   0.56 (  0.56)	test_majacc   0.50 (  0.50)	Loss_d 0.645 (0.645)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.647 (0.640)	test_acc   0.46 (  0.47)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.47)	Loss_d 0.647 (0.640)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.642 (0.640)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.51)	test_majacc   0.46 (  0.47)	Loss_d 0.642 (0.640)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.45 (  0.48)	test_minacc   0.66 (  0.52)	test_majacc   0.41 (  0.47)	Loss_d 0.642 (0.639)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.66 (  0.52)	test_majacc_d   0.41 (  0.47)	test_corr_d   0.36 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 25.24it/s]
Test: [  0/  1]	Loss 1.040 (1.040)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.040 (1.040)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.040 (1.040)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.040 (1.040)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 33/  1]	epoch_time 0.0430 (0.0433)	validation_time 0.0008 (0.0006)	train_time 0.0422 (0.0425)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.47610000750422476, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.53it/s] 15%|#5        | 4/26 [00:00<00:01, 15.80it/s] 31%|###       | 8/26 [00:00<00:00, 23.54it/s] 46%|####6     | 12/26 [00:00<00:00, 27.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.57it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.94it/s] 88%|########8 | 23/26 [00:00<00:00, 31.49it/s]100%|##########| 26/26 [00:00<00:00, 26.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.45 (  0.48)	train_minacc   0.68 (  0.52)	train_majacc   0.41 (  0.47)	train_corr   0.00 (  0.00)	l1 5.8120 (5.8127)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 31%|###       | 8/26 [00:00<00:00, 33.56it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.56it/s] 50%|#####     | 13/26 [00:00<00:00, 36.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.07it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.07it/s] 92%|#########2| 24/26 [00:00<00:00, 40.43it/s]100%|##########| 26/26 [00:00<00:00, 34.68it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.51 (  0.51)	test_minacc   0.56 (  0.56)	test_majacc   0.50 (  0.50)	Loss_d 0.645 (0.645)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.647 (0.640)	test_acc   0.46 (  0.47)	test_minacc   0.47 (  0.51)	test_majacc   0.46 (  0.46)	Loss_d 0.647 (0.640)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.642 (0.640)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.51)	test_majacc   0.45 (  0.46)	Loss_d 0.642 (0.640)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.45 (  0.47)	test_minacc   0.68 (  0.52)	test_majacc   0.41 (  0.46)	Loss_d 0.642 (0.639)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.68 (  0.52)	test_majacc_d   0.41 (  0.46)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.48it/s]
Test: [  0/  1]	Loss 1.041 (1.041)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.041 (1.041)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.041 (1.041)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.041 (1.041)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 34/  1]	epoch_time 0.0409 (0.0432)	validation_time 0.0003 (0.0006)	train_time 0.0406 (0.0424)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4700000069141388, 0.5080000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.92it/s] 19%|#9        | 5/26 [00:00<00:00, 23.85it/s] 35%|###4      | 9/26 [00:00<00:00, 28.39it/s] 50%|#####     | 13/26 [00:00<00:00, 30.64it/s] 65%|######5   | 17/26 [00:00<00:00, 32.05it/s] 81%|########  | 21/26 [00:00<00:00, 32.94it/s] 96%|#########6| 25/26 [00:00<00:00, 33.20it/s]100%|##########| 26/26 [00:00<00:00, 28.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.45 (  0.47)	train_minacc   0.68 (  0.52)	train_majacc   0.40 (  0.46)	train_corr   0.00 (  0.00)	l1 5.8126 (5.8133)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.55it/s] 19%|#9        | 5/26 [00:00<00:00, 23.25it/s] 38%|###8      | 10/26 [00:00<00:00, 33.75it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.75it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.01it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.50it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.50it/s] 96%|#########6| 25/26 [00:00<00:00, 40.12it/s]100%|##########| 26/26 [00:00<00:00, 34.48it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.50 (  0.50)	test_minacc   0.56 (  0.56)	test_majacc   0.49 (  0.49)	Loss_d 0.645 (0.645)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.647 (0.640)	test_acc   0.45 (  0.46)	test_minacc   0.47 (  0.51)	test_majacc   0.45 (  0.45)	Loss_d 0.647 (0.640)	test_acc_d   0.45 (  0.46)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.642 (0.640)	test_acc   0.47 (  0.46)	test_minacc   0.58 (  0.52)	test_majacc   0.45 (  0.45)	Loss_d 0.642 (0.640)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.45 (  0.46)	test_minacc   0.68 (  0.53)	test_majacc   0.40 (  0.45)	Loss_d 0.642 (0.639)	test_acc_d   0.45 (  0.46)	test_minacc_d   0.68 (  0.53)	test_majacc_d   0.40 (  0.45)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.91it/s]
Test: [  0/  1]	Loss 1.042 (1.042)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.042 (1.042)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.042 (1.042)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.042 (1.042)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 35/  1]	epoch_time 0.0447 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0442 (0.0424)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4642000058889389, 0.5100000500679016)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.60it/s] 19%|#9        | 5/26 [00:00<00:01, 12.12it/s] 35%|###4      | 9/26 [00:00<00:00, 18.84it/s] 50%|#####     | 13/26 [00:00<00:00, 23.73it/s] 65%|######5   | 17/26 [00:00<00:00, 27.19it/s] 81%|########  | 21/26 [00:00<00:00, 29.14it/s]100%|##########| 26/26 [00:01<00:00, 32.84it/s]100%|##########| 26/26 [00:01<00:00, 22.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.44 (  0.46)	train_minacc   0.68 (  0.53)	train_majacc   0.39 (  0.45)	train_corr   0.00 (  0.00)	l1 5.8132 (5.8138)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.74it/s] 15%|#5        | 4/26 [00:00<00:01, 16.14it/s] 35%|###4      | 9/26 [00:00<00:00, 28.03it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.03it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.61it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.90it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.90it/s] 92%|#########2| 24/26 [00:00<00:00, 39.51it/s]100%|##########| 26/26 [00:00<00:00, 31.27it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.50 (  0.50)	test_minacc   0.56 (  0.56)	test_majacc   0.49 (  0.49)	Loss_d 0.645 (0.645)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.647 (0.640)	test_acc   0.45 (  0.46)	test_minacc   0.47 (  0.52)	test_majacc   0.45 (  0.45)	Loss_d 0.647 (0.640)	test_acc_d   0.45 (  0.46)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.642 (0.640)	test_acc   0.46 (  0.46)	test_minacc   0.60 (  0.52)	test_majacc   0.44 (  0.45)	Loss_d 0.642 (0.640)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.60 (  0.52)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.44 (  0.46)	test_minacc   0.68 (  0.53)	test_majacc   0.39 (  0.45)	Loss_d 0.642 (0.639)	test_acc_d   0.44 (  0.46)	test_minacc_d   0.68 (  0.53)	test_majacc_d   0.39 (  0.45)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.05it/s]
Test: [  0/  1]	Loss 1.044 (1.044)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.044 (1.044)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.044 (1.044)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.044 (1.044)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.16 (  0.16)
Overall Timing[ 36/  1]	epoch_time 0.0429 (0.0432)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0424)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4597000053226948, 0.5120000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 15%|#5        | 4/26 [00:00<00:01, 18.31it/s] 31%|###       | 8/26 [00:00<00:00, 26.09it/s] 46%|####6     | 12/26 [00:00<00:00, 29.91it/s] 62%|######1   | 16/26 [00:00<00:00, 31.71it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.83it/s] 92%|#########2| 24/26 [00:00<00:00, 33.19it/s]100%|##########| 26/26 [00:00<00:00, 27.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.44 (  0.46)	train_minacc   0.68 (  0.53)	train_majacc   0.39 (  0.44)	train_corr   0.00 (  0.00)	l1 5.8138 (5.8143)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 23%|##3       | 6/26 [00:00<00:00, 30.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.69it/s] 42%|####2     | 11/26 [00:00<00:00, 36.51it/s] 65%|######5   | 17/26 [00:00<00:00, 39.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.69it/s] 88%|########8 | 23/26 [00:00<00:00, 43.96it/s]100%|##########| 26/26 [00:00<00:00, 37.25it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.645 (0.645)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.647 (0.640)	test_acc   0.45 (  0.45)	test_minacc   0.47 (  0.52)	test_majacc   0.44 (  0.44)	Loss_d 0.647 (0.640)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.642 (0.640)	test_acc   0.46 (  0.45)	test_minacc   0.60 (  0.53)	test_majacc   0.44 (  0.44)	Loss_d 0.642 (0.640)	test_acc_d   0.46 (  0.45)	test_minacc_d   0.60 (  0.53)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.44 (  0.45)	test_minacc   0.68 (  0.53)	test_majacc   0.39 (  0.44)	Loss_d 0.642 (0.639)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.68 (  0.53)	test_majacc_d   0.39 (  0.44)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.14it/s]
Test: [  0/  1]	Loss 1.045 (1.045)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.045 (1.045)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.045 (1.045)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.045 (1.045)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.16 (  0.16)
Overall Timing[ 37/  1]	epoch_time 0.0450 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0445 (0.0425)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4531000043451786, 0.5139999985694885)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 19%|#9        | 5/26 [00:00<00:00, 21.05it/s] 35%|###4      | 9/26 [00:00<00:00, 26.25it/s] 50%|#####     | 13/26 [00:00<00:00, 27.20it/s] 65%|######5   | 17/26 [00:00<00:00, 30.44it/s] 81%|########  | 21/26 [00:00<00:00, 33.00it/s] 96%|#########6| 25/26 [00:00<00:00, 34.94it/s]100%|##########| 26/26 [00:00<00:00, 27.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.44 (  0.45)	train_minacc   0.68 (  0.54)	train_majacc   0.39 (  0.44)	train_corr   0.00 (  0.00)	l1 5.8144 (5.8148)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.94it/s] 27%|##6       | 7/26 [00:00<00:00, 28.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.34it/s] 50%|#####     | 13/26 [00:00<00:00, 37.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.16it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.16it/s] 96%|#########6| 25/26 [00:00<00:00, 44.83it/s]100%|##########| 26/26 [00:00<00:00, 36.17it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.645 (0.645)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.646 (0.640)	test_acc   0.44 (  0.44)	test_minacc   0.47 (  0.52)	test_majacc   0.43 (  0.43)	Loss_d 0.646 (0.640)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.642 (0.640)	test_acc   0.46 (  0.45)	test_minacc   0.60 (  0.53)	test_majacc   0.44 (  0.43)	Loss_d 0.642 (0.640)	test_acc_d   0.46 (  0.45)	test_minacc_d   0.60 (  0.53)	test_majacc_d   0.44 (  0.43)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.44 (  0.45)	test_minacc   0.68 (  0.54)	test_majacc   0.39 (  0.43)	Loss_d 0.642 (0.639)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.68 (  0.54)	test_majacc_d   0.39 (  0.43)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.05it/s]
Test: [  0/  1]	Loss 1.046 (1.046)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 1.046 (1.046)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.046 (1.046)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 1.046 (1.046)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Overall Timing[ 38/  1]	epoch_time 0.0429 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0425)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4484000046253204, 0.5170000195503235)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.84it/s] 23%|##3       | 6/26 [00:00<00:00, 28.63it/s] 38%|###8      | 10/26 [00:00<00:00, 31.08it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.89it/s] 69%|######9   | 18/26 [00:00<00:00, 32.50it/s] 85%|########4 | 22/26 [00:00<00:00, 33.30it/s]100%|##########| 26/26 [00:00<00:00, 34.37it/s]100%|##########| 26/26 [00:00<00:00, 30.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.44 (  0.45)	train_minacc   0.68 (  0.54)	train_majacc   0.39 (  0.43)	train_corr   0.00 (  0.00)	l1 5.8149 (5.8153)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.97it/s] 23%|##3       | 6/26 [00:00<00:00, 30.05it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.05it/s] 42%|####2     | 11/26 [00:00<00:00, 36.92it/s] 62%|######1   | 16/26 [00:00<00:00, 40.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.80it/s] 81%|########  | 21/26 [00:00<00:00, 39.65it/s]100%|##########| 26/26 [00:00<00:00, 42.48it/s]100%|##########| 26/26 [00:00<00:00, 35.49it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.48 (  0.48)	test_minacc   0.58 (  0.58)	test_majacc   0.46 (  0.46)	Loss_d 0.645 (0.645)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.43 (  0.44)	test_minacc   0.49 (  0.53)	test_majacc   0.42 (  0.42)	Loss_d 0.646 (0.639)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.49 (  0.53)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.642 (0.640)	test_acc   0.45 (  0.44)	test_minacc   0.60 (  0.53)	test_majacc   0.43 (  0.43)	Loss_d 0.642 (0.640)	test_acc_d   0.45 (  0.44)	test_minacc_d   0.60 (  0.53)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.44 (  0.44)	test_minacc   0.68 (  0.55)	test_majacc   0.39 (  0.43)	Loss_d 0.642 (0.639)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.68 (  0.55)	test_majacc_d   0.39 (  0.43)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.65it/s]
Test: [  0/  1]	Loss 1.047 (1.047)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 1.047 (1.047)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.047 (1.047)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 1.047 (1.047)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Overall Timing[ 39/  1]	epoch_time 0.0384 (0.0432)	validation_time 0.0003 (0.0006)	train_time 0.0381 (0.0424)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4440000037252903, 0.5180000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.09it/s] 19%|#9        | 5/26 [00:00<00:01, 18.34it/s] 35%|###4      | 9/26 [00:00<00:00, 23.99it/s] 50%|#####     | 13/26 [00:00<00:00, 27.14it/s] 65%|######5   | 17/26 [00:00<00:00, 29.17it/s] 81%|########  | 21/26 [00:00<00:00, 30.87it/s] 96%|#########6| 25/26 [00:00<00:00, 32.05it/s]100%|##########| 26/26 [00:01<00:00, 25.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.43 (  0.44)	train_minacc   0.68 (  0.54)	train_majacc   0.38 (  0.42)	train_corr   0.00 (  0.00)	l1 5.8154 (5.8158)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.90it/s] 23%|##3       | 6/26 [00:00<00:00, 21.93it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.93it/s] 42%|####2     | 11/26 [00:00<00:00, 30.38it/s] 62%|######1   | 16/26 [00:00<00:00, 36.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.47it/s] 81%|########  | 21/26 [00:00<00:00, 39.09it/s]100%|##########| 26/26 [00:00<00:00, 41.88it/s]100%|##########| 26/26 [00:00<00:00, 32.23it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.58)	test_majacc   0.46 (  0.46)	Loss_d 0.644 (0.644)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.43 (  0.43)	test_minacc   0.49 (  0.53)	test_majacc   0.42 (  0.42)	Loss_d 0.646 (0.639)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.49 (  0.53)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.642 (0.639)	test_acc   0.45 (  0.44)	test_minacc   0.60 (  0.53)	test_majacc   0.42 (  0.42)	Loss_d 0.642 (0.639)	test_acc_d   0.45 (  0.44)	test_minacc_d   0.60 (  0.53)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.43 (  0.44)	test_minacc   0.68 (  0.55)	test_majacc   0.38 (  0.42)	Loss_d 0.642 (0.639)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.68 (  0.55)	test_majacc_d   0.38 (  0.42)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.56it/s]
Test: [  0/  1]	Loss 1.048 (1.048)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 1.048 (1.048)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.048 (1.048)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 1.048 (1.048)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Overall Timing[ 40/  1]	epoch_time 0.0432 (0.0432)	validation_time 0.0003 (0.0006)	train_time 0.0428 (0.0424)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4390000038146973, 0.5190000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.58it/s] 19%|#9        | 5/26 [00:00<00:00, 21.35it/s] 35%|###4      | 9/26 [00:00<00:00, 27.48it/s] 50%|#####     | 13/26 [00:00<00:00, 30.17it/s] 65%|######5   | 17/26 [00:00<00:00, 31.00it/s] 81%|########  | 21/26 [00:00<00:00, 32.39it/s] 96%|#########6| 25/26 [00:00<00:00, 33.12it/s]100%|##########| 26/26 [00:00<00:00, 28.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.43 (  0.44)	train_minacc   0.68 (  0.55)	train_majacc   0.38 (  0.42)	train_corr   0.00 (  0.00)	l1 5.8160 (5.8162)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 24.88it/s] 38%|###8      | 10/26 [00:00<00:00, 38.73it/s]                                                38%|###8      | 10/26 [00:00<00:00, 38.73it/s] 62%|######1   | 16/26 [00:00<00:00, 42.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.99it/s] 81%|########  | 21/26 [00:00<00:00, 44.53it/s]100%|##########| 26/26 [00:00<00:00, 46.04it/s]100%|##########| 26/26 [00:00<00:00, 38.85it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.58)	test_majacc   0.45 (  0.45)	Loss_d 0.644 (0.644)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.43 (  0.43)	test_minacc   0.51 (  0.53)	test_majacc   0.41 (  0.41)	Loss_d 0.646 (0.639)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.51 (  0.53)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.641 (0.639)	test_acc   0.44 (  0.43)	test_minacc   0.60 (  0.54)	test_majacc   0.42 (  0.41)	Loss_d 0.641 (0.639)	test_acc_d   0.44 (  0.43)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.43 (  0.43)	test_minacc   0.68 (  0.55)	test_majacc   0.38 (  0.41)	Loss_d 0.642 (0.639)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.68 (  0.55)	test_majacc_d   0.38 (  0.41)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.89it/s]
Test: [  0/  1]	Loss 1.049 (1.049)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 1.049 (1.049)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.049 (1.049)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 1.049 (1.049)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Overall Timing[ 41/  1]	epoch_time 0.0388 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0383 (0.0423)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.434700004607439, 0.5190000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.09it/s] 19%|#9        | 5/26 [00:00<00:01, 19.54it/s] 35%|###4      | 9/26 [00:00<00:00, 25.81it/s] 50%|#####     | 13/26 [00:00<00:00, 29.23it/s] 65%|######5   | 17/26 [00:00<00:00, 31.29it/s] 81%|########  | 21/26 [00:00<00:00, 33.47it/s] 96%|#########6| 25/26 [00:00<00:00, 34.21it/s]100%|##########| 26/26 [00:00<00:00, 27.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.43 (  0.43)	train_minacc   0.68 (  0.55)	train_majacc   0.38 (  0.41)	train_corr   0.00 (  0.00)	l1 5.8166 (5.8168)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.92it/s] 27%|##6       | 7/26 [00:00<00:00, 27.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.93it/s] 46%|####6     | 12/26 [00:00<00:00, 35.52it/s] 65%|######5   | 17/26 [00:00<00:00, 39.21it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.21it/s] 85%|########4 | 22/26 [00:00<00:00, 38.57it/s]100%|##########| 26/26 [00:00<00:00, 34.55it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.46 (  0.46)	test_minacc   0.58 (  0.58)	test_majacc   0.44 (  0.44)	Loss_d 0.644 (0.644)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.43 (  0.43)	test_minacc   0.53 (  0.54)	test_majacc   0.41 (  0.41)	Loss_d 0.646 (0.639)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.53 (  0.54)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.641 (0.639)	test_acc   0.44 (  0.43)	test_minacc   0.60 (  0.54)	test_majacc   0.42 (  0.41)	Loss_d 0.641 (0.639)	test_acc_d   0.44 (  0.43)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.43 (  0.43)	test_minacc   0.68 (  0.55)	test_majacc   0.38 (  0.41)	Loss_d 0.642 (0.639)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.68 (  0.55)	test_majacc_d   0.38 (  0.41)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.90it/s]
Test: [  0/  1]	Loss 1.050 (1.050)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 1.050 (1.050)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.050 (1.050)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 1.050 (1.050)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Overall Timing[ 42/  1]	epoch_time 0.0403 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0399 (0.0423)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.43100000482797624, 0.5220000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.46it/s] 19%|#9        | 5/26 [00:00<00:00, 21.68it/s] 35%|###4      | 9/26 [00:00<00:00, 27.39it/s] 50%|#####     | 13/26 [00:00<00:00, 29.66it/s] 65%|######5   | 17/26 [00:00<00:00, 31.50it/s] 81%|########  | 21/26 [00:00<00:00, 31.81it/s] 96%|#########6| 25/26 [00:00<00:00, 32.60it/s]100%|##########| 26/26 [00:00<00:00, 27.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.42 (  0.43)	train_minacc   0.66 (  0.55)	train_majacc   0.38 (  0.41)	train_corr   0.00 (  0.00)	l1 5.8171 (5.8173)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.81it/s] 23%|##3       | 6/26 [00:00<00:00, 31.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.97it/s] 42%|####2     | 11/26 [00:00<00:00, 37.20it/s] 62%|######1   | 16/26 [00:00<00:00, 37.75it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.75it/s] 81%|########  | 21/26 [00:00<00:00, 40.51it/s]100%|##########| 26/26 [00:00<00:00, 42.69it/s]100%|##########| 26/26 [00:00<00:00, 35.56it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.46 (  0.46)	test_minacc   0.58 (  0.58)	test_majacc   0.44 (  0.44)	Loss_d 0.644 (0.644)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.42 (  0.42)	test_minacc   0.53 (  0.54)	test_majacc   0.40 (  0.40)	Loss_d 0.646 (0.639)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.53 (  0.54)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.641 (0.639)	test_acc   0.44 (  0.43)	test_minacc   0.60 (  0.54)	test_majacc   0.41 (  0.41)	Loss_d 0.641 (0.639)	test_acc_d   0.44 (  0.43)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.42 (  0.43)	test_minacc   0.66 (  0.55)	test_majacc   0.38 (  0.41)	Loss_d 0.642 (0.639)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.66 (  0.55)	test_majacc_d   0.38 (  0.41)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.51it/s]
Test: [  0/  1]	Loss 1.051 (1.051)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.051 (1.051)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.051 (1.051)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.051 (1.051)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.16 (  0.16)
Overall Timing[ 43/  1]	epoch_time 0.0400 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0395 (0.0422)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.42840000477433204, 0.5200000405311584)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.08it/s] 15%|#5        | 4/26 [00:00<00:01, 16.68it/s] 31%|###       | 8/26 [00:00<00:00, 24.14it/s] 46%|####6     | 12/26 [00:00<00:00, 27.86it/s] 62%|######1   | 16/26 [00:00<00:00, 29.60it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.98it/s] 92%|#########2| 24/26 [00:00<00:00, 32.09it/s]100%|##########| 26/26 [00:00<00:00, 26.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.42 (  0.43)	train_minacc   0.66 (  0.55)	train_majacc   0.38 (  0.41)	train_corr   0.00 (  0.00)	l1 5.8177 (5.8178)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 23%|##3       | 6/26 [00:00<00:00, 27.15it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.15it/s] 42%|####2     | 11/26 [00:00<00:00, 34.06it/s] 62%|######1   | 16/26 [00:00<00:00, 35.51it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.51it/s] 81%|########  | 21/26 [00:00<00:00, 38.48it/s]100%|##########| 26/26 [00:00<00:00, 41.48it/s]100%|##########| 26/26 [00:00<00:00, 33.43it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.46 (  0.46)	test_minacc   0.58 (  0.58)	test_majacc   0.44 (  0.44)	Loss_d 0.644 (0.644)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.42 (  0.42)	test_minacc   0.53 (  0.54)	test_majacc   0.40 (  0.40)	Loss_d 0.646 (0.639)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.53 (  0.54)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.641 (0.639)	test_acc   0.44 (  0.42)	test_minacc   0.62 (  0.55)	test_majacc   0.41 (  0.40)	Loss_d 0.641 (0.639)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.41 (  0.40)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.42 (  0.43)	test_minacc   0.66 (  0.56)	test_majacc   0.38 (  0.40)	Loss_d 0.642 (0.639)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.66 (  0.56)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.34it/s]
Test: [  0/  1]	Loss 1.051 (1.051)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.051 (1.051)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.051 (1.051)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.051 (1.051)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.16 (  0.16)
Overall Timing[ 44/  1]	epoch_time 0.0418 (0.0429)	validation_time 0.0003 (0.0006)	train_time 0.0414 (0.0422)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4257000049352646, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.77it/s] 19%|#9        | 5/26 [00:00<00:01, 17.43it/s] 35%|###4      | 9/26 [00:00<00:00, 24.06it/s] 50%|#####     | 13/26 [00:00<00:00, 27.85it/s] 65%|######5   | 17/26 [00:00<00:00, 30.26it/s] 81%|########  | 21/26 [00:00<00:00, 31.92it/s] 96%|#########6| 25/26 [00:00<00:00, 32.89it/s]100%|##########| 26/26 [00:00<00:00, 26.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.42 (  0.43)	train_minacc   0.66 (  0.55)	train_majacc   0.38 (  0.40)	train_corr   0.00 (  0.00)	l1 5.8182 (5.8183)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.06it/s] 23%|##3       | 6/26 [00:00<00:00, 26.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.82it/s] 42%|####2     | 11/26 [00:00<00:00, 34.69it/s] 62%|######1   | 16/26 [00:00<00:00, 39.64it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.64it/s] 81%|########  | 21/26 [00:00<00:00, 41.50it/s]100%|##########| 26/26 [00:00<00:00, 43.09it/s]100%|##########| 26/26 [00:00<00:00, 35.06it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.45 (  0.45)	test_minacc   0.58 (  0.58)	test_majacc   0.43 (  0.43)	Loss_d 0.644 (0.644)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.42 (  0.42)	test_minacc   0.51 (  0.54)	test_majacc   0.40 (  0.40)	Loss_d 0.646 (0.639)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.641 (0.639)	test_acc   0.43 (  0.42)	test_minacc   0.62 (  0.55)	test_majacc   0.41 (  0.40)	Loss_d 0.641 (0.639)	test_acc_d   0.43 (  0.42)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.41 (  0.40)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.639)	test_acc   0.42 (  0.42)	test_minacc   0.66 (  0.56)	test_majacc   0.38 (  0.40)	Loss_d 0.642 (0.639)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.66 (  0.56)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.59it/s]
Test: [  0/  1]	Loss 1.052 (1.052)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.45 (  0.45)	Loss_d 1.052 (1.052)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.052 (1.052)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.45 (  0.45)	Loss_d 1.052 (1.052)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.16 (  0.16)
Overall Timing[ 45/  1]	epoch_time 0.0386 (0.0428)	validation_time 0.0003 (0.0006)	train_time 0.0383 (0.0421)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4232000050842762, 0.5220000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.91it/s] 23%|##3       | 6/26 [00:00<00:00, 24.24it/s] 38%|###8      | 10/26 [00:00<00:00, 28.72it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.02it/s] 69%|######9   | 18/26 [00:00<00:00, 32.43it/s] 85%|########4 | 22/26 [00:00<00:00, 33.17it/s]100%|##########| 26/26 [00:00<00:00, 33.20it/s]100%|##########| 26/26 [00:00<00:00, 28.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.42 (  0.42)	train_minacc   0.66 (  0.55)	train_majacc   0.38 (  0.40)	train_corr   0.00 (  0.00)	l1 5.8187 (5.8188)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.96it/s] 23%|##3       | 6/26 [00:00<00:00, 26.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.10it/s] 42%|####2     | 11/26 [00:00<00:00, 33.01it/s] 62%|######1   | 16/26 [00:00<00:00, 38.77it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.77it/s] 81%|########  | 21/26 [00:00<00:00, 37.34it/s]100%|##########| 26/26 [00:00<00:00, 40.77it/s]100%|##########| 26/26 [00:00<00:00, 32.64it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.45 (  0.45)	test_minacc   0.58 (  0.58)	test_majacc   0.43 (  0.43)	Loss_d 0.644 (0.644)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.42 (  0.41)	test_minacc   0.51 (  0.54)	test_majacc   0.40 (  0.39)	Loss_d 0.646 (0.639)	test_acc_d   0.42 (  0.41)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.641 (0.639)	test_acc   0.43 (  0.42)	test_minacc   0.62 (  0.55)	test_majacc   0.40 (  0.40)	Loss_d 0.641 (0.639)	test_acc_d   0.43 (  0.42)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.638)	test_acc   0.42 (  0.42)	test_minacc   0.66 (  0.56)	test_majacc   0.38 (  0.40)	Loss_d 0.642 (0.638)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.66 (  0.56)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.44it/s]
Test: [  0/  1]	Loss 1.053 (1.053)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.45 (  0.45)	Loss_d 1.053 (1.053)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.053 (1.053)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.45 (  0.45)	Loss_d 1.053 (1.053)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.16 (  0.16)
Overall Timing[ 46/  1]	epoch_time 0.0406 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0402 (0.0420)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.4207000052332878, 0.5240000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 19%|#9        | 5/26 [00:00<00:00, 21.40it/s] 35%|###4      | 9/26 [00:00<00:00, 27.30it/s] 50%|#####     | 13/26 [00:00<00:00, 29.96it/s] 65%|######5   | 17/26 [00:00<00:00, 31.84it/s] 81%|########  | 21/26 [00:00<00:00, 33.07it/s] 96%|#########6| 25/26 [00:00<00:00, 33.84it/s]100%|##########| 26/26 [00:00<00:00, 28.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.42 (  0.42)	train_minacc   0.63 (  0.55)	train_majacc   0.37 (  0.40)	train_corr   0.00 (  0.00)	l1 5.8193 (5.8193)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.27it/s] 12%|#1        | 3/26 [00:00<00:02,  8.51it/s] 31%|###       | 8/26 [00:00<00:00, 20.66it/s]                                               31%|###       | 8/26 [00:00<00:00, 20.66it/s] 50%|#####     | 13/26 [00:00<00:00, 28.95it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.82it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 34.82it/s] 96%|#########6| 25/26 [00:00<00:00, 41.22it/s]100%|##########| 26/26 [00:00<00:00, 27.96it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.45 (  0.45)	test_minacc   0.58 (  0.58)	test_majacc   0.43 (  0.43)	Loss_d 0.644 (0.644)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.42 (  0.41)	test_minacc   0.51 (  0.54)	test_majacc   0.40 (  0.39)	Loss_d 0.646 (0.639)	test_acc_d   0.42 (  0.41)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.641 (0.639)	test_acc   0.43 (  0.42)	test_minacc   0.62 (  0.55)	test_majacc   0.40 (  0.39)	Loss_d 0.641 (0.639)	test_acc_d   0.43 (  0.42)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.638)	test_acc   0.42 (  0.42)	test_minacc   0.63 (  0.56)	test_majacc   0.37 (  0.39)	Loss_d 0.642 (0.638)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.63 (  0.56)	test_majacc_d   0.37 (  0.39)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.40it/s]
Test: [  0/  1]	Loss 1.053 (1.053)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.44 (  0.44)	Loss_d 1.053 (1.053)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.053 (1.053)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.44 (  0.44)	Loss_d 1.053 (1.053)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.16 (  0.16)
Overall Timing[ 47/  1]	epoch_time 0.0420 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0415 (0.0420)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.41860000494122507, 0.5240000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.87it/s] 19%|#9        | 5/26 [00:00<00:00, 23.45it/s] 35%|###4      | 9/26 [00:00<00:00, 29.69it/s] 50%|#####     | 13/26 [00:00<00:00, 32.17it/s] 65%|######5   | 17/26 [00:00<00:00, 32.81it/s] 81%|########  | 21/26 [00:00<00:00, 34.51it/s] 96%|#########6| 25/26 [00:00<00:00, 35.78it/s]100%|##########| 26/26 [00:00<00:00, 30.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.41 (  0.42)	train_minacc   0.63 (  0.55)	train_majacc   0.36 (  0.39)	train_corr   0.00 (  0.00)	l1 5.8197 (5.8197)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.44it/s] 23%|##3       | 6/26 [00:00<00:00, 25.01it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.01it/s] 46%|####6     | 12/26 [00:00<00:00, 35.97it/s] 69%|######9   | 18/26 [00:00<00:00, 40.11it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.11it/s] 88%|########8 | 23/26 [00:00<00:00, 41.45it/s]100%|##########| 26/26 [00:00<00:00, 35.61it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.45 (  0.45)	test_minacc   0.58 (  0.58)	test_majacc   0.43 (  0.43)	Loss_d 0.644 (0.644)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.42 (  0.41)	test_minacc   0.51 (  0.54)	test_majacc   0.40 (  0.39)	Loss_d 0.646 (0.639)	test_acc_d   0.42 (  0.41)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.641 (0.639)	test_acc   0.43 (  0.41)	test_minacc   0.62 (  0.55)	test_majacc   0.40 (  0.39)	Loss_d 0.641 (0.639)	test_acc_d   0.43 (  0.41)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.642 (0.638)	test_acc   0.41 (  0.42)	test_minacc   0.63 (  0.56)	test_majacc   0.36 (  0.39)	Loss_d 0.642 (0.638)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.63 (  0.56)	test_majacc_d   0.36 (  0.39)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.53it/s]
Test: [  0/  1]	Loss 1.054 (1.054)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.44 (  0.44)	Loss_d 1.054 (1.054)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.054 (1.054)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.44 (  0.44)	Loss_d 1.054 (1.054)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.16 (  0.16)
Overall Timing[ 48/  1]	epoch_time 0.0429 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0420)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.41680000537633893, 0.5240000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  8.75it/s] 23%|##3       | 6/26 [00:00<00:01, 19.40it/s] 38%|###8      | 10/26 [00:00<00:00, 25.02it/s] 50%|#####     | 13/26 [00:00<00:00, 26.12it/s] 65%|######5   | 17/26 [00:00<00:00, 28.91it/s] 81%|########  | 21/26 [00:00<00:00, 30.47it/s] 96%|#########6| 25/26 [00:00<00:00, 31.73it/s]100%|##########| 26/26 [00:01<00:00, 25.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.41 (  0.42)	train_minacc   0.63 (  0.56)	train_majacc   0.37 (  0.39)	train_corr   0.00 (  0.00)	l1 5.8201 (5.8201)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 23%|##3       | 6/26 [00:00<00:00, 29.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.43it/s] 42%|####2     | 11/26 [00:00<00:00, 35.77it/s] 62%|######1   | 16/26 [00:00<00:00, 40.22it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.22it/s] 81%|########  | 21/26 [00:00<00:00, 38.37it/s]100%|##########| 26/26 [00:00<00:00, 41.13it/s]100%|##########| 26/26 [00:00<00:00, 34.16it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.44 (  0.44)	test_minacc   0.56 (  0.56)	test_majacc   0.42 (  0.42)	Loss_d 0.644 (0.644)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.646 (0.639)	test_acc   0.42 (  0.41)	test_minacc   0.51 (  0.54)	test_majacc   0.40 (  0.39)	Loss_d 0.646 (0.639)	test_acc_d   0.42 (  0.41)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.641 (0.639)	test_acc   0.43 (  0.41)	test_minacc   0.62 (  0.55)	test_majacc   0.40 (  0.39)	Loss_d 0.641 (0.639)	test_acc_d   0.43 (  0.41)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.641 (0.638)	test_acc   0.41 (  0.42)	test_minacc   0.63 (  0.56)	test_majacc   0.37 (  0.39)	Loss_d 0.641 (0.638)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.63 (  0.56)	test_majacc_d   0.37 (  0.39)	test_corr_d   0.35 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.87it/s]
Test: [  0/  1]	Loss 1.054 (1.054)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.44 (  0.44)	Loss_d 1.054 (1.054)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.054 (1.054)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.44 (  0.44)	Loss_d 1.054 (1.054)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.17 (  0.17)
Overall Timing[ 49/  1]	epoch_time 0.0447 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0443 (0.0421)
record: (train_acc, test_acc) (0.7709000298380851, 0.6290000081062317)
last accs (train_acc, test_acc) (0.41510000568628314, 0.5240000486373901)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.167 MB of 0.167 MB uploadedwandb: \ 0.167 MB of 0.167 MB uploadedwandb: | 0.167 MB of 0.167 MB uploadedwandb: / 0.167 MB of 0.167 MB uploadedwandb: - 0.189 MB of 0.198 MB uploaded (0.003 MB deduped)wandb: \ 0.498 MB of 0.498 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/diagnostics/epoch_time_val █▁▂▂▁▃▁▂▁▂▂▂▁▂▁▂▂▁▁▂▂▂▂▂▂▁▂▂▂▂▂▂▂▁▁▁▁▁▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/diagnostics/train_time_val █▁▂▂▁▄▂▂▂▂▃▂▁▃▁▂▂▁▁▂▂▃▃▂▂▁▂▂▃▂▃▂▂▁▁▁▁▂▂▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/Loss_avg █▇▇█▆▇▇▆▇▇▇▇▇▄▄▄▄▄▄▄▁▂▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/Loss_d_avg █▇▇█▆▇▇▆▇▇▇▇▇▄▄▄▄▄▄▄▁▂▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/Loss_d_val █▇▇█▆▇▇▆▇▇▇▇▇▄▄▄▄▄▄▄▁▂▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/Loss_val █▇▇█▆▇▇▆▇▇▇▇▇▄▄▄▄▄▄▄▁▂▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_acc_avg ▁▁▁▁▃▃▃▄▅▅▄▄▆▇▇▇▇▇▇▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_acc_d_avg ▁▁▁▁▃▃▃▄▅▅▄▄▆▇▇▇▇▇▇▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_acc_d_val ▁▁▁▁▃▃▃▄▅▅▄▄▆▇▇▇▇▇▇▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_acc_val ▁▁▁▁▃▃▃▄▅▅▄▄▆▇▇▇▇▇▇▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_corr_d_avg ████▇▇▇▆▅▅▆▆▄▂▂▃▂▃▃▃▁▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_corr_d_val ████▇▇▇▆▅▅▆▆▄▂▂▃▂▃▃▃▁▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_majacc_avg ████████▇▇▇▇▆▄▄▅▄▄▄▂▁▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_majacc_d_avg ████████▇▇▇▇▆▄▄▅▄▄▄▂▁▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_majacc_d_val ████████▇▇▇▇▆▄▄▅▄▄▄▂▁▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_majacc_val ████████▇▇▇▇▆▄▄▅▄▄▄▂▁▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_minacc_avg ▁▁▁▁▃▃▃▄▅▅▄▄▅▇▇▇▇▇▇▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_minacc_d_avg ▁▁▁▁▃▃▃▄▅▅▄▄▅▇▇▇▇▇▇▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_minacc_d_val ▁▁▁▁▃▃▃▄▅▅▄▄▅▇▇▇▇▇▇▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_minacc_val ▁▁▁▁▃▃▃▄▅▅▄▄▅▇▇▇▇▇▇▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/Loss_val ███▇▆▆▆▆▅▅▅▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/l1_avg █▄▃▃▃▃▃▃▄▄▄▅▅▂▁▁▁▁▁▆▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/l1_val ▇▅▅▅▄▄▄▄▄▄▄▄▃▁▂▁▂▂▂█▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_acc_avg ▇▇▇▇▇▇▇▇█████▇▆▆▆▆▆▆▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_acc_val ▇▇▇▇▇▇▇▇█████▇▆▇▆▇▇▆▂▁▁▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_majacc_avg ▇███████▇███▇▆▆▆▆▆▆▅▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_majacc_val ██▇▇▇▇▇▇▇█▇█▇▆▆▆▅▆▆▅▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_minacc_avg ▁▁▁▁▂▃▃▃▅▅▅▆▇▇▇▇███▆█▇▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_minacc_val ▁▁▃▂▃▃▅▄▆▆▆▆▇█▇████▇█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_nll_avg ▇▄▄▄▃▃▃▂▂▂▁▁▁▃▃▃▃▃▃▅████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_nll_val ▅▅▅▄▃▃▃▃▂▁▁▁▂▄▄▃▄▃▃▆████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_penalty_avg █▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_penalty_val █▆▄▄▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/weight_norm_avg ▁▄▄▄▄▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/weight_norm_val ▁▂▂▂▂▃▃▃▃▃▄▄▅▅▅▅▅▅▅▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▅█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/diagnostics/epoch_time_val 0.04473
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/diagnostics/train_time_val 0.04431
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/diagnostics/validation_time_val 0.00041
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/Loss_avg 1.05448
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/Loss_d_avg 1.05448
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/Loss_d_val 1.05448
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/Loss_val 1.05448
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_acc_avg 0.524
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_acc_d_avg 0.524
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_acc_d_val 0.524
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_acc_val 0.524
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_corr_d_avg 0.1651
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_corr_d_val 0.1651
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_majacc_avg 0.44
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_majacc_d_avg 0.44
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_majacc_d_val 0.44
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_majacc_val 0.44
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_minacc_avg 0.53333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_minacc_d_avg 0.53333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_minacc_d_val 0.53333
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/test/test_minacc_val 0.53333
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/Loss_val 6e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/l1_avg 5.82011
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/l1_val 5.82011
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_acc_avg 0.4165
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_acc_val 0.412
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_majacc_avg 0.3917
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_majacc_val 0.36842
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_minacc_avg 0.55547
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_minacc_val 0.63415
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_nll_avg 0.63833
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_nll_val 0.64149
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/weight_norm_avg 27.52405
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/weight_norm_val 27.52407
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/143/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/latrznh1
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_201742-latrznh1/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_202027-a1b2gyvr
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/a1b2gyvr
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1212
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6050, 3, 32, 32) (5950, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:34,  1.37s/it] 19%|#9        | 5/26 [00:01<00:04,  4.41it/s] 35%|###4      | 9/26 [00:01<00:01,  8.52it/s] 50%|#####     | 13/26 [00:01<00:01, 12.74it/s] 65%|######5   | 17/26 [00:01<00:00, 16.75it/s] 81%|########  | 21/26 [00:01<00:00, 20.57it/s] 96%|#########6| 25/26 [00:02<00:00, 23.73it/s]100%|##########| 26/26 [00:03<00:00,  7.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.428 (0.548)	train_nll   0.43 (  0.55)	train_penalty   0.06 (  0.26)	weight_norm  20.93 ( 18.15)	train_acc   0.83 (  0.79)	train_minacc   0.00 (  0.08)	train_majacc   1.00 (  0.92)	train_corr   0.00 (  0.00)	l1 7.4683 (7.6010)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.21it/s] 27%|##6       | 7/26 [00:00<00:00, 33.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.82it/s] 46%|####6     | 12/26 [00:00<00:00, 39.35it/s] 65%|######5   | 17/26 [00:00<00:00, 39.70it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.70it/s] 85%|########4 | 22/26 [00:00<00:00, 41.02it/s]100%|##########| 26/26 [00:00<00:00, 36.41it/s]
Test: [   0/  26]	Loss 0.437 (0.437)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.437 (0.437)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.412 (0.433)	test_acc   0.86 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  0.99)	Loss_d 0.412 (0.433)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
Test: [  20/  26]	Loss 0.402 (0.430)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.402 (0.430)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.425 (0.425)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.425 (0.425)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]
Test: [  0/  1]	Loss 1.757 (1.757)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.757 (1.757)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.757 (1.757)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.757 (1.757)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/145/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0917 (0.0917)	validation_time 0.0067 (0.0067)	train_time 0.0805 (0.0805)
record: (train_acc, test_acc) (0.8460000256299972, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8460000256299972, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.80it/s] 19%|#9        | 5/26 [00:00<00:01, 17.29it/s] 35%|###4      | 9/26 [00:00<00:00, 23.90it/s] 50%|#####     | 13/26 [00:00<00:00, 27.57it/s] 65%|######5   | 17/26 [00:00<00:00, 29.99it/s] 81%|########  | 21/26 [00:00<00:00, 30.54it/s] 96%|#########6| 25/26 [00:00<00:00, 31.35it/s]100%|##########| 26/26 [00:01<00:00, 25.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.415 (0.419)	train_nll   0.41 (  0.42)	train_penalty   0.06 (  0.06)	weight_norm  22.05 ( 21.71)	train_acc   0.84 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.9113 (7.7115)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.34it/s] 15%|#5        | 4/26 [00:00<00:01, 13.86it/s] 35%|###4      | 9/26 [00:00<00:00, 25.62it/s]                                               35%|###4      | 9/26 [00:00<00:00, 25.62it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.04it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.63it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.63it/s] 92%|#########2| 24/26 [00:00<00:00, 37.08it/s]100%|##########| 26/26 [00:00<00:00, 30.76it/s]
Test: [   0/  26]	Loss 0.414 (0.414)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.414 (0.414)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.402 (0.417)	test_acc   0.85 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.402 (0.417)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  20/  26]	Loss 0.403 (0.413)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.403 (0.413)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.410 (0.408)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.410 (0.408)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.03it/s]
Test: [  0/  1]	Loss 1.813 (1.813)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.813 (1.813)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.813 (1.813)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.813 (1.813)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0412 (0.0665)	validation_time 0.0003 (0.0035)	train_time 0.0408 (0.0607)
record: (train_acc, test_acc) (0.8460000256299972, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8480000282526017, 0.10600000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.87it/s] 23%|##3       | 6/26 [00:00<00:00, 27.67it/s] 38%|###8      | 10/26 [00:00<00:00, 31.43it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.56it/s] 69%|######9   | 18/26 [00:00<00:00, 33.40it/s] 85%|########4 | 22/26 [00:00<00:00, 34.06it/s]100%|##########| 26/26 [00:00<00:00, 34.68it/s]100%|##########| 26/26 [00:00<00:00, 30.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.408 (0.408)	train_nll   0.41 (  0.41)	train_penalty   0.06 (  0.06)	weight_norm  22.17 ( 22.13)	train_acc   0.84 (  0.85)	train_minacc   0.02 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 8.0547 (7.9270)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.18it/s] 27%|##6       | 7/26 [00:00<00:00, 27.44it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.44it/s] 50%|#####     | 13/26 [00:00<00:00, 35.83it/s] 69%|######9   | 18/26 [00:00<00:00, 40.17it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.17it/s] 88%|########8 | 23/26 [00:00<00:00, 41.60it/s]100%|##########| 26/26 [00:00<00:00, 34.15it/s]
Test: [   0/  26]	Loss 0.379 (0.379)	test_acc   0.86 (  0.86)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.379 (0.379)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.381 (0.394)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.381 (0.394)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.390 (0.393)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.390 (0.393)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.396 (0.388)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.396 (0.388)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.50it/s]
Test: [  0/  1]	Loss 1.752 (1.752)	test_acc   0.11 (  0.11)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.752 (1.752)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.752 (1.752)	test_acc   0.11 (  0.11)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.752 (1.752)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/145/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0376 (0.0568)	validation_time 0.0004 (0.0025)	train_time 0.0371 (0.0528)
record: (train_acc, test_acc) (0.849800023496151, 0.11400000751018524)
last accs (train_acc, test_acc) (0.849800023496151, 0.11400000751018524)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.39it/s] 23%|##3       | 6/26 [00:00<00:00, 21.85it/s] 38%|###8      | 10/26 [00:00<00:00, 26.48it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.65it/s] 69%|######9   | 18/26 [00:00<00:00, 30.07it/s] 85%|########4 | 22/26 [00:00<00:00, 31.39it/s]100%|##########| 26/26 [00:00<00:00, 32.45it/s]100%|##########| 26/26 [00:00<00:00, 27.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.384 (0.389)	train_nll   0.38 (  0.39)	train_penalty   0.05 (  0.05)	weight_norm  22.22 ( 22.20)	train_acc   0.84 (  0.85)	train_minacc   0.02 (  0.05)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 8.2388 (8.0961)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.57it/s] 23%|##3       | 6/26 [00:00<00:00, 27.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.69it/s] 42%|####2     | 11/26 [00:00<00:00, 34.44it/s] 62%|######1   | 16/26 [00:00<00:00, 39.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.55it/s] 81%|########  | 21/26 [00:00<00:00, 41.21it/s]100%|##########| 26/26 [00:00<00:00, 43.66it/s]100%|##########| 26/26 [00:00<00:00, 35.76it/s]
Test: [   0/  26]	Loss 0.354 (0.354)	test_acc   0.86 (  0.86)	test_minacc   0.14 (  0.14)	test_majacc   0.99 (  0.99)	Loss_d 0.354 (0.354)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.365 (0.376)	test_acc   0.86 (  0.85)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.98)	Loss_d 0.365 (0.376)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.94)
Test: [  20/  26]	Loss 0.371 (0.376)	test_acc   0.85 (  0.85)	test_minacc   0.07 (  0.08)	test_majacc   0.98 (  0.98)	Loss_d 0.371 (0.376)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.07 (  0.08)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.95 (  0.94)
Test: [  26/  26]	Loss 0.364 (0.369)	test_acc   0.84 (  0.85)	test_minacc   0.07 (  0.09)	test_majacc   1.00 (  0.99)	Loss_d 0.364 (0.369)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.07 (  0.09)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.94 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.52it/s]
Test: [  0/  1]	Loss 1.826 (1.826)	test_acc   0.16 (  0.16)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 1.826 (1.826)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.88)
Test: [  1/  1]	Loss 1.826 (1.826)	test_acc   0.16 (  0.16)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 1.826 (1.826)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.88)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/145/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0460 (0.0541)	validation_time 0.0004 (0.0020)	train_time 0.0455 (0.0510)
record: (train_acc, test_acc) (0.850000027179718, 0.15600000321865082)
last accs (train_acc, test_acc) (0.850000027179718, 0.15600000321865082)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.22it/s] 19%|#9        | 5/26 [00:00<00:00, 24.51it/s] 35%|###4      | 9/26 [00:00<00:00, 29.74it/s] 50%|#####     | 13/26 [00:00<00:00, 33.15it/s] 65%|######5   | 17/26 [00:00<00:00, 34.10it/s] 81%|########  | 21/26 [00:00<00:00, 34.78it/s] 96%|#########6| 25/26 [00:00<00:00, 35.03it/s]100%|##########| 26/26 [00:00<00:00, 30.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.344 (0.363)	train_nll   0.34 (  0.36)	train_penalty   0.03 (  0.04)	weight_norm  22.30 ( 22.26)	train_acc   0.85 (  0.85)	train_minacc   0.17 (  0.12)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 8.2396 (8.2015)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.88it/s] 23%|##3       | 6/26 [00:00<00:00, 32.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.58it/s] 42%|####2     | 11/26 [00:00<00:00, 38.78it/s] 62%|######1   | 16/26 [00:00<00:00, 42.09it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.09it/s] 81%|########  | 21/26 [00:00<00:00, 39.15it/s]100%|##########| 26/26 [00:00<00:00, 35.96it/s]
Test: [   0/  26]	Loss 0.332 (0.332)	test_acc   0.86 (  0.86)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 0.332 (0.332)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.329 (0.344)	test_acc   0.87 (  0.85)	test_minacc   0.31 (  0.29)	test_majacc   0.96 (  0.95)	Loss_d 0.329 (0.344)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.31 (  0.29)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.343 (0.344)	test_acc   0.85 (  0.85)	test_minacc   0.24 (  0.29)	test_majacc   0.96 (  0.95)	Loss_d 0.343 (0.344)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.24 (  0.29)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.88 (  0.87)
Test: [  26/  26]	Loss 0.321 (0.337)	test_acc   0.87 (  0.86)	test_minacc   0.34 (  0.30)	test_majacc   0.98 (  0.95)	Loss_d 0.321 (0.337)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.34 (  0.30)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.88 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.56it/s]
Test: [  0/  1]	Loss 1.628 (1.628)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.92 (  0.92)	Loss_d 1.628 (1.628)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 1.628 (1.628)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.92 (  0.92)	Loss_d 1.628 (1.628)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.69 (  0.69)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/145/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0391 (0.0511)	validation_time 0.0006 (0.0017)	train_time 0.0385 (0.0485)
record: (train_acc, test_acc) (0.8561000267863274, 0.28600001335144043)
last accs (train_acc, test_acc) (0.8561000267863274, 0.28600001335144043)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.22it/s] 19%|#9        | 5/26 [00:00<00:00, 21.65it/s] 35%|###4      | 9/26 [00:00<00:00, 28.18it/s] 50%|#####     | 13/26 [00:00<00:00, 30.62it/s] 65%|######5   | 17/26 [00:00<00:00, 32.30it/s] 81%|########  | 21/26 [00:00<00:00, 33.54it/s] 96%|#########6| 25/26 [00:00<00:00, 34.58it/s]100%|##########| 26/26 [00:00<00:00, 28.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.324 (0.340)	train_nll   0.32 (  0.34)	train_penalty   0.03 (  0.03)	weight_norm  22.39 ( 22.35)	train_acc   0.86 (  0.86)	train_minacc   0.22 (  0.22)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 8.4008 (8.2085)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.24it/s] 23%|##3       | 6/26 [00:00<00:00, 31.17it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.17it/s] 42%|####2     | 11/26 [00:00<00:00, 38.29it/s] 62%|######1   | 16/26 [00:00<00:00, 41.39it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.39it/s] 81%|########  | 21/26 [00:00<00:00, 42.87it/s]100%|##########| 26/26 [00:00<00:00, 44.20it/s]100%|##########| 26/26 [00:00<00:00, 36.85it/s]
Test: [   0/  26]	Loss 0.307 (0.307)	test_acc   0.88 (  0.88)	test_minacc   0.41 (  0.41)	test_majacc   0.96 (  0.96)	Loss_d 0.307 (0.307)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.309 (0.312)	test_acc   0.85 (  0.86)	test_minacc   0.20 (  0.30)	test_majacc   0.96 (  0.97)	Loss_d 0.309 (0.312)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.20 (  0.30)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.90 (  0.88)
Test: [  20/  26]	Loss 0.307 (0.320)	test_acc   0.88 (  0.86)	test_minacc   0.36 (  0.30)	test_majacc   0.97 (  0.96)	Loss_d 0.307 (0.320)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.36 (  0.30)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.90 (  0.88)
Test: [  26/  26]	Loss 0.304 (0.312)	test_acc   0.88 (  0.86)	test_minacc   0.41 (  0.31)	test_majacc   0.98 (  0.96)	Loss_d 0.304 (0.312)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.41 (  0.31)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.90 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.32it/s]
Test: [  0/  1]	Loss 1.770 (1.770)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.92 (  0.92)	Loss_d 1.770 (1.770)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 1.770 (1.770)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.92 (  0.92)	Loss_d 1.770 (1.770)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.66 (  0.66)
Overall Timing[  5/  1]	epoch_time 0.0471 (0.0505)	validation_time 0.0004 (0.0015)	train_time 0.0466 (0.0482)
record: (train_acc, test_acc) (0.8561000267863274, 0.28600001335144043)
last accs (train_acc, test_acc) (0.8642000246047974, 0.2840000092983246)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.05it/s] 19%|#9        | 5/26 [00:00<00:01, 18.26it/s] 35%|###4      | 9/26 [00:00<00:00, 24.39it/s] 50%|#####     | 13/26 [00:00<00:00, 27.98it/s] 65%|######5   | 17/26 [00:00<00:00, 30.58it/s] 81%|########  | 21/26 [00:00<00:00, 31.85it/s] 96%|#########6| 25/26 [00:00<00:00, 32.95it/s]100%|##########| 26/26 [00:00<00:00, 26.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.313 (0.319)	train_nll   0.31 (  0.32)	train_penalty   0.03 (  0.02)	weight_norm  22.48 ( 22.43)	train_acc   0.88 (  0.86)	train_minacc   0.32 (  0.30)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 8.3636 (8.2173)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.27it/s] 31%|###       | 8/26 [00:00<00:00, 36.09it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.09it/s] 50%|#####     | 13/26 [00:00<00:00, 40.24it/s] 69%|######9   | 18/26 [00:00<00:00, 41.85it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.85it/s] 88%|########8 | 23/26 [00:00<00:00, 40.49it/s]100%|##########| 26/26 [00:00<00:00, 37.17it/s]
Test: [   0/  26]	Loss 0.292 (0.292)	test_acc   0.87 (  0.87)	test_minacc   0.21 (  0.21)	test_majacc   0.98 (  0.98)	Loss_d 0.292 (0.292)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.310 (0.319)	test_acc   0.86 (  0.86)	test_minacc   0.15 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.310 (0.319)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.15 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.91)
Test: [  20/  26]	Loss 0.301 (0.322)	test_acc   0.89 (  0.86)	test_minacc   0.29 (  0.21)	test_majacc   0.99 (  0.98)	Loss_d 0.301 (0.322)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.29 (  0.21)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.307 (0.312)	test_acc   0.88 (  0.87)	test_minacc   0.32 (  0.22)	test_majacc   0.99 (  0.98)	Loss_d 0.307 (0.312)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.32 (  0.22)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.43it/s]
Test: [  0/  1]	Loss 2.017 (2.017)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.95 (  0.95)	Loss_d 2.017 (2.017)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 2.017 (2.017)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.95 (  0.95)	Loss_d 2.017 (2.017)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.74 (  0.74)
Overall Timing[  6/  1]	epoch_time 0.0387 (0.0488)	validation_time 0.0005 (0.0014)	train_time 0.0382 (0.0468)
record: (train_acc, test_acc) (0.8561000267863274, 0.28600001335144043)
last accs (train_acc, test_acc) (0.8656000254750251, 0.24000000953674316)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.41it/s] 19%|#9        | 5/26 [00:00<00:01, 14.47it/s] 35%|###4      | 9/26 [00:00<00:00, 21.03it/s] 50%|#####     | 13/26 [00:00<00:00, 24.98it/s] 65%|######5   | 17/26 [00:00<00:00, 27.82it/s] 81%|########  | 21/26 [00:00<00:00, 29.75it/s] 96%|#########6| 25/26 [00:01<00:00, 30.96it/s]100%|##########| 26/26 [00:01<00:00, 23.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.283 (0.313)	train_nll   0.28 (  0.31)	train_penalty   0.02 (  0.02)	weight_norm  22.58 ( 22.53)	train_acc   0.88 (  0.87)	train_minacc   0.27 (  0.35)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 8.3728 (8.1701)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.18it/s] 19%|#9        | 5/26 [00:00<00:01, 17.39it/s] 38%|###8      | 10/26 [00:00<00:00, 26.69it/s]                                                38%|###8      | 10/26 [00:00<00:00, 26.69it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.07it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.80it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.80it/s] 96%|#########6| 25/26 [00:00<00:00, 39.89it/s]100%|##########| 26/26 [00:00<00:00, 29.71it/s]
Test: [   0/  26]	Loss 0.267 (0.267)	test_acc   0.88 (  0.88)	test_minacc   0.43 (  0.43)	test_majacc   0.96 (  0.96)	Loss_d 0.267 (0.267)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.295 (0.287)	test_acc   0.86 (  0.87)	test_minacc   0.33 (  0.37)	test_majacc   0.95 (  0.96)	Loss_d 0.295 (0.287)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.33 (  0.37)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  20/  26]	Loss 0.289 (0.296)	test_acc   0.87 (  0.87)	test_minacc   0.40 (  0.37)	test_majacc   0.96 (  0.96)	Loss_d 0.289 (0.296)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.40 (  0.37)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.267 (0.288)	test_acc   0.90 (  0.88)	test_minacc   0.44 (  0.38)	test_majacc   0.99 (  0.97)	Loss_d 0.267 (0.288)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.44 (  0.38)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.89 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.49it/s]
Test: [  0/  1]	Loss 1.843 (1.843)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.91 (  0.91)	Loss_d 1.843 (1.843)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 1.843 (1.843)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.91 (  0.91)	Loss_d 1.843 (1.843)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.66 (  0.66)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/145/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0417 (0.0479)	validation_time 0.0003 (0.0012)	train_time 0.0413 (0.0461)
record: (train_acc, test_acc) (0.8775000243186951, 0.3150000274181366)
last accs (train_acc, test_acc) (0.8775000243186951, 0.3150000274181366)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 19%|#9        | 5/26 [00:00<00:01, 20.40it/s] 35%|###4      | 9/26 [00:00<00:00, 26.30it/s] 50%|#####     | 13/26 [00:00<00:00, 29.64it/s] 65%|######5   | 17/26 [00:00<00:00, 31.12it/s] 81%|########  | 21/26 [00:00<00:00, 32.43it/s] 96%|#########6| 25/26 [00:00<00:00, 32.92it/s]100%|##########| 26/26 [00:00<00:00, 27.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.265 (0.297)	train_nll   0.27 (  0.30)	train_penalty   0.02 (  0.02)	weight_norm  22.69 ( 22.64)	train_acc   0.90 (  0.87)	train_minacc   0.41 (  0.41)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 8.2929 (8.2335)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.62it/s] 23%|##3       | 6/26 [00:00<00:00, 30.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.75it/s] 42%|####2     | 11/26 [00:00<00:00, 33.68it/s] 62%|######1   | 16/26 [00:00<00:00, 38.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.68it/s] 81%|########  | 21/26 [00:00<00:00, 40.77it/s]100%|##########| 26/26 [00:00<00:00, 43.09it/s]100%|##########| 26/26 [00:00<00:00, 35.15it/s]
Test: [   0/  26]	Loss 0.256 (0.256)	test_acc   0.89 (  0.89)	test_minacc   0.48 (  0.48)	test_majacc   0.96 (  0.96)	Loss_d 0.256 (0.256)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.280 (0.283)	test_acc   0.88 (  0.88)	test_minacc   0.29 (  0.37)	test_majacc   0.97 (  0.97)	Loss_d 0.280 (0.283)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.29 (  0.37)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.88)
Test: [  20/  26]	Loss 0.277 (0.293)	test_acc   0.88 (  0.87)	test_minacc   0.40 (  0.36)	test_majacc   0.96 (  0.96)	Loss_d 0.277 (0.293)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.40 (  0.36)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.247 (0.284)	test_acc   0.91 (  0.88)	test_minacc   0.49 (  0.37)	test_majacc   0.99 (  0.97)	Loss_d 0.247 (0.284)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.49 (  0.37)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.88 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.10it/s]
Test: [  0/  1]	Loss 1.988 (1.988)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 1.988 (1.988)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 1.988 (1.988)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 1.988 (1.988)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.61 (  0.61)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/145/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0408 (0.0471)	validation_time 0.0004 (0.0011)	train_time 0.0403 (0.0454)
record: (train_acc, test_acc) (0.876500022470951, 0.3370000123977661)
last accs (train_acc, test_acc) (0.876500022470951, 0.3370000123977661)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.41it/s] 19%|#9        | 5/26 [00:00<00:01, 17.98it/s] 35%|###4      | 9/26 [00:00<00:00, 23.98it/s] 50%|#####     | 13/26 [00:00<00:00, 27.42it/s] 65%|######5   | 17/26 [00:00<00:00, 29.93it/s] 81%|########  | 21/26 [00:00<00:00, 31.49it/s] 96%|#########6| 25/26 [00:00<00:00, 32.69it/s]100%|##########| 26/26 [00:00<00:00, 26.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.246 (0.283)	train_nll   0.25 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.84 ( 22.77)	train_acc   0.92 (  0.88)	train_minacc   0.66 (  0.46)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 8.1796 (8.0446)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  8.38it/s] 27%|##6       | 7/26 [00:00<00:00, 23.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.34it/s] 46%|####6     | 12/26 [00:00<00:00, 31.82it/s] 65%|######5   | 17/26 [00:00<00:00, 36.47it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.47it/s] 85%|########4 | 22/26 [00:00<00:00, 36.43it/s]100%|##########| 26/26 [00:00<00:00, 31.88it/s]
Test: [   0/  26]	Loss 0.240 (0.240)	test_acc   0.91 (  0.91)	test_minacc   0.68 (  0.68)	test_majacc   0.95 (  0.95)	Loss_d 0.240 (0.240)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.229 (0.250)	test_acc   0.89 (  0.90)	test_minacc   0.58 (  0.60)	test_majacc   0.95 (  0.95)	Loss_d 0.229 (0.250)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.58 (  0.60)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.84 (  0.82)
Test: [  20/  26]	Loss 0.210 (0.255)	test_acc   0.91 (  0.89)	test_minacc   0.64 (  0.60)	test_majacc   0.96 (  0.95)	Loss_d 0.210 (0.255)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.64 (  0.60)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.83 (  0.82)
Test: [  26/  26]	Loss 0.216 (0.248)	test_acc   0.92 (  0.90)	test_minacc   0.68 (  0.62)	test_majacc   0.97 (  0.95)	Loss_d 0.216 (0.248)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.68 (  0.62)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.83 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.07it/s]
Test: [  0/  1]	Loss 1.829 (1.829)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 1.829 (1.829)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.46 (  0.46)
Test: [  1/  1]	Loss 1.829 (1.829)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 1.829 (1.829)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.46 (  0.46)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/145/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0441 (0.0468)	validation_time 0.0005 (0.0011)	train_time 0.0436 (0.0453)
record: (train_acc, test_acc) (0.8966000227332115, 0.4180000126361847)
last accs (train_acc, test_acc) (0.8966000227332115, 0.4180000126361847)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.08it/s] 19%|#9        | 5/26 [00:00<00:00, 21.28it/s] 35%|###4      | 9/26 [00:00<00:00, 26.57it/s] 50%|#####     | 13/26 [00:00<00:00, 29.23it/s] 65%|######5   | 17/26 [00:00<00:00, 30.53it/s] 81%|########  | 21/26 [00:00<00:00, 31.45it/s] 96%|#########6| 25/26 [00:00<00:00, 32.47it/s]100%|##########| 26/26 [00:00<00:00, 27.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.212 (0.277)	train_nll   0.21 (  0.28)	train_penalty   0.00 (  0.01)	weight_norm  23.02 ( 22.93)	train_acc   0.92 (  0.88)	train_minacc   0.63 (  0.47)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 8.1777 (8.0507)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.85it/s] 23%|##3       | 6/26 [00:00<00:00, 22.92it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.92it/s] 42%|####2     | 11/26 [00:00<00:00, 29.81it/s] 65%|######5   | 17/26 [00:00<00:00, 35.26it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.26it/s] 85%|########4 | 22/26 [00:00<00:00, 38.88it/s]100%|##########| 26/26 [00:00<00:00, 30.98it/s]
Test: [   0/  26]	Loss 0.227 (0.227)	test_acc   0.91 (  0.91)	test_minacc   0.64 (  0.64)	test_majacc   0.96 (  0.96)	Loss_d 0.227 (0.227)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.205 (0.245)	test_acc   0.91 (  0.90)	test_minacc   0.64 (  0.61)	test_majacc   0.96 (  0.95)	Loss_d 0.205 (0.245)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.64 (  0.61)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.85 (  0.82)
Test: [  20/  26]	Loss 0.194 (0.252)	test_acc   0.90 (  0.89)	test_minacc   0.69 (  0.60)	test_majacc   0.93 (  0.94)	Loss_d 0.194 (0.252)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.69 (  0.60)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.81 (  0.82)
Test: [  26/  26]	Loss 0.183 (0.242)	test_acc   0.95 (  0.90)	test_minacc   0.78 (  0.62)	test_majacc   0.98 (  0.95)	Loss_d 0.183 (0.242)	test_acc_d   0.95 (  0.90)	test_minacc_d   0.78 (  0.62)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.82 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.13it/s]
Test: [  0/  1]	Loss 1.904 (1.904)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 1.904 (1.904)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 1.904 (1.904)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 1.904 (1.904)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.45 (  0.45)
Overall Timing[ 10/  1]	epoch_time 0.0419 (0.0464)	validation_time 0.0003 (0.0010)	train_time 0.0415 (0.0449)
record: (train_acc, test_acc) (0.8966000227332115, 0.4180000126361847)
last accs (train_acc, test_acc) (0.8967000241875649, 0.4180000126361847)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.33it/s] 19%|#9        | 5/26 [00:00<00:01, 20.78it/s] 35%|###4      | 9/26 [00:00<00:00, 26.79it/s] 50%|#####     | 13/26 [00:00<00:00, 29.79it/s] 65%|######5   | 17/26 [00:00<00:00, 31.74it/s] 81%|########  | 21/26 [00:00<00:00, 32.77it/s] 96%|#########6| 25/26 [00:00<00:00, 33.31it/s]100%|##########| 26/26 [00:00<00:00, 27.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.223 (0.266)	train_nll   0.22 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.22 ( 23.12)	train_acc   0.91 (  0.88)	train_minacc   0.49 (  0.50)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 8.1377 (8.0535)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.47it/s] 23%|##3       | 6/26 [00:00<00:00, 25.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.24it/s] 42%|####2     | 11/26 [00:00<00:00, 32.85it/s] 62%|######1   | 16/26 [00:00<00:00, 37.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.95it/s] 81%|########  | 21/26 [00:00<00:00, 40.32it/s]100%|##########| 26/26 [00:00<00:00, 42.80it/s]100%|##########| 26/26 [00:00<00:00, 33.65it/s]
Test: [   0/  26]	Loss 0.225 (0.225)	test_acc   0.91 (  0.91)	test_minacc   0.68 (  0.68)	test_majacc   0.95 (  0.95)	Loss_d 0.225 (0.225)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.195 (0.228)	test_acc   0.91 (  0.90)	test_minacc   0.60 (  0.63)	test_majacc   0.96 (  0.95)	Loss_d 0.195 (0.228)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.60 (  0.63)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.85 (  0.83)
Test: [  20/  26]	Loss 0.211 (0.234)	test_acc   0.91 (  0.90)	test_minacc   0.62 (  0.62)	test_majacc   0.96 (  0.95)	Loss_d 0.211 (0.234)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  26/  26]	Loss 0.178 (0.227)	test_acc   0.95 (  0.91)	test_minacc   0.78 (  0.64)	test_majacc   0.99 (  0.95)	Loss_d 0.178 (0.227)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.78 (  0.64)	test_majacc_d   0.99 (  0.95)	test_corr_d   0.83 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.64it/s]
Test: [  0/  1]	Loss 1.978 (1.978)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.89 (  0.89)	Loss_d 1.978 (1.978)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 1.978 (1.978)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.89 (  0.89)	Loss_d 1.978 (1.978)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.47 (  0.47)
Overall Timing[ 11/  1]	epoch_time 0.0410 (0.0459)	validation_time 0.0004 (0.0010)	train_time 0.0405 (0.0446)
record: (train_acc, test_acc) (0.8966000227332115, 0.4180000126361847)
last accs (train_acc, test_acc) (0.9064000176787377, 0.4090000092983246)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.32it/s] 15%|#5        | 4/26 [00:00<00:01, 11.65it/s] 31%|###       | 8/26 [00:00<00:00, 18.87it/s] 46%|####6     | 12/26 [00:00<00:00, 23.16it/s] 62%|######1   | 16/26 [00:00<00:00, 26.06it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.97it/s] 92%|#########2| 24/26 [00:01<00:00, 30.16it/s]100%|##########| 26/26 [00:01<00:00, 22.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.220 (0.245)	train_nll   0.22 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.43 ( 23.32)	train_acc   0.92 (  0.90)	train_minacc   0.56 (  0.59)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 7.7524 (8.1803)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.39it/s] 12%|#1        | 3/26 [00:00<00:01, 13.32it/s] 31%|###       | 8/26 [00:00<00:00, 27.92it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.92it/s] 50%|#####     | 13/26 [00:00<00:00, 34.57it/s] 69%|######9   | 18/26 [00:00<00:00, 35.35it/s]                                                69%|######9   | 18/26 [00:00<00:00, 35.35it/s] 88%|########8 | 23/26 [00:00<00:00, 38.50it/s]100%|##########| 26/26 [00:00<00:00, 31.98it/s]
Test: [   0/  26]	Loss 0.225 (0.225)	test_acc   0.91 (  0.91)	test_minacc   0.57 (  0.57)	test_majacc   0.96 (  0.96)	Loss_d 0.225 (0.225)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.213 (0.234)	test_acc   0.90 (  0.91)	test_minacc   0.45 (  0.56)	test_majacc   0.98 (  0.97)	Loss_d 0.213 (0.234)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.45 (  0.56)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.88 (  0.86)
Test: [  20/  26]	Loss 0.193 (0.232)	test_acc   0.92 (  0.91)	test_minacc   0.62 (  0.56)	test_majacc   0.97 (  0.97)	Loss_d 0.193 (0.232)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.85)
Test: [  26/  26]	Loss 0.188 (0.225)	test_acc   0.94 (  0.91)	test_minacc   0.68 (  0.57)	test_majacc   1.00 (  0.97)	Loss_d 0.188 (0.225)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.68 (  0.57)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.86 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.60it/s]
Test: [  0/  1]	Loss 2.062 (2.062)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.92 (  0.92)	Loss_d 2.062 (2.062)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 2.062 (2.062)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.92 (  0.92)	Loss_d 2.062 (2.062)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.59 (  0.59)
Overall Timing[ 12/  1]	epoch_time 0.0416 (0.0456)	validation_time 0.0004 (0.0009)	train_time 0.0411 (0.0443)
record: (train_acc, test_acc) (0.8966000227332115, 0.4180000126361847)
last accs (train_acc, test_acc) (0.9089000244140625, 0.35500001907348633)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.29it/s] 19%|#9        | 5/26 [00:00<00:01, 19.56it/s] 35%|###4      | 9/26 [00:00<00:00, 25.82it/s] 50%|#####     | 13/26 [00:00<00:00, 28.34it/s] 65%|######5   | 17/26 [00:00<00:00, 30.18it/s] 81%|########  | 21/26 [00:00<00:00, 31.79it/s] 96%|#########6| 25/26 [00:00<00:00, 32.63it/s]100%|##########| 26/26 [00:00<00:00, 27.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.237 (0.245)	train_nll   0.24 (  0.24)	train_penalty   0.01 (  0.01)	weight_norm  23.67 ( 23.55)	train_acc   0.91 (  0.90)	train_minacc   0.46 (  0.58)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 7.2705 (8.1528)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.99it/s] 23%|##3       | 6/26 [00:00<00:00, 20.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.39it/s] 42%|####2     | 11/26 [00:00<00:00, 29.42it/s] 62%|######1   | 16/26 [00:00<00:00, 35.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.40it/s] 81%|########  | 21/26 [00:00<00:00, 35.70it/s]100%|##########| 26/26 [00:00<00:00, 39.36it/s]100%|##########| 26/26 [00:00<00:00, 30.06it/s]
Test: [   0/  26]	Loss 0.241 (0.241)	test_acc   0.90 (  0.90)	test_minacc   0.50 (  0.50)	test_majacc   0.97 (  0.97)	Loss_d 0.241 (0.241)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.240 (0.249)	test_acc   0.90 (  0.90)	test_minacc   0.38 (  0.49)	test_majacc   0.98 (  0.97)	Loss_d 0.240 (0.249)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.38 (  0.49)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.87)
Test: [  20/  26]	Loss 0.207 (0.248)	test_acc   0.91 (  0.90)	test_minacc   0.50 (  0.49)	test_majacc   0.98 (  0.97)	Loss_d 0.207 (0.248)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.89 (  0.87)
Test: [  26/  26]	Loss 0.215 (0.241)	test_acc   0.93 (  0.90)	test_minacc   0.61 (  0.51)	test_majacc   0.99 (  0.97)	Loss_d 0.215 (0.241)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.61 (  0.51)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.87 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 50.13it/s]
Test: [  0/  1]	Loss 1.986 (1.986)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 1.986 (1.986)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 1.986 (1.986)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 1.986 (1.986)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.64 (  0.64)
Overall Timing[ 13/  1]	epoch_time 0.0434 (0.0454)	validation_time 0.0004 (0.0009)	train_time 0.0430 (0.0442)
record: (train_acc, test_acc) (0.8966000227332115, 0.4180000126361847)
last accs (train_acc, test_acc) (0.9006000205874443, 0.3330000042915344)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.56it/s] 19%|#9        | 5/26 [00:00<00:01, 17.06it/s] 35%|###4      | 9/26 [00:00<00:00, 23.29it/s] 50%|#####     | 13/26 [00:00<00:00, 26.98it/s] 65%|######5   | 17/26 [00:00<00:00, 29.40it/s] 81%|########  | 21/26 [00:00<00:00, 31.63it/s] 96%|#########6| 25/26 [00:00<00:00, 33.20it/s]100%|##########| 26/26 [00:00<00:00, 26.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.212 (0.222)	train_nll   0.21 (  0.22)	train_penalty   0.01 (  0.01)	weight_norm  23.93 ( 23.81)	train_acc   0.91 (  0.91)	train_minacc   0.49 (  0.65)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 8.0728 (8.2576)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.28it/s]  8%|7         | 2/26 [00:00<00:03,  7.47it/s] 27%|##6       | 7/26 [00:00<00:00, 23.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.36it/s] 50%|#####     | 13/26 [00:00<00:00, 35.30it/s] 69%|######9   | 18/26 [00:00<00:00, 39.38it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.38it/s] 88%|########8 | 23/26 [00:00<00:00, 42.48it/s]100%|##########| 26/26 [00:00<00:00, 33.25it/s]
Test: [   0/  26]	Loss 0.236 (0.236)	test_acc   0.90 (  0.90)	test_minacc   0.45 (  0.45)	test_majacc   0.98 (  0.98)	Loss_d 0.236 (0.236)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.225 (0.250)	test_acc   0.90 (  0.90)	test_minacc   0.40 (  0.50)	test_majacc   0.99 (  0.97)	Loss_d 0.225 (0.250)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.89 (  0.87)
Test: [  20/  26]	Loss 0.179 (0.242)	test_acc   0.92 (  0.90)	test_minacc   0.55 (  0.52)	test_majacc   0.98 (  0.97)	Loss_d 0.179 (0.242)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.55 (  0.52)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  26/  26]	Loss 0.174 (0.230)	test_acc   0.94 (  0.91)	test_minacc   0.73 (  0.55)	test_majacc   0.99 (  0.97)	Loss_d 0.174 (0.230)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.73 (  0.55)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.84 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.32it/s]
Test: [  0/  1]	Loss 2.428 (2.428)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 2.428 (2.428)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 2.428 (2.428)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 2.428 (2.428)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.61 (  0.61)
Overall Timing[ 14/  1]	epoch_time 0.0400 (0.0451)	validation_time 0.0004 (0.0009)	train_time 0.0395 (0.0439)
record: (train_acc, test_acc) (0.8966000227332115, 0.4180000126361847)
last accs (train_acc, test_acc) (0.9100000208616257, 0.33500000834465027)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.81it/s] 19%|#9        | 5/26 [00:00<00:00, 23.36it/s] 35%|###4      | 9/26 [00:00<00:00, 28.02it/s] 50%|#####     | 13/26 [00:00<00:00, 29.76it/s] 65%|######5   | 17/26 [00:00<00:00, 30.95it/s] 81%|########  | 21/26 [00:00<00:00, 31.98it/s] 96%|#########6| 25/26 [00:00<00:00, 32.79it/s]100%|##########| 26/26 [00:00<00:00, 28.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.001 (0.094)	train_nll   0.42 (  0.30)	train_penalty   0.00 (  0.01)	weight_norm  24.18 ( 24.08)	train_acc   0.76 (  0.86)	train_minacc   0.78 (  0.71)	train_majacc   0.76 (  0.89)	train_corr   0.00 (  0.00)	l1 6.3644 (7.4919)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.81it/s] 15%|#5        | 4/26 [00:00<00:01, 20.74it/s] 35%|###4      | 9/26 [00:00<00:00, 32.58it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 38.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.01it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.01it/s] 92%|#########2| 24/26 [00:00<00:00, 39.96it/s]100%|##########| 26/26 [00:00<00:00, 34.60it/s]
Test: [   0/  26]	Loss 0.418 (0.418)	test_acc   0.77 (  0.77)	test_minacc   0.75 (  0.75)	test_majacc   0.78 (  0.78)	Loss_d 0.418 (0.418)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.435 (0.414)	test_acc   0.76 (  0.78)	test_minacc   0.75 (  0.81)	test_majacc   0.76 (  0.78)	Loss_d 0.435 (0.414)	test_acc_d   0.76 (  0.78)	test_minacc_d   0.75 (  0.81)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.59 (  0.56)
Test: [  20/  26]	Loss 0.433 (0.406)	test_acc   0.77 (  0.79)	test_minacc   0.76 (  0.83)	test_majacc   0.77 (  0.78)	Loss_d 0.433 (0.406)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.76 (  0.83)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.56 (  0.56)
Test: [  26/  26]	Loss 0.417 (0.410)	test_acc   0.77 (  0.79)	test_minacc   0.78 (  0.82)	test_majacc   0.77 (  0.78)	Loss_d 0.417 (0.410)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.54 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.39it/s]
Test: [  0/  1]	Loss 1.087 (1.087)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.74 (  0.74)	Loss_d 1.087 (1.087)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.087 (1.087)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.74 (  0.74)	Loss_d 1.087 (1.087)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.12 (  0.12)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/145/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0394 (0.0447)	validation_time 0.0003 (0.0008)	train_time 0.0391 (0.0436)
record: (train_acc, test_acc) (0.7850000358819962, 0.5740000009536743)
last accs (train_acc, test_acc) (0.7850000358819962, 0.5740000009536743)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 19%|#9        | 5/26 [00:00<00:00, 22.39it/s] 35%|###4      | 9/26 [00:00<00:00, 27.64it/s] 50%|#####     | 13/26 [00:00<00:00, 29.51it/s] 65%|######5   | 17/26 [00:00<00:00, 30.85it/s] 81%|########  | 21/26 [00:00<00:00, 31.91it/s] 96%|#########6| 25/26 [00:00<00:00, 32.68it/s]100%|##########| 26/26 [00:00<00:00, 27.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.002)	train_nll   0.50 (  0.47)	train_penalty   0.00 (  0.00)	weight_norm  24.24 ( 24.22)	train_acc   0.70 (  0.74)	train_minacc   0.78 (  0.80)	train_majacc   0.68 (  0.73)	train_corr   0.00 (  0.00)	l1 5.9442 (5.9620)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.27it/s] 23%|##3       | 6/26 [00:00<00:00, 29.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.99it/s] 42%|####2     | 11/26 [00:00<00:00, 36.87it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.00it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.01it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.01it/s] 96%|#########6| 25/26 [00:00<00:00, 39.46it/s]100%|##########| 26/26 [00:00<00:00, 34.81it/s]
Test: [   0/  26]	Loss 0.539 (0.539)	test_acc   0.69 (  0.69)	test_minacc   0.77 (  0.77)	test_majacc   0.68 (  0.68)	Loss_d 0.539 (0.539)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.538 (0.505)	test_acc   0.69 (  0.71)	test_minacc   0.75 (  0.83)	test_majacc   0.69 (  0.69)	Loss_d 0.538 (0.505)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.75 (  0.83)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.41 (  0.39)
Test: [  20/  26]	Loss 0.541 (0.500)	test_acc   0.69 (  0.71)	test_minacc   0.76 (  0.85)	test_majacc   0.68 (  0.69)	Loss_d 0.541 (0.500)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.76 (  0.85)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.40 (  0.39)
Test: [  26/  26]	Loss 0.510 (0.502)	test_acc   0.69 (  0.71)	test_minacc   0.78 (  0.84)	test_majacc   0.67 (  0.69)	Loss_d 0.510 (0.502)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.78 (  0.84)	test_majacc_d   0.67 (  0.69)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.41it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.66 (  0.66)	Loss_d 0.858 (0.858)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.66 (  0.66)	Loss_d 0.858 (0.858)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.10 ( -0.10)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/145/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0406 (0.0445)	validation_time 0.0005 (0.0008)	train_time 0.0401 (0.0434)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.51it/s] 19%|#9        | 5/26 [00:00<00:01, 11.56it/s] 35%|###4      | 9/26 [00:00<00:00, 17.75it/s] 50%|#####     | 13/26 [00:00<00:00, 22.11it/s] 65%|######5   | 17/26 [00:00<00:00, 25.63it/s] 81%|########  | 21/26 [00:01<00:00, 27.98it/s] 96%|#########6| 25/26 [00:01<00:00, 29.92it/s]100%|##########| 26/26 [00:01<00:00, 21.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.004 (0.002)	train_nll   0.43 (  0.47)	train_penalty   0.00 (  0.00)	weight_norm  24.24 ( 24.24)	train_acc   0.78 (  0.73)	train_minacc   0.73 (  0.80)	train_majacc   0.79 (  0.72)	train_corr   0.00 (  0.00)	l1 5.6188 (5.8584)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.62it/s] 23%|##3       | 6/26 [00:00<00:00, 24.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.71it/s] 42%|####2     | 11/26 [00:00<00:00, 30.97it/s] 62%|######1   | 16/26 [00:00<00:00, 36.56it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.56it/s] 81%|########  | 21/26 [00:00<00:00, 37.74it/s]100%|##########| 26/26 [00:00<00:00, 32.58it/s]
Test: [   0/  26]	Loss 0.445 (0.445)	test_acc   0.75 (  0.75)	test_minacc   0.68 (  0.68)	test_majacc   0.76 (  0.76)	Loss_d 0.445 (0.445)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.452 (0.450)	test_acc   0.76 (  0.75)	test_minacc   0.73 (  0.77)	test_majacc   0.76 (  0.74)	Loss_d 0.452 (0.450)	test_acc_d   0.76 (  0.75)	test_minacc_d   0.73 (  0.77)	test_majacc_d   0.76 (  0.74)	test_corr_d   0.58 (  0.54)
Test: [  20/  26]	Loss 0.467 (0.446)	test_acc   0.73 (  0.75)	test_minacc   0.71 (  0.79)	test_majacc   0.73 (  0.74)	Loss_d 0.467 (0.446)	test_acc_d   0.73 (  0.75)	test_minacc_d   0.71 (  0.79)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.54 (  0.54)
Test: [  26/  26]	Loss 0.443 (0.448)	test_acc   0.76 (  0.75)	test_minacc   0.73 (  0.79)	test_majacc   0.77 (  0.74)	Loss_d 0.443 (0.448)	test_acc_d   0.76 (  0.75)	test_minacc_d   0.73 (  0.79)	test_majacc_d   0.77 (  0.74)	test_corr_d   0.55 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.55it/s]
Test: [  0/  1]	Loss 0.967 (0.967)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.69 (  0.69)	Loss_d 0.967 (0.967)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.967 (0.967)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.69 (  0.69)	Loss_d 0.967 (0.967)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.12 (  0.12)
Overall Timing[ 17/  1]	epoch_time 0.0409 (0.0443)	validation_time 0.0004 (0.0008)	train_time 0.0405 (0.0432)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.747700031042099, 0.5870000123977661)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.76it/s] 19%|#9        | 5/26 [00:00<00:00, 22.85it/s] 35%|###4      | 9/26 [00:00<00:00, 26.33it/s] 50%|#####     | 13/26 [00:00<00:00, 28.53it/s] 65%|######5   | 17/26 [00:00<00:00, 29.63it/s] 81%|########  | 21/26 [00:00<00:00, 31.18it/s] 96%|#########6| 25/26 [00:00<00:00, 32.39it/s]100%|##########| 26/26 [00:00<00:00, 27.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.002 (0.001)	train_nll   0.46 (  0.48)	train_penalty   0.00 (  0.00)	weight_norm  24.25 ( 24.25)	train_acc   0.74 (  0.72)	train_minacc   0.76 (  0.82)	train_majacc   0.74 (  0.71)	train_corr   0.00 (  0.00)	l1 5.5630 (5.7294)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.86it/s] 23%|##3       | 6/26 [00:00<00:00, 30.88it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.88it/s] 42%|####2     | 11/26 [00:00<00:00, 37.40it/s] 62%|######1   | 16/26 [00:00<00:00, 40.84it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.84it/s] 81%|########  | 21/26 [00:00<00:00, 38.42it/s]100%|##########| 26/26 [00:00<00:00, 41.04it/s]100%|##########| 26/26 [00:00<00:00, 34.69it/s]
Test: [   0/  26]	Loss 0.457 (0.457)	test_acc   0.73 (  0.73)	test_minacc   0.64 (  0.64)	test_majacc   0.75 (  0.75)	Loss_d 0.457 (0.457)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.454 (0.445)	test_acc   0.76 (  0.75)	test_minacc   0.71 (  0.78)	test_majacc   0.77 (  0.75)	Loss_d 0.454 (0.445)	test_acc_d   0.76 (  0.75)	test_minacc_d   0.71 (  0.78)	test_majacc_d   0.77 (  0.75)	test_corr_d   0.58 (  0.55)
Test: [  20/  26]	Loss 0.441 (0.441)	test_acc   0.76 (  0.75)	test_minacc   0.78 (  0.80)	test_majacc   0.76 (  0.75)	Loss_d 0.441 (0.441)	test_acc_d   0.76 (  0.75)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.76 (  0.75)	test_corr_d   0.56 (  0.54)
Test: [  26/  26]	Loss 0.462 (0.445)	test_acc   0.74 (  0.75)	test_minacc   0.76 (  0.80)	test_majacc   0.74 (  0.74)	Loss_d 0.462 (0.445)	test_acc_d   0.74 (  0.75)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.53 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.81it/s]
Test: [  0/  1]	Loss 0.959 (0.959)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.71 (  0.71)	Loss_d 0.959 (0.959)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.959 (0.959)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.71 (  0.71)	Loss_d 0.959 (0.959)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.12 (  0.12)
Overall Timing[ 18/  1]	epoch_time 0.0443 (0.0443)	validation_time 0.0004 (0.0008)	train_time 0.0439 (0.0433)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.7519000299572944, 0.6010000109672546)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.10it/s] 15%|#5        | 4/26 [00:00<00:01, 14.19it/s] 31%|###       | 8/26 [00:00<00:00, 21.70it/s] 46%|####6     | 12/26 [00:00<00:00, 26.22it/s] 62%|######1   | 16/26 [00:00<00:00, 28.77it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.23it/s] 92%|#########2| 24/26 [00:00<00:00, 31.71it/s]100%|##########| 26/26 [00:01<00:00, 25.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.001)	train_nll   0.48 (  0.47)	train_penalty   0.00 (  0.00)	weight_norm  24.26 ( 24.26)	train_acc   0.72 (  0.73)	train_minacc   0.78 (  0.81)	train_majacc   0.71 (  0.71)	train_corr   0.00 (  0.00)	l1 5.5791 (5.6804)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.16it/s] 19%|#9        | 5/26 [00:00<00:00, 25.06it/s] 38%|###8      | 10/26 [00:00<00:00, 31.01it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.01it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.54it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.20it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.20it/s] 96%|#########6| 25/26 [00:00<00:00, 42.57it/s]100%|##########| 26/26 [00:00<00:00, 34.52it/s]
Test: [   0/  26]	Loss 0.470 (0.470)	test_acc   0.73 (  0.73)	test_minacc   0.64 (  0.64)	test_majacc   0.74 (  0.74)	Loss_d 0.470 (0.470)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.440 (0.439)	test_acc   0.75 (  0.75)	test_minacc   0.76 (  0.79)	test_majacc   0.75 (  0.74)	Loss_d 0.440 (0.439)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.75 (  0.74)	test_corr_d   0.57 (  0.54)
Test: [  20/  26]	Loss 0.422 (0.439)	test_acc   0.77 (  0.75)	test_minacc   0.78 (  0.80)	test_majacc   0.77 (  0.74)	Loss_d 0.422 (0.439)	test_acc_d   0.77 (  0.75)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.77 (  0.74)	test_corr_d   0.56 (  0.53)
Test: [  26/  26]	Loss 0.466 (0.441)	test_acc   0.73 (  0.75)	test_minacc   0.78 (  0.80)	test_majacc   0.72 (  0.74)	Loss_d 0.466 (0.441)	test_acc_d   0.73 (  0.75)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.72 (  0.74)	test_corr_d   0.50 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.31it/s]
Test: [  0/  1]	Loss 0.984 (0.984)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.69 (  0.69)	Loss_d 0.984 (0.984)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.984 (0.984)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.69 (  0.69)	Loss_d 0.984 (0.984)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.11 (  0.11)
Overall Timing[ 19/  1]	epoch_time 0.0399 (0.0441)	validation_time 0.0004 (0.0007)	train_time 0.0395 (0.0431)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.7503000367283821, 0.6030000448226929)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.07it/s] 15%|#5        | 4/26 [00:00<00:01, 16.19it/s] 31%|###       | 8/26 [00:00<00:00, 23.86it/s] 46%|####6     | 12/26 [00:00<00:00, 27.99it/s] 62%|######1   | 16/26 [00:00<00:00, 30.68it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.78it/s] 92%|#########2| 24/26 [00:00<00:00, 33.16it/s]100%|##########| 26/26 [00:00<00:00, 27.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.003 (0.002)	train_nll   0.52 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  24.27 ( 24.26)	train_acc   0.69 (  0.74)	train_minacc   0.78 (  0.79)	train_majacc   0.67 (  0.73)	train_corr   0.00 (  0.00)	l1 5.6938 (5.5991)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.33it/s] 23%|##3       | 6/26 [00:00<00:00, 21.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.43it/s] 42%|####2     | 11/26 [00:00<00:00, 30.78it/s] 65%|######5   | 17/26 [00:00<00:00, 37.04it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.04it/s] 88%|########8 | 23/26 [00:00<00:00, 40.89it/s]100%|##########| 26/26 [00:00<00:00, 32.57it/s]
Test: [   0/  26]	Loss 0.507 (0.507)	test_acc   0.70 (  0.70)	test_minacc   0.64 (  0.64)	test_majacc   0.71 (  0.71)	Loss_d 0.507 (0.507)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.457 (0.487)	test_acc   0.76 (  0.72)	test_minacc   0.84 (  0.77)	test_majacc   0.75 (  0.71)	Loss_d 0.457 (0.487)	test_acc_d   0.76 (  0.72)	test_minacc_d   0.84 (  0.77)	test_majacc_d   0.75 (  0.71)	test_corr_d   0.53 (  0.48)
Test: [  20/  26]	Loss 0.480 (0.480)	test_acc   0.73 (  0.72)	test_minacc   0.71 (  0.79)	test_majacc   0.73 (  0.71)	Loss_d 0.480 (0.480)	test_acc_d   0.73 (  0.72)	test_minacc_d   0.71 (  0.79)	test_majacc_d   0.73 (  0.71)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.511 (0.481)	test_acc   0.70 (  0.72)	test_minacc   0.78 (  0.79)	test_majacc   0.68 (  0.71)	Loss_d 0.511 (0.481)	test_acc_d   0.70 (  0.72)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.68 (  0.71)	test_corr_d   0.44 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.23it/s]
Test: [  0/  1]	Loss 1.037 (1.037)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.66 (  0.66)	Loss_d 1.037 (1.037)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 1.037 (1.037)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.66 (  0.66)	Loss_d 1.037 (1.037)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.07 (  0.07)
Overall Timing[ 20/  1]	epoch_time 0.0397 (0.0438)	validation_time 0.0004 (0.0007)	train_time 0.0393 (0.0429)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.7233000274896622, 0.6040000319480896)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.08it/s] 19%|#9        | 5/26 [00:00<00:01, 18.42it/s] 35%|###4      | 9/26 [00:00<00:00, 24.91it/s] 50%|#####     | 13/26 [00:00<00:00, 29.43it/s] 65%|######5   | 17/26 [00:00<00:00, 31.71it/s] 81%|########  | 21/26 [00:00<00:00, 32.95it/s] 96%|#########6| 25/26 [00:00<00:00, 33.61it/s]100%|##########| 26/26 [00:00<00:00, 27.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.003 (0.002)	train_nll   0.42 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  24.28 ( 24.27)	train_acc   0.78 (  0.74)	train_minacc   0.78 (  0.79)	train_majacc   0.78 (  0.73)	train_corr   0.00 (  0.00)	l1 5.3985 (5.5669)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.12it/s] 31%|###       | 8/26 [00:00<00:00, 34.15it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.15it/s] 50%|#####     | 13/26 [00:00<00:00, 39.71it/s] 69%|######9   | 18/26 [00:00<00:00, 42.59it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.59it/s] 88%|########8 | 23/26 [00:00<00:00, 41.04it/s]100%|##########| 26/26 [00:00<00:00, 37.13it/s]
Test: [   0/  26]	Loss 0.443 (0.443)	test_acc   0.75 (  0.75)	test_minacc   0.66 (  0.66)	test_majacc   0.77 (  0.77)	Loss_d 0.443 (0.443)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.428 (0.445)	test_acc   0.77 (  0.74)	test_minacc   0.78 (  0.75)	test_majacc   0.77 (  0.74)	Loss_d 0.428 (0.445)	test_acc_d   0.77 (  0.74)	test_minacc_d   0.78 (  0.75)	test_majacc_d   0.77 (  0.74)	test_corr_d   0.59 (  0.55)
Test: [  20/  26]	Loss 0.438 (0.435)	test_acc   0.76 (  0.75)	test_minacc   0.74 (  0.77)	test_majacc   0.77 (  0.75)	Loss_d 0.438 (0.435)	test_acc_d   0.76 (  0.75)	test_minacc_d   0.74 (  0.77)	test_majacc_d   0.77 (  0.75)	test_corr_d   0.56 (  0.55)
Test: [  26/  26]	Loss 0.429 (0.436)	test_acc   0.78 (  0.76)	test_minacc   0.78 (  0.78)	test_majacc   0.78 (  0.75)	Loss_d 0.429 (0.436)	test_acc_d   0.78 (  0.76)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.78 (  0.75)	test_corr_d   0.54 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.64it/s]
Test: [  0/  1]	Loss 1.050 (1.050)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.75 (  0.75)	Loss_d 1.050 (1.050)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.050 (1.050)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.75 (  0.75)	Loss_d 1.050 (1.050)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.13 (  0.13)
Overall Timing[ 21/  1]	epoch_time 0.0458 (0.0439)	validation_time 0.0004 (0.0007)	train_time 0.0454 (0.0430)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.7551000266671181, 0.5950000286102295)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.32it/s] 15%|#5        | 4/26 [00:00<00:01, 18.02it/s] 31%|###       | 8/26 [00:00<00:00, 25.74it/s] 46%|####6     | 12/26 [00:00<00:00, 28.87it/s] 62%|######1   | 16/26 [00:00<00:00, 31.19it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.60it/s] 92%|#########2| 24/26 [00:00<00:00, 33.74it/s]100%|##########| 26/26 [00:00<00:00, 28.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.001 (0.001)	train_nll   0.44 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  24.29 ( 24.29)	train_acc   0.76 (  0.74)	train_minacc   0.78 (  0.79)	train_majacc   0.76 (  0.73)	train_corr   0.00 (  0.00)	l1 5.3891 (5.6068)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.92it/s] 23%|##3       | 6/26 [00:00<00:00, 20.54it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.54it/s] 42%|####2     | 11/26 [00:00<00:00, 29.66it/s] 62%|######1   | 16/26 [00:00<00:00, 35.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.63it/s] 81%|########  | 21/26 [00:00<00:00, 38.48it/s]100%|##########| 26/26 [00:00<00:00, 41.84it/s]100%|##########| 26/26 [00:00<00:00, 31.41it/s]
Test: [   0/  26]	Loss 0.443 (0.443)	test_acc   0.74 (  0.74)	test_minacc   0.71 (  0.71)	test_majacc   0.75 (  0.75)	Loss_d 0.443 (0.443)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.434 (0.437)	test_acc   0.77 (  0.75)	test_minacc   0.76 (  0.78)	test_majacc   0.77 (  0.75)	Loss_d 0.434 (0.437)	test_acc_d   0.77 (  0.75)	test_minacc_d   0.76 (  0.78)	test_majacc_d   0.77 (  0.75)	test_corr_d   0.61 (  0.57)
Test: [  20/  26]	Loss 0.433 (0.428)	test_acc   0.75 (  0.76)	test_minacc   0.72 (  0.79)	test_majacc   0.76 (  0.75)	Loss_d 0.433 (0.428)	test_acc_d   0.75 (  0.76)	test_minacc_d   0.72 (  0.79)	test_majacc_d   0.76 (  0.75)	test_corr_d   0.59 (  0.57)
Test: [  26/  26]	Loss 0.441 (0.431)	test_acc   0.76 (  0.76)	test_minacc   0.76 (  0.80)	test_majacc   0.76 (  0.75)	Loss_d 0.441 (0.431)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.76 (  0.75)	test_corr_d   0.56 (  0.57)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.45it/s]
Test: [  0/  1]	Loss 1.033 (1.033)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.74 (  0.74)	Loss_d 1.033 (1.033)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.033 (1.033)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.74 (  0.74)	Loss_d 1.033 (1.033)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.16 (  0.16)
Overall Timing[ 22/  1]	epoch_time 0.0385 (0.0437)	validation_time 0.0004 (0.0007)	train_time 0.0381 (0.0428)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.7563000268340111, 0.6080000400543213)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.77it/s] 12%|#1        | 3/26 [00:00<00:01, 14.37it/s] 27%|##6       | 7/26 [00:00<00:00, 22.51it/s] 38%|###8      | 10/26 [00:00<00:00, 23.58it/s] 50%|#####     | 13/26 [00:00<00:00, 25.42it/s] 65%|######5   | 17/26 [00:00<00:00, 28.68it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.81it/s] 88%|########8 | 23/26 [00:00<00:00, 29.10it/s]100%|##########| 26/26 [00:01<00:00, 25.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 5.34768533706665
set z to 5.294208483695984
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 386 tensor(-0.0101, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 249 tensor(-0.0091, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 186 tensor(0.0085, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 166 tensor(0.0055, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 157 tensor(0.0021, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.000 (0.091)	train_nll   0.48 (  0.54)	train_penalty   0.00 (  0.09)	weight_norm  27.05 ( 25.08)	train_acc   0.80 (  0.75)	train_minacc   0.63 (  0.64)	train_majacc   0.83 (  0.77)	train_corr   0.00 (  0.00)	l1 6.4491 (6.5614)	zero_count 0.0000 (41.2230)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.08it/s] 23%|##3       | 6/26 [00:00<00:00, 26.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.20it/s] 42%|####2     | 11/26 [00:00<00:00, 34.14it/s] 62%|######1   | 16/26 [00:00<00:00, 38.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.65it/s] 81%|########  | 21/26 [00:00<00:00, 37.48it/s]100%|##########| 26/26 [00:00<00:00, 40.38it/s]100%|##########| 26/26 [00:00<00:00, 32.72it/s]
Test: [   0/  26]	Loss 0.535 (0.535)	test_acc   0.84 (  0.84)	test_minacc   0.79 (  0.79)	test_majacc   0.85 (  0.85)	Loss_d 0.535 (0.535)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.544 (0.569)	test_acc   0.82 (  0.83)	test_minacc   0.67 (  0.71)	test_majacc   0.84 (  0.85)	Loss_d 0.544 (0.569)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.67 (  0.71)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.56 (  0.52)
Test: [  20/  26]	Loss 0.485 (0.566)	test_acc   0.81 (  0.82)	test_minacc   0.64 (  0.69)	test_majacc   0.84 (  0.84)	Loss_d 0.485 (0.566)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.64 (  0.69)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.56 (  0.53)
Test: [  26/  26]	Loss 0.532 (0.558)	test_acc   0.82 (  0.82)	test_minacc   0.63 (  0.69)	test_majacc   0.85 (  0.84)	Loss_d 0.532 (0.558)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.63 (  0.69)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.28it/s]
Test: [  0/  1]	Loss 1.439 (1.439)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.79 (  0.79)	Loss_d 1.439 (1.439)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.79 (  0.79)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 1.439 (1.439)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.79 (  0.79)	Loss_d 1.439 (1.439)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.79 (  0.79)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 23/  1]	epoch_time 0.0425 (0.0437)	validation_time 0.0003 (0.0007)	train_time 0.0422 (0.0428)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.8212000207901001, 0.5590000152587891)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.11it/s] 15%|#5        | 4/26 [00:00<00:01, 19.60it/s] 27%|##6       | 7/26 [00:00<00:00, 24.05it/s] 42%|####2     | 11/26 [00:00<00:00, 27.63it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.34it/s] 65%|######5   | 17/26 [00:00<00:00, 28.63it/s] 81%|########  | 21/26 [00:00<00:00, 30.71it/s] 96%|#########6| 25/26 [00:00<00:00, 31.09it/s]100%|##########| 26/26 [00:00<00:00, 26.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 152 tensor(0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 150 tensor(0.0017, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 149 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 154 tensor(-7.0055e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 172 tensor(-5.1752e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 194 tensor(3.5951e-05, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.003)	train_nll   0.53 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  28.66 ( 28.17)	train_acc   0.50 (  0.77)	train_minacc   0.95 (  0.71)	train_majacc   0.41 (  0.78)	train_corr   0.00 (  0.00)	l1 5.3812 (5.5973)	zero_count 0.0000 (83.1480)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.86it/s] 23%|##3       | 6/26 [00:00<00:00, 28.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.82it/s] 42%|####2     | 11/26 [00:00<00:00, 36.65it/s] 62%|######1   | 16/26 [00:00<00:00, 40.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.80it/s] 81%|########  | 21/26 [00:00<00:00, 36.92it/s]100%|##########| 26/26 [00:00<00:00, 35.22it/s]
Test: [   0/  26]	Loss 0.537 (0.537)	test_acc   0.47 (  0.47)	test_minacc   0.88 (  0.88)	test_majacc   0.41 (  0.41)	Loss_d 0.537 (0.537)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.550 (0.552)	test_acc   0.47 (  0.47)	test_minacc   0.93 (  0.83)	test_majacc   0.39 (  0.41)	Loss_d 0.550 (0.552)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.93 (  0.83)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.49 (  0.50)
Test: [  20/  26]	Loss 0.528 (0.558)	test_acc   0.50 (  0.47)	test_minacc   0.84 (  0.81)	test_majacc   0.44 (  0.41)	Loss_d 0.528 (0.558)	test_acc_d   0.50 (  0.47)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.44 (  0.41)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.538 (0.555)	test_acc   0.48 (  0.47)	test_minacc   0.85 (  0.82)	test_majacc   0.41 (  0.41)	Loss_d 0.538 (0.555)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.52 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.97it/s]
Test: [  0/  1]	Loss 1.428 (1.428)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.44 (  0.44)	Loss_d 1.428 (1.428)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.44 (  0.44)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 1.428 (1.428)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.44 (  0.44)	Loss_d 1.428 (1.428)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.44 (  0.44)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 24/  1]	epoch_time 0.0427 (0.0436)	validation_time 0.0004 (0.0007)	train_time 0.0423 (0.0427)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.46790000373125074, 0.5940000414848328)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.74it/s] 19%|#9        | 5/26 [00:00<00:00, 24.11it/s] 35%|###4      | 9/26 [00:00<00:00, 27.48it/s] 46%|####6     | 12/26 [00:00<00:00, 27.45it/s] 62%|######1   | 16/26 [00:00<00:00, 28.19it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.49it/s] 92%|#########2| 24/26 [00:00<00:00, 30.47it/s]100%|##########| 26/26 [00:00<00:00, 26.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 200 tensor(1.3026e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 201 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 245 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 252 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 307 tensor(-7.1536e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 333 tensor(8.4434e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 332 tensor(2.5202e-07, device='cuda:0')
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.53 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.79 ( 28.75)	train_acc   0.49 (  0.53)	train_minacc   0.93 (  0.84)	train_majacc   0.40 (  0.48)	train_corr   0.00 (  0.00)	l1 5.3188 (5.3183)	zero_count 0.0000 (65.0130)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.81it/s] 19%|#9        | 5/26 [00:00<00:00, 25.41it/s] 38%|###8      | 10/26 [00:00<00:00, 33.84it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.84it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.55it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.28it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.28it/s] 96%|#########6| 25/26 [00:00<00:00, 41.70it/s]100%|##########| 26/26 [00:00<00:00, 34.86it/s]
Test: [   0/  26]	Loss 0.530 (0.530)	test_acc   0.47 (  0.47)	test_minacc   0.91 (  0.91)	test_majacc   0.40 (  0.40)	Loss_d 0.530 (0.530)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.537 (0.538)	test_acc   0.46 (  0.48)	test_minacc   0.93 (  0.90)	test_majacc   0.39 (  0.41)	Loss_d 0.537 (0.538)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.93 (  0.90)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.52 (  0.51)
Test: [  20/  26]	Loss 0.527 (0.546)	test_acc   0.50 (  0.48)	test_minacc   0.95 (  0.89)	test_majacc   0.42 (  0.40)	Loss_d 0.527 (0.546)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.95 (  0.89)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.50 (  0.51)
Test: [  26/  26]	Loss 0.535 (0.544)	test_acc   0.48 (  0.48)	test_minacc   0.95 (  0.89)	test_majacc   0.39 (  0.40)	Loss_d 0.535 (0.544)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.95 (  0.89)	test_majacc_d   0.39 (  0.40)	test_corr_d   0.53 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.50it/s]
Test: [  0/  1]	Loss 1.435 (1.435)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.44 (  0.44)	Loss_d 1.435 (1.435)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.44 (  0.44)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 1.435 (1.435)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.44 (  0.44)	Loss_d 1.435 (1.435)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.44 (  0.44)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 25/  1]	epoch_time 0.0419 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0415 (0.0427)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.47660000881552694, 0.6300000548362732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.09it/s] 12%|#1        | 3/26 [00:00<00:01, 11.78it/s] 23%|##3       | 6/26 [00:00<00:01, 17.84it/s] 38%|###8      | 10/26 [00:00<00:00, 21.90it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.35it/s] 69%|######9   | 18/26 [00:00<00:00, 27.20it/s] 85%|########4 | 22/26 [00:00<00:00, 29.26it/s]100%|##########| 26/26 [00:01<00:00, 30.73it/s]100%|##########| 26/26 [00:01<00:00, 23.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 293 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 284 tensor(6.2668e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.53 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.79)	train_acc   0.50 (  0.48)	train_minacc   0.93 (  0.74)	train_majacc   0.42 (  0.44)	train_corr   0.00 (  0.00)	l1 5.2457 (5.2836)	zero_count 0.0000 (24.3360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.43it/s] 27%|##6       | 7/26 [00:00<00:00, 35.07it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.07it/s] 46%|####6     | 12/26 [00:00<00:00, 39.91it/s] 65%|######5   | 17/26 [00:00<00:00, 41.24it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.24it/s] 85%|########4 | 22/26 [00:00<00:00, 40.02it/s]100%|##########| 26/26 [00:00<00:00, 37.44it/s]
Test: [   0/  26]	Loss 0.529 (0.529)	test_acc   0.48 (  0.48)	test_minacc   0.89 (  0.89)	test_majacc   0.41 (  0.41)	Loss_d 0.529 (0.529)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.534 (0.535)	test_acc   0.46 (  0.49)	test_minacc   0.91 (  0.90)	test_majacc   0.39 (  0.42)	Loss_d 0.534 (0.535)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.39 (  0.42)	test_corr_d   0.53 (  0.53)
Test: [  20/  26]	Loss 0.527 (0.542)	test_acc   0.50 (  0.49)	test_minacc   0.93 (  0.88)	test_majacc   0.42 (  0.41)	Loss_d 0.527 (0.542)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.93 (  0.88)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.51 (  0.52)
Test: [  26/  26]	Loss 0.534 (0.541)	test_acc   0.49 (  0.49)	test_minacc   0.95 (  0.88)	test_majacc   0.40 (  0.41)	Loss_d 0.534 (0.541)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.95 (  0.88)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.24it/s]
Test: [  0/  1]	Loss 1.453 (1.453)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.43 (  0.43)	Loss_d 1.453 (1.453)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 1.453 (1.453)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.43 (  0.43)	Loss_d 1.453 (1.453)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.00 (  0.00)
Overall Timing[ 26/  1]	epoch_time 0.0484 (0.0437)	validation_time 0.0004 (0.0007)	train_time 0.0480 (0.0429)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.48520000639557836, 0.6320000290870667)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.28it/s] 19%|#9        | 5/26 [00:00<00:01, 10.73it/s] 35%|###4      | 9/26 [00:00<00:01, 16.18it/s] 50%|#####     | 13/26 [00:00<00:00, 21.04it/s] 65%|######5   | 17/26 [00:00<00:00, 24.61it/s] 81%|########  | 21/26 [00:01<00:00, 27.06it/s] 96%|#########6| 25/26 [00:01<00:00, 29.16it/s]100%|##########| 26/26 [00:01<00:00, 20.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 334 tensor(3.5192e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.47)	train_minacc   0.85 (  0.67)	train_majacc   0.39 (  0.44)	train_corr   0.00 (  0.00)	l1 5.2278 (5.2681)	zero_count 0.0000 (6.9030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.22it/s] 27%|##6       | 7/26 [00:00<00:00, 32.10it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.10it/s] 46%|####6     | 12/26 [00:00<00:00, 37.70it/s] 65%|######5   | 17/26 [00:00<00:00, 38.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.98it/s] 85%|########4 | 22/26 [00:00<00:00, 42.20it/s]100%|##########| 26/26 [00:00<00:00, 35.42it/s]
Test: [   0/  26]	Loss 0.533 (0.533)	test_acc   0.47 (  0.47)	test_minacc   0.82 (  0.82)	test_majacc   0.41 (  0.41)	Loss_d 0.533 (0.533)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.537 (0.538)	test_acc   0.46 (  0.48)	test_minacc   0.84 (  0.82)	test_majacc   0.40 (  0.41)	Loss_d 0.537 (0.538)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.53 (  0.53)
Test: [  20/  26]	Loss 0.530 (0.544)	test_acc   0.49 (  0.47)	test_minacc   0.88 (  0.80)	test_majacc   0.42 (  0.41)	Loss_d 0.530 (0.544)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.88 (  0.80)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.51 (  0.53)
Test: [  26/  26]	Loss 0.537 (0.542)	test_acc   0.46 (  0.47)	test_minacc   0.83 (  0.80)	test_majacc   0.39 (  0.41)	Loss_d 0.537 (0.542)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.83 (  0.80)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.95it/s]
Test: [  0/  1]	Loss 1.473 (1.473)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.44 (  0.44)	Loss_d 1.473 (1.473)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.473 (1.473)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.44 (  0.44)	Loss_d 1.473 (1.473)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.03 (  0.03)
Overall Timing[ 27/  1]	epoch_time 0.0425 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0421 (0.0429)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4713000030219555, 0.5900000333786011)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.66it/s] 15%|#5        | 4/26 [00:00<00:01, 15.24it/s] 27%|##6       | 7/26 [00:00<00:00, 20.70it/s] 42%|####2     | 11/26 [00:00<00:00, 25.74it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.84it/s] 69%|######9   | 18/26 [00:00<00:00, 28.02it/s] 85%|########4 | 22/26 [00:00<00:00, 29.90it/s]100%|##########| 26/26 [00:00<00:00, 31.53it/s]100%|##########| 26/26 [00:01<00:00, 25.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 344 tensor(-8.1131e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.47)	train_minacc   0.61 (  0.60)	train_majacc   0.43 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2446 (5.2693)	zero_count 0.0000 (6.5130)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.79it/s] 23%|##3       | 6/26 [00:00<00:01, 16.11it/s]                                               23%|##3       | 6/26 [00:00<00:01, 16.11it/s] 42%|####2     | 11/26 [00:00<00:00, 25.05it/s] 62%|######1   | 16/26 [00:00<00:00, 31.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 31.62it/s] 81%|########  | 21/26 [00:00<00:00, 35.67it/s]100%|##########| 26/26 [00:00<00:00, 39.12it/s]100%|##########| 26/26 [00:00<00:00, 27.01it/s]
Test: [   0/  26]	Loss 0.539 (0.539)	test_acc   0.45 (  0.45)	test_minacc   0.66 (  0.66)	test_majacc   0.42 (  0.42)	Loss_d 0.539 (0.539)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.542 (0.543)	test_acc   0.50 (  0.47)	test_minacc   0.76 (  0.64)	test_majacc   0.45 (  0.44)	Loss_d 0.542 (0.543)	test_acc_d   0.50 (  0.47)	test_minacc_d   0.76 (  0.64)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.53 (  0.53)
Test: [  20/  26]	Loss 0.535 (0.548)	test_acc   0.50 (  0.47)	test_minacc   0.71 (  0.62)	test_majacc   0.46 (  0.44)	Loss_d 0.535 (0.548)	test_acc_d   0.50 (  0.47)	test_minacc_d   0.71 (  0.62)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.51 (  0.53)
Test: [  26/  26]	Loss 0.542 (0.546)	test_acc   0.46 (  0.47)	test_minacc   0.61 (  0.62)	test_majacc   0.43 (  0.44)	Loss_d 0.542 (0.546)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.61 (  0.62)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.23it/s]
Test: [  0/  1]	Loss 1.491 (1.491)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 1.491 (1.491)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 1.491 (1.491)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 1.491 (1.491)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Overall Timing[ 28/  1]	epoch_time 0.0430 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0426 (0.0429)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4661000073552132, 0.5490000247955322)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.97it/s] 19%|#9        | 5/26 [00:00<00:01, 15.85it/s] 35%|###4      | 9/26 [00:00<00:00, 23.10it/s] 50%|#####     | 13/26 [00:00<00:00, 27.86it/s] 65%|######5   | 17/26 [00:00<00:00, 29.87it/s] 81%|########  | 21/26 [00:00<00:00, 31.32it/s] 96%|#########6| 25/26 [00:00<00:00, 32.44it/s]100%|##########| 26/26 [00:01<00:00, 25.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.47)	train_minacc   0.59 (  0.57)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2717 (5.2758)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.74it/s] 12%|#1        | 3/26 [00:00<00:02, 10.76it/s] 31%|###       | 8/26 [00:00<00:00, 24.49it/s]                                               31%|###       | 8/26 [00:00<00:00, 24.49it/s] 46%|####6     | 12/26 [00:00<00:00, 29.70it/s] 65%|######5   | 17/26 [00:00<00:00, 34.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.35it/s] 85%|########4 | 22/26 [00:00<00:00, 38.10it/s]100%|##########| 26/26 [00:00<00:00, 29.48it/s]
Test: [   0/  26]	Loss 0.543 (0.543)	test_acc   0.45 (  0.45)	test_minacc   0.57 (  0.57)	test_majacc   0.43 (  0.43)	Loss_d 0.543 (0.543)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.545 (0.547)	test_acc   0.50 (  0.48)	test_minacc   0.71 (  0.58)	test_majacc   0.47 (  0.46)	Loss_d 0.545 (0.547)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.71 (  0.58)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.53 (  0.53)
Test: [  20/  26]	Loss 0.539 (0.552)	test_acc   0.50 (  0.47)	test_minacc   0.64 (  0.57)	test_majacc   0.48 (  0.45)	Loss_d 0.539 (0.552)	test_acc_d   0.50 (  0.47)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.48 (  0.45)	test_corr_d   0.51 (  0.53)
Test: [  26/  26]	Loss 0.547 (0.550)	test_acc   0.46 (  0.47)	test_minacc   0.59 (  0.57)	test_majacc   0.44 (  0.45)	Loss_d 0.547 (0.550)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.59 (  0.57)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.45it/s]
Test: [  0/  1]	Loss 1.501 (1.501)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.501 (1.501)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 1.501 (1.501)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.501 (1.501)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Overall Timing[ 29/  1]	epoch_time 0.0439 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0434 (0.0429)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4687000045478344, 0.5300000309944153)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.00it/s] 23%|##3       | 6/26 [00:00<00:00, 24.74it/s] 38%|###8      | 10/26 [00:00<00:00, 29.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.51it/s] 69%|######9   | 18/26 [00:00<00:00, 34.21it/s] 85%|########4 | 22/26 [00:00<00:00, 34.87it/s]100%|##########| 26/26 [00:00<00:00, 35.23it/s]100%|##########| 26/26 [00:00<00:00, 29.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.47)	train_minacc   0.59 (  0.55)	train_majacc   0.44 (  0.46)	train_corr   0.00 (  0.00)	l1 5.2859 (5.2832)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.13it/s] 27%|##6       | 7/26 [00:00<00:00, 35.23it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.23it/s] 46%|####6     | 12/26 [00:00<00:00, 40.28it/s] 65%|######5   | 17/26 [00:00<00:00, 38.42it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.42it/s] 85%|########4 | 22/26 [00:00<00:00, 41.33it/s]100%|##########| 26/26 [00:00<00:00, 36.23it/s]
Test: [   0/  26]	Loss 0.546 (0.546)	test_acc   0.45 (  0.45)	test_minacc   0.55 (  0.55)	test_majacc   0.43 (  0.43)	Loss_d 0.546 (0.546)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.547 (0.549)	test_acc   0.50 (  0.48)	test_minacc   0.67 (  0.58)	test_majacc   0.47 (  0.46)	Loss_d 0.547 (0.549)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.53 (  0.52)
Test: [  20/  26]	Loss 0.542 (0.554)	test_acc   0.50 (  0.47)	test_minacc   0.62 (  0.56)	test_majacc   0.48 (  0.45)	Loss_d 0.542 (0.554)	test_acc_d   0.50 (  0.47)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.48 (  0.45)	test_corr_d   0.51 (  0.52)
Test: [  26/  26]	Loss 0.549 (0.552)	test_acc   0.47 (  0.47)	test_minacc   0.59 (  0.56)	test_majacc   0.44 (  0.45)	Loss_d 0.549 (0.552)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.53 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.21it/s]
Test: [  0/  1]	Loss 1.505 (1.505)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.505 (1.505)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.505 (1.505)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.505 (1.505)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Overall Timing[ 30/  1]	epoch_time 0.0389 (0.0435)	validation_time 0.0003 (0.0006)	train_time 0.0385 (0.0427)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.46930000588297843, 0.5260000228881836)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.56it/s] 15%|#5        | 4/26 [00:00<00:01, 19.02it/s] 31%|###       | 8/26 [00:00<00:00, 26.44it/s] 46%|####6     | 12/26 [00:00<00:00, 30.00it/s] 62%|######1   | 16/26 [00:00<00:00, 31.88it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.10it/s] 92%|#########2| 24/26 [00:00<00:00, 33.97it/s]100%|##########| 26/26 [00:00<00:00, 28.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.47)	train_minacc   0.59 (  0.56)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2914 (5.2879)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.68it/s] 23%|##3       | 6/26 [00:00<00:01, 19.02it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.02it/s] 42%|####2     | 11/26 [00:00<00:00, 28.17it/s] 65%|######5   | 17/26 [00:00<00:00, 32.84it/s]                                                65%|######5   | 17/26 [00:00<00:00, 32.84it/s] 85%|########4 | 22/26 [00:00<00:00, 36.79it/s]100%|##########| 26/26 [00:00<00:00, 28.91it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.45 (  0.45)	test_minacc   0.55 (  0.55)	test_majacc   0.44 (  0.44)	Loss_d 0.547 (0.547)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.550)	test_acc   0.50 (  0.48)	test_minacc   0.67 (  0.57)	test_majacc   0.47 (  0.46)	Loss_d 0.548 (0.550)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.543 (0.555)	test_acc   0.49 (  0.47)	test_minacc   0.62 (  0.56)	test_majacc   0.47 (  0.45)	Loss_d 0.543 (0.555)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.47 (  0.45)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.550 (0.553)	test_acc   0.47 (  0.47)	test_minacc   0.59 (  0.56)	test_majacc   0.44 (  0.45)	Loss_d 0.550 (0.553)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.53 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.02it/s]
Test: [  0/  1]	Loss 1.506 (1.506)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.506 (1.506)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.506 (1.506)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.506 (1.506)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Overall Timing[ 31/  1]	epoch_time 0.0386 (0.0434)	validation_time 0.0005 (0.0006)	train_time 0.0382 (0.0426)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4683000059425831, 0.5240000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.86it/s] 19%|#9        | 5/26 [00:00<00:00, 22.75it/s] 35%|###4      | 9/26 [00:00<00:00, 27.81it/s] 50%|#####     | 13/26 [00:00<00:00, 29.71it/s] 65%|######5   | 17/26 [00:00<00:00, 30.67it/s] 81%|########  | 21/26 [00:00<00:00, 31.84it/s] 96%|#########6| 25/26 [00:00<00:00, 32.65it/s]100%|##########| 26/26 [00:00<00:00, 27.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.47)	train_minacc   0.59 (  0.56)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2934 (5.2916)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.65it/s] 23%|##3       | 6/26 [00:00<00:00, 27.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.20it/s] 42%|####2     | 11/26 [00:00<00:00, 34.12it/s] 62%|######1   | 16/26 [00:00<00:00, 38.64it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.64it/s] 81%|########  | 21/26 [00:00<00:00, 37.34it/s]100%|##########| 26/26 [00:00<00:00, 40.41it/s]100%|##########| 26/26 [00:00<00:00, 33.13it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.45 (  0.45)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.547 (0.547)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.550)	test_acc   0.50 (  0.48)	test_minacc   0.67 (  0.58)	test_majacc   0.47 (  0.46)	Loss_d 0.548 (0.550)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.544 (0.555)	test_acc   0.49 (  0.47)	test_minacc   0.62 (  0.56)	test_majacc   0.47 (  0.45)	Loss_d 0.544 (0.555)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.47 (  0.45)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.47 (  0.47)	test_minacc   0.59 (  0.56)	test_majacc   0.44 (  0.45)	Loss_d 0.551 (0.553)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.53 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.84it/s]
Test: [  0/  1]	Loss 1.507 (1.507)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.507 (1.507)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.507 (1.507)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.507 (1.507)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Overall Timing[ 32/  1]	epoch_time 0.0424 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0420 (0.0426)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.46680000486969947, 0.5260000228881836)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.03it/s] 15%|#5        | 4/26 [00:00<00:01, 18.09it/s] 31%|###       | 8/26 [00:00<00:00, 25.50it/s] 46%|####6     | 12/26 [00:00<00:00, 29.23it/s] 62%|######1   | 16/26 [00:00<00:00, 30.94it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.99it/s] 92%|#########2| 24/26 [00:00<00:00, 33.42it/s]100%|##########| 26/26 [00:00<00:00, 27.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 429 tensor(-3.2294e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.47)	train_minacc   0.59 (  0.56)	train_majacc   0.45 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2898 (5.2911)	zero_count 0.0000 (3.1980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.69it/s] 23%|##3       | 6/26 [00:00<00:00, 28.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.90it/s] 42%|####2     | 11/26 [00:00<00:00, 35.60it/s] 62%|######1   | 16/26 [00:00<00:00, 39.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.89it/s] 81%|########  | 21/26 [00:00<00:00, 38.55it/s]100%|##########| 26/26 [00:00<00:00, 40.97it/s]100%|##########| 26/26 [00:00<00:00, 33.81it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.46 (  0.46)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.547 (0.547)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.50 (  0.47)	test_minacc   0.67 (  0.57)	test_majacc   0.47 (  0.46)	Loss_d 0.548 (0.549)	test_acc_d   0.50 (  0.47)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.544 (0.554)	test_acc   0.49 (  0.47)	test_minacc   0.64 (  0.56)	test_majacc   0.47 (  0.45)	Loss_d 0.544 (0.554)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.64 (  0.56)	test_majacc_d   0.47 (  0.45)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.550 (0.553)	test_acc   0.47 (  0.47)	test_minacc   0.59 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 0.550 (0.553)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.53 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.76it/s]
Test: [  0/  1]	Loss 1.510 (1.510)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.510 (1.510)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.510 (1.510)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.510 (1.510)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Overall Timing[ 33/  1]	epoch_time 0.0414 (0.0433)	validation_time 0.0003 (0.0006)	train_time 0.0411 (0.0425)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.46720000621676444, 0.5250000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.03it/s] 19%|#9        | 5/26 [00:00<00:01, 19.28it/s] 31%|###       | 8/26 [00:00<00:00, 21.13it/s] 46%|####6     | 12/26 [00:00<00:00, 23.64it/s] 62%|######1   | 16/26 [00:00<00:00, 27.69it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.41it/s] 92%|#########2| 24/26 [00:00<00:00, 31.76it/s]100%|##########| 26/26 [00:01<00:00, 25.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 450 tensor(-2.2224e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 451 tensor(-2.2365e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.47)	train_minacc   0.56 (  0.55)	train_majacc   0.45 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2896 (5.2925)	zero_count 0.0000 (4.7190)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.38it/s] 27%|##6       | 7/26 [00:00<00:00, 34.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.16it/s] 46%|####6     | 12/26 [00:00<00:00, 39.45it/s] 65%|######5   | 17/26 [00:00<00:00, 37.36it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.36it/s] 85%|########4 | 22/26 [00:00<00:00, 40.13it/s]100%|##########| 26/26 [00:00<00:00, 35.42it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.45 (  0.45)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.547 (0.547)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.49 (  0.47)	test_minacc   0.65 (  0.57)	test_majacc   0.47 (  0.46)	Loss_d 0.548 (0.549)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.65 (  0.57)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.545 (0.554)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.56)	test_majacc   0.46 (  0.45)	Loss_d 0.545 (0.554)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.550 (0.552)	test_acc   0.47 (  0.47)	test_minacc   0.56 (  0.56)	test_majacc   0.45 (  0.45)	Loss_d 0.550 (0.552)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.32it/s]
Test: [  0/  1]	Loss 1.512 (1.512)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.512 (1.512)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.512 (1.512)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.512 (1.512)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Overall Timing[ 34/  1]	epoch_time 0.0429 (0.0433)	validation_time 0.0007 (0.0006)	train_time 0.0422 (0.0425)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4652000040113926, 0.5250000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.97it/s] 19%|#9        | 5/26 [00:00<00:00, 21.33it/s] 31%|###       | 8/26 [00:00<00:00, 22.97it/s] 42%|####2     | 11/26 [00:00<00:00, 23.74it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.56it/s] 69%|######9   | 18/26 [00:00<00:00, 26.89it/s] 85%|########4 | 22/26 [00:00<00:00, 29.40it/s]100%|##########| 26/26 [00:00<00:00, 30.93it/s]100%|##########| 26/26 [00:01<00:00, 25.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 443 tensor(1.4262e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 437 tensor(2.6792e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 460 tensor(-3.1962e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.47)	train_minacc   0.56 (  0.55)	train_majacc   0.45 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2900 (5.2931)	zero_count 0.0000 (7.5270)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.08it/s] 23%|##3       | 6/26 [00:00<00:01, 16.89it/s]                                               23%|##3       | 6/26 [00:00<00:01, 16.89it/s] 42%|####2     | 11/26 [00:00<00:00, 25.78it/s] 62%|######1   | 16/26 [00:00<00:00, 32.15it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.15it/s] 81%|########  | 21/26 [00:00<00:00, 32.79it/s]100%|##########| 26/26 [00:00<00:00, 36.98it/s]100%|##########| 26/26 [00:00<00:00, 26.56it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.45 (  0.45)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.547 (0.547)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.49 (  0.47)	test_minacc   0.65 (  0.57)	test_majacc   0.47 (  0.46)	Loss_d 0.548 (0.549)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.65 (  0.57)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.545 (0.554)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.56)	test_majacc   0.46 (  0.45)	Loss_d 0.545 (0.554)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.552)	test_acc   0.47 (  0.47)	test_minacc   0.56 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.551 (0.552)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.94it/s]
Test: [  0/  1]	Loss 1.513 (1.513)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.513 (1.513)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.513 (1.513)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 1.513 (1.513)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 35/  1]	epoch_time 0.0448 (0.0433)	validation_time 0.0003 (0.0006)	train_time 0.0445 (0.0426)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.46510000750422476, 0.5250000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.35it/s] 19%|#9        | 5/26 [00:00<00:01, 20.60it/s] 35%|###4      | 9/26 [00:00<00:00, 26.10it/s] 46%|####6     | 12/26 [00:00<00:00, 25.92it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.51it/s] 88%|########8 | 23/26 [00:00<00:00, 30.32it/s]100%|##########| 26/26 [00:00<00:00, 26.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 451 tensor(-1.9633e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 445 tensor(2.3190e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 435 tensor(5.6958e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.47)	train_minacc   0.56 (  0.55)	train_majacc   0.45 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2904 (5.2934)	zero_count 0.0000 (7.8780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.16it/s] 23%|##3       | 6/26 [00:00<00:00, 27.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.68it/s] 42%|####2     | 11/26 [00:00<00:00, 35.79it/s] 62%|######1   | 16/26 [00:00<00:00, 39.24it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.24it/s] 81%|########  | 21/26 [00:00<00:00, 38.48it/s]100%|##########| 26/26 [00:00<00:00, 41.59it/s]100%|##########| 26/26 [00:00<00:00, 34.21it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.45 (  0.45)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.547 (0.547)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.49 (  0.47)	test_minacc   0.65 (  0.56)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.65 (  0.56)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.546 (0.554)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.56)	test_majacc   0.46 (  0.45)	Loss_d 0.546 (0.554)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.47 (  0.46)	test_minacc   0.56 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.551 (0.553)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.21it/s]
Test: [  0/  1]	Loss 1.515 (1.515)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.515 (1.515)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.515 (1.515)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.515 (1.515)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 36/  1]	epoch_time 0.0412 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0408 (0.0425)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4641000073552132, 0.527999997138977)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.91it/s] 19%|#9        | 5/26 [00:00<00:01, 15.87it/s] 35%|###4      | 9/26 [00:00<00:00, 22.62it/s] 50%|#####     | 13/26 [00:00<00:00, 26.52it/s] 65%|######5   | 17/26 [00:00<00:00, 26.89it/s] 81%|########  | 21/26 [00:00<00:00, 29.35it/s] 96%|#########6| 25/26 [00:00<00:00, 31.00it/s]100%|##########| 26/26 [00:01<00:00, 24.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 432 tensor(3.7949e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.46)	train_minacc   0.56 (  0.55)	train_majacc   0.45 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2915 (5.2933)	zero_count 0.0000 (3.0810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.18it/s] 27%|##6       | 7/26 [00:00<00:00, 31.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.92it/s] 46%|####6     | 12/26 [00:00<00:00, 38.45it/s] 65%|######5   | 17/26 [00:00<00:00, 38.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.10it/s] 85%|########4 | 22/26 [00:00<00:00, 40.39it/s]100%|##########| 26/26 [00:00<00:00, 34.92it/s]
Test: [   0/  26]	Loss 0.548 (0.548)	test_acc   0.45 (  0.45)	test_minacc   0.57 (  0.57)	test_majacc   0.43 (  0.43)	Loss_d 0.548 (0.548)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.49 (  0.47)	test_minacc   0.65 (  0.56)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.65 (  0.56)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.546 (0.554)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.56)	test_majacc   0.45 (  0.44)	Loss_d 0.546 (0.554)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.47 (  0.46)	test_minacc   0.56 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.551 (0.553)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.06it/s]
Test: [  0/  1]	Loss 1.516 (1.516)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.516 (1.516)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.516 (1.516)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.516 (1.516)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 37/  1]	epoch_time 0.0420 (0.0432)	validation_time 0.0004 (0.0006)	train_time 0.0416 (0.0425)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4633000074028969, 0.527999997138977)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.32it/s] 23%|##3       | 6/26 [00:00<00:00, 24.71it/s] 38%|###8      | 10/26 [00:00<00:00, 29.07it/s] 50%|#####     | 13/26 [00:00<00:00, 27.52it/s] 65%|######5   | 17/26 [00:00<00:00, 30.00it/s] 81%|########  | 21/26 [00:00<00:00, 29.15it/s] 96%|#########6| 25/26 [00:00<00:00, 30.99it/s]100%|##########| 26/26 [00:00<00:00, 27.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 438 tensor(1.6814e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 436 tensor(2.1932e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.46)	train_minacc   0.56 (  0.55)	train_majacc   0.45 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2922 (5.2933)	zero_count 0.0000 (5.7720)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.71it/s] 27%|##6       | 7/26 [00:00<00:00, 25.88it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.88it/s] 46%|####6     | 12/26 [00:00<00:00, 31.48it/s] 65%|######5   | 17/26 [00:00<00:00, 36.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.13it/s] 85%|########4 | 22/26 [00:00<00:00, 39.06it/s]100%|##########| 26/26 [00:00<00:00, 31.71it/s]
Test: [   0/  26]	Loss 0.548 (0.548)	test_acc   0.45 (  0.45)	test_minacc   0.57 (  0.57)	test_majacc   0.43 (  0.43)	Loss_d 0.548 (0.548)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.48 (  0.47)	test_minacc   0.65 (  0.56)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.65 (  0.56)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.546 (0.555)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.45 (  0.44)	Loss_d 0.546 (0.555)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.47 (  0.46)	test_minacc   0.56 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.551 (0.553)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 32.63it/s]
Test: [  0/  1]	Loss 1.517 (1.517)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.517 (1.517)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.517 (1.517)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.517 (1.517)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 38/  1]	epoch_time 0.0445 (0.0433)	validation_time 0.0007 (0.0006)	train_time 0.0438 (0.0425)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4627000062763691, 0.527999997138977)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.95it/s] 19%|#9        | 5/26 [00:00<00:01, 19.03it/s] 35%|###4      | 9/26 [00:00<00:00, 24.04it/s] 46%|####6     | 12/26 [00:00<00:00, 24.39it/s] 62%|######1   | 16/26 [00:00<00:00, 27.89it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.86it/s] 88%|########8 | 23/26 [00:00<00:00, 29.38it/s]100%|##########| 26/26 [00:01<00:00, 25.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 453 tensor(-1.7929e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 447 tensor(2.2373e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.46)	train_minacc   0.56 (  0.55)	train_majacc   0.45 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2938 (5.2938)	zero_count 0.0000 (4.7580)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.00it/s] 12%|#1        | 3/26 [00:00<00:02, 10.90it/s] 35%|###4      | 9/26 [00:00<00:00, 27.71it/s]                                               35%|###4      | 9/26 [00:00<00:00, 27.71it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.99it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.94it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.94it/s] 92%|#########2| 24/26 [00:00<00:00, 39.66it/s]100%|##########| 26/26 [00:00<00:00, 31.22it/s]
Test: [   0/  26]	Loss 0.548 (0.548)	test_acc   0.45 (  0.45)	test_minacc   0.57 (  0.57)	test_majacc   0.43 (  0.43)	Loss_d 0.548 (0.548)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.550)	test_acc   0.49 (  0.47)	test_minacc   0.65 (  0.55)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.550)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.65 (  0.55)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.546 (0.555)	test_acc   0.47 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.45 (  0.44)	Loss_d 0.546 (0.555)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.47 (  0.46)	test_minacc   0.56 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.551 (0.553)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.12it/s]
Test: [  0/  1]	Loss 1.518 (1.518)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.518 (1.518)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.518 (1.518)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.518 (1.518)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 39/  1]	epoch_time 0.0460 (0.0433)	validation_time 0.0005 (0.0006)	train_time 0.0455 (0.0426)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4619000051617622, 0.5300000309944153)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.73it/s] 12%|#1        | 3/26 [00:00<00:03,  5.89it/s] 23%|##3       | 6/26 [00:00<00:01, 10.96it/s] 38%|###8      | 10/26 [00:00<00:00, 17.14it/s] 54%|#####3    | 14/26 [00:00<00:00, 21.72it/s] 65%|######5   | 17/26 [00:01<00:00, 22.56it/s] 81%|########  | 21/26 [00:01<00:00, 24.33it/s] 96%|#########6| 25/26 [00:01<00:00, 27.37it/s]100%|##########| 26/26 [00:01<00:00, 19.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 446 tensor(-1.6641e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 443 tensor(2.1554e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 444 tensor(6.9543e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.47 (  0.46)	train_minacc   0.56 (  0.55)	train_majacc   0.45 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2940 (5.2943)	zero_count 0.0000 (7.8000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 23%|##3       | 6/26 [00:00<00:00, 28.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.16it/s] 42%|####2     | 11/26 [00:00<00:00, 34.85it/s] 62%|######1   | 16/26 [00:00<00:00, 39.74it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.74it/s] 81%|########  | 21/26 [00:00<00:00, 38.57it/s]100%|##########| 26/26 [00:00<00:00, 41.64it/s]100%|##########| 26/26 [00:00<00:00, 34.18it/s]
Test: [   0/  26]	Loss 0.548 (0.548)	test_acc   0.45 (  0.45)	test_minacc   0.57 (  0.57)	test_majacc   0.43 (  0.43)	Loss_d 0.548 (0.548)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.550)	test_acc   0.48 (  0.47)	test_minacc   0.64 (  0.55)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.550)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.546 (0.555)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.45 (  0.44)	Loss_d 0.546 (0.555)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.47 (  0.46)	test_minacc   0.56 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.551 (0.553)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.14it/s]
Test: [  0/  1]	Loss 1.519 (1.519)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.519 (1.519)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.519 (1.519)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.519 (1.519)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 40/  1]	epoch_time 0.0445 (0.0434)	validation_time 0.0003 (0.0006)	train_time 0.0441 (0.0426)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4618000063300133, 0.5300000309944153)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 15%|#5        | 4/26 [00:00<00:01, 18.21it/s] 27%|##6       | 7/26 [00:00<00:00, 21.63it/s] 42%|####2     | 11/26 [00:00<00:00, 27.36it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.37it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.82it/s] 88%|########8 | 23/26 [00:00<00:00, 28.97it/s]100%|##########| 26/26 [00:00<00:00, 28.07it/s]100%|##########| 26/26 [00:01<00:00, 25.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 442 tensor(6.4368e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 446 tensor(1.2268e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 444 tensor(1.1058e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 458 tensor(-3.6776e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.46)	train_minacc   0.56 (  0.55)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2942 (5.2942)	zero_count 53.0000 (9.1640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.49it/s] 23%|##3       | 6/26 [00:00<00:00, 31.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.21it/s] 42%|####2     | 11/26 [00:00<00:00, 38.24it/s] 62%|######1   | 16/26 [00:00<00:00, 42.42it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.42it/s] 81%|########  | 21/26 [00:00<00:00, 40.07it/s]100%|##########| 26/26 [00:00<00:00, 42.71it/s]100%|##########| 26/26 [00:00<00:00, 35.52it/s]
Test: [   0/  26]	Loss 0.549 (0.549)	test_acc   0.45 (  0.45)	test_minacc   0.57 (  0.57)	test_majacc   0.43 (  0.43)	Loss_d 0.549 (0.549)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.550)	test_acc   0.49 (  0.47)	test_minacc   0.64 (  0.55)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.550)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.546 (0.555)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.45 (  0.44)	Loss_d 0.546 (0.555)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.46 (  0.46)	test_minacc   0.56 (  0.54)	test_majacc   0.44 (  0.45)	Loss_d 0.551 (0.553)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.99it/s]
Test: [  0/  1]	Loss 1.520 (1.520)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.520 (1.520)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.520 (1.520)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.520 (1.520)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 41/  1]	epoch_time 0.0413 (0.0433)	validation_time 0.0005 (0.0006)	train_time 0.0408 (0.0426)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4609000061750412, 0.531000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 15%|#5        | 4/26 [00:00<00:01, 16.38it/s] 31%|###       | 8/26 [00:00<00:00, 24.26it/s] 46%|####6     | 12/26 [00:00<00:00, 26.87it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.83it/s] 88%|########8 | 23/26 [00:00<00:00, 28.92it/s]100%|##########| 26/26 [00:01<00:00, 24.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 443 tensor(1.1985e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 454 tensor(8.8031e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 445 tensor(1.6647e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.46)	train_minacc   0.56 (  0.54)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2942 (5.2941)	zero_count 0.0000 (7.4490)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.65it/s] 27%|##6       | 7/26 [00:00<00:00, 31.73it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.73it/s] 46%|####6     | 12/26 [00:00<00:00, 37.50it/s] 65%|######5   | 17/26 [00:00<00:00, 40.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.35it/s] 85%|########4 | 22/26 [00:00<00:00, 39.34it/s]100%|##########| 26/26 [00:00<00:00, 35.86it/s]
Test: [   0/  26]	Loss 0.549 (0.549)	test_acc   0.45 (  0.45)	test_minacc   0.57 (  0.57)	test_majacc   0.43 (  0.43)	Loss_d 0.549 (0.549)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.49 (  0.46)	test_minacc   0.64 (  0.55)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.49 (  0.46)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.546 (0.555)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.45 (  0.44)	Loss_d 0.546 (0.555)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.46 (  0.46)	test_minacc   0.56 (  0.55)	test_majacc   0.44 (  0.45)	Loss_d 0.551 (0.553)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.89it/s]
Test: [  0/  1]	Loss 1.521 (1.521)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.521 (1.521)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.521 (1.521)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.521 (1.521)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 42/  1]	epoch_time 0.0410 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0406 (0.0426)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4603000050485134, 0.531000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.49it/s] 19%|#9        | 5/26 [00:00<00:01, 19.88it/s] 35%|###4      | 9/26 [00:00<00:00, 25.91it/s] 50%|#####     | 13/26 [00:00<00:00, 25.94it/s] 65%|######5   | 17/26 [00:00<00:00, 28.45it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.47it/s] 88%|########8 | 23/26 [00:00<00:00, 26.76it/s]100%|##########| 26/26 [00:01<00:00, 25.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 449 tensor(1.7484e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 457 tensor(4.8308e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 449 tensor(1.9201e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 460 tensor(-1.0447e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 463 tensor(-1.1715e-07, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.46)	train_minacc   0.56 (  0.54)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2943 (5.2941)	zero_count 0.0000 (8.9310)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.68it/s] 27%|##6       | 7/26 [00:00<00:00, 32.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.60it/s] 46%|####6     | 12/26 [00:00<00:00, 36.82it/s] 65%|######5   | 17/26 [00:00<00:00, 40.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.41it/s] 88%|########8 | 23/26 [00:00<00:00, 44.85it/s]100%|##########| 26/26 [00:00<00:00, 37.43it/s]
Test: [   0/  26]	Loss 0.549 (0.549)	test_acc   0.45 (  0.45)	test_minacc   0.57 (  0.57)	test_majacc   0.43 (  0.43)	Loss_d 0.549 (0.549)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.49 (  0.46)	test_minacc   0.64 (  0.54)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.49 (  0.46)	test_minacc_d   0.64 (  0.54)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.547 (0.555)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.54)	test_majacc   0.45 (  0.44)	Loss_d 0.547 (0.555)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.54)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.46 (  0.46)	test_minacc   0.56 (  0.54)	test_majacc   0.44 (  0.45)	Loss_d 0.551 (0.553)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.88it/s]
Test: [  0/  1]	Loss 1.522 (1.522)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.522 (1.522)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.522 (1.522)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.522 (1.522)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 43/  1]	epoch_time 0.0523 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0519 (0.0428)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4595000062584877, 0.5330000519752502)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.85it/s] 23%|##3       | 6/26 [00:00<00:00, 26.70it/s] 38%|###8      | 10/26 [00:00<00:00, 29.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.15it/s] 69%|######9   | 18/26 [00:00<00:00, 28.86it/s] 85%|########4 | 22/26 [00:00<00:00, 28.49it/s]100%|##########| 26/26 [00:00<00:00, 30.09it/s]100%|##########| 26/26 [00:00<00:00, 27.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 451 tensor(4.5574e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 462 tensor(1.0052e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 449 tensor(1.2430e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 456 tensor(5.8431e-08, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.46)	train_minacc   0.56 (  0.54)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.2944 (5.2942)	zero_count 0.0000 (8.5410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 23%|##3       | 6/26 [00:00<00:00, 30.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.22it/s] 42%|####2     | 11/26 [00:00<00:00, 37.59it/s] 62%|######1   | 16/26 [00:00<00:00, 41.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.40it/s] 81%|########  | 21/26 [00:00<00:00, 39.40it/s]100%|##########| 26/26 [00:00<00:00, 42.18it/s]100%|##########| 26/26 [00:00<00:00, 35.39it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.46 (  0.46)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.550 (0.550)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.54)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.54)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.547 (0.554)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.54)	test_majacc   0.45 (  0.44)	Loss_d 0.547 (0.554)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.54)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.46 (  0.46)	test_minacc   0.56 (  0.54)	test_majacc   0.44 (  0.44)	Loss_d 0.551 (0.553)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.42it/s]
Test: [  0/  1]	Loss 1.523 (1.523)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.523 (1.523)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.523 (1.523)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.523 (1.523)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 44/  1]	epoch_time 0.0427 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0423 (0.0428)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4591000039577484, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.30it/s] 19%|#9        | 5/26 [00:00<00:01, 18.93it/s] 35%|###4      | 9/26 [00:00<00:00, 25.10it/s] 50%|#####     | 13/26 [00:00<00:00, 28.68it/s] 65%|######5   | 17/26 [00:00<00:00, 28.10it/s] 81%|########  | 21/26 [00:00<00:00, 27.87it/s] 96%|#########6| 25/26 [00:00<00:00, 29.69it/s]100%|##########| 26/26 [00:01<00:00, 24.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 453 tensor(2.2687e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 460 tensor(5.4200e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 448 tensor(1.7895e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 453 tensor(3.0249e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.46)	train_minacc   0.56 (  0.54)	train_majacc   0.44 (  0.44)	train_corr   0.00 (  0.00)	l1 5.2945 (5.2940)	zero_count 0.0000 (8.8530)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.84it/s] 23%|##3       | 6/26 [00:00<00:01, 19.67it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.67it/s] 42%|####2     | 11/26 [00:00<00:00, 28.57it/s] 62%|######1   | 16/26 [00:00<00:00, 34.38it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.38it/s] 81%|########  | 21/26 [00:00<00:00, 35.14it/s]100%|##########| 26/26 [00:00<00:00, 39.21it/s]100%|##########| 26/26 [00:00<00:00, 29.13it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.46 (  0.46)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.550 (0.550)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.54)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.54)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.547 (0.554)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.45 (  0.44)	Loss_d 0.547 (0.554)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.46 (  0.46)	test_minacc   0.56 (  0.54)	test_majacc   0.44 (  0.44)	Loss_d 0.551 (0.553)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.21it/s]
Test: [  0/  1]	Loss 1.524 (1.524)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.524 (1.524)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.524 (1.524)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.524 (1.524)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 45/  1]	epoch_time 0.0434 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0430 (0.0428)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.45940000626444816, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.00it/s] 15%|#5        | 4/26 [00:00<00:01, 18.21it/s] 31%|###       | 8/26 [00:00<00:00, 25.45it/s] 46%|####6     | 12/26 [00:00<00:00, 29.24it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.96it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.93it/s] 88%|########8 | 23/26 [00:00<00:00, 28.75it/s]100%|##########| 26/26 [00:00<00:00, 27.87it/s]100%|##########| 26/26 [00:01<00:00, 25.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 467 tensor(-3.2400e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 453 tensor(2.3506e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 450 tensor(6.9570e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.46)	train_minacc   0.56 (  0.54)	train_majacc   0.44 (  0.44)	train_corr   0.00 (  0.00)	l1 5.2942 (5.2938)	zero_count 61.0000 (7.7650)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.58it/s] 23%|##3       | 6/26 [00:00<00:00, 29.07it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.07it/s] 42%|####2     | 11/26 [00:00<00:00, 36.01it/s] 62%|######1   | 16/26 [00:00<00:00, 40.05it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.05it/s] 81%|########  | 21/26 [00:00<00:00, 37.15it/s]100%|##########| 26/26 [00:00<00:00, 33.96it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.46 (  0.46)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.550 (0.550)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.547 (0.554)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.45 (  0.44)	Loss_d 0.547 (0.554)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.46 (  0.46)	test_minacc   0.56 (  0.54)	test_majacc   0.44 (  0.44)	Loss_d 0.551 (0.553)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.09it/s]
Test: [  0/  1]	Loss 1.525 (1.525)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.525 (1.525)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.525 (1.525)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.525 (1.525)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 46/  1]	epoch_time 0.0412 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0408 (0.0427)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4594000048935413, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.49it/s] 19%|#9        | 5/26 [00:00<00:01, 20.57it/s] 35%|###4      | 9/26 [00:00<00:00, 26.24it/s] 50%|#####     | 13/26 [00:00<00:00, 28.97it/s] 65%|######5   | 17/26 [00:00<00:00, 30.70it/s] 81%|########  | 21/26 [00:00<00:00, 28.83it/s] 92%|#########2| 24/26 [00:00<00:00, 27.79it/s]100%|##########| 26/26 [00:00<00:00, 26.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 459 tensor(1.3714e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 450 tensor(1.0499e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 454 tensor(2.3475e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.46)	train_minacc   0.56 (  0.55)	train_majacc   0.44 (  0.44)	train_corr   0.00 (  0.00)	l1 5.2943 (5.2936)	zero_count 0.0000 (4.3680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.13it/s] 23%|##3       | 6/26 [00:00<00:00, 32.26it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.26it/s] 42%|####2     | 11/26 [00:00<00:00, 38.46it/s] 62%|######1   | 16/26 [00:00<00:00, 41.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.99it/s] 81%|########  | 21/26 [00:00<00:00, 39.66it/s]100%|##########| 26/26 [00:00<00:00, 42.59it/s]100%|##########| 26/26 [00:00<00:00, 35.79it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.45 (  0.45)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.550 (0.550)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.547 (0.554)	test_acc   0.48 (  0.46)	test_minacc   0.64 (  0.55)	test_majacc   0.46 (  0.44)	Loss_d 0.547 (0.554)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.551 (0.553)	test_acc   0.46 (  0.46)	test_minacc   0.56 (  0.55)	test_majacc   0.44 (  0.44)	Loss_d 0.551 (0.553)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.17it/s]
Test: [  0/  1]	Loss 1.526 (1.526)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.526 (1.526)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.526 (1.526)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.526 (1.526)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 47/  1]	epoch_time 0.0424 (0.0434)	validation_time 0.0005 (0.0006)	train_time 0.0419 (0.0427)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4585000061094761, 0.5350000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.87it/s] 19%|#9        | 5/26 [00:00<00:00, 25.18it/s] 35%|###4      | 9/26 [00:00<00:00, 28.30it/s] 46%|####6     | 12/26 [00:00<00:00, 28.83it/s] 62%|######1   | 16/26 [00:00<00:00, 30.44it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.81it/s] 88%|########8 | 23/26 [00:00<00:00, 27.37it/s]100%|##########| 26/26 [00:00<00:00, 26.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 471 tensor(-8.6881e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 459 tensor(1.7125e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 459 tensor(6.3440e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.46 (  0.46)	train_minacc   0.56 (  0.55)	train_majacc   0.44 (  0.44)	train_corr   0.00 (  0.00)	l1 5.2945 (5.2934)	zero_count 0.0000 (5.8110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.42it/s] 23%|##3       | 6/26 [00:00<00:00, 21.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.43it/s] 42%|####2     | 11/26 [00:00<00:00, 30.20it/s] 62%|######1   | 16/26 [00:00<00:00, 35.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.80it/s] 81%|########  | 21/26 [00:00<00:00, 36.15it/s]100%|##########| 26/26 [00:00<00:00, 39.76it/s]100%|##########| 26/26 [00:00<00:00, 30.61it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.45 (  0.45)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.550 (0.550)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.46 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.547 (0.554)	test_acc   0.48 (  0.46)	test_minacc   0.64 (  0.55)	test_majacc   0.46 (  0.44)	Loss_d 0.547 (0.554)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.550 (0.553)	test_acc   0.46 (  0.46)	test_minacc   0.56 (  0.55)	test_majacc   0.44 (  0.44)	Loss_d 0.550 (0.553)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.21it/s]
Test: [  0/  1]	Loss 1.527 (1.527)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.527 (1.527)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.527 (1.527)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.527 (1.527)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 48/  1]	epoch_time 0.0427 (0.0434)	validation_time 0.0005 (0.0006)	train_time 0.0423 (0.0427)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4585000066459179, 0.5360000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.21it/s] 19%|#9        | 5/26 [00:00<00:00, 22.81it/s] 35%|###4      | 9/26 [00:00<00:00, 28.07it/s] 50%|#####     | 13/26 [00:00<00:00, 31.07it/s] 65%|######5   | 17/26 [00:00<00:00, 32.16it/s] 81%|########  | 21/26 [00:00<00:00, 32.37it/s] 96%|#########6| 25/26 [00:00<00:00, 30.57it/s]100%|##########| 26/26 [00:00<00:00, 27.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 465 tensor(8.5340e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 455 tensor(1.5163e-06, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  28.80 ( 28.80)	train_acc   0.45 (  0.46)	train_minacc   0.54 (  0.55)	train_majacc   0.44 (  0.44)	train_corr   0.00 (  0.00)	l1 5.2948 (5.2933)	zero_count 0.0000 (3.8220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 19.47it/s] 31%|###       | 8/26 [00:00<00:00, 33.89it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.89it/s] 50%|#####     | 13/26 [00:00<00:00, 38.13it/s] 69%|######9   | 18/26 [00:00<00:00, 40.82it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.82it/s] 88%|########8 | 23/26 [00:00<00:00, 42.43it/s]100%|##########| 26/26 [00:00<00:00, 36.31it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.45 (  0.45)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.550 (0.550)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.48 (  0.46)	test_minacc   0.62 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.548 (0.549)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.547 (0.554)	test_acc   0.49 (  0.46)	test_minacc   0.66 (  0.56)	test_majacc   0.46 (  0.44)	Loss_d 0.547 (0.554)	test_acc_d   0.49 (  0.46)	test_minacc_d   0.66 (  0.56)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.550 (0.552)	test_acc   0.45 (  0.46)	test_minacc   0.54 (  0.55)	test_majacc   0.44 (  0.44)	Loss_d 0.550 (0.552)	test_acc_d   0.45 (  0.46)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 1.527 (1.527)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.527 (1.527)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.527 (1.527)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.527 (1.527)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.09 (  0.09)
Overall Timing[ 49/  1]	epoch_time 0.0423 (0.0433)	validation_time 0.0003 (0.0006)	train_time 0.0419 (0.0427)
record: (train_acc, test_acc) (0.7104000359773636, 0.6490000486373901)
last accs (train_acc, test_acc) (0.4589000052511692, 0.5360000133514404)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.163 MB of 0.163 MB uploadedwandb: \ 0.163 MB of 0.163 MB uploadedwandb: | 0.163 MB of 0.163 MB uploadedwandb: / 0.163 MB of 0.163 MB uploadedwandb: - 0.186 MB of 0.194 MB uploaded (0.003 MB deduped)wandb: \ 0.500 MB of 0.500 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/diagnostics/epoch_time_val █▁▁▂▂▁▂▁▂▁▂▂▁▁▁▂▁▂▁▂▂▂▂▂▁▁▂▁▂▁▂▂▂▁▁▃▂▁▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/diagnostics/train_time_val █▂▁▂▃▁▂▂▂▂▂▂▁▁▂▂▁▂▁▂▂▃▂▂▁▁▂▂▂▂▂▂▂▂▂▃▂▂▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/Loss_avg ▆▇▆▇▆█▇█▇███▂▁▂▂▂▂▂▄▄▄▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/Loss_d_avg ▆▇▆▇▆█▇█▇███▂▁▂▂▂▂▂▄▄▄▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/Loss_d_val ▆▇▆▇▆█▇█▇███▂▁▂▂▂▂▂▄▄▄▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/Loss_val ▆▇▆▇▆█▇█▇███▂▁▂▂▂▂▂▄▄▄▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_acc_avg ▁▁▁▂▃▃▄▄▅▅▄▄▇█▇▇▇▇▇▇██▇▇▆▆▆▆▆▆▆▆▆▆▆▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_acc_d_avg ▁▁▁▂▃▃▄▄▅▅▄▄▇█▇▇▇▇▇▇██▇▇▆▆▆▆▆▆▆▆▆▆▆▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_acc_d_val ▁▁▁▂▃▃▄▄▅▅▄▄▇█▇▇▇▇▇▇██▇▇▆▆▆▆▆▆▆▆▆▆▆▇▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_acc_val ▁▁▁▂▃▃▄▄▅▅▄▄▇█▇▇▇▇▇▇██▇▇▆▆▆▆▆▆▆▆▆▆▆▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_corr_d_avg ███▇▆▆▆▆▅▅▆▆▃▁▃▃▂▃▃▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_corr_d_val ███▇▆▆▆▆▅▅▆▆▃▁▃▃▂▃▃▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_majacc_avg ████▇▇▇▇▇▇▇▇▅▄▄▄▄▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_majacc_d_avg ████▇▇▇▇▇▇▇▇▅▄▄▄▄▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_majacc_d_val ████▇▇▇▇▇▇▇▇▅▄▄▄▄▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_majacc_val ████▇▇▇▇▇▇▇▇▅▄▄▄▄▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_minacc_avg ▁▁▁▂▃▃▄▄▅▅▄▄▇█▇▇▇▇▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_minacc_d_avg ▁▁▁▂▃▃▄▄▅▅▄▄▇█▇▇▇▇▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_minacc_d_val ▁▁▁▂▃▃▄▄▅▅▄▄▇█▇▇▇▇▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_minacc_val ▁▁▁▂▃▃▄▄▅▅▄▄▇█▇▇▇▇▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/Loss_avg █▆▆▆▅▅▅▅▅▄▄▄▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/Loss_val ███▇▆▆▆▅▄▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/l1_avg ▇▇▇█████████▆▃▂▂▂▂▂▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/l1_val ▆▇▇██████▇▇▆▄▃▂▂▂▁▁▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_acc_avg ▆▇▇▇▇▇██████▇▅▅▅▅▅▅▆▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_acc_val ▇▇▇▇▇▇▇█████▆▅▆▅▅▆▆▆▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_majacc_avg ▇██████▇▇▇▇▇▇▅▅▄▅▅▅▅▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_majacc_val ████████████▅▄▆▅▄▆▅▆▁▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_minacc_avg ▂▁▁▁▃▃▄▄▅▅▆▆▇██████▆█▇▇▆▆▆▆▆▆▆▆▆▅▅▅▅▅▅▅▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_minacc_val ▁▁▁▁▃▃▃▄▆▅▅▅▇▇▇▇▇▇▇▆██▇▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_nll_avg █▅▅▄▃▃▃▂▂▁▁▁▂▆▆▆▆▆▆█████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_nll_val ▅▅▅▅▃▃▂▂▁▁▁▂▅▇▆▆▇▅▆▇████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_penalty_avg █▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_penalty_val ██▇▆▄▄▃▃▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/weight_norm_avg ▁▃▄▄▄▄▄▄▄▄▄▅▅▅▅▅▅▅▅▆████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/weight_norm_val ▁▂▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▄▆████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▅█▄▂▂▁▁▁▁▂▂▁▂▂▂▂▂▂▂▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▇▁▁▁█▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/diagnostics/epoch_time_val 0.04227
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/diagnostics/train_time_val 0.04193
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/diagnostics/validation_time_val 0.00033
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/Loss_avg 1.52739
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/Loss_d_avg 1.52739
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/Loss_d_val 1.52739
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/Loss_val 1.52739
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_acc_avg 0.536
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_acc_d_avg 0.536
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_acc_d_val 0.536
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_acc_val 0.536
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_corr_d_avg 0.0929
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_corr_d_val 0.0929
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_majacc_avg 0.46
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_majacc_d_avg 0.46
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_majacc_d_val 0.46
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_majacc_val 0.46
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_minacc_avg 0.54444
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_minacc_d_avg 0.54444
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_minacc_d_val 0.54444
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/test/test_minacc_val 0.54444
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/Loss_val 6e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/l1_avg 5.29333
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/l1_val 5.29484
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_acc_avg 0.4586
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_acc_val 0.452
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_majacc_avg 0.44256
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_majacc_val 0.43541
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_minacc_avg 0.55086
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_minacc_val 0.53659
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_nll_avg 0.5523
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_nll_val 0.55031
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/weight_norm_avg 28.80073
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/weight_norm_val 28.80072
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/zero_count_avg 3.822
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/145/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/a1b2gyvr
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_202027-a1b2gyvr/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_202311-w2dhcz1v
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/w2dhcz1v
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1180
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6020, 3, 32, 32) (5980, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:35,  1.41s/it] 19%|#9        | 5/26 [00:01<00:04,  4.22it/s] 35%|###4      | 9/26 [00:01<00:02,  8.26it/s] 50%|#####     | 13/26 [00:01<00:01, 12.63it/s] 65%|######5   | 17/26 [00:01<00:00, 16.97it/s] 81%|########  | 21/26 [00:01<00:00, 21.22it/s] 96%|#########6| 25/26 [00:02<00:00, 24.17it/s]100%|##########| 26/26 [00:02<00:00, 10.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.430 (0.506)	train_nll   0.43 (  0.51)	train_penalty   0.05 (  0.17)	weight_norm  20.79 ( 18.10)	train_acc   0.84 (  0.81)	train_minacc   0.03 (  0.07)	train_majacc   0.99 (  0.94)	train_corr   0.00 (  0.00)	l1 6.5737 (7.9330)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.87it/s] 12%|#1        | 3/26 [00:00<00:02,  9.87it/s] 31%|###       | 8/26 [00:00<00:00, 23.23it/s]                                               31%|###       | 8/26 [00:00<00:00, 23.23it/s] 50%|#####     | 13/26 [00:00<00:00, 30.77it/s] 69%|######9   | 18/26 [00:00<00:00, 36.05it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.05it/s] 88%|########8 | 23/26 [00:00<00:00, 36.16it/s]100%|##########| 26/26 [00:00<00:00, 29.44it/s]
Test: [   0/  26]	Loss 0.482 (0.482)	test_acc   0.82 (  0.82)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.482 (0.482)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.449 (0.425)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.449 (0.425)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.411 (0.422)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.411 (0.422)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.420 (0.422)	test_acc   0.84 (  0.85)	test_minacc   0.03 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.420 (0.422)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.03 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.51it/s]
Test: [  0/  1]	Loss 1.719 (1.719)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.719 (1.719)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.719 (1.719)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.719 (1.719)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0793 (0.0793)	validation_time 0.0069 (0.0069)	train_time 0.0693 (0.0693)
record: (train_acc, test_acc) (0.8464000250697136, 0.11800000816583633)
last accs (train_acc, test_acc) (0.8464000250697136, 0.11800000816583633)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.51it/s] 15%|#5        | 4/26 [00:00<00:02,  9.66it/s] 31%|###       | 8/26 [00:00<00:01, 17.11it/s] 46%|####6     | 12/26 [00:00<00:00, 22.46it/s] 62%|######1   | 16/26 [00:00<00:00, 25.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.52it/s] 92%|#########2| 24/26 [00:01<00:00, 30.45it/s]100%|##########| 26/26 [00:01<00:00, 21.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.421 (0.421)	train_nll   0.42 (  0.42)	train_penalty   0.06 (  0.06)	weight_norm  21.87 ( 21.54)	train_acc   0.84 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.4388 (6.4789)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 23%|##3       | 6/26 [00:00<00:00, 31.01it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.01it/s] 42%|####2     | 11/26 [00:00<00:00, 38.22it/s] 62%|######1   | 16/26 [00:00<00:00, 40.94it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.94it/s] 81%|########  | 21/26 [00:00<00:00, 40.91it/s]100%|##########| 26/26 [00:00<00:00, 42.69it/s]100%|##########| 26/26 [00:00<00:00, 36.05it/s]
Test: [   0/  26]	Loss 0.469 (0.469)	test_acc   0.83 (  0.83)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.469 (0.469)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.436 (0.416)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.436 (0.416)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  20/  26]	Loss 0.409 (0.415)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.409 (0.415)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  26/  26]	Loss 0.394 (0.414)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.394 (0.414)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.99)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.31it/s]
Test: [  0/  1]	Loss 1.841 (1.841)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.841 (1.841)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.841 (1.841)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.841 (1.841)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0484 (0.0639)	validation_time 0.0003 (0.0036)	train_time 0.0481 (0.0587)
record: (train_acc, test_acc) (0.8464000250697136, 0.11800000816583633)
last accs (train_acc, test_acc) (0.8487000214457512, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.37it/s] 23%|##3       | 6/26 [00:00<00:00, 27.80it/s] 38%|###8      | 10/26 [00:00<00:00, 31.06it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.14it/s] 69%|######9   | 18/26 [00:00<00:00, 32.97it/s] 85%|########4 | 22/26 [00:00<00:00, 33.64it/s]100%|##########| 26/26 [00:00<00:00, 34.44it/s]100%|##########| 26/26 [00:00<00:00, 30.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.403 (0.404)	train_nll   0.40 (  0.40)	train_penalty   0.03 (  0.05)	weight_norm  21.99 ( 21.95)	train_acc   0.85 (  0.85)	train_minacc   0.16 (  0.04)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 6.3209 (6.3462)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.56it/s] 23%|##3       | 6/26 [00:00<00:00, 30.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.90it/s] 42%|####2     | 11/26 [00:00<00:00, 38.03it/s] 62%|######1   | 16/26 [00:00<00:00, 41.18it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.18it/s] 81%|########  | 21/26 [00:00<00:00, 39.15it/s]100%|##########| 26/26 [00:00<00:00, 41.99it/s]100%|##########| 26/26 [00:00<00:00, 35.85it/s]
Test: [   0/  26]	Loss 0.404 (0.404)	test_acc   0.83 (  0.83)	test_minacc   0.16 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 0.404 (0.404)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.373 (0.368)	test_acc   0.85 (  0.85)	test_minacc   0.16 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 0.373 (0.368)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.16 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.365 (0.367)	test_acc   0.85 (  0.85)	test_minacc   0.07 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 0.365 (0.367)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.07 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.359 (0.365)	test_acc   0.87 (  0.85)	test_minacc   0.16 (  0.11)	test_majacc   1.00 (  0.98)	Loss_d 0.359 (0.365)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.16 (  0.11)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.92 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.13it/s]
Test: [  0/  1]	Loss 1.636 (1.636)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 1.636 (1.636)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.636 (1.636)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 1.636 (1.636)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0419 (0.0565)	validation_time 0.0005 (0.0026)	train_time 0.0414 (0.0529)
record: (train_acc, test_acc) (0.8497000234723091, 0.17900000512599945)
last accs (train_acc, test_acc) (0.8497000234723091, 0.17900000512599945)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.94it/s] 15%|#5        | 4/26 [00:00<00:01, 17.30it/s] 31%|###       | 8/26 [00:00<00:00, 24.82it/s] 46%|####6     | 12/26 [00:00<00:00, 28.30it/s] 62%|######1   | 16/26 [00:00<00:00, 30.09it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.15it/s] 92%|#########2| 24/26 [00:00<00:00, 32.13it/s]100%|##########| 26/26 [00:00<00:00, 26.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.374 (0.374)	train_nll   0.37 (  0.37)	train_penalty   0.03 (  0.04)	weight_norm  22.06 ( 22.03)	train_acc   0.84 (  0.85)	train_minacc   0.16 (  0.08)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 6.4069 (6.3219)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.32it/s] 23%|##3       | 6/26 [00:00<00:00, 23.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.39it/s] 42%|####2     | 11/26 [00:00<00:00, 32.50it/s] 62%|######1   | 16/26 [00:00<00:00, 34.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.06it/s] 81%|########  | 21/26 [00:00<00:00, 37.85it/s]100%|##########| 26/26 [00:00<00:00, 41.26it/s]100%|##########| 26/26 [00:00<00:00, 32.02it/s]
Test: [   0/  26]	Loss 0.389 (0.389)	test_acc   0.84 (  0.84)	test_minacc   0.28 (  0.28)	test_majacc   0.96 (  0.96)	Loss_d 0.389 (0.389)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.343 (0.346)	test_acc   0.85 (  0.85)	test_minacc   0.27 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 0.343 (0.346)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.27 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.345 (0.345)	test_acc   0.85 (  0.85)	test_minacc   0.22 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 0.345 (0.345)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.22 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.91 (  0.89)
Test: [  26/  26]	Loss 0.342 (0.342)	test_acc   0.86 (  0.85)	test_minacc   0.24 (  0.23)	test_majacc   0.97 (  0.96)	Loss_d 0.342 (0.342)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.24 (  0.23)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.09it/s]
Test: [  0/  1]	Loss 1.702 (1.702)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 1.702 (1.702)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 1.702 (1.702)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 1.702 (1.702)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0433 (0.0532)	validation_time 0.0003 (0.0020)	train_time 0.0429 (0.0504)
record: (train_acc, test_acc) (0.8530000287890435, 0.2639999985694885)
last accs (train_acc, test_acc) (0.8530000287890435, 0.2639999985694885)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.88it/s] 19%|#9        | 5/26 [00:00<00:01, 17.99it/s] 35%|###4      | 9/26 [00:00<00:00, 24.68it/s] 50%|#####     | 13/26 [00:00<00:00, 28.42it/s] 65%|######5   | 17/26 [00:00<00:00, 30.48it/s] 81%|########  | 21/26 [00:00<00:00, 33.18it/s] 96%|#########6| 25/26 [00:00<00:00, 33.94it/s]100%|##########| 26/26 [00:00<00:00, 27.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.349 (0.349)	train_nll   0.35 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.12 ( 22.09)	train_acc   0.85 (  0.85)	train_minacc   0.29 (  0.19)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 6.2054 (6.1356)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.85it/s] 23%|##3       | 6/26 [00:00<00:00, 32.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.03it/s] 42%|####2     | 11/26 [00:00<00:00, 38.03it/s] 62%|######1   | 16/26 [00:00<00:00, 41.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.93it/s] 81%|########  | 21/26 [00:00<00:00, 39.80it/s]100%|##########| 26/26 [00:00<00:00, 42.50it/s]100%|##########| 26/26 [00:00<00:00, 36.03it/s]
Test: [   0/  26]	Loss 0.365 (0.365)	test_acc   0.86 (  0.86)	test_minacc   0.37 (  0.37)	test_majacc   0.97 (  0.97)	Loss_d 0.365 (0.365)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.327 (0.326)	test_acc   0.86 (  0.86)	test_minacc   0.34 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 0.327 (0.326)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.34 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.320 (0.325)	test_acc   0.86 (  0.86)	test_minacc   0.29 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 0.320 (0.325)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.29 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.89)
Test: [  26/  26]	Loss 0.319 (0.322)	test_acc   0.86 (  0.86)	test_minacc   0.34 (  0.30)	test_majacc   0.95 (  0.96)	Loss_d 0.319 (0.322)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.34 (  0.30)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.88 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 39.66it/s]
Test: [  0/  1]	Loss 1.711 (1.711)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 1.711 (1.711)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.68 (  0.68)
Test: [  1/  1]	Loss 1.711 (1.711)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 1.711 (1.711)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.68 (  0.68)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0394 (0.0504)	validation_time 0.0006 (0.0017)	train_time 0.0387 (0.0481)
record: (train_acc, test_acc) (0.8617000223398209, 0.30300000309944153)
last accs (train_acc, test_acc) (0.8617000223398209, 0.30300000309944153)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.75it/s] 23%|##3       | 6/26 [00:00<00:00, 27.01it/s] 38%|###8      | 10/26 [00:00<00:00, 30.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.08it/s] 69%|######9   | 18/26 [00:00<00:00, 33.32it/s] 85%|########4 | 22/26 [00:00<00:00, 34.03it/s]100%|##########| 26/26 [00:00<00:00, 34.69it/s]100%|##########| 26/26 [00:00<00:00, 30.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.345 (0.334)	train_nll   0.34 (  0.33)	train_penalty   0.02 (  0.03)	weight_norm  22.19 ( 22.16)	train_acc   0.87 (  0.86)	train_minacc   0.50 (  0.26)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 6.1440 (6.1261)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.66it/s] 15%|#5        | 4/26 [00:00<00:01, 17.77it/s] 35%|###4      | 9/26 [00:00<00:00, 29.87it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.92it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.92it/s] 92%|#########2| 24/26 [00:00<00:00, 39.00it/s]100%|##########| 26/26 [00:00<00:00, 32.37it/s]
Test: [   0/  26]	Loss 0.348 (0.348)	test_acc   0.86 (  0.86)	test_minacc   0.43 (  0.43)	test_majacc   0.95 (  0.95)	Loss_d 0.348 (0.348)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.324 (0.313)	test_acc   0.87 (  0.87)	test_minacc   0.44 (  0.46)	test_majacc   0.95 (  0.94)	Loss_d 0.324 (0.313)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.44 (  0.46)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.85 (  0.85)
Test: [  20/  26]	Loss 0.315 (0.313)	test_acc   0.87 (  0.87)	test_minacc   0.42 (  0.45)	test_majacc   0.94 (  0.94)	Loss_d 0.315 (0.313)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.42 (  0.45)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.85 (  0.85)
Test: [  26/  26]	Loss 0.297 (0.309)	test_acc   0.89 (  0.87)	test_minacc   0.53 (  0.45)	test_majacc   0.95 (  0.94)	Loss_d 0.297 (0.309)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.53 (  0.45)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.83 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.40it/s]
Test: [  0/  1]	Loss 1.653 (1.653)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.96 (  0.96)	Loss_d 1.653 (1.653)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 1.653 (1.653)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.96 (  0.96)	Loss_d 1.653 (1.653)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.55 (  0.55)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0388 (0.0485)	validation_time 0.0004 (0.0015)	train_time 0.0383 (0.0465)
record: (train_acc, test_acc) (0.8685000245571136, 0.3930000066757202)
last accs (train_acc, test_acc) (0.8685000245571136, 0.3930000066757202)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.99it/s] 23%|##3       | 6/26 [00:00<00:00, 28.06it/s] 38%|###8      | 10/26 [00:00<00:00, 31.27it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.65it/s] 69%|######9   | 18/26 [00:00<00:00, 35.38it/s] 85%|########4 | 22/26 [00:00<00:00, 35.95it/s]100%|##########| 26/26 [00:00<00:00, 36.76it/s]100%|##########| 26/26 [00:00<00:00, 31.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.320 (0.317)	train_nll   0.32 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.29 ( 22.24)	train_acc   0.84 (  0.86)	train_minacc   0.34 (  0.33)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 6.2503 (6.1273)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.81it/s] 23%|##3       | 6/26 [00:00<00:00, 30.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.69it/s] 42%|####2     | 11/26 [00:00<00:00, 36.92it/s] 62%|######1   | 16/26 [00:00<00:00, 41.29it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.29it/s] 81%|########  | 21/26 [00:00<00:00, 37.96it/s]100%|##########| 26/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 34.32it/s]
Test: [   0/  26]	Loss 0.320 (0.320)	test_acc   0.87 (  0.87)	test_minacc   0.52 (  0.52)	test_majacc   0.95 (  0.95)	Loss_d 0.320 (0.320)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.320 (0.292)	test_acc   0.87 (  0.88)	test_minacc   0.47 (  0.49)	test_majacc   0.95 (  0.95)	Loss_d 0.320 (0.292)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.85)
Test: [  20/  26]	Loss 0.284 (0.291)	test_acc   0.87 (  0.88)	test_minacc   0.55 (  0.49)	test_majacc   0.93 (  0.94)	Loss_d 0.284 (0.291)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.55 (  0.49)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.84 (  0.85)
Test: [  26/  26]	Loss 0.271 (0.286)	test_acc   0.90 (  0.88)	test_minacc   0.58 (  0.49)	test_majacc   0.95 (  0.95)	Loss_d 0.271 (0.286)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.58 (  0.49)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.88it/s]
Test: [  0/  1]	Loss 1.742 (1.742)	test_acc   0.40 (  0.40)	test_minacc   0.33 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 1.742 (1.742)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 1.742 (1.742)	test_acc   0.40 (  0.40)	test_minacc   0.33 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 1.742 (1.742)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.56 (  0.56)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0403 (0.0473)	validation_time 0.0004 (0.0014)	train_time 0.0398 (0.0455)
record: (train_acc, test_acc) (0.8771000229716301, 0.3960000276565552)
last accs (train_acc, test_acc) (0.8771000229716301, 0.3960000276565552)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.51it/s] 23%|##3       | 6/26 [00:00<00:00, 30.91it/s] 38%|###8      | 10/26 [00:00<00:00, 33.47it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.32it/s] 69%|######9   | 18/26 [00:00<00:00, 33.75it/s] 85%|########4 | 22/26 [00:00<00:00, 33.64it/s]100%|##########| 26/26 [00:00<00:00, 34.09it/s]100%|##########| 26/26 [00:00<00:00, 30.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.323 (0.317)	train_nll   0.32 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.43 ( 22.36)	train_acc   0.85 (  0.86)	train_minacc   0.34 (  0.35)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 6.0596 (6.1478)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.49it/s] 19%|#9        | 5/26 [00:00<00:01, 19.57it/s] 38%|###8      | 10/26 [00:00<00:00, 29.76it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.76it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.14it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.91it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.91it/s] 96%|#########6| 25/26 [00:00<00:00, 39.55it/s]100%|##########| 26/26 [00:00<00:00, 31.53it/s]
Test: [   0/  26]	Loss 0.325 (0.325)	test_acc   0.87 (  0.87)	test_minacc   0.52 (  0.52)	test_majacc   0.94 (  0.94)	Loss_d 0.325 (0.325)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.311 (0.297)	test_acc   0.87 (  0.88)	test_minacc   0.42 (  0.47)	test_majacc   0.95 (  0.95)	Loss_d 0.311 (0.297)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.42 (  0.47)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  20/  26]	Loss 0.308 (0.295)	test_acc   0.89 (  0.87)	test_minacc   0.49 (  0.46)	test_majacc   0.96 (  0.95)	Loss_d 0.308 (0.295)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.49 (  0.46)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.88 (  0.86)
Test: [  26/  26]	Loss 0.289 (0.294)	test_acc   0.87 (  0.87)	test_minacc   0.50 (  0.47)	test_majacc   0.93 (  0.95)	Loss_d 0.289 (0.294)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.50 (  0.47)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.84 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.94it/s]
Test: [  0/  1]	Loss 1.776 (1.776)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 1.776 (1.776)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 1.776 (1.776)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 1.776 (1.776)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.61 (  0.61)
Overall Timing[  7/  1]	epoch_time 0.0475 (0.0474)	validation_time 0.0003 (0.0012)	train_time 0.0472 (0.0457)
record: (train_acc, test_acc) (0.8771000229716301, 0.3960000276565552)
last accs (train_acc, test_acc) (0.8745000266432762, 0.3880000114440918)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.94it/s] 19%|#9        | 5/26 [00:00<00:01, 12.94it/s] 35%|###4      | 9/26 [00:00<00:00, 19.65it/s] 50%|#####     | 13/26 [00:00<00:00, 24.18it/s] 65%|######5   | 17/26 [00:00<00:00, 27.21it/s] 81%|########  | 21/26 [00:00<00:00, 29.19it/s] 96%|#########6| 25/26 [00:01<00:00, 31.03it/s]100%|##########| 26/26 [00:01<00:00, 23.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.324 (0.307)	train_nll   0.32 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.59 ( 22.50)	train_acc   0.87 (  0.87)	train_minacc   0.45 (  0.38)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 5.8451 (5.9994)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 23%|##3       | 6/26 [00:00<00:00, 25.19it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.19it/s] 42%|####2     | 11/26 [00:00<00:00, 33.42it/s] 62%|######1   | 16/26 [00:00<00:00, 38.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.25it/s] 81%|########  | 21/26 [00:00<00:00, 38.98it/s]100%|##########| 26/26 [00:00<00:00, 41.59it/s]100%|##########| 26/26 [00:00<00:00, 33.45it/s]
Test: [   0/  26]	Loss 0.307 (0.307)	test_acc   0.88 (  0.88)	test_minacc   0.58 (  0.58)	test_majacc   0.94 (  0.94)	Loss_d 0.307 (0.307)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.303 (0.288)	test_acc   0.87 (  0.88)	test_minacc   0.53 (  0.58)	test_majacc   0.93 (  0.93)	Loss_d 0.303 (0.288)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.84 (  0.84)
Test: [  20/  26]	Loss 0.306 (0.290)	test_acc   0.86 (  0.87)	test_minacc   0.45 (  0.57)	test_majacc   0.93 (  0.93)	Loss_d 0.306 (0.290)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.45 (  0.57)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.85 (  0.83)
Test: [  26/  26]	Loss 0.289 (0.289)	test_acc   0.87 (  0.87)	test_minacc   0.50 (  0.57)	test_majacc   0.93 (  0.93)	Loss_d 0.289 (0.289)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.50 (  0.57)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.82 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.82it/s]
Test: [  0/  1]	Loss 1.643 (1.643)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.93 (  0.93)	Loss_d 1.643 (1.643)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 1.643 (1.643)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.93 (  0.93)	Loss_d 1.643 (1.643)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.54 (  0.54)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0417 (0.0467)	validation_time 0.0004 (0.0011)	train_time 0.0412 (0.0452)
record: (train_acc, test_acc) (0.874600023150444, 0.44200003147125244)
last accs (train_acc, test_acc) (0.874600023150444, 0.44200003147125244)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.67it/s] 23%|##3       | 6/26 [00:00<00:00, 24.29it/s] 38%|###8      | 10/26 [00:00<00:00, 28.57it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.45it/s] 69%|######9   | 18/26 [00:00<00:00, 31.99it/s] 85%|########4 | 22/26 [00:00<00:00, 32.50it/s]100%|##########| 26/26 [00:00<00:00, 33.49it/s]100%|##########| 26/26 [00:00<00:00, 28.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.284 (0.287)	train_nll   0.28 (  0.29)	train_penalty   0.01 (  0.02)	weight_norm  22.78 ( 22.69)	train_acc   0.89 (  0.88)	train_minacc   0.50 (  0.45)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.1366 (6.3556)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.24it/s] 23%|##3       | 6/26 [00:00<00:00, 31.34it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.34it/s] 42%|####2     | 11/26 [00:00<00:00, 37.74it/s] 62%|######1   | 16/26 [00:00<00:00, 41.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.27it/s] 81%|########  | 21/26 [00:00<00:00, 39.27it/s]100%|##########| 26/26 [00:00<00:00, 42.08it/s]100%|##########| 26/26 [00:00<00:00, 35.64it/s]
Test: [   0/  26]	Loss 0.293 (0.293)	test_acc   0.88 (  0.88)	test_minacc   0.52 (  0.52)	test_majacc   0.96 (  0.96)	Loss_d 0.293 (0.293)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.304 (0.274)	test_acc   0.87 (  0.89)	test_minacc   0.53 (  0.58)	test_majacc   0.94 (  0.94)	Loss_d 0.304 (0.274)	test_acc_d   0.87 (  0.89)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.84)
Test: [  20/  26]	Loss 0.262 (0.267)	test_acc   0.89 (  0.89)	test_minacc   0.51 (  0.59)	test_majacc   0.96 (  0.94)	Loss_d 0.262 (0.267)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.51 (  0.59)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.85 (  0.83)
Test: [  26/  26]	Loss 0.243 (0.262)	test_acc   0.91 (  0.89)	test_minacc   0.66 (  0.60)	test_majacc   0.96 (  0.95)	Loss_d 0.243 (0.262)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.66 (  0.60)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.82 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.15it/s]
Test: [  0/  1]	Loss 1.776 (1.776)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.92 (  0.92)	Loss_d 1.776 (1.776)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 1.776 (1.776)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.92 (  0.92)	Loss_d 1.776 (1.776)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.56 (  0.56)
Overall Timing[  9/  1]	epoch_time 0.0422 (0.0463)	validation_time 0.0004 (0.0011)	train_time 0.0418 (0.0449)
record: (train_acc, test_acc) (0.874600023150444, 0.44200003147125244)
last accs (train_acc, test_acc) (0.8936000216603279, 0.3880000114440918)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.03it/s] 19%|#9        | 5/26 [00:00<00:01, 13.43it/s] 35%|###4      | 9/26 [00:00<00:00, 20.11it/s] 50%|#####     | 13/26 [00:00<00:00, 24.32it/s] 65%|######5   | 17/26 [00:00<00:00, 27.00it/s] 81%|########  | 21/26 [00:00<00:00, 29.01it/s] 96%|#########6| 25/26 [00:01<00:00, 30.35it/s]100%|##########| 26/26 [00:01<00:00, 23.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.239 (0.267)	train_nll   0.24 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.00 ( 22.89)	train_acc   0.92 (  0.89)	train_minacc   0.66 (  0.53)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5755 (6.5591)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.89it/s] 23%|##3       | 6/26 [00:00<00:00, 23.28it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.28it/s] 42%|####2     | 11/26 [00:00<00:00, 31.46it/s] 62%|######1   | 16/26 [00:00<00:00, 37.33it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.33it/s] 81%|########  | 21/26 [00:00<00:00, 36.80it/s]100%|##########| 26/26 [00:00<00:00, 40.25it/s]100%|##########| 26/26 [00:00<00:00, 31.54it/s]
Test: [   0/  26]	Loss 0.309 (0.309)	test_acc   0.87 (  0.87)	test_minacc   0.49 (  0.49)	test_majacc   0.95 (  0.95)	Loss_d 0.309 (0.309)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.308 (0.276)	test_acc   0.88 (  0.88)	test_minacc   0.47 (  0.52)	test_majacc   0.96 (  0.95)	Loss_d 0.308 (0.276)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  20/  26]	Loss 0.258 (0.267)	test_acc   0.91 (  0.89)	test_minacc   0.62 (  0.55)	test_majacc   0.96 (  0.95)	Loss_d 0.258 (0.267)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.85 (  0.84)
Test: [  26/  26]	Loss 0.207 (0.259)	test_acc   0.94 (  0.89)	test_minacc   0.74 (  0.57)	test_majacc   0.98 (  0.95)	Loss_d 0.207 (0.259)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.74 (  0.57)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.82 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.93it/s]
Test: [  0/  1]	Loss 2.053 (2.053)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.98 (  0.98)	Loss_d 2.053 (2.053)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 2.053 (2.053)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.98 (  0.98)	Loss_d 2.053 (2.053)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.66 (  0.66)
Overall Timing[ 10/  1]	epoch_time 0.0447 (0.0461)	validation_time 0.0004 (0.0010)	train_time 0.0442 (0.0448)
record: (train_acc, test_acc) (0.874600023150444, 0.44200003147125244)
last accs (train_acc, test_acc) (0.8906000229716301, 0.3230000138282776)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s] 19%|#9        | 5/26 [00:00<00:00, 22.37it/s] 35%|###4      | 9/26 [00:00<00:00, 28.34it/s] 50%|#####     | 13/26 [00:00<00:00, 31.39it/s] 65%|######5   | 17/26 [00:00<00:00, 33.25it/s] 81%|########  | 21/26 [00:00<00:00, 34.45it/s] 96%|#########6| 25/26 [00:00<00:00, 34.95it/s]100%|##########| 26/26 [00:00<00:00, 29.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.258 (0.264)	train_nll   0.26 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  23.27 ( 23.13)	train_acc   0.87 (  0.89)	train_minacc   0.55 (  0.53)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 6.5084 (6.5756)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.13it/s] 23%|##3       | 6/26 [00:00<00:00, 31.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.08it/s] 42%|####2     | 11/26 [00:00<00:00, 37.49it/s] 62%|######1   | 16/26 [00:00<00:00, 40.84it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.84it/s] 81%|########  | 21/26 [00:00<00:00, 38.52it/s]100%|##########| 26/26 [00:00<00:00, 41.55it/s]100%|##########| 26/26 [00:00<00:00, 35.15it/s]
Test: [   0/  26]	Loss 0.338 (0.338)	test_acc   0.85 (  0.85)	test_minacc   0.40 (  0.40)	test_majacc   0.95 (  0.95)	Loss_d 0.338 (0.338)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.387 (0.291)	test_acc   0.82 (  0.88)	test_minacc   0.27 (  0.44)	test_majacc   0.92 (  0.95)	Loss_d 0.387 (0.291)	test_acc_d   0.82 (  0.88)	test_minacc_d   0.27 (  0.44)	test_majacc_d   0.92 (  0.95)	test_corr_d   0.87 (  0.85)
Test: [  20/  26]	Loss 0.220 (0.276)	test_acc   0.91 (  0.88)	test_minacc   0.58 (  0.47)	test_majacc   0.96 (  0.96)	Loss_d 0.220 (0.276)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.58 (  0.47)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.85)
Test: [  26/  26]	Loss 0.167 (0.263)	test_acc   0.94 (  0.89)	test_minacc   0.66 (  0.49)	test_majacc   0.99 (  0.96)	Loss_d 0.167 (0.263)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.66 (  0.49)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.81 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.18it/s]
Test: [  0/  1]	Loss 2.231 (2.231)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 2.231 (2.231)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.75 (  0.75)
Test: [  1/  1]	Loss 2.231 (2.231)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 2.231 (2.231)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.75 (  0.75)
Overall Timing[ 11/  1]	epoch_time 0.0379 (0.0454)	validation_time 0.0003 (0.0009)	train_time 0.0375 (0.0442)
record: (train_acc, test_acc) (0.874600023150444, 0.44200003147125244)
last accs (train_acc, test_acc) (0.8893000228404999, 0.26500001549720764)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.42it/s] 15%|#5        | 4/26 [00:00<00:01, 13.07it/s] 31%|###       | 8/26 [00:00<00:00, 20.32it/s] 46%|####6     | 12/26 [00:00<00:00, 24.12it/s] 62%|######1   | 16/26 [00:00<00:00, 27.83it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.69it/s] 92%|#########2| 24/26 [00:00<00:00, 31.59it/s]100%|##########| 26/26 [00:01<00:00, 24.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.179 (0.251)	train_nll   0.18 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.60 ( 23.44)	train_acc   0.92 (  0.90)	train_minacc   0.79 (  0.56)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 6.7718 (6.7127)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 15%|#5        | 4/26 [00:00<00:01, 17.04it/s] 38%|###8      | 10/26 [00:00<00:00, 33.82it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.54it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.49it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.49it/s] 96%|#########6| 25/26 [00:00<00:00, 42.64it/s]100%|##########| 26/26 [00:00<00:00, 33.89it/s]
Test: [   0/  26]	Loss 0.191 (0.191)	test_acc   0.92 (  0.92)	test_minacc   0.78 (  0.78)	test_majacc   0.95 (  0.95)	Loss_d 0.191 (0.191)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.332 (0.226)	test_acc   0.85 (  0.91)	test_minacc   0.52 (  0.73)	test_majacc   0.91 (  0.94)	Loss_d 0.332 (0.226)	test_acc_d   0.85 (  0.91)	test_minacc_d   0.52 (  0.73)	test_majacc_d   0.91 (  0.94)	test_corr_d   0.78 (  0.77)
Test: [  20/  26]	Loss 0.182 (0.219)	test_acc   0.93 (  0.91)	test_minacc   0.84 (  0.76)	test_majacc   0.94 (  0.94)	Loss_d 0.182 (0.219)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.84 (  0.76)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.76 (  0.76)
Test: [  26/  26]	Loss 0.124 (0.209)	test_acc   0.96 (  0.92)	test_minacc   0.89 (  0.77)	test_majacc   0.97 (  0.94)	Loss_d 0.124 (0.209)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.89 (  0.77)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.75 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.70it/s]
Test: [  0/  1]	Loss 2.077 (2.077)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 2.077 (2.077)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 2.077 (2.077)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 2.077 (2.077)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.45 (  0.45)
Overall Timing[ 12/  1]	epoch_time 0.0392 (0.0450)	validation_time 0.0004 (0.0009)	train_time 0.0388 (0.0438)
record: (train_acc, test_acc) (0.874600023150444, 0.44200003147125244)
last accs (train_acc, test_acc) (0.9182000206708908, 0.4360000193119049)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.61it/s] 19%|#9        | 5/26 [00:00<00:01, 17.20it/s] 35%|###4      | 9/26 [00:00<00:00, 24.10it/s] 50%|#####     | 13/26 [00:00<00:00, 27.24it/s] 65%|######5   | 17/26 [00:00<00:00, 29.36it/s] 81%|########  | 21/26 [00:00<00:00, 31.11it/s] 96%|#########6| 25/26 [00:00<00:00, 32.03it/s]100%|##########| 26/26 [00:01<00:00, 25.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.191 (0.226)	train_nll   0.19 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.96 ( 23.77)	train_acc   0.92 (  0.91)	train_minacc   0.71 (  0.63)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.6870 (7.1882)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 23%|##3       | 6/26 [00:00<00:00, 29.81it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.81it/s] 42%|####2     | 11/26 [00:00<00:00, 37.41it/s] 62%|######1   | 16/26 [00:00<00:00, 41.33it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.33it/s] 81%|########  | 21/26 [00:00<00:00, 39.62it/s]100%|##########| 26/26 [00:00<00:00, 42.28it/s]100%|##########| 26/26 [00:00<00:00, 35.49it/s]
Test: [   0/  26]	Loss 0.205 (0.205)	test_acc   0.91 (  0.91)	test_minacc   0.75 (  0.75)	test_majacc   0.95 (  0.95)	Loss_d 0.205 (0.205)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.308 (0.222)	test_acc   0.86 (  0.91)	test_minacc   0.63 (  0.74)	test_majacc   0.90 (  0.94)	Loss_d 0.308 (0.222)	test_acc_d   0.86 (  0.91)	test_minacc_d   0.63 (  0.74)	test_majacc_d   0.90 (  0.94)	test_corr_d   0.75 (  0.76)
Test: [  20/  26]	Loss 0.173 (0.213)	test_acc   0.95 (  0.92)	test_minacc   0.85 (  0.77)	test_majacc   0.96 (  0.94)	Loss_d 0.173 (0.213)	test_acc_d   0.95 (  0.92)	test_minacc_d   0.85 (  0.77)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.76 (  0.75)
Test: [  26/  26]	Loss 0.141 (0.203)	test_acc   0.96 (  0.92)	test_minacc   0.89 (  0.79)	test_majacc   0.97 (  0.94)	Loss_d 0.141 (0.203)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.89 (  0.79)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.75 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.22it/s]
Test: [  0/  1]	Loss 1.976 (1.976)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.93 (  0.93)	Loss_d 1.976 (1.976)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 1.976 (1.976)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.93 (  0.93)	Loss_d 1.976 (1.976)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0458 (0.0450)	validation_time 0.0004 (0.0009)	train_time 0.0454 (0.0439)
record: (train_acc, test_acc) (0.9211000216603279, 0.4520000219345093)
last accs (train_acc, test_acc) (0.9211000216603279, 0.4520000219345093)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.91it/s] 19%|#9        | 5/26 [00:00<00:01, 15.93it/s] 35%|###4      | 9/26 [00:00<00:00, 22.31it/s] 50%|#####     | 13/26 [00:00<00:00, 26.23it/s] 65%|######5   | 17/26 [00:00<00:00, 29.11it/s] 81%|########  | 21/26 [00:00<00:00, 30.69it/s] 96%|#########6| 25/26 [00:00<00:00, 31.02it/s]100%|##########| 26/26 [00:01<00:00, 24.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.190 (0.229)	train_nll   0.19 (  0.23)	train_penalty   0.01 (  0.01)	weight_norm  24.42 ( 24.18)	train_acc   0.92 (  0.90)	train_minacc   0.79 (  0.60)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.2385 (7.1882)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.00it/s] 19%|#9        | 5/26 [00:00<00:01, 13.63it/s] 38%|###8      | 10/26 [00:00<00:00, 21.96it/s]                                                38%|###8      | 10/26 [00:00<00:00, 21.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.66it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.12it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 34.12it/s] 96%|#########6| 25/26 [00:00<00:00, 37.34it/s]100%|##########| 26/26 [00:00<00:00, 26.51it/s]
Test: [   0/  26]	Loss 0.220 (0.220)	test_acc   0.92 (  0.92)	test_minacc   0.69 (  0.69)	test_majacc   0.97 (  0.97)	Loss_d 0.220 (0.220)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.215 (0.205)	test_acc   0.92 (  0.92)	test_minacc   0.66 (  0.69)	test_majacc   0.97 (  0.96)	Loss_d 0.215 (0.205)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.66 (  0.69)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.184 (0.199)	test_acc   0.94 (  0.93)	test_minacc   0.69 (  0.71)	test_majacc   0.98 (  0.96)	Loss_d 0.184 (0.199)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.69 (  0.71)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.83 (  0.82)
Test: [  26/  26]	Loss 0.152 (0.192)	test_acc   0.94 (  0.93)	test_minacc   0.82 (  0.74)	test_majacc   0.97 (  0.97)	Loss_d 0.152 (0.192)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.82 (  0.74)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.14it/s]
Test: [  0/  1]	Loss 1.953 (1.953)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 1.953 (1.953)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 1.953 (1.953)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 1.953 (1.953)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.51 (  0.51)
Overall Timing[ 14/  1]	epoch_time 0.0426 (0.0449)	validation_time 0.0004 (0.0008)	train_time 0.0422 (0.0438)
record: (train_acc, test_acc) (0.9211000216603279, 0.4520000219345093)
last accs (train_acc, test_acc) (0.930900018453598, 0.4240000247955322)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.45it/s] 19%|#9        | 5/26 [00:00<00:01, 20.81it/s] 35%|###4      | 9/26 [00:00<00:00, 26.43it/s] 50%|#####     | 13/26 [00:00<00:00, 29.72it/s] 65%|######5   | 17/26 [00:00<00:00, 31.74it/s] 81%|########  | 21/26 [00:00<00:00, 33.19it/s] 96%|#########6| 25/26 [00:00<00:00, 33.87it/s]100%|##########| 26/26 [00:00<00:00, 28.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.001 (0.084)	train_nll   0.30 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  24.79 ( 24.63)	train_acc   0.87 (  0.90)	train_minacc   0.76 (  0.68)	train_majacc   0.89 (  0.94)	train_corr   0.00 (  0.00)	l1 6.2189 (7.1730)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.62it/s] 27%|##6       | 7/26 [00:00<00:00, 35.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.79it/s] 46%|####6     | 12/26 [00:00<00:00, 41.55it/s] 65%|######5   | 17/26 [00:00<00:00, 38.24it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.24it/s] 85%|########4 | 22/26 [00:00<00:00, 41.68it/s]100%|##########| 26/26 [00:00<00:00, 36.77it/s]
Test: [   0/  26]	Loss 0.362 (0.362)	test_acc   0.86 (  0.86)	test_minacc   0.70 (  0.70)	test_majacc   0.89 (  0.89)	Loss_d 0.362 (0.362)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.285 (0.293)	test_acc   0.88 (  0.88)	test_minacc   0.85 (  0.82)	test_majacc   0.89 (  0.89)	Loss_d 0.285 (0.293)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.62 (  0.65)
Test: [  20/  26]	Loss 0.301 (0.289)	test_acc   0.86 (  0.87)	test_minacc   0.71 (  0.82)	test_majacc   0.89 (  0.88)	Loss_d 0.301 (0.289)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.71 (  0.82)	test_majacc_d   0.89 (  0.88)	test_corr_d   0.67 (  0.64)
Test: [  26/  26]	Loss 0.319 (0.294)	test_acc   0.86 (  0.87)	test_minacc   0.76 (  0.81)	test_majacc   0.88 (  0.88)	Loss_d 0.319 (0.294)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.76 (  0.81)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.67 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.23it/s]
Test: [  0/  1]	Loss 1.467 (1.467)	test_acc   0.51 (  0.51)	test_minacc   0.46 (  0.46)	test_majacc   0.90 (  0.90)	Loss_d 1.467 (1.467)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.467 (1.467)	test_acc   0.51 (  0.51)	test_minacc   0.46 (  0.46)	test_majacc   0.90 (  0.90)	Loss_d 1.467 (1.467)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.22 (  0.22)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0390 (0.0445)	validation_time 0.0004 (0.0008)	train_time 0.0386 (0.0435)
record: (train_acc, test_acc) (0.8722000228762626, 0.5080000162124634)
last accs (train_acc, test_acc) (0.8722000228762626, 0.5080000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.55it/s] 15%|#5        | 4/26 [00:00<00:01, 15.44it/s] 31%|###       | 8/26 [00:00<00:00, 22.88it/s] 46%|####6     | 12/26 [00:00<00:00, 27.12it/s] 62%|######1   | 16/26 [00:00<00:00, 29.65it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.94it/s] 92%|#########2| 24/26 [00:00<00:00, 32.43it/s]100%|##########| 26/26 [00:00<00:00, 26.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.001 (0.002)	train_nll   0.40 (  0.38)	train_penalty   0.00 (  0.00)	weight_norm  24.89 ( 24.86)	train_acc   0.80 (  0.82)	train_minacc   0.66 (  0.84)	train_majacc   0.83 (  0.81)	train_corr   0.00 (  0.00)	l1 5.3724 (5.6756)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.82it/s] 27%|##6       | 7/26 [00:00<00:00, 33.86it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.86it/s] 46%|####6     | 12/26 [00:00<00:00, 40.08it/s] 65%|######5   | 17/26 [00:00<00:00, 40.95it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.95it/s] 85%|########4 | 22/26 [00:00<00:00, 40.44it/s]100%|##########| 26/26 [00:00<00:00, 37.87it/s]
Test: [   0/  26]	Loss 0.394 (0.394)	test_acc   0.83 (  0.83)	test_minacc   0.81 (  0.81)	test_majacc   0.84 (  0.84)	Loss_d 0.394 (0.394)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.353 (0.356)	test_acc   0.85 (  0.84)	test_minacc   0.82 (  0.82)	test_majacc   0.85 (  0.84)	Loss_d 0.353 (0.356)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.57 (  0.59)
Test: [  20/  26]	Loss 0.371 (0.355)	test_acc   0.82 (  0.83)	test_minacc   0.75 (  0.81)	test_majacc   0.84 (  0.84)	Loss_d 0.371 (0.355)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.75 (  0.81)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.61 (  0.59)
Test: [  26/  26]	Loss 0.398 (0.360)	test_acc   0.80 (  0.83)	test_minacc   0.66 (  0.80)	test_majacc   0.83 (  0.84)	Loss_d 0.398 (0.360)	test_acc_d   0.80 (  0.83)	test_minacc_d   0.66 (  0.80)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.61 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.33it/s]
Test: [  0/  1]	Loss 1.127 (1.127)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.85 (  0.85)	Loss_d 1.127 (1.127)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.127 (1.127)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.85 (  0.85)	Loss_d 1.127 (1.127)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.08 (  0.08)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0415 (0.0443)	validation_time 0.0005 (0.0008)	train_time 0.0410 (0.0433)
record: (train_acc, test_acc) (0.8300000287294388, 0.5700000524520874)
last accs (train_acc, test_acc) (0.8300000287294388, 0.5700000524520874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.04it/s] 19%|#9        | 5/26 [00:00<00:01, 19.61it/s] 35%|###4      | 9/26 [00:00<00:00, 24.60it/s] 50%|#####     | 13/26 [00:00<00:00, 27.36it/s] 65%|######5   | 17/26 [00:00<00:00, 29.20it/s] 81%|########  | 21/26 [00:00<00:00, 31.07it/s] 96%|#########6| 25/26 [00:00<00:00, 31.69it/s]100%|##########| 26/26 [00:00<00:00, 26.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.001)	train_nll   0.37 (  0.38)	train_penalty   0.00 (  0.00)	weight_norm  24.90 ( 24.90)	train_acc   0.82 (  0.81)	train_minacc   0.71 (  0.80)	train_majacc   0.83 (  0.82)	train_corr   0.00 (  0.00)	l1 5.4079 (5.5285)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.56it/s] 23%|##3       | 6/26 [00:00<00:00, 31.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.69it/s] 42%|####2     | 11/26 [00:00<00:00, 38.18it/s] 62%|######1   | 16/26 [00:00<00:00, 41.33it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.33it/s] 81%|########  | 21/26 [00:00<00:00, 41.21it/s]100%|##########| 26/26 [00:00<00:00, 36.65it/s]
Test: [   0/  26]	Loss 0.381 (0.381)	test_acc   0.83 (  0.83)	test_minacc   0.75 (  0.75)	test_majacc   0.85 (  0.85)	Loss_d 0.381 (0.381)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.338 (0.338)	test_acc   0.86 (  0.84)	test_minacc   0.82 (  0.82)	test_majacc   0.87 (  0.85)	Loss_d 0.338 (0.338)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.87 (  0.85)	test_corr_d   0.61 (  0.63)
Test: [  20/  26]	Loss 0.344 (0.335)	test_acc   0.84 (  0.84)	test_minacc   0.73 (  0.81)	test_majacc   0.86 (  0.85)	Loss_d 0.344 (0.335)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.73 (  0.81)	test_majacc_d   0.86 (  0.85)	test_corr_d   0.65 (  0.63)
Test: [  26/  26]	Loss 0.366 (0.338)	test_acc   0.83 (  0.84)	test_minacc   0.71 (  0.80)	test_majacc   0.85 (  0.84)	Loss_d 0.366 (0.338)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.71 (  0.80)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.65 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.54it/s]
Test: [  0/  1]	Loss 1.218 (1.218)	test_acc   0.55 (  0.55)	test_minacc   0.51 (  0.51)	test_majacc   0.88 (  0.88)	Loss_d 1.218 (1.218)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.218 (1.218)	test_acc   0.55 (  0.55)	test_minacc   0.51 (  0.51)	test_majacc   0.88 (  0.88)	Loss_d 1.218 (1.218)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.15 (  0.15)
Overall Timing[ 17/  1]	epoch_time 0.0413 (0.0442)	validation_time 0.0004 (0.0008)	train_time 0.0408 (0.0432)
record: (train_acc, test_acc) (0.8300000287294388, 0.5700000524520874)
last accs (train_acc, test_acc) (0.8380000239014626, 0.550000011920929)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.75it/s] 27%|##6       | 7/26 [00:00<00:00, 29.32it/s] 42%|####2     | 11/26 [00:00<00:00, 31.12it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.48it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.74it/s] 88%|########8 | 23/26 [00:00<00:00, 34.60it/s]100%|##########| 26/26 [00:00<00:00, 30.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.001 (0.001)	train_nll   0.40 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  24.91 ( 24.91)	train_acc   0.81 (  0.81)	train_minacc   0.74 (  0.81)	train_majacc   0.83 (  0.82)	train_corr   0.00 (  0.00)	l1 5.7926 (5.6753)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 12%|#1        | 3/26 [00:00<00:01, 12.55it/s] 27%|##6       | 7/26 [00:00<00:00, 22.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.79it/s] 46%|####6     | 12/26 [00:00<00:00, 31.49it/s] 65%|######5   | 17/26 [00:00<00:00, 36.44it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.44it/s] 85%|########4 | 22/26 [00:00<00:00, 39.68it/s]100%|##########| 26/26 [00:00<00:00, 31.85it/s]
Test: [   0/  26]	Loss 0.401 (0.401)	test_acc   0.82 (  0.82)	test_minacc   0.73 (  0.73)	test_majacc   0.84 (  0.84)	Loss_d 0.401 (0.401)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.331 (0.356)	test_acc   0.84 (  0.82)	test_minacc   0.79 (  0.81)	test_majacc   0.85 (  0.83)	Loss_d 0.331 (0.356)	test_acc_d   0.84 (  0.82)	test_minacc_d   0.79 (  0.81)	test_majacc_d   0.85 (  0.83)	test_corr_d   0.60 (  0.61)
Test: [  20/  26]	Loss 0.356 (0.348)	test_acc   0.82 (  0.82)	test_minacc   0.69 (  0.81)	test_majacc   0.84 (  0.83)	Loss_d 0.356 (0.348)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.69 (  0.81)	test_majacc_d   0.84 (  0.83)	test_corr_d   0.64 (  0.61)
Test: [  26/  26]	Loss 0.386 (0.351)	test_acc   0.82 (  0.82)	test_minacc   0.74 (  0.80)	test_majacc   0.83 (  0.83)	Loss_d 0.386 (0.351)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.74 (  0.80)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.63 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.34it/s]
Test: [  0/  1]	Loss 1.357 (1.357)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.86 (  0.86)	Loss_d 1.357 (1.357)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.357 (1.357)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.86 (  0.86)	Loss_d 1.357 (1.357)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.14 (  0.14)
Overall Timing[ 18/  1]	epoch_time 0.0417 (0.0440)	validation_time 0.0004 (0.0008)	train_time 0.0413 (0.0431)
record: (train_acc, test_acc) (0.8300000287294388, 0.5700000524520874)
last accs (train_acc, test_acc) (0.8232000276446343, 0.5640000104904175)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 19%|#9        | 5/26 [00:00<00:00, 21.34it/s] 35%|###4      | 9/26 [00:00<00:00, 26.57it/s] 50%|#####     | 13/26 [00:00<00:00, 29.00it/s] 65%|######5   | 17/26 [00:00<00:00, 30.44it/s] 81%|########  | 21/26 [00:00<00:00, 31.97it/s] 96%|#########6| 25/26 [00:00<00:00, 32.71it/s]100%|##########| 26/26 [00:00<00:00, 27.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.001)	train_nll   0.35 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.83 (  0.81)	train_minacc   0.76 (  0.85)	train_majacc   0.84 (  0.81)	train_corr   0.00 (  0.00)	l1 5.6762 (5.7750)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 23%|##3       | 6/26 [00:00<00:00, 26.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.57it/s] 42%|####2     | 11/26 [00:00<00:00, 34.66it/s] 62%|######1   | 16/26 [00:00<00:00, 39.33it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.33it/s] 81%|########  | 21/26 [00:00<00:00, 38.25it/s]100%|##########| 26/26 [00:00<00:00, 41.10it/s]100%|##########| 26/26 [00:00<00:00, 32.91it/s]
Test: [   0/  26]	Loss 0.363 (0.363)	test_acc   0.85 (  0.85)	test_minacc   0.81 (  0.81)	test_majacc   0.86 (  0.86)	Loss_d 0.363 (0.363)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.315 (0.341)	test_acc   0.86 (  0.83)	test_minacc   0.84 (  0.84)	test_majacc   0.86 (  0.83)	Loss_d 0.315 (0.341)	test_acc_d   0.86 (  0.83)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.86 (  0.83)	test_corr_d   0.62 (  0.62)
Test: [  20/  26]	Loss 0.336 (0.331)	test_acc   0.82 (  0.83)	test_minacc   0.76 (  0.84)	test_majacc   0.83 (  0.83)	Loss_d 0.336 (0.331)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.76 (  0.84)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.66 (  0.63)
Test: [  26/  26]	Loss 0.347 (0.334)	test_acc   0.84 (  0.83)	test_minacc   0.76 (  0.83)	test_majacc   0.85 (  0.83)	Loss_d 0.347 (0.334)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.76 (  0.83)	test_majacc_d   0.85 (  0.83)	test_corr_d   0.65 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.52it/s]
Test: [  0/  1]	Loss 1.368 (1.368)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.85 (  0.85)	Loss_d 1.368 (1.368)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.368 (1.368)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.85 (  0.85)	Loss_d 1.368 (1.368)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.16 (  0.16)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0413 (0.0439)	validation_time 0.0006 (0.0007)	train_time 0.0407 (0.0430)
record: (train_acc, test_acc) (0.8290000210404396, 0.5770000219345093)
last accs (train_acc, test_acc) (0.8290000210404396, 0.5770000219345093)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.41it/s] 19%|#9        | 5/26 [00:00<00:01, 17.09it/s] 35%|###4      | 9/26 [00:00<00:00, 23.48it/s] 50%|#####     | 13/26 [00:00<00:00, 26.93it/s] 65%|######5   | 17/26 [00:00<00:00, 29.59it/s] 81%|########  | 21/26 [00:00<00:00, 31.37it/s] 96%|#########6| 25/26 [00:00<00:00, 32.81it/s]100%|##########| 26/26 [00:00<00:00, 26.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.34 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  24.93 ( 24.93)	train_acc   0.82 (  0.82)	train_minacc   0.79 (  0.84)	train_majacc   0.83 (  0.81)	train_corr   0.00 (  0.00)	l1 5.7072 (5.9545)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s] 19%|#9        | 5/26 [00:00<00:01, 19.99it/s] 38%|###8      | 10/26 [00:00<00:00, 28.73it/s]                                                38%|###8      | 10/26 [00:00<00:00, 28.73it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.82it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.82it/s] 96%|#########6| 25/26 [00:00<00:00, 41.07it/s]100%|##########| 26/26 [00:00<00:00, 31.94it/s]
Test: [   0/  26]	Loss 0.361 (0.361)	test_acc   0.85 (  0.85)	test_minacc   0.79 (  0.79)	test_majacc   0.86 (  0.86)	Loss_d 0.361 (0.361)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.310 (0.331)	test_acc   0.85 (  0.83)	test_minacc   0.84 (  0.84)	test_majacc   0.86 (  0.83)	Loss_d 0.310 (0.331)	test_acc_d   0.85 (  0.83)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.86 (  0.83)	test_corr_d   0.64 (  0.64)
Test: [  20/  26]	Loss 0.312 (0.318)	test_acc   0.85 (  0.84)	test_minacc   0.82 (  0.84)	test_majacc   0.85 (  0.84)	Loss_d 0.312 (0.318)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.68 (  0.65)
Test: [  26/  26]	Loss 0.337 (0.321)	test_acc   0.82 (  0.84)	test_minacc   0.79 (  0.84)	test_majacc   0.83 (  0.84)	Loss_d 0.337 (0.321)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.79 (  0.84)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.67 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.00it/s]
Test: [  0/  1]	Loss 1.398 (1.398)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.86 (  0.86)	Loss_d 1.398 (1.398)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 1.398 (1.398)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.86 (  0.86)	Loss_d 1.398 (1.398)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.19 (  0.19)
Overall Timing[ 20/  1]	epoch_time 0.0402 (0.0437)	validation_time 0.0004 (0.0007)	train_time 0.0397 (0.0428)
record: (train_acc, test_acc) (0.8290000210404396, 0.5770000219345093)
last accs (train_acc, test_acc) (0.8362000296115876, 0.5710000395774841)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.03it/s] 19%|#9        | 5/26 [00:00<00:00, 22.37it/s] 35%|###4      | 9/26 [00:00<00:00, 27.53it/s] 50%|#####     | 13/26 [00:00<00:00, 29.98it/s] 65%|######5   | 17/26 [00:00<00:00, 31.40it/s] 81%|########  | 21/26 [00:00<00:00, 32.47it/s] 96%|#########6| 25/26 [00:00<00:00, 33.58it/s]100%|##########| 26/26 [00:00<00:00, 28.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.001)	train_nll   0.35 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  24.94 ( 24.94)	train_acc   0.82 (  0.81)	train_minacc   0.79 (  0.85)	train_majacc   0.83 (  0.81)	train_corr   0.00 (  0.00)	l1 5.9240 (6.0195)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.71it/s] 23%|##3       | 6/26 [00:00<00:01, 19.58it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.58it/s] 42%|####2     | 11/26 [00:00<00:00, 29.23it/s] 62%|######1   | 16/26 [00:00<00:00, 35.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.76it/s] 81%|########  | 21/26 [00:00<00:00, 37.66it/s]100%|##########| 26/26 [00:00<00:00, 41.07it/s]100%|##########| 26/26 [00:00<00:00, 30.17it/s]
Test: [   0/  26]	Loss 0.370 (0.370)	test_acc   0.83 (  0.83)	test_minacc   0.76 (  0.76)	test_majacc   0.85 (  0.85)	Loss_d 0.370 (0.370)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.316 (0.340)	test_acc   0.85 (  0.82)	test_minacc   0.84 (  0.83)	test_majacc   0.85 (  0.82)	Loss_d 0.316 (0.340)	test_acc_d   0.85 (  0.82)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.85 (  0.82)	test_corr_d   0.64 (  0.65)
Test: [  20/  26]	Loss 0.302 (0.318)	test_acc   0.84 (  0.83)	test_minacc   0.80 (  0.83)	test_majacc   0.84 (  0.83)	Loss_d 0.302 (0.318)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.80 (  0.83)	test_majacc_d   0.84 (  0.83)	test_corr_d   0.69 (  0.66)
Test: [  26/  26]	Loss 0.337 (0.320)	test_acc   0.83 (  0.83)	test_minacc   0.79 (  0.83)	test_majacc   0.83 (  0.83)	Loss_d 0.337 (0.320)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.79 (  0.83)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.67 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.99it/s]
Test: [  0/  1]	Loss 1.489 (1.489)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.86 (  0.86)	Loss_d 1.489 (1.489)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.489 (1.489)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.86 (  0.86)	Loss_d 1.489 (1.489)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.21 (  0.21)
Overall Timing[ 21/  1]	epoch_time 0.0411 (0.0436)	validation_time 0.0004 (0.0007)	train_time 0.0407 (0.0427)
record: (train_acc, test_acc) (0.8290000210404396, 0.5770000219345093)
last accs (train_acc, test_acc) (0.8321000207662582, 0.5700000524520874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.13it/s] 27%|##6       | 7/26 [00:00<00:00, 31.05it/s] 42%|####2     | 11/26 [00:00<00:00, 33.45it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.24it/s] 88%|########8 | 23/26 [00:00<00:00, 33.21it/s]100%|##########| 26/26 [00:00<00:00, 30.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.001 (0.002)	train_nll   0.36 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  24.96 ( 24.95)	train_acc   0.81 (  0.82)	train_minacc   0.82 (  0.85)	train_majacc   0.81 (  0.81)	train_corr   0.00 (  0.00)	l1 6.4098 (6.1817)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:03,  7.28it/s] 15%|#5        | 4/26 [00:00<00:01, 11.62it/s] 35%|###4      | 9/26 [00:00<00:00, 23.52it/s]                                               35%|###4      | 9/26 [00:00<00:00, 23.52it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.47it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.47it/s] 92%|#########2| 24/26 [00:00<00:00, 36.79it/s]100%|##########| 26/26 [00:00<00:00, 28.37it/s]
Test: [   0/  26]	Loss 0.381 (0.381)	test_acc   0.81 (  0.81)	test_minacc   0.81 (  0.81)	test_majacc   0.81 (  0.81)	Loss_d 0.381 (0.381)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.336 (0.357)	test_acc   0.80 (  0.79)	test_minacc   0.87 (  0.85)	test_majacc   0.79 (  0.78)	Loss_d 0.336 (0.357)	test_acc_d   0.80 (  0.79)	test_minacc_d   0.87 (  0.85)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.61 (  0.62)
Test: [  20/  26]	Loss 0.289 (0.330)	test_acc   0.84 (  0.81)	test_minacc   0.84 (  0.86)	test_majacc   0.84 (  0.80)	Loss_d 0.289 (0.330)	test_acc_d   0.84 (  0.81)	test_minacc_d   0.84 (  0.86)	test_majacc_d   0.84 (  0.80)	test_corr_d   0.68 (  0.63)
Test: [  26/  26]	Loss 0.337 (0.329)	test_acc   0.83 (  0.82)	test_minacc   0.82 (  0.86)	test_majacc   0.83 (  0.81)	Loss_d 0.337 (0.329)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.83 (  0.81)	test_corr_d   0.65 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.54it/s]
Test: [  0/  1]	Loss 1.559 (1.559)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.87 (  0.87)	Loss_d 1.559 (1.559)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.559 (1.559)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.87 (  0.87)	Loss_d 1.559 (1.559)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.14 (  0.14)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[ 22/  1]	epoch_time 0.0409 (0.0435)	validation_time 0.0003 (0.0007)	train_time 0.0406 (0.0426)
record: (train_acc, test_acc) (0.8152000251412391, 0.6240000128746033)
last accs (train_acc, test_acc) (0.8152000251412391, 0.6240000128746033)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.43it/s] 23%|##3       | 6/26 [00:00<00:00, 28.65it/s] 38%|###8      | 10/26 [00:00<00:00, 31.70it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.24it/s] 69%|######9   | 18/26 [00:00<00:00, 28.94it/s] 85%|########4 | 22/26 [00:00<00:00, 30.44it/s]100%|##########| 26/26 [00:00<00:00, 30.35it/s]100%|##########| 26/26 [00:00<00:00, 27.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.036972522735596
set z to 5.97660279750824
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 397 tensor(-0.0081, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 240 tensor(-0.0101, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 209 tensor(-0.0030, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 205 tensor(-0.0011, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.003 (0.011)	train_nll   0.43 (  0.38)	train_penalty   0.00 (  0.01)	weight_norm  25.20 ( 25.02)	train_acc   0.75 (  0.79)	train_minacc   0.74 (  0.75)	train_majacc   0.75 (  0.79)	train_corr   0.00 (  0.00)	l1 7.2911 (6.6151)	zero_count 0.0000 (26.7930)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.43it/s] 23%|##3       | 6/26 [00:00<00:01, 18.38it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.38it/s] 42%|####2     | 11/26 [00:00<00:00, 28.18it/s] 62%|######1   | 16/26 [00:00<00:00, 33.91it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.91it/s] 81%|########  | 21/26 [00:00<00:00, 37.07it/s]100%|##########| 26/26 [00:00<00:00, 40.27it/s]100%|##########| 26/26 [00:00<00:00, 29.20it/s]
Test: [   0/  26]	Loss 0.674 (0.674)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.49 (  0.49)	Loss_d 0.674 (0.674)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.684 (0.631)	test_acc   0.51 (  0.53)	test_minacc   0.52 (  0.51)	test_majacc   0.51 (  0.53)	Loss_d 0.684 (0.631)	test_acc_d   0.51 (  0.53)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.51 (  0.53)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.628 (0.605)	test_acc   0.54 (  0.52)	test_minacc   0.56 (  0.50)	test_majacc   0.54 (  0.53)	Loss_d 0.628 (0.605)	test_acc_d   0.54 (  0.52)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.54 (  0.53)	test_corr_d   0.57 (  0.49)
Test: [  26/  26]	Loss 0.496 (0.599)	test_acc   0.63 (  0.53)	test_minacc   0.61 (  0.50)	test_majacc   0.64 (  0.53)	Loss_d 0.496 (0.599)	test_acc_d   0.63 (  0.53)	test_minacc_d   0.61 (  0.50)	test_majacc_d   0.64 (  0.53)	test_corr_d   0.45 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.78it/s]
Test: [  0/  1]	Loss 1.846 (1.846)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.846 (1.846)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.846 (1.846)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.846 (1.846)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 23/  1]	epoch_time 0.0415 (0.0434)	validation_time 0.0004 (0.0007)	train_time 0.0410 (0.0426)
record: (train_acc, test_acc) (0.8152000251412391, 0.6240000128746033)
last accs (train_acc, test_acc) (0.5269000121057034, 0.4970000088214874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.83it/s] 15%|#5        | 4/26 [00:00<00:01, 14.78it/s] 27%|##6       | 7/26 [00:00<00:00, 20.06it/s] 42%|####2     | 11/26 [00:00<00:00, 25.46it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.55it/s] 65%|######5   | 17/26 [00:00<00:00, 27.56it/s] 81%|########  | 21/26 [00:00<00:00, 30.38it/s] 96%|#########6| 25/26 [00:00<00:00, 30.04it/s]100%|##########| 26/26 [00:01<00:00, 24.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 203 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 198 tensor(-0.0019, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 198 tensor(-0.0017, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 197 tensor(-0.0017, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 239 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 265 tensor(-0.0009, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.004)	train_nll   0.56 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  25.47 ( 25.37)	train_acc   0.61 (  0.72)	train_minacc   0.89 (  0.65)	train_majacc   0.56 (  0.73)	train_corr   0.00 (  0.00)	l1 6.1817 (6.4863)	zero_count 0.0000 (71.2140)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.83it/s] 12%|#1        | 3/26 [00:00<00:01, 13.25it/s] 35%|###4      | 9/26 [00:00<00:00, 30.95it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.95it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.13it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.13it/s] 92%|#########2| 24/26 [00:00<00:00, 39.53it/s]100%|##########| 26/26 [00:00<00:00, 32.55it/s]
Test: [   0/  26]	Loss 0.585 (0.585)	test_acc   0.62 (  0.62)	test_minacc   0.96 (  0.96)	test_majacc   0.55 (  0.55)	Loss_d 0.585 (0.585)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.96 (  0.96)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.589 (0.575)	test_acc   0.55 (  0.57)	test_minacc   0.81 (  0.89)	test_majacc   0.50 (  0.51)	Loss_d 0.589 (0.575)	test_acc_d   0.55 (  0.57)	test_minacc_d   0.81 (  0.89)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.45 (  0.41)
Test: [  20/  26]	Loss 0.593 (0.578)	test_acc   0.56 (  0.57)	test_minacc   0.91 (  0.89)	test_majacc   0.51 (  0.51)	Loss_d 0.593 (0.578)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.91 (  0.89)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.45 (  0.42)
Test: [  26/  26]	Loss 0.556 (0.577)	test_acc   0.53 (  0.57)	test_minacc   0.87 (  0.89)	test_majacc   0.47 (  0.51)	Loss_d 0.556 (0.577)	test_acc_d   0.53 (  0.57)	test_minacc_d   0.87 (  0.89)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.36 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.72it/s]
Test: [  0/  1]	Loss 1.718 (1.718)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.46 (  0.46)	Loss_d 1.718 (1.718)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.718 (1.718)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.46 (  0.46)	Loss_d 1.718 (1.718)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.22 (  0.22)
Overall Timing[ 24/  1]	epoch_time 0.0429 (0.0434)	validation_time 0.0005 (0.0007)	train_time 0.0424 (0.0425)
record: (train_acc, test_acc) (0.8152000251412391, 0.6240000128746033)
last accs (train_acc, test_acc) (0.5661000099778175, 0.6940000057220459)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 19%|#9        | 5/26 [00:00<00:00, 23.52it/s] 31%|###       | 8/26 [00:00<00:00, 25.63it/s] 42%|####2     | 11/26 [00:00<00:00, 26.45it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.96it/s] 85%|########4 | 22/26 [00:00<00:00, 29.13it/s]100%|##########| 26/26 [00:00<00:00, 31.44it/s]100%|##########| 26/26 [00:00<00:00, 26.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 271 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 269 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 300 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 374 tensor(-0.0008, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  25.55 ( 25.52)	train_acc   0.70 (  0.57)	train_minacc   0.82 (  0.87)	train_majacc   0.68 (  0.52)	train_corr   0.00 (  0.00)	l1 5.9628 (5.9887)	zero_count 0.0000 (41.9640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.13it/s] 31%|###       | 8/26 [00:00<00:00, 34.85it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.85it/s] 50%|#####     | 13/26 [00:00<00:00, 39.08it/s] 69%|######9   | 18/26 [00:00<00:00, 38.46it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.46it/s] 88%|########8 | 23/26 [00:00<00:00, 40.38it/s]100%|##########| 26/26 [00:00<00:00, 36.33it/s]
Test: [   0/  26]	Loss 0.566 (0.566)	test_acc   0.77 (  0.77)	test_minacc   0.90 (  0.90)	test_majacc   0.75 (  0.75)	Loss_d 0.566 (0.566)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.567 (0.560)	test_acc   0.75 (  0.74)	test_minacc   0.81 (  0.85)	test_majacc   0.73 (  0.72)	Loss_d 0.567 (0.560)	test_acc_d   0.75 (  0.74)	test_minacc_d   0.81 (  0.85)	test_majacc_d   0.73 (  0.72)	test_corr_d   0.45 (  0.44)
Test: [  20/  26]	Loss 0.568 (0.560)	test_acc   0.74 (  0.74)	test_minacc   0.69 (  0.83)	test_majacc   0.75 (  0.72)	Loss_d 0.568 (0.560)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.69 (  0.83)	test_majacc_d   0.75 (  0.72)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.549 (0.561)	test_acc   0.70 (  0.74)	test_minacc   0.82 (  0.83)	test_majacc   0.68 (  0.72)	Loss_d 0.549 (0.561)	test_acc_d   0.70 (  0.74)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.68 (  0.72)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.70it/s]
Test: [  0/  1]	Loss 1.625 (1.625)	test_acc   0.71 (  0.71)	test_minacc   0.70 (  0.70)	test_majacc   0.73 (  0.73)	Loss_d 1.625 (1.625)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 1.625 (1.625)	test_acc   0.71 (  0.71)	test_minacc   0.70 (  0.70)	test_majacc   0.73 (  0.73)	Loss_d 1.625 (1.625)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.18 (  0.18)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/147/checkpoints/model_best.pth
Overall Timing[ 25/  1]	epoch_time 0.0391 (0.0432)	validation_time 0.0004 (0.0007)	train_time 0.0386 (0.0424)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.77it/s] 15%|#5        | 4/26 [00:00<00:01, 18.76it/s] 27%|##6       | 7/26 [00:00<00:00, 21.37it/s] 38%|###8      | 10/26 [00:00<00:00, 23.85it/s] 50%|#####     | 13/26 [00:00<00:00, 25.81it/s] 62%|######1   | 16/26 [00:00<00:00, 25.73it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.63it/s] 92%|#########2| 24/26 [00:00<00:00, 31.02it/s]100%|##########| 26/26 [00:01<00:00, 25.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 327 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 310 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 306 tensor(9.9561e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.55 ( 25.55)	train_acc   0.40 (  0.46)	train_minacc   0.71 (  0.77)	train_majacc   0.35 (  0.41)	train_corr   0.00 (  0.00)	l1 5.9230 (5.9876)	zero_count 0.0000 (23.0100)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.91it/s] 31%|###       | 8/26 [00:00<00:00, 38.26it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.26it/s] 46%|####6     | 12/26 [00:00<00:00, 38.90it/s] 65%|######5   | 17/26 [00:00<00:00, 41.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.79it/s] 85%|########4 | 22/26 [00:00<00:00, 43.60it/s]100%|##########| 26/26 [00:00<00:00, 37.91it/s]
Test: [   0/  26]	Loss 0.580 (0.580)	test_acc   0.42 (  0.42)	test_minacc   0.72 (  0.72)	test_majacc   0.36 (  0.36)	Loss_d 0.580 (0.580)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.578 (0.573)	test_acc   0.41 (  0.41)	test_minacc   0.79 (  0.74)	test_majacc   0.34 (  0.35)	Loss_d 0.578 (0.573)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.79 (  0.74)	test_majacc_d   0.34 (  0.35)	test_corr_d   0.45 (  0.44)
Test: [  20/  26]	Loss 0.562 (0.571)	test_acc   0.42 (  0.41)	test_minacc   0.73 (  0.75)	test_majacc   0.36 (  0.35)	Loss_d 0.562 (0.571)	test_acc_d   0.42 (  0.41)	test_minacc_d   0.73 (  0.75)	test_majacc_d   0.36 (  0.35)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.560 (0.572)	test_acc   0.41 (  0.41)	test_minacc   0.74 (  0.75)	test_majacc   0.35 (  0.35)	Loss_d 0.560 (0.572)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.74 (  0.75)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.39 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.90it/s]
Test: [  0/  1]	Loss 1.625 (1.625)	test_acc   0.66 (  0.66)	test_minacc   0.68 (  0.68)	test_majacc   0.45 (  0.45)	Loss_d 1.625 (1.625)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.625 (1.625)	test_acc   0.66 (  0.66)	test_minacc   0.68 (  0.68)	test_majacc   0.45 (  0.45)	Loss_d 1.625 (1.625)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.21 (  0.21)
Overall Timing[ 26/  1]	epoch_time 0.0435 (0.0432)	validation_time 0.0004 (0.0007)	train_time 0.0431 (0.0424)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.40570000624656677, 0.656000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.23it/s] 23%|##3       | 6/26 [00:00<00:00, 27.29it/s] 38%|###8      | 10/26 [00:00<00:00, 30.82it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.21it/s] 69%|######9   | 18/26 [00:00<00:00, 32.87it/s] 85%|########4 | 22/26 [00:00<00:00, 30.74it/s]100%|##########| 26/26 [00:00<00:00, 29.62it/s]100%|##########| 26/26 [00:00<00:00, 27.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 339 tensor(-9.5683e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 380 tensor(9.4491e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.50 (  0.41)	train_minacc   0.55 (  0.67)	train_majacc   0.49 (  0.37)	train_corr   0.00 (  0.00)	l1 5.9766 (5.9525)	zero_count 0.0000 (11.8170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 15.85it/s] 31%|###       | 8/26 [00:00<00:00, 29.05it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.05it/s] 50%|#####     | 13/26 [00:00<00:00, 35.15it/s] 69%|######9   | 18/26 [00:00<00:00, 39.58it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.58it/s] 88%|########8 | 23/26 [00:00<00:00, 37.84it/s]100%|##########| 26/26 [00:00<00:00, 34.56it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.41 (  0.41)	test_minacc   0.49 (  0.49)	test_majacc   0.39 (  0.39)	Loss_d 0.593 (0.593)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.589 (0.584)	test_acc   0.43 (  0.44)	test_minacc   0.65 (  0.56)	test_majacc   0.39 (  0.42)	Loss_d 0.589 (0.584)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.65 (  0.56)	test_majacc_d   0.39 (  0.42)	test_corr_d   0.45 (  0.43)
Test: [  20/  26]	Loss 0.568 (0.582)	test_acc   0.47 (  0.45)	test_minacc   0.64 (  0.56)	test_majacc   0.44 (  0.43)	Loss_d 0.568 (0.582)	test_acc_d   0.47 (  0.45)	test_minacc_d   0.64 (  0.56)	test_majacc_d   0.44 (  0.43)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.565 (0.582)	test_acc   0.50 (  0.45)	test_minacc   0.55 (  0.56)	test_majacc   0.50 (  0.43)	Loss_d 0.565 (0.582)	test_acc_d   0.50 (  0.45)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.50 (  0.43)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.85it/s]
Test: [  0/  1]	Loss 1.612 (1.612)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 1.612 (1.612)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.612 (1.612)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 1.612 (1.612)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.23 (  0.23)
Overall Timing[ 27/  1]	epoch_time 0.0477 (0.0434)	validation_time 0.0004 (0.0007)	train_time 0.0473 (0.0426)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.4474000033438206, 0.5330000519752502)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.82it/s] 27%|##6       | 7/26 [00:00<00:00, 28.40it/s] 42%|####2     | 11/26 [00:00<00:00, 30.42it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.73it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.58it/s] 88%|########8 | 23/26 [00:00<00:00, 30.02it/s]100%|##########| 26/26 [00:00<00:00, 28.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 394 tensor(-3.8504e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 398 tensor(1.2342e-05, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.52 (  0.44)	train_minacc   0.55 (  0.57)	train_majacc   0.51 (  0.42)	train_corr   0.00 (  0.00)	l1 5.9810 (5.9640)	zero_count 0.0000 (4.5630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 23%|##3       | 6/26 [00:00<00:00, 25.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.69it/s] 42%|####2     | 11/26 [00:00<00:00, 33.42it/s] 62%|######1   | 16/26 [00:00<00:00, 38.30it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.30it/s] 81%|########  | 21/26 [00:00<00:00, 36.70it/s]100%|##########| 26/26 [00:00<00:00, 33.11it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.41 (  0.41)	test_minacc   0.49 (  0.49)	test_majacc   0.39 (  0.39)	Loss_d 0.595 (0.595)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.593 (0.587)	test_acc   0.43 (  0.44)	test_minacc   0.65 (  0.54)	test_majacc   0.39 (  0.42)	Loss_d 0.593 (0.587)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.65 (  0.54)	test_majacc_d   0.39 (  0.42)	test_corr_d   0.44 (  0.43)
Test: [  20/  26]	Loss 0.573 (0.585)	test_acc   0.48 (  0.45)	test_minacc   0.64 (  0.55)	test_majacc   0.45 (  0.43)	Loss_d 0.573 (0.585)	test_acc_d   0.48 (  0.45)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.45 (  0.43)	test_corr_d   0.48 (  0.43)
Test: [  26/  26]	Loss 0.568 (0.585)	test_acc   0.52 (  0.45)	test_minacc   0.55 (  0.55)	test_majacc   0.51 (  0.43)	Loss_d 0.568 (0.585)	test_acc_d   0.52 (  0.45)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.51 (  0.43)	test_corr_d   0.39 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.74it/s]
Test: [  0/  1]	Loss 1.592 (1.592)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 1.592 (1.592)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.592 (1.592)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 1.592 (1.592)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.23 (  0.23)
Overall Timing[ 28/  1]	epoch_time 0.0441 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0436 (0.0426)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.44920000386238096, 0.5270000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.13it/s] 19%|#9        | 5/26 [00:00<00:00, 23.23it/s] 35%|###4      | 9/26 [00:00<00:00, 28.96it/s] 50%|#####     | 13/26 [00:00<00:00, 31.56it/s] 65%|######5   | 17/26 [00:00<00:00, 33.15it/s] 81%|########  | 21/26 [00:00<00:00, 32.77it/s] 96%|#########6| 25/26 [00:00<00:00, 32.35it/s]100%|##########| 26/26 [00:00<00:00, 28.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 426 tensor(2.5528e-06, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.52 (  0.46)	train_minacc   0.55 (  0.54)	train_majacc   0.52 (  0.44)	train_corr   0.00 (  0.00)	l1 5.9791 (5.9723)	zero_count 0.0000 (4.4070)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.68it/s] 23%|##3       | 6/26 [00:00<00:01, 19.54it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.54it/s] 42%|####2     | 11/26 [00:00<00:00, 26.44it/s] 62%|######1   | 16/26 [00:00<00:00, 32.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.52it/s] 81%|########  | 21/26 [00:00<00:00, 36.11it/s]100%|##########| 26/26 [00:00<00:00, 39.91it/s]100%|##########| 26/26 [00:00<00:00, 29.12it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.42 (  0.42)	test_minacc   0.49 (  0.49)	test_majacc   0.40 (  0.40)	Loss_d 0.594 (0.594)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.592 (0.585)	test_acc   0.44 (  0.45)	test_minacc   0.61 (  0.53)	test_majacc   0.41 (  0.44)	Loss_d 0.592 (0.585)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.61 (  0.53)	test_majacc_d   0.41 (  0.44)	test_corr_d   0.45 (  0.43)
Test: [  20/  26]	Loss 0.572 (0.584)	test_acc   0.49 (  0.46)	test_minacc   0.60 (  0.53)	test_majacc   0.47 (  0.44)	Loss_d 0.572 (0.584)	test_acc_d   0.49 (  0.46)	test_minacc_d   0.60 (  0.53)	test_majacc_d   0.47 (  0.44)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.584)	test_acc   0.52 (  0.46)	test_minacc   0.55 (  0.54)	test_majacc   0.52 (  0.45)	Loss_d 0.567 (0.584)	test_acc_d   0.52 (  0.46)	test_minacc_d   0.55 (  0.54)	test_majacc_d   0.52 (  0.45)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.66it/s]
Test: [  0/  1]	Loss 1.591 (1.591)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.591 (1.591)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.591 (1.591)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.591 (1.591)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.24 (  0.24)
Overall Timing[ 29/  1]	epoch_time 0.0413 (0.0433)	validation_time 0.0003 (0.0006)	train_time 0.0410 (0.0426)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.45880000486969946, 0.5180000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.41it/s] 19%|#9        | 5/26 [00:00<00:01, 13.98it/s] 35%|###4      | 9/26 [00:00<00:00, 20.30it/s] 50%|#####     | 13/26 [00:00<00:00, 24.67it/s] 65%|######5   | 17/26 [00:00<00:00, 27.38it/s] 81%|########  | 21/26 [00:00<00:00, 29.24it/s] 96%|#########6| 25/26 [00:01<00:00, 31.05it/s]100%|##########| 26/26 [00:01<00:00, 23.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 442 tensor(7.6100e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.51 (  0.45)	train_minacc   0.55 (  0.54)	train_majacc   0.50 (  0.44)	train_corr   0.00 (  0.00)	l1 5.9698 (5.9699)	zero_count 0.0000 (6.0060)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.17it/s] 12%|#1        | 3/26 [00:00<00:01, 13.17it/s] 31%|###       | 8/26 [00:00<00:00, 26.16it/s]                                               31%|###       | 8/26 [00:00<00:00, 26.16it/s] 50%|#####     | 13/26 [00:00<00:00, 33.21it/s] 69%|######9   | 18/26 [00:00<00:00, 37.71it/s]                                                69%|######9   | 18/26 [00:00<00:00, 37.71it/s] 88%|########8 | 23/26 [00:00<00:00, 40.16it/s]100%|##########| 26/26 [00:00<00:00, 31.26it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.41 (  0.41)	test_minacc   0.49 (  0.49)	test_majacc   0.39 (  0.39)	Loss_d 0.593 (0.593)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.592 (0.584)	test_acc   0.43 (  0.44)	test_minacc   0.61 (  0.53)	test_majacc   0.39 (  0.42)	Loss_d 0.592 (0.584)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.61 (  0.53)	test_majacc_d   0.39 (  0.42)	test_corr_d   0.45 (  0.44)
Test: [  20/  26]	Loss 0.571 (0.583)	test_acc   0.47 (  0.44)	test_minacc   0.62 (  0.54)	test_majacc   0.45 (  0.43)	Loss_d 0.571 (0.583)	test_acc_d   0.47 (  0.44)	test_minacc_d   0.62 (  0.54)	test_majacc_d   0.45 (  0.43)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.583)	test_acc   0.51 (  0.45)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.43)	Loss_d 0.567 (0.583)	test_acc_d   0.51 (  0.45)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.43)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.58it/s]
Test: [  0/  1]	Loss 1.590 (1.590)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.47 (  0.47)	Loss_d 1.590 (1.590)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.590 (1.590)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.47 (  0.47)	Loss_d 1.590 (1.590)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Overall Timing[ 30/  1]	epoch_time 0.0439 (0.0434)	validation_time 0.0006 (0.0006)	train_time 0.0433 (0.0426)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.4462000036239624, 0.5230000019073486)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.41it/s] 19%|#9        | 5/26 [00:00<00:01, 20.43it/s] 35%|###4      | 9/26 [00:00<00:00, 26.06it/s] 50%|#####     | 13/26 [00:00<00:00, 29.93it/s] 65%|######5   | 17/26 [00:00<00:00, 32.76it/s] 81%|########  | 21/26 [00:00<00:00, 34.64it/s] 96%|#########6| 25/26 [00:00<00:00, 36.12it/s]100%|##########| 26/26 [00:00<00:00, 28.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.47 (  0.44)	train_minacc   0.55 (  0.55)	train_majacc   0.45 (  0.42)	train_corr   0.00 (  0.00)	l1 5.9693 (5.9706)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.63it/s] 23%|##3       | 6/26 [00:00<00:01, 19.04it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.04it/s] 42%|####2     | 11/26 [00:00<00:00, 27.92it/s] 62%|######1   | 16/26 [00:00<00:00, 34.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.06it/s] 81%|########  | 21/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:00<00:00, 37.74it/s]100%|##########| 26/26 [00:00<00:00, 28.41it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.41 (  0.41)	test_minacc   0.51 (  0.51)	test_majacc   0.39 (  0.39)	Loss_d 0.592 (0.592)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.591 (0.584)	test_acc   0.43 (  0.43)	test_minacc   0.61 (  0.55)	test_majacc   0.39 (  0.41)	Loss_d 0.591 (0.584)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.61 (  0.55)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.571 (0.582)	test_acc   0.47 (  0.44)	test_minacc   0.64 (  0.56)	test_majacc   0.44 (  0.42)	Loss_d 0.571 (0.582)	test_acc_d   0.47 (  0.44)	test_minacc_d   0.64 (  0.56)	test_majacc_d   0.44 (  0.42)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.583)	test_acc   0.47 (  0.44)	test_minacc   0.55 (  0.56)	test_majacc   0.45 (  0.42)	Loss_d 0.567 (0.583)	test_acc_d   0.47 (  0.44)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.45 (  0.42)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.27it/s]
Test: [  0/  1]	Loss 1.591 (1.591)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.591 (1.591)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.591 (1.591)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.591 (1.591)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Overall Timing[ 31/  1]	epoch_time 0.0428 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0423 (0.0426)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.4369000043272972, 0.5300000309944153)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.09it/s] 19%|#9        | 5/26 [00:00<00:01, 18.76it/s] 35%|###4      | 9/26 [00:00<00:00, 25.46it/s] 50%|#####     | 13/26 [00:00<00:00, 29.23it/s] 65%|######5   | 17/26 [00:00<00:00, 31.47it/s] 81%|########  | 21/26 [00:00<00:00, 32.83it/s] 96%|#########6| 25/26 [00:00<00:00, 33.75it/s]100%|##########| 26/26 [00:00<00:00, 27.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.45 (  0.43)	train_minacc   0.55 (  0.56)	train_majacc   0.43 (  0.41)	train_corr   0.00 (  0.00)	l1 5.9715 (5.9735)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.89it/s] 23%|##3       | 6/26 [00:00<00:00, 32.23it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.23it/s] 42%|####2     | 11/26 [00:00<00:00, 38.42it/s] 62%|######1   | 16/26 [00:00<00:00, 41.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.95it/s] 81%|########  | 21/26 [00:00<00:00, 39.12it/s]100%|##########| 26/26 [00:00<00:00, 41.67it/s]100%|##########| 26/26 [00:00<00:00, 35.84it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.40 (  0.40)	test_minacc   0.51 (  0.51)	test_majacc   0.38 (  0.38)	Loss_d 0.592 (0.592)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.591 (0.584)	test_acc   0.42 (  0.42)	test_minacc   0.61 (  0.54)	test_majacc   0.39 (  0.40)	Loss_d 0.591 (0.584)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.39 (  0.40)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.571 (0.582)	test_acc   0.46 (  0.43)	test_minacc   0.64 (  0.55)	test_majacc   0.43 (  0.40)	Loss_d 0.571 (0.582)	test_acc_d   0.46 (  0.43)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.48 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.45 (  0.43)	test_minacc   0.55 (  0.55)	test_majacc   0.43 (  0.40)	Loss_d 0.567 (0.582)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.62it/s]
Test: [  0/  1]	Loss 1.592 (1.592)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.592 (1.592)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.592 (1.592)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.592 (1.592)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Overall Timing[ 32/  1]	epoch_time 0.0400 (0.0432)	validation_time 0.0005 (0.0006)	train_time 0.0395 (0.0425)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.42730000481009484, 0.5350000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.79it/s] 15%|#5        | 4/26 [00:00<00:01, 16.08it/s] 31%|###       | 8/26 [00:00<00:00, 23.46it/s] 46%|####6     | 12/26 [00:00<00:00, 28.01it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.17it/s] 88%|########8 | 23/26 [00:00<00:00, 31.27it/s]100%|##########| 26/26 [00:01<00:00, 25.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 417 tensor(-3.6693e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.43)	train_minacc   0.55 (  0.55)	train_majacc   0.45 (  0.41)	train_corr   0.00 (  0.00)	l1 5.9713 (5.9746)	zero_count 0.0000 (3.6660)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.12it/s] 27%|##6       | 7/26 [00:00<00:00, 32.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.93it/s] 46%|####6     | 12/26 [00:00<00:00, 38.51it/s] 65%|######5   | 17/26 [00:00<00:00, 38.56it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.56it/s] 85%|########4 | 22/26 [00:00<00:00, 39.45it/s]100%|##########| 26/26 [00:00<00:00, 35.47it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.41 (  0.41)	test_minacc   0.51 (  0.51)	test_majacc   0.39 (  0.39)	Loss_d 0.592 (0.592)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.591 (0.583)	test_acc   0.43 (  0.43)	test_minacc   0.61 (  0.54)	test_majacc   0.39 (  0.41)	Loss_d 0.591 (0.583)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.45 (  0.44)
Test: [  20/  26]	Loss 0.570 (0.582)	test_acc   0.47 (  0.44)	test_minacc   0.64 (  0.55)	test_majacc   0.44 (  0.42)	Loss_d 0.570 (0.582)	test_acc_d   0.47 (  0.44)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.44 (  0.42)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.44)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.42)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.44)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.42)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.96it/s]
Test: [  0/  1]	Loss 1.598 (1.598)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.598 (1.598)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.598 (1.598)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.598 (1.598)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Overall Timing[ 33/  1]	epoch_time 0.0423 (0.0432)	validation_time 0.0003 (0.0006)	train_time 0.0420 (0.0425)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.43630000415444375, 0.531000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.05it/s] 19%|#9        | 5/26 [00:00<00:00, 23.23it/s] 35%|###4      | 9/26 [00:00<00:00, 28.25it/s] 50%|#####     | 13/26 [00:00<00:00, 30.22it/s] 65%|######5   | 17/26 [00:00<00:00, 28.89it/s] 81%|########  | 21/26 [00:00<00:00, 30.48it/s] 96%|#########6| 25/26 [00:00<00:00, 31.35it/s]100%|##########| 26/26 [00:00<00:00, 27.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 413 tensor(-1.8817e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.43)	train_minacc   0.55 (  0.55)	train_majacc   0.45 (  0.41)	train_corr   0.00 (  0.00)	l1 5.9733 (5.9741)	zero_count 0.0000 (3.8220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:11,  2.10it/s] 23%|##3       | 6/26 [00:00<00:01, 12.69it/s]                                               23%|##3       | 6/26 [00:00<00:01, 12.69it/s] 42%|####2     | 11/26 [00:00<00:00, 21.13it/s] 62%|######1   | 16/26 [00:00<00:00, 27.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 27.95it/s] 81%|########  | 21/26 [00:00<00:00, 32.65it/s]100%|##########| 26/26 [00:01<00:00, 36.75it/s]100%|##########| 26/26 [00:01<00:00, 23.64it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.41 (  0.41)	test_minacc   0.51 (  0.51)	test_majacc   0.39 (  0.39)	Loss_d 0.592 (0.592)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.591 (0.584)	test_acc   0.42 (  0.43)	test_minacc   0.61 (  0.54)	test_majacc   0.39 (  0.41)	Loss_d 0.591 (0.584)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.45 (  0.44)
Test: [  20/  26]	Loss 0.570 (0.582)	test_acc   0.47 (  0.43)	test_minacc   0.64 (  0.55)	test_majacc   0.44 (  0.41)	Loss_d 0.570 (0.582)	test_acc_d   0.47 (  0.43)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.44 (  0.41)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.43)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.41)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.43)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.41)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.84it/s]
Test: [  0/  1]	Loss 1.600 (1.600)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.600 (1.600)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.600 (1.600)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.600 (1.600)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Overall Timing[ 34/  1]	epoch_time 0.0437 (0.0432)	validation_time 0.0004 (0.0006)	train_time 0.0433 (0.0425)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.4334000043272972, 0.531000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.90it/s] 19%|#9        | 5/26 [00:00<00:01, 15.54it/s] 35%|###4      | 9/26 [00:00<00:00, 21.23it/s] 50%|#####     | 13/26 [00:00<00:00, 25.30it/s] 62%|######1   | 16/26 [00:00<00:00, 24.89it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.71it/s] 92%|#########2| 24/26 [00:00<00:00, 29.41it/s]100%|##########| 26/26 [00:01<00:00, 23.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 406 tensor(-6.7706e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.43)	train_minacc   0.55 (  0.55)	train_majacc   0.44 (  0.41)	train_corr   0.00 (  0.00)	l1 5.9744 (5.9746)	zero_count 0.0000 (4.0950)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.66it/s] 23%|##3       | 6/26 [00:00<00:00, 32.04it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.04it/s] 42%|####2     | 11/26 [00:00<00:00, 38.01it/s] 62%|######1   | 16/26 [00:00<00:00, 42.04it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.04it/s] 81%|########  | 21/26 [00:00<00:00, 39.11it/s]100%|##########| 26/26 [00:00<00:00, 41.82it/s]100%|##########| 26/26 [00:00<00:00, 35.51it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.41 (  0.41)	test_minacc   0.51 (  0.51)	test_majacc   0.38 (  0.38)	Loss_d 0.592 (0.592)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.592 (0.584)	test_acc   0.42 (  0.42)	test_minacc   0.61 (  0.54)	test_majacc   0.39 (  0.40)	Loss_d 0.592 (0.584)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.39 (  0.40)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.570 (0.582)	test_acc   0.46 (  0.43)	test_minacc   0.64 (  0.56)	test_majacc   0.43 (  0.41)	Loss_d 0.570 (0.582)	test_acc_d   0.46 (  0.43)	test_minacc_d   0.64 (  0.56)	test_majacc_d   0.43 (  0.41)	test_corr_d   0.48 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.43)	test_minacc   0.55 (  0.56)	test_majacc   0.44 (  0.41)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.43)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.44 (  0.41)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.91it/s]
Test: [  0/  1]	Loss 1.600 (1.600)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.600 (1.600)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.600 (1.600)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.600 (1.600)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Overall Timing[ 35/  1]	epoch_time 0.0475 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0471 (0.0426)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.42950000435113905, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.98it/s] 23%|##3       | 6/26 [00:00<00:00, 23.22it/s] 38%|###8      | 10/26 [00:00<00:00, 28.05it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.30it/s] 69%|######9   | 18/26 [00:00<00:00, 29.32it/s] 85%|########4 | 22/26 [00:00<00:00, 28.39it/s]100%|##########| 26/26 [00:00<00:00, 30.54it/s]100%|##########| 26/26 [00:00<00:00, 26.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 405 tensor(-8.7311e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 406 tensor(-1.7855e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.43)	train_minacc   0.55 (  0.55)	train_majacc   0.44 (  0.41)	train_corr   0.00 (  0.00)	l1 5.9763 (5.9748)	zero_count 0.0000 (8.2290)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.01it/s] 23%|##3       | 6/26 [00:00<00:00, 20.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.08it/s] 42%|####2     | 11/26 [00:00<00:00, 26.90it/s] 65%|######5   | 17/26 [00:00<00:00, 34.97it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.97it/s] 88%|########8 | 23/26 [00:00<00:00, 37.86it/s]100%|##########| 26/26 [00:00<00:00, 30.35it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.41 (  0.41)	test_minacc   0.51 (  0.51)	test_majacc   0.38 (  0.38)	Loss_d 0.592 (0.592)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.592 (0.584)	test_acc   0.42 (  0.42)	test_minacc   0.61 (  0.54)	test_majacc   0.38 (  0.40)	Loss_d 0.592 (0.584)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.44 (  0.43)
Test: [  20/  26]	Loss 0.570 (0.582)	test_acc   0.46 (  0.43)	test_minacc   0.64 (  0.56)	test_majacc   0.43 (  0.41)	Loss_d 0.570 (0.582)	test_acc_d   0.46 (  0.43)	test_minacc_d   0.64 (  0.56)	test_majacc_d   0.43 (  0.41)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.583)	test_acc   0.46 (  0.43)	test_minacc   0.55 (  0.56)	test_majacc   0.44 (  0.41)	Loss_d 0.567 (0.583)	test_acc_d   0.46 (  0.43)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.44 (  0.41)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.31it/s]
Test: [  0/  1]	Loss 1.601 (1.601)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.601 (1.601)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.601 (1.601)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.601 (1.601)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Overall Timing[ 36/  1]	epoch_time 0.0411 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0407 (0.0426)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.42890000438690185, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.49it/s] 19%|#9        | 5/26 [00:00<00:01, 20.05it/s] 35%|###4      | 9/26 [00:00<00:00, 24.52it/s] 50%|#####     | 13/26 [00:00<00:00, 26.86it/s] 65%|######5   | 17/26 [00:00<00:00, 28.71it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.33it/s] 92%|#########2| 24/26 [00:00<00:00, 27.46it/s]100%|##########| 26/26 [00:01<00:00, 25.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 400 tensor(-5.2856e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 398 tensor(1.1270e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 407 tensor(1.0752e-07, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.43)	train_minacc   0.55 (  0.56)	train_majacc   0.44 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9767 (5.9757)	zero_count 0.0000 (8.7360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 23%|##3       | 6/26 [00:00<00:00, 30.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.06it/s] 42%|####2     | 11/26 [00:00<00:00, 36.33it/s] 62%|######1   | 16/26 [00:00<00:00, 41.24it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.24it/s] 81%|########  | 21/26 [00:00<00:00, 39.10it/s]100%|##########| 26/26 [00:00<00:00, 41.86it/s]100%|##########| 26/26 [00:00<00:00, 34.67it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.40 (  0.40)	test_minacc   0.51 (  0.51)	test_majacc   0.38 (  0.38)	Loss_d 0.592 (0.592)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.592 (0.584)	test_acc   0.42 (  0.42)	test_minacc   0.61 (  0.54)	test_majacc   0.38 (  0.40)	Loss_d 0.592 (0.584)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.44 (  0.43)
Test: [  20/  26]	Loss 0.570 (0.582)	test_acc   0.46 (  0.43)	test_minacc   0.64 (  0.55)	test_majacc   0.43 (  0.40)	Loss_d 0.570 (0.582)	test_acc_d   0.46 (  0.43)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.568 (0.583)	test_acc   0.46 (  0.43)	test_minacc   0.55 (  0.56)	test_majacc   0.44 (  0.40)	Loss_d 0.568 (0.583)	test_acc_d   0.46 (  0.43)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.44 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.95it/s]
Test: [  0/  1]	Loss 1.602 (1.602)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.602 (1.602)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.602 (1.602)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 1.602 (1.602)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.24 (  0.24)
Overall Timing[ 37/  1]	epoch_time 0.0436 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0431 (0.0426)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.4277000049948692, 0.5350000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.65it/s] 19%|#9        | 5/26 [00:00<00:01, 19.14it/s] 35%|###4      | 9/26 [00:00<00:00, 25.44it/s] 50%|#####     | 13/26 [00:00<00:00, 28.04it/s] 65%|######5   | 17/26 [00:00<00:00, 29.81it/s] 81%|########  | 21/26 [00:00<00:00, 31.21it/s] 96%|#########6| 25/26 [00:00<00:00, 30.06it/s]100%|##########| 26/26 [00:00<00:00, 26.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 393 tensor(-2.5379e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 397 tensor(1.3922e-06, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.45 (  0.43)	train_minacc   0.55 (  0.56)	train_majacc   0.43 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9772 (5.9759)	zero_count 0.0000 (8.6580)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.51it/s] 23%|##3       | 6/26 [00:00<00:00, 30.23it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.23it/s] 42%|####2     | 11/26 [00:00<00:00, 36.84it/s] 62%|######1   | 16/26 [00:00<00:00, 36.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.68it/s] 81%|########  | 21/26 [00:00<00:00, 39.33it/s]100%|##########| 26/26 [00:00<00:00, 42.12it/s]100%|##########| 26/26 [00:00<00:00, 34.87it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.40 (  0.40)	test_minacc   0.51 (  0.51)	test_majacc   0.38 (  0.38)	Loss_d 0.592 (0.592)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.592 (0.584)	test_acc   0.42 (  0.42)	test_minacc   0.61 (  0.54)	test_majacc   0.38 (  0.40)	Loss_d 0.592 (0.584)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.44 (  0.43)
Test: [  20/  26]	Loss 0.570 (0.582)	test_acc   0.45 (  0.43)	test_minacc   0.62 (  0.56)	test_majacc   0.42 (  0.40)	Loss_d 0.570 (0.582)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.568 (0.583)	test_acc   0.45 (  0.43)	test_minacc   0.55 (  0.56)	test_majacc   0.43 (  0.40)	Loss_d 0.568 (0.583)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.79it/s]
Test: [  0/  1]	Loss 1.602 (1.602)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.602 (1.602)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.602 (1.602)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.602 (1.602)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.24 (  0.24)
Overall Timing[ 38/  1]	epoch_time 0.0479 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0475 (0.0427)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.4255000049173832, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.17it/s]  8%|7         | 2/26 [00:00<00:03,  6.93it/s] 23%|##3       | 6/26 [00:00<00:01, 17.79it/s] 38%|###8      | 10/26 [00:00<00:00, 23.47it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.99it/s] 69%|######9   | 18/26 [00:00<00:00, 28.84it/s] 85%|########4 | 22/26 [00:00<00:00, 27.97it/s]100%|##########| 26/26 [00:01<00:00, 29.34it/s]100%|##########| 26/26 [00:01<00:00, 23.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 436 tensor(8.6202e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 401 tensor(-3.3272e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 396 tensor(2.3385e-06, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.45 (  0.42)	train_minacc   0.55 (  0.56)	train_majacc   0.43 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9777 (5.9759)	zero_count 0.0000 (11.6610)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.05it/s] 23%|##3       | 6/26 [00:00<00:00, 20.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.74it/s] 42%|####2     | 11/26 [00:00<00:00, 29.77it/s] 65%|######5   | 17/26 [00:00<00:00, 34.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.77it/s] 85%|########4 | 22/26 [00:00<00:00, 38.43it/s]100%|##########| 26/26 [00:00<00:00, 30.43it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.40 (  0.40)	test_minacc   0.51 (  0.51)	test_majacc   0.38 (  0.38)	Loss_d 0.592 (0.592)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.592 (0.584)	test_acc   0.42 (  0.42)	test_minacc   0.61 (  0.54)	test_majacc   0.38 (  0.40)	Loss_d 0.592 (0.584)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.44 (  0.43)
Test: [  20/  26]	Loss 0.570 (0.582)	test_acc   0.45 (  0.42)	test_minacc   0.62 (  0.55)	test_majacc   0.42 (  0.40)	Loss_d 0.570 (0.582)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.583)	test_acc   0.45 (  0.42)	test_minacc   0.55 (  0.56)	test_majacc   0.43 (  0.40)	Loss_d 0.567 (0.583)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.56it/s]
Test: [  0/  1]	Loss 1.602 (1.602)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.602 (1.602)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.602 (1.602)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.602 (1.602)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.24 (  0.24)
Overall Timing[ 39/  1]	epoch_time 0.0428 (0.0434)	validation_time 0.0003 (0.0006)	train_time 0.0425 (0.0427)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.42470000496506694, 0.5350000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.29it/s] 23%|##3       | 6/26 [00:00<00:00, 22.14it/s] 38%|###8      | 10/26 [00:00<00:00, 26.45it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.14it/s] 69%|######9   | 18/26 [00:00<00:00, 31.19it/s] 85%|########4 | 22/26 [00:00<00:00, 32.51it/s]100%|##########| 26/26 [00:00<00:00, 31.35it/s]100%|##########| 26/26 [00:00<00:00, 27.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 396 tensor(3.3751e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 391 tensor(-1.0522e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.45 (  0.42)	train_minacc   0.55 (  0.56)	train_majacc   0.43 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9776 (5.9760)	zero_count 0.0000 (8.9700)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:11,  2.13it/s] 23%|##3       | 6/26 [00:00<00:01, 13.26it/s]                                               23%|##3       | 6/26 [00:00<00:01, 13.26it/s] 42%|####2     | 11/26 [00:00<00:00, 21.79it/s] 62%|######1   | 16/26 [00:00<00:00, 28.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 28.80it/s] 81%|########  | 21/26 [00:00<00:00, 31.74it/s]100%|##########| 26/26 [00:01<00:00, 24.26it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.40 (  0.40)	test_minacc   0.51 (  0.51)	test_majacc   0.37 (  0.37)	Loss_d 0.591 (0.591)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.592 (0.584)	test_acc   0.41 (  0.42)	test_minacc   0.61 (  0.55)	test_majacc   0.38 (  0.40)	Loss_d 0.592 (0.584)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.61 (  0.55)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.570 (0.582)	test_acc   0.45 (  0.42)	test_minacc   0.62 (  0.56)	test_majacc   0.42 (  0.40)	Loss_d 0.570 (0.582)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.45 (  0.42)	test_minacc   0.55 (  0.56)	test_majacc   0.43 (  0.40)	Loss_d 0.567 (0.582)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.18it/s]
Test: [  0/  1]	Loss 1.603 (1.603)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.603 (1.603)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.603 (1.603)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 1.603 (1.603)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.24 (  0.24)
Overall Timing[ 40/  1]	epoch_time 0.0441 (0.0434)	validation_time 0.0006 (0.0006)	train_time 0.0435 (0.0427)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.42450000497698787, 0.5360000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.22it/s] 19%|#9        | 5/26 [00:00<00:01, 20.19it/s] 35%|###4      | 9/26 [00:00<00:00, 26.06it/s] 50%|#####     | 13/26 [00:00<00:00, 29.32it/s] 65%|######5   | 17/26 [00:00<00:00, 31.10it/s] 81%|########  | 21/26 [00:00<00:00, 32.42it/s] 96%|#########6| 25/26 [00:00<00:00, 30.60it/s]100%|##########| 26/26 [00:00<00:00, 27.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 393 tensor(9.9482e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 405 tensor(-2.8610e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 398 tensor(7.5171e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.42)	train_minacc   0.55 (  0.56)	train_majacc   0.44 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9766 (5.9762)	zero_count 106.0000 (11.9320)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.17it/s] 19%|#9        | 5/26 [00:00<00:01, 16.90it/s] 38%|###8      | 10/26 [00:00<00:00, 27.31it/s]                                                38%|###8      | 10/26 [00:00<00:00, 27.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.03it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 33.03it/s] 81%|########  | 21/26 [00:00<00:00, 37.33it/s]100%|##########| 26/26 [00:00<00:00, 30.93it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.39 (  0.39)	test_minacc   0.49 (  0.49)	test_majacc   0.37 (  0.37)	Loss_d 0.591 (0.591)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.592 (0.584)	test_acc   0.42 (  0.42)	test_minacc   0.61 (  0.54)	test_majacc   0.38 (  0.40)	Loss_d 0.592 (0.584)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.570 (0.582)	test_acc   0.45 (  0.42)	test_minacc   0.62 (  0.56)	test_majacc   0.42 (  0.40)	Loss_d 0.570 (0.582)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.45 (  0.42)	test_minacc   0.55 (  0.56)	test_majacc   0.43 (  0.40)	Loss_d 0.567 (0.582)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.67it/s]
Test: [  0/  1]	Loss 1.604 (1.604)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.604 (1.604)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.604 (1.604)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.604 (1.604)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.24 (  0.24)
Overall Timing[ 41/  1]	epoch_time 0.0498 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0494 (0.0429)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.42350000503659246, 0.5370000004768372)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 15%|#5        | 4/26 [00:00<00:01, 14.41it/s] 27%|##6       | 7/26 [00:00<00:01, 18.77it/s] 38%|###8      | 10/26 [00:00<00:00, 20.39it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.81it/s] 69%|######9   | 18/26 [00:00<00:00, 27.76it/s] 85%|########4 | 22/26 [00:00<00:00, 29.23it/s]100%|##########| 26/26 [00:01<00:00, 30.52it/s]100%|##########| 26/26 [00:01<00:00, 23.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 394 tensor(2.5194e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 470 tensor(4.4545e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.42)	train_minacc   0.58 (  0.56)	train_majacc   0.44 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9761 (5.9763)	zero_count 0.0000 (10.5690)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 23%|##3       | 6/26 [00:00<00:00, 27.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.82it/s] 42%|####2     | 11/26 [00:00<00:00, 31.48it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.88it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.73it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.73it/s] 96%|#########6| 25/26 [00:00<00:00, 40.59it/s]100%|##########| 26/26 [00:00<00:00, 33.35it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.40 (  0.40)	test_minacc   0.49 (  0.49)	test_majacc   0.38 (  0.38)	Loss_d 0.591 (0.591)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.592 (0.583)	test_acc   0.42 (  0.42)	test_minacc   0.61 (  0.55)	test_majacc   0.38 (  0.39)	Loss_d 0.592 (0.583)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.61 (  0.55)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.570 (0.582)	test_acc   0.45 (  0.42)	test_minacc   0.62 (  0.56)	test_majacc   0.42 (  0.40)	Loss_d 0.570 (0.582)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.42)	test_minacc   0.58 (  0.56)	test_majacc   0.44 (  0.40)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.42)	test_minacc_d   0.58 (  0.56)	test_majacc_d   0.44 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.35it/s]
Test: [  0/  1]	Loss 1.605 (1.605)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.605 (1.605)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.605 (1.605)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.605 (1.605)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.24 (  0.24)
Overall Timing[ 42/  1]	epoch_time 0.0410 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0406 (0.0428)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.42210000479221343, 0.5420000553131104)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 18.57it/s] 27%|##6       | 7/26 [00:00<00:00, 27.23it/s] 38%|###8      | 10/26 [00:00<00:00, 27.57it/s] 50%|#####     | 13/26 [00:00<00:00, 27.21it/s] 65%|######5   | 17/26 [00:00<00:00, 29.54it/s] 81%|########  | 21/26 [00:00<00:00, 30.75it/s] 96%|#########6| 25/26 [00:00<00:00, 31.45it/s]100%|##########| 26/26 [00:00<00:00, 27.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 393 tensor(-1.2054e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 393 tensor(1.3809e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 403 tensor(2.3842e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.42)	train_minacc   0.58 (  0.56)	train_majacc   0.44 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9757 (5.9764)	zero_count 0.0000 (13.4160)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.82it/s] 31%|###       | 8/26 [00:00<00:00, 36.89it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.89it/s] 50%|#####     | 13/26 [00:00<00:00, 39.73it/s] 69%|######9   | 18/26 [00:00<00:00, 41.88it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.88it/s] 88%|########8 | 23/26 [00:00<00:00, 40.74it/s]100%|##########| 26/26 [00:00<00:00, 37.47it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.40 (  0.40)	test_minacc   0.49 (  0.49)	test_majacc   0.38 (  0.38)	Loss_d 0.591 (0.591)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.591 (0.583)	test_acc   0.42 (  0.42)	test_minacc   0.61 (  0.55)	test_majacc   0.38 (  0.39)	Loss_d 0.591 (0.583)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.61 (  0.55)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.570 (0.581)	test_acc   0.45 (  0.42)	test_minacc   0.60 (  0.56)	test_majacc   0.42 (  0.40)	Loss_d 0.570 (0.581)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.60 (  0.56)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.42)	test_minacc   0.58 (  0.56)	test_majacc   0.44 (  0.40)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.42)	test_minacc_d   0.58 (  0.56)	test_majacc_d   0.44 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.18it/s]
Test: [  0/  1]	Loss 1.606 (1.606)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.606 (1.606)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.606 (1.606)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.606 (1.606)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Overall Timing[ 43/  1]	epoch_time 0.0443 (0.0435)	validation_time 0.0005 (0.0006)	train_time 0.0438 (0.0429)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.42200000500679014, 0.5420000553131104)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.95it/s]  8%|7         | 2/26 [00:00<00:02,  8.98it/s] 23%|##3       | 6/26 [00:00<00:00, 20.99it/s] 35%|###4      | 9/26 [00:00<00:00, 22.43it/s] 46%|####6     | 12/26 [00:00<00:00, 24.05it/s] 62%|######1   | 16/26 [00:00<00:00, 27.39it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.51it/s] 92%|#########2| 24/26 [00:00<00:00, 31.04it/s]100%|##########| 26/26 [00:01<00:00, 24.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 390 tensor(-6.1830e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 390 tensor(1.9988e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.42)	train_minacc   0.58 (  0.56)	train_majacc   0.43 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9756 (5.9766)	zero_count 0.0000 (9.4380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.45it/s] 23%|##3       | 6/26 [00:00<00:00, 30.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.32it/s] 42%|####2     | 11/26 [00:00<00:00, 37.04it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.68it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.72it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.72it/s] 96%|#########6| 25/26 [00:00<00:00, 40.56it/s]100%|##########| 26/26 [00:00<00:00, 35.20it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.40 (  0.40)	test_minacc   0.49 (  0.49)	test_majacc   0.38 (  0.38)	Loss_d 0.591 (0.591)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.591 (0.583)	test_acc   0.41 (  0.42)	test_minacc   0.60 (  0.54)	test_majacc   0.38 (  0.39)	Loss_d 0.591 (0.583)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.569 (0.581)	test_acc   0.45 (  0.42)	test_minacc   0.60 (  0.55)	test_majacc   0.42 (  0.40)	Loss_d 0.569 (0.581)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.60 (  0.55)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.42)	test_minacc   0.58 (  0.55)	test_majacc   0.43 (  0.40)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.42)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.17it/s]
Test: [  0/  1]	Loss 1.607 (1.607)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.607 (1.607)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.607 (1.607)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.607 (1.607)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Overall Timing[ 44/  1]	epoch_time 0.0416 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0411 (0.0428)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.42070000541210173, 0.5410000085830688)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.40it/s] 19%|#9        | 5/26 [00:00<00:01, 17.13it/s] 35%|###4      | 9/26 [00:00<00:00, 23.90it/s] 46%|####6     | 12/26 [00:00<00:00, 25.35it/s] 62%|######1   | 16/26 [00:00<00:00, 26.39it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.17it/s] 92%|#########2| 24/26 [00:00<00:00, 30.67it/s]100%|##########| 26/26 [00:01<00:00, 24.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 384 tensor(-7.5551e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 382 tensor(1.8488e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.42)	train_minacc   0.58 (  0.56)	train_majacc   0.43 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9756 (5.9765)	zero_count 0.0000 (9.9840)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 15%|#5        | 4/26 [00:00<00:01, 18.44it/s] 35%|###4      | 9/26 [00:00<00:00, 30.10it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.10it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.12it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.79it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.79it/s] 92%|#########2| 24/26 [00:00<00:00, 39.03it/s]100%|##########| 26/26 [00:00<00:00, 32.83it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.40 (  0.40)	test_minacc   0.49 (  0.49)	test_majacc   0.38 (  0.38)	Loss_d 0.591 (0.591)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.591 (0.583)	test_acc   0.41 (  0.42)	test_minacc   0.60 (  0.54)	test_majacc   0.38 (  0.39)	Loss_d 0.591 (0.583)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.569 (0.581)	test_acc   0.45 (  0.42)	test_minacc   0.60 (  0.55)	test_majacc   0.42 (  0.40)	Loss_d 0.569 (0.581)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.60 (  0.55)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.42)	test_minacc   0.58 (  0.55)	test_majacc   0.43 (  0.40)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.42)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.63it/s]
Test: [  0/  1]	Loss 1.608 (1.608)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.608 (1.608)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.608 (1.608)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.608 (1.608)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Overall Timing[ 45/  1]	epoch_time 0.0472 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0467 (0.0429)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.420000005453825, 0.5410000085830688)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.84it/s] 19%|#9        | 5/26 [00:00<00:01, 18.11it/s] 35%|###4      | 9/26 [00:00<00:00, 23.94it/s] 46%|####6     | 12/26 [00:00<00:00, 23.67it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.29it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.51it/s] 85%|########4 | 22/26 [00:00<00:00, 26.38it/s]100%|##########| 26/26 [00:01<00:00, 28.80it/s]100%|##########| 26/26 [00:01<00:00, 23.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 417 tensor(-1.8651e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 383 tensor(3.1181e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 404 tensor(-1.2645e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.42)	train_minacc   0.58 (  0.56)	train_majacc   0.43 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9761 (5.9764)	zero_count 0.0000 (12.8310)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.26it/s] 31%|###       | 8/26 [00:00<00:00, 37.38it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.38it/s] 50%|#####     | 13/26 [00:00<00:00, 40.62it/s] 69%|######9   | 18/26 [00:00<00:00, 43.09it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.09it/s] 88%|########8 | 23/26 [00:00<00:00, 43.61it/s]100%|##########| 26/26 [00:00<00:00, 38.26it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.40 (  0.40)	test_minacc   0.49 (  0.49)	test_majacc   0.38 (  0.38)	Loss_d 0.590 (0.590)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.591 (0.583)	test_acc   0.41 (  0.41)	test_minacc   0.60 (  0.54)	test_majacc   0.38 (  0.39)	Loss_d 0.591 (0.583)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.569 (0.581)	test_acc   0.45 (  0.42)	test_minacc   0.60 (  0.55)	test_majacc   0.42 (  0.40)	Loss_d 0.569 (0.581)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.60 (  0.55)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.42)	test_minacc   0.58 (  0.55)	test_majacc   0.43 (  0.40)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.42)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.10it/s]
Test: [  0/  1]	Loss 1.609 (1.609)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.609 (1.609)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.609 (1.609)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.609 (1.609)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Overall Timing[ 46/  1]	epoch_time 0.0451 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0447 (0.0429)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.420000005453825, 0.5410000085830688)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.77it/s] 27%|##6       | 7/26 [00:00<00:00, 29.46it/s] 42%|####2     | 11/26 [00:00<00:00, 31.86it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.95it/s] 88%|########8 | 23/26 [00:00<00:00, 30.98it/s]100%|##########| 26/26 [00:00<00:00, 28.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 390 tensor(3.2805e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 387 tensor(1.2572e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.42)	train_minacc   0.58 (  0.56)	train_majacc   0.43 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9764 (5.9764)	zero_count 0.0000 (9.5550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.42it/s] 27%|##6       | 7/26 [00:00<00:00, 34.75it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.75it/s] 46%|####6     | 12/26 [00:00<00:00, 39.21it/s] 65%|######5   | 17/26 [00:00<00:00, 41.90it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.90it/s] 85%|########4 | 22/26 [00:00<00:00, 39.63it/s]100%|##########| 26/26 [00:00<00:00, 37.25it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.40 (  0.40)	test_minacc   0.49 (  0.49)	test_majacc   0.38 (  0.38)	Loss_d 0.590 (0.590)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.591 (0.583)	test_acc   0.41 (  0.41)	test_minacc   0.60 (  0.54)	test_majacc   0.38 (  0.39)	Loss_d 0.591 (0.583)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.569 (0.581)	test_acc   0.45 (  0.42)	test_minacc   0.60 (  0.55)	test_majacc   0.42 (  0.39)	Loss_d 0.569 (0.581)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.60 (  0.55)	test_majacc_d   0.42 (  0.39)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.42)	test_minacc   0.58 (  0.56)	test_majacc   0.43 (  0.40)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.42)	test_minacc_d   0.58 (  0.56)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.94it/s]
Test: [  0/  1]	Loss 1.610 (1.610)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.610 (1.610)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.610 (1.610)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.610 (1.610)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Overall Timing[ 47/  1]	epoch_time 0.0454 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0449 (0.0430)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.41960000547766685, 0.5430000424385071)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.31it/s] 19%|#9        | 5/26 [00:00<00:01, 14.44it/s] 35%|###4      | 9/26 [00:00<00:00, 21.48it/s] 50%|#####     | 13/26 [00:00<00:00, 25.63it/s] 65%|######5   | 17/26 [00:00<00:00, 29.00it/s] 81%|########  | 21/26 [00:00<00:00, 28.69it/s] 96%|#########6| 25/26 [00:01<00:00, 28.58it/s]100%|##########| 26/26 [00:01<00:00, 23.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 383 tensor(1.6528e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 383 tensor(9.5119e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.42)	train_minacc   0.58 (  0.56)	train_majacc   0.43 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9765 (5.9765)	zero_count 0.0000 (9.9840)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.70it/s] 31%|###       | 8/26 [00:00<00:00, 36.80it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.80it/s] 50%|#####     | 13/26 [00:00<00:00, 40.18it/s] 69%|######9   | 18/26 [00:00<00:00, 42.87it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.87it/s] 88%|########8 | 23/26 [00:00<00:00, 40.18it/s]100%|##########| 26/26 [00:00<00:00, 37.69it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.40 (  0.40)	test_minacc   0.49 (  0.49)	test_majacc   0.38 (  0.38)	Loss_d 0.590 (0.590)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.591 (0.583)	test_acc   0.41 (  0.41)	test_minacc   0.60 (  0.54)	test_majacc   0.38 (  0.39)	Loss_d 0.591 (0.583)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.569 (0.581)	test_acc   0.45 (  0.42)	test_minacc   0.60 (  0.55)	test_majacc   0.42 (  0.39)	Loss_d 0.569 (0.581)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.60 (  0.55)	test_majacc_d   0.42 (  0.39)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.42)	test_minacc   0.58 (  0.56)	test_majacc   0.43 (  0.40)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.42)	test_minacc_d   0.58 (  0.56)	test_majacc_d   0.43 (  0.40)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.79it/s]
Test: [  0/  1]	Loss 1.610 (1.610)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.610 (1.610)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.610 (1.610)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.610 (1.610)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Overall Timing[ 48/  1]	epoch_time 0.0409 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0406 (0.0429)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.41960000547766685, 0.5440000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.86it/s] 19%|#9        | 5/26 [00:00<00:00, 24.19it/s] 35%|###4      | 9/26 [00:00<00:00, 29.11it/s] 50%|#####     | 13/26 [00:00<00:00, 31.40it/s] 65%|######5   | 17/26 [00:00<00:00, 29.55it/s] 81%|########  | 21/26 [00:00<00:00, 31.36it/s] 96%|#########6| 25/26 [00:00<00:00, 31.02it/s]100%|##########| 26/26 [00:00<00:00, 28.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 428 tensor(-5.1907e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 387 tensor(2.9593e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 391 tensor(5.1211e-07, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.46 (  0.42)	train_minacc   0.58 (  0.56)	train_majacc   0.43 (  0.40)	train_corr   0.00 (  0.00)	l1 5.9769 (5.9763)	zero_count 0.0000 (8.0730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 23%|##3       | 6/26 [00:00<00:00, 26.96it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.96it/s] 42%|####2     | 11/26 [00:00<00:00, 34.81it/s] 62%|######1   | 16/26 [00:00<00:00, 39.98it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.98it/s] 81%|########  | 21/26 [00:00<00:00, 38.51it/s]100%|##########| 26/26 [00:00<00:00, 41.53it/s]100%|##########| 26/26 [00:00<00:00, 33.94it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.40 (  0.40)	test_minacc   0.49 (  0.49)	test_majacc   0.38 (  0.38)	Loss_d 0.590 (0.590)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.591 (0.583)	test_acc   0.41 (  0.41)	test_minacc   0.60 (  0.54)	test_majacc   0.38 (  0.39)	Loss_d 0.591 (0.583)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.569 (0.581)	test_acc   0.45 (  0.42)	test_minacc   0.60 (  0.55)	test_majacc   0.42 (  0.39)	Loss_d 0.569 (0.581)	test_acc_d   0.45 (  0.42)	test_minacc_d   0.60 (  0.55)	test_majacc_d   0.42 (  0.39)	test_corr_d   0.49 (  0.44)
Test: [  26/  26]	Loss 0.567 (0.582)	test_acc   0.46 (  0.42)	test_minacc   0.58 (  0.56)	test_majacc   0.43 (  0.39)	Loss_d 0.567 (0.582)	test_acc_d   0.46 (  0.42)	test_minacc_d   0.58 (  0.56)	test_majacc_d   0.43 (  0.39)	test_corr_d   0.40 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.96it/s]
Test: [  0/  1]	Loss 1.611 (1.611)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.611 (1.611)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.611 (1.611)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 1.611 (1.611)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.25 (  0.25)
Overall Timing[ 49/  1]	epoch_time 0.0424 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0419 (0.0429)
record: (train_acc, test_acc) (0.7403000348210335, 0.7050000429153442)
last accs (train_acc, test_acc) (0.4194000054895878, 0.5450000166893005)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.163 MB of 0.163 MB uploadedwandb: \ 0.163 MB of 0.163 MB uploadedwandb: | 0.163 MB of 0.163 MB uploadedwandb: / 0.038 MB of 0.503 MB uploaded (0.003 MB deduped)wandb: - 0.503 MB of 0.503 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/diagnostics/epoch_time_val █▃▂▂▁▁▃▂▂▁▁▂▁▂▂▂▁▂▂▂▁▂▃▂▂▂▁▂▃▂▂▃▂▃▂▂▃▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/diagnostics/train_time_val █▃▂▂▁▂▃▂▂▁▁▃▁▂▂▂▁▂▂▂▁▂▃▂▂▂▁▂▃▂▂▃▂▄▂▂▃▃▃▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/Loss_avg ▅▆▄▅▄▅▅▄▇█▇▆▃▁▂▂▃▃▄▆▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/Loss_d_avg ▅▆▄▅▄▅▅▄▇█▇▆▃▁▂▂▃▃▄▆▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/Loss_d_val ▅▆▄▅▄▅▅▄▇█▇▆▃▁▂▂▃▃▄▆▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/Loss_val ▅▆▄▅▄▅▅▄▇█▇▆▃▁▂▂▃▃▄▆▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_acc_avg ▁▁▂▃▄▄▄▅▄▃▅▅▆▆▆▆▆▆▇▆█▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_acc_d_avg ▁▁▂▃▄▄▄▅▄▃▅▅▆▆▆▆▆▆▇▆█▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_acc_d_val ▁▁▂▃▄▄▄▅▄▃▅▅▆▆▆▆▆▆▇▆█▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_acc_val ▁▁▂▃▄▄▄▅▄▃▅▅▆▆▆▆▆▆▇▆█▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_corr_d_avg ██▇▆▅▅▅▅▆▆▄▃▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_corr_d_val ██▇▆▅▅▅▅▆▆▄▃▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_majacc_avg ████▇▇▇▇██▇▇▇▆▆▆▆▆▆▂▅▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_majacc_d_avg ████▇▇▇▇██▇▇▇▆▆▆▆▆▆▂▅▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_majacc_d_val ████▇▇▇▇██▇▇▇▆▆▆▆▆▆▂▅▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_majacc_val ████▇▇▇▇██▇▇▇▆▆▆▆▆▆▂▅▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_minacc_avg ▁▁▂▃▄▄▄▅▃▃▅▅▆▆▆▆▆▆▇▆██▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_minacc_d_avg ▁▁▂▃▄▄▄▅▃▃▅▅▆▆▆▆▆▆▇▆██▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_minacc_d_val ▁▁▂▃▄▄▄▅▃▃▅▅▆▆▆▆▆▆▇▆██▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_minacc_val ▁▁▂▃▄▄▄▅▃▃▅▅▆▆▆▆▆▆▇▆██▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/Loss_avg █▇▇▆▆▅▅▅▅▅▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/Loss_val ███▇▇▆▆▆▅▅▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/l1_avg █▄▃▃▃▃▃▂▄▄▄▆▆▁▁▁▂▂▃▄▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/l1_val ▅▅▄▅▄▄▄▃▅▅▆▆▄▁▁▃▂▃▅█▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_acc_avg ▇▇▇▇▇▇▇▇█████▇▇▇▇▇▇▆▃▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_acc_val ▇▇▇▇▇▇▇▇█▇██▇▆▇▇▇▇▇▆▅▁▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_majacc_avg ▇███████████▇▆▆▆▆▆▆▆▃▁▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_majacc_val ████▇▇▇▇█▇▇█▇▆▆▆▆▆▆▅▅▁▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_minacc_avg ▁▁▁▂▃▄▄▄▅▅▅▆▆█▇████▇█▇▆▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_minacc_val ▁▁▂▂▅▄▄▅▇▆█▇█▇▇▇███▇█▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_nll_avg ▆▅▄▄▃▃▃▃▂▂▁▁▁▄▄▄▃▃▃▄████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_nll_val ▆▅▅▅▄▄▄▄▂▂▁▁▃▅▄▅▄▄▄▅████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_penalty_avg █▄▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_penalty_val ▇█▄▅▃▃▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/weight_norm_avg ▁▄▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇▇████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/weight_norm_val ▁▃▃▃▃▃▃▄▄▅▅▆▇▇▇▇▇▇▇▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▅█▅▃▂▂▁▁▂▂▂▂▂▂▃▃▃▃▃▃▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/diagnostics/epoch_time_val 0.04235
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/diagnostics/train_time_val 0.04191
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/diagnostics/validation_time_val 0.00041
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/Loss_avg 1.61093
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/Loss_d_avg 1.61093
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/Loss_d_val 1.61093
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/Loss_val 1.61093
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_acc_avg 0.545
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_acc_d_avg 0.545
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_acc_d_val 0.545
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_acc_val 0.545
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_corr_d_avg 0.2465
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_corr_d_val 0.2465
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_majacc_avg 0.46
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_majacc_d_avg 0.46
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_majacc_d_val 0.46
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_majacc_val 0.46
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_minacc_avg 0.55444
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_minacc_d_avg 0.55444
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_minacc_d_val 0.55444
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/test/test_minacc_val 0.55444
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/Loss_val 6e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/l1_avg 5.9763
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/l1_val 5.97694
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_acc_avg 0.4196
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_acc_val 0.456
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_majacc_avg 0.39517
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_majacc_val 0.43396
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_minacc_avg 0.5556
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_minacc_val 0.57895
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_nll_avg 0.58136
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_nll_val 0.56691
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/weight_norm_avg 25.55647
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/weight_norm_val 25.55646
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/zero_count_avg 8.073
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/147/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/w2dhcz1v
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_202311-w2dhcz1v/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_202556-tpr5lzwx
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/tpr5lzwx
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1252
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6004, 3, 32, 32) (5996, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:36,  1.47s/it] 19%|#9        | 5/26 [00:01<00:05,  4.11it/s] 35%|###4      | 9/26 [00:01<00:02,  7.97it/s] 50%|#####     | 13/26 [00:01<00:01, 12.15it/s] 65%|######5   | 17/26 [00:01<00:00, 16.24it/s] 81%|########  | 21/26 [00:02<00:00, 20.13it/s] 96%|#########6| 25/26 [00:02<00:00, 23.27it/s]100%|##########| 26/26 [00:02<00:00, 10.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.408 (0.506)	train_nll   0.41 (  0.51)	train_penalty   0.06 (  0.20)	weight_norm  20.86 ( 18.13)	train_acc   0.86 (  0.82)	train_minacc   0.00 (  0.05)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 7.6004 (8.4983)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.35it/s] 23%|##3       | 6/26 [00:00<00:00, 30.62it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.62it/s] 42%|####2     | 11/26 [00:00<00:00, 38.38it/s] 62%|######1   | 16/26 [00:00<00:00, 42.17it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.17it/s] 81%|########  | 21/26 [00:00<00:00, 39.88it/s]100%|##########| 26/26 [00:00<00:00, 42.15it/s]100%|##########| 26/26 [00:00<00:00, 35.62it/s]
Test: [   0/  26]	Loss 0.412 (0.412)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.412 (0.412)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.369 (0.402)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.369 (0.402)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.99)
Test: [  20/  26]	Loss 0.423 (0.405)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.423 (0.405)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  26/  26]	Loss 0.395 (0.404)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.395 (0.404)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.99)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.49it/s]100%|##########| 1/1 [00:00<00:00,  2.49it/s]
Test: [  0/  1]	Loss 1.826 (1.826)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.826 (1.826)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.826 (1.826)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.826 (1.826)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0777 (0.0777)	validation_time 0.0070 (0.0070)	train_time 0.0679 (0.0679)
record: (train_acc, test_acc) (0.847800024330616, 0.10600000619888306)
last accs (train_acc, test_acc) (0.847800024330616, 0.10600000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.75it/s] 19%|#9        | 5/26 [00:00<00:01, 15.42it/s] 35%|###4      | 9/26 [00:00<00:00, 22.06it/s] 50%|#####     | 13/26 [00:00<00:00, 26.27it/s] 65%|######5   | 17/26 [00:00<00:00, 29.47it/s] 81%|########  | 21/26 [00:00<00:00, 31.73it/s] 96%|#########6| 25/26 [00:00<00:00, 33.01it/s]100%|##########| 26/26 [00:01<00:00, 25.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.431 (0.401)	train_nll   0.43 (  0.40)	train_penalty   0.10 (  0.05)	weight_norm  21.95 ( 21.61)	train_acc   0.86 (  0.85)	train_minacc   0.03 (  0.04)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 7.5426 (7.4133)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.91it/s] 27%|##6       | 7/26 [00:00<00:00, 32.49it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.49it/s] 46%|####6     | 12/26 [00:00<00:00, 38.02it/s] 65%|######5   | 17/26 [00:00<00:00, 39.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.13it/s] 85%|########4 | 22/26 [00:00<00:00, 41.34it/s]100%|##########| 26/26 [00:00<00:00, 35.29it/s]
Test: [   0/  26]	Loss 0.391 (0.391)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.391 (0.391)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.339 (0.386)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.339 (0.386)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.97)
Test: [  20/  26]	Loss 0.397 (0.388)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.397 (0.388)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.393 (0.385)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.393 (0.385)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.16it/s]
Test: [  0/  1]	Loss 2.062 (2.062)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 2.062 (2.062)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 2.062 (2.062)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 2.062 (2.062)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0416 (0.0597)	validation_time 0.0005 (0.0038)	train_time 0.0411 (0.0545)
record: (train_acc, test_acc) (0.8493000277280808, 0.11300000548362732)
last accs (train_acc, test_acc) (0.8493000277280808, 0.11300000548362732)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.48it/s] 15%|#5        | 4/26 [00:00<00:01, 18.82it/s] 31%|###       | 8/26 [00:00<00:00, 25.31it/s] 46%|####6     | 12/26 [00:00<00:00, 29.36it/s] 62%|######1   | 16/26 [00:00<00:00, 31.86it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.03it/s] 92%|#########2| 24/26 [00:00<00:00, 34.30it/s]100%|##########| 26/26 [00:00<00:00, 28.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.391 (0.387)	train_nll   0.39 (  0.39)	train_penalty   0.05 (  0.05)	weight_norm  22.09 ( 22.04)	train_acc   0.87 (  0.85)	train_minacc   0.06 (  0.07)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.1294 (7.1126)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.90it/s] 19%|#9        | 5/26 [00:00<00:00, 23.00it/s] 38%|###8      | 10/26 [00:00<00:00, 34.08it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.28it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.02it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.02it/s] 96%|#########6| 25/26 [00:00<00:00, 40.48it/s]100%|##########| 26/26 [00:00<00:00, 33.73it/s]
Test: [   0/  26]	Loss 0.372 (0.372)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.372 (0.372)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.310 (0.369)	test_acc   0.87 (  0.85)	test_minacc   0.06 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.310 (0.369)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.06 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.96)
Test: [  20/  26]	Loss 0.358 (0.370)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.358 (0.370)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.360 (0.366)	test_acc   0.87 (  0.85)	test_minacc   0.06 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.360 (0.366)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.06 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.67it/s]
Test: [  0/  1]	Loss 1.983 (1.983)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.983 (1.983)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.983 (1.983)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.983 (1.983)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0435 (0.0543)	validation_time 0.0003 (0.0026)	train_time 0.0432 (0.0507)
record: (train_acc, test_acc) (0.8503000257611275, 0.11600000411272049)
last accs (train_acc, test_acc) (0.8503000257611275, 0.11600000411272049)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.55it/s] 19%|#9        | 5/26 [00:00<00:00, 25.46it/s] 35%|###4      | 9/26 [00:00<00:00, 30.69it/s] 50%|#####     | 13/26 [00:00<00:00, 33.28it/s] 65%|######5   | 17/26 [00:00<00:00, 34.41it/s] 81%|########  | 21/26 [00:00<00:00, 35.13it/s] 96%|#########6| 25/26 [00:00<00:00, 35.31it/s]100%|##########| 26/26 [00:00<00:00, 30.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.367 (0.361)	train_nll   0.37 (  0.36)	train_penalty   0.03 (  0.03)	weight_norm  22.17 ( 22.13)	train_acc   0.87 (  0.85)	train_minacc   0.21 (  0.14)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 6.9327 (6.9792)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.94it/s] 27%|##6       | 7/26 [00:00<00:00, 34.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.46it/s] 46%|####6     | 12/26 [00:00<00:00, 39.43it/s] 65%|######5   | 17/26 [00:00<00:00, 41.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.77it/s] 85%|########4 | 22/26 [00:00<00:00, 40.79it/s]100%|##########| 26/26 [00:00<00:00, 37.12it/s]
Test: [   0/  26]	Loss 0.364 (0.364)	test_acc   0.85 (  0.85)	test_minacc   0.08 (  0.08)	test_majacc   0.98 (  0.98)	Loss_d 0.364 (0.364)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.293 (0.347)	test_acc   0.88 (  0.85)	test_minacc   0.26 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 0.293 (0.347)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.26 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.347 (0.348)	test_acc   0.86 (  0.86)	test_minacc   0.16 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 0.347 (0.348)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.16 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.340 (0.346)	test_acc   0.89 (  0.86)	test_minacc   0.24 (  0.13)	test_majacc   1.00 (  0.99)	Loss_d 0.340 (0.346)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.24 (  0.13)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.92 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.32it/s]
Test: [  0/  1]	Loss 1.839 (1.839)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.98 (  0.98)	Loss_d 1.839 (1.839)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.839 (1.839)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.98 (  0.98)	Loss_d 1.839 (1.839)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.84 (  0.84)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0392 (0.0505)	validation_time 0.0004 (0.0021)	train_time 0.0387 (0.0477)
record: (train_acc, test_acc) (0.8579000250697136, 0.18000000715255737)
last accs (train_acc, test_acc) (0.8579000250697136, 0.18000000715255737)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.85it/s] 19%|#9        | 5/26 [00:00<00:00, 21.91it/s] 35%|###4      | 9/26 [00:00<00:00, 27.84it/s] 50%|#####     | 13/26 [00:00<00:00, 30.94it/s] 65%|######5   | 17/26 [00:00<00:00, 33.10it/s] 81%|########  | 21/26 [00:00<00:00, 34.53it/s] 96%|#########6| 25/26 [00:00<00:00, 35.32it/s]100%|##########| 26/26 [00:00<00:00, 29.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.323 (0.340)	train_nll   0.32 (  0.34)	train_penalty   0.03 (  0.03)	weight_norm  22.25 ( 22.21)	train_acc   0.88 (  0.86)	train_minacc   0.29 (  0.19)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 7.0166 (6.9188)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.53it/s] 35%|###4      | 9/26 [00:00<00:00, 37.14it/s]                                               35%|###4      | 9/26 [00:00<00:00, 37.14it/s] 54%|#####3    | 14/26 [00:00<00:00, 39.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.88it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.88it/s] 92%|#########2| 24/26 [00:00<00:00, 43.16it/s]100%|##########| 26/26 [00:00<00:00, 36.94it/s]
Test: [   0/  26]	Loss 0.343 (0.343)	test_acc   0.86 (  0.86)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 0.343 (0.343)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.263 (0.322)	test_acc   0.88 (  0.86)	test_minacc   0.24 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 0.263 (0.322)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.24 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.317 (0.322)	test_acc   0.87 (  0.86)	test_minacc   0.24 (  0.21)	test_majacc   0.99 (  0.98)	Loss_d 0.317 (0.322)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.24 (  0.21)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.297 (0.319)	test_acc   0.90 (  0.86)	test_minacc   0.41 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.297 (0.319)	test_acc_d   0.90 (  0.86)	test_minacc_d   0.41 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.47it/s]
Test: [  0/  1]	Loss 1.938 (1.938)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.97 (  0.97)	Loss_d 1.938 (1.938)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.938 (1.938)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.97 (  0.97)	Loss_d 1.938 (1.938)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0404 (0.0485)	validation_time 0.0005 (0.0017)	train_time 0.0399 (0.0462)
record: (train_acc, test_acc) (0.8632000309824943, 0.23000000417232513)
last accs (train_acc, test_acc) (0.8632000309824943, 0.23000000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.22it/s] 19%|#9        | 5/26 [00:00<00:01, 20.63it/s] 35%|###4      | 9/26 [00:00<00:00, 26.96it/s] 50%|#####     | 13/26 [00:00<00:00, 29.95it/s] 65%|######5   | 17/26 [00:00<00:00, 31.30it/s] 81%|########  | 21/26 [00:00<00:00, 32.35it/s] 96%|#########6| 25/26 [00:00<00:00, 33.37it/s]100%|##########| 26/26 [00:00<00:00, 28.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.284 (0.325)	train_nll   0.28 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.36 ( 22.30)	train_acc   0.92 (  0.86)	train_minacc   0.47 (  0.28)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 6.9234 (6.9489)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.36it/s] 27%|##6       | 7/26 [00:00<00:00, 34.90it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.90it/s] 46%|####6     | 12/26 [00:00<00:00, 39.86it/s] 65%|######5   | 17/26 [00:00<00:00, 42.39it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.39it/s] 85%|########4 | 22/26 [00:00<00:00, 43.11it/s]100%|##########| 26/26 [00:00<00:00, 37.17it/s]
Test: [   0/  26]	Loss 0.339 (0.339)	test_acc   0.86 (  0.86)	test_minacc   0.24 (  0.24)	test_majacc   0.97 (  0.97)	Loss_d 0.339 (0.339)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.255 (0.305)	test_acc   0.89 (  0.87)	test_minacc   0.30 (  0.27)	test_majacc   0.99 (  0.97)	Loss_d 0.255 (0.305)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.30 (  0.27)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.91 (  0.90)
Test: [  20/  26]	Loss 0.293 (0.305)	test_acc   0.88 (  0.87)	test_minacc   0.32 (  0.27)	test_majacc   0.99 (  0.97)	Loss_d 0.293 (0.305)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.32 (  0.27)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  26/  26]	Loss 0.270 (0.302)	test_acc   0.92 (  0.87)	test_minacc   0.53 (  0.28)	test_majacc   0.98 (  0.97)	Loss_d 0.270 (0.302)	test_acc_d   0.92 (  0.87)	test_minacc_d   0.53 (  0.28)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.25it/s]
Test: [  0/  1]	Loss 1.920 (1.920)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 1.920 (1.920)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 1.920 (1.920)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 1.920 (1.920)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.76 (  0.76)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0399 (0.0471)	validation_time 0.0003 (0.0015)	train_time 0.0396 (0.0451)
record: (train_acc, test_acc) (0.8688000267148018, 0.2550000250339508)
last accs (train_acc, test_acc) (0.8688000267148018, 0.2550000250339508)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.33it/s] 19%|#9        | 5/26 [00:00<00:01, 19.76it/s] 35%|###4      | 9/26 [00:00<00:00, 25.54it/s] 50%|#####     | 13/26 [00:00<00:00, 29.24it/s] 65%|######5   | 17/26 [00:00<00:00, 31.74it/s] 81%|########  | 21/26 [00:00<00:00, 33.55it/s] 96%|#########6| 25/26 [00:00<00:00, 34.65it/s]100%|##########| 26/26 [00:00<00:00, 28.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.266 (0.311)	train_nll   0.27 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.50 ( 22.42)	train_acc   0.89 (  0.86)	train_minacc   0.50 (  0.35)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.9567 (6.9566)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.83it/s] 12%|#1        | 3/26 [00:00<00:01, 15.44it/s] 31%|###       | 8/26 [00:00<00:00, 30.86it/s]                                               31%|###       | 8/26 [00:00<00:00, 30.86it/s] 46%|####6     | 12/26 [00:00<00:00, 33.99it/s] 69%|######9   | 18/26 [00:00<00:00, 39.33it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.33it/s] 88%|########8 | 23/26 [00:00<00:00, 42.03it/s]100%|##########| 26/26 [00:00<00:00, 34.04it/s]
Test: [   0/  26]	Loss 0.305 (0.305)	test_acc   0.88 (  0.88)	test_minacc   0.46 (  0.46)	test_majacc   0.96 (  0.96)	Loss_d 0.305 (0.305)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.229 (0.286)	test_acc   0.91 (  0.88)	test_minacc   0.57 (  0.46)	test_majacc   0.96 (  0.95)	Loss_d 0.229 (0.286)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.57 (  0.46)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.89 (  0.88)
Test: [  20/  26]	Loss 0.267 (0.290)	test_acc   0.89 (  0.88)	test_minacc   0.48 (  0.44)	test_majacc   0.97 (  0.96)	Loss_d 0.267 (0.290)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.48 (  0.44)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.236 (0.284)	test_acc   0.90 (  0.88)	test_minacc   0.53 (  0.44)	test_majacc   0.96 (  0.96)	Loss_d 0.236 (0.284)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.53 (  0.44)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.05it/s]
Test: [  0/  1]	Loss 1.946 (1.946)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.95 (  0.95)	Loss_d 1.946 (1.946)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.70 (  0.70)
Test: [  1/  1]	Loss 1.946 (1.946)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.95 (  0.95)	Loss_d 1.946 (1.946)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.70 (  0.70)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0379 (0.0458)	validation_time 0.0004 (0.0013)	train_time 0.0374 (0.0440)
record: (train_acc, test_acc) (0.8797000195384026, 0.3270000219345093)
last accs (train_acc, test_acc) (0.8797000195384026, 0.3270000219345093)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.34it/s] 19%|#9        | 5/26 [00:00<00:00, 21.02it/s] 35%|###4      | 9/26 [00:00<00:00, 26.33it/s] 50%|#####     | 13/26 [00:00<00:00, 29.88it/s] 65%|######5   | 17/26 [00:00<00:00, 31.58it/s] 81%|########  | 21/26 [00:00<00:00, 32.84it/s] 96%|#########6| 25/26 [00:00<00:00, 33.59it/s]100%|##########| 26/26 [00:00<00:00, 27.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.275 (0.304)	train_nll   0.27 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.67 ( 22.58)	train_acc   0.87 (  0.87)	train_minacc   0.38 (  0.40)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 6.8104 (7.0236)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.02it/s] 23%|##3       | 6/26 [00:00<00:00, 23.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.57it/s] 42%|####2     | 11/26 [00:00<00:00, 31.96it/s] 62%|######1   | 16/26 [00:00<00:00, 36.81it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.81it/s] 81%|########  | 21/26 [00:00<00:00, 38.99it/s]100%|##########| 26/26 [00:00<00:00, 42.17it/s]100%|##########| 26/26 [00:00<00:00, 32.20it/s]
Test: [   0/  26]	Loss 0.326 (0.326)	test_acc   0.87 (  0.87)	test_minacc   0.32 (  0.32)	test_majacc   0.97 (  0.97)	Loss_d 0.326 (0.326)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.238 (0.305)	test_acc   0.91 (  0.87)	test_minacc   0.52 (  0.43)	test_majacc   0.97 (  0.95)	Loss_d 0.238 (0.305)	test_acc_d   0.91 (  0.87)	test_minacc_d   0.52 (  0.43)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.89 (  0.89)
Test: [  20/  26]	Loss 0.301 (0.305)	test_acc   0.88 (  0.87)	test_minacc   0.47 (  0.42)	test_majacc   0.96 (  0.95)	Loss_d 0.301 (0.305)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.47 (  0.42)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.88 (  0.89)
Test: [  26/  26]	Loss 0.240 (0.298)	test_acc   0.90 (  0.87)	test_minacc   0.53 (  0.42)	test_majacc   0.96 (  0.95)	Loss_d 0.240 (0.298)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.53 (  0.42)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.88 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.41it/s]
Test: [  0/  1]	Loss 1.974 (1.974)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.94 (  0.94)	Loss_d 1.974 (1.974)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 1.974 (1.974)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.94 (  0.94)	Loss_d 1.974 (1.974)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.74 (  0.74)
Overall Timing[  7/  1]	epoch_time 0.0417 (0.0452)	validation_time 0.0004 (0.0012)	train_time 0.0412 (0.0436)
record: (train_acc, test_acc) (0.8797000195384026, 0.3270000219345093)
last accs (train_acc, test_acc) (0.8736000201106071, 0.30100002884864807)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.51it/s] 19%|#9        | 5/26 [00:00<00:01, 11.85it/s] 35%|###4      | 9/26 [00:00<00:00, 18.71it/s] 50%|#####     | 13/26 [00:00<00:00, 23.49it/s] 65%|######5   | 17/26 [00:00<00:00, 26.78it/s] 81%|########  | 21/26 [00:00<00:00, 29.22it/s] 96%|#########6| 25/26 [00:01<00:00, 30.83it/s]100%|##########| 26/26 [00:01<00:00, 22.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.288 (0.305)	train_nll   0.29 (  0.30)	train_penalty   0.02 (  0.02)	weight_norm  22.88 ( 22.78)	train_acc   0.90 (  0.86)	train_minacc   0.32 (  0.40)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5825 (6.9523)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 23%|##3       | 6/26 [00:00<00:00, 30.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.08it/s] 42%|####2     | 11/26 [00:00<00:00, 36.81it/s] 62%|######1   | 16/26 [00:00<00:00, 40.72it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.72it/s] 81%|########  | 21/26 [00:00<00:00, 38.86it/s]100%|##########| 26/26 [00:00<00:00, 41.73it/s]100%|##########| 26/26 [00:00<00:00, 35.24it/s]
Test: [   0/  26]	Loss 0.305 (0.305)	test_acc   0.87 (  0.87)	test_minacc   0.24 (  0.24)	test_majacc   0.99 (  0.99)	Loss_d 0.305 (0.305)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.250 (0.307)	test_acc   0.89 (  0.86)	test_minacc   0.28 (  0.20)	test_majacc   0.99 (  0.98)	Loss_d 0.250 (0.307)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.28 (  0.20)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.92)
Test: [  20/  26]	Loss 0.290 (0.307)	test_acc   0.87 (  0.87)	test_minacc   0.21 (  0.21)	test_majacc   0.99 (  0.98)	Loss_d 0.290 (0.307)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.267 (0.301)	test_acc   0.90 (  0.87)	test_minacc   0.32 (  0.21)	test_majacc   0.99 (  0.98)	Loss_d 0.267 (0.301)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.32 (  0.21)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 49.75it/s]
Test: [  0/  1]	Loss 2.062 (2.062)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.97 (  0.97)	Loss_d 2.062 (2.062)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 2.062 (2.062)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.97 (  0.97)	Loss_d 2.062 (2.062)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
Overall Timing[  8/  1]	epoch_time 0.0432 (0.0450)	validation_time 0.0005 (0.0011)	train_time 0.0427 (0.0435)
record: (train_acc, test_acc) (0.8797000195384026, 0.3270000219345093)
last accs (train_acc, test_acc) (0.8671000249385834, 0.21000000834465027)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.42it/s] 19%|#9        | 5/26 [00:00<00:00, 21.42it/s] 35%|###4      | 9/26 [00:00<00:00, 27.16it/s] 50%|#####     | 13/26 [00:00<00:00, 30.18it/s] 65%|######5   | 17/26 [00:00<00:00, 32.45it/s] 81%|########  | 21/26 [00:00<00:00, 33.82it/s] 96%|#########6| 25/26 [00:00<00:00, 34.46it/s]100%|##########| 26/26 [00:00<00:00, 28.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.236 (0.278)	train_nll   0.24 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  23.10 ( 22.99)	train_acc   0.91 (  0.88)	train_minacc   0.53 (  0.45)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 6.9621 (7.0349)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.74it/s] 27%|##6       | 7/26 [00:00<00:00, 30.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.58it/s] 46%|####6     | 12/26 [00:00<00:00, 36.41it/s] 65%|######5   | 17/26 [00:00<00:00, 40.32it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.32it/s] 85%|########4 | 22/26 [00:00<00:00, 42.48it/s]100%|##########| 26/26 [00:00<00:00, 35.72it/s]
Test: [   0/  26]	Loss 0.290 (0.290)	test_acc   0.87 (  0.87)	test_minacc   0.36 (  0.36)	test_majacc   0.97 (  0.97)	Loss_d 0.290 (0.290)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.242 (0.293)	test_acc   0.88 (  0.87)	test_minacc   0.39 (  0.38)	test_majacc   0.96 (  0.96)	Loss_d 0.242 (0.293)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.39 (  0.38)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.240 (0.286)	test_acc   0.91 (  0.88)	test_minacc   0.53 (  0.41)	test_majacc   0.98 (  0.96)	Loss_d 0.240 (0.286)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.53 (  0.41)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.87 (  0.88)
Test: [  26/  26]	Loss 0.203 (0.277)	test_acc   0.92 (  0.88)	test_minacc   0.56 (  0.42)	test_majacc   0.98 (  0.97)	Loss_d 0.203 (0.277)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.56 (  0.42)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.87 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.60it/s]
Test: [  0/  1]	Loss 2.090 (2.090)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.95 (  0.95)	Loss_d 2.090 (2.090)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 2.090 (2.090)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.95 (  0.95)	Loss_d 2.090 (2.090)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.65 (  0.65)
Overall Timing[  9/  1]	epoch_time 0.0394 (0.0445)	validation_time 0.0004 (0.0011)	train_time 0.0390 (0.0431)
record: (train_acc, test_acc) (0.8797000195384026, 0.3270000219345093)
last accs (train_acc, test_acc) (0.8832000188827515, 0.31700000166893005)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.06it/s] 15%|#5        | 4/26 [00:00<00:01, 17.70it/s] 31%|###       | 8/26 [00:00<00:00, 26.08it/s] 46%|####6     | 12/26 [00:00<00:00, 30.14it/s] 62%|######1   | 16/26 [00:00<00:00, 31.74it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.86it/s] 92%|#########2| 24/26 [00:00<00:00, 32.16it/s]100%|##########| 26/26 [00:00<00:00, 28.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.203 (0.261)	train_nll   0.20 (  0.26)	train_penalty   0.01 (  0.01)	weight_norm  23.38 ( 23.24)	train_acc   0.92 (  0.89)	train_minacc   0.68 (  0.56)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.3665 (7.3237)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.00it/s] 27%|##6       | 7/26 [00:00<00:00, 29.07it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.07it/s] 46%|####6     | 12/26 [00:00<00:00, 36.55it/s] 65%|######5   | 17/26 [00:00<00:00, 40.60it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.60it/s] 85%|########4 | 22/26 [00:00<00:00, 42.95it/s]100%|##########| 26/26 [00:00<00:00, 35.90it/s]
Test: [   0/  26]	Loss 0.258 (0.258)	test_acc   0.89 (  0.89)	test_minacc   0.42 (  0.42)	test_majacc   0.97 (  0.97)	Loss_d 0.258 (0.258)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.267 (0.289)	test_acc   0.88 (  0.88)	test_minacc   0.41 (  0.43)	test_majacc   0.95 (  0.96)	Loss_d 0.267 (0.289)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.41 (  0.43)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.88 (  0.86)
Test: [  20/  26]	Loss 0.253 (0.287)	test_acc   0.90 (  0.88)	test_minacc   0.52 (  0.45)	test_majacc   0.98 (  0.96)	Loss_d 0.253 (0.287)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.52 (  0.45)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.85 (  0.86)
Test: [  26/  26]	Loss 0.184 (0.277)	test_acc   0.94 (  0.88)	test_minacc   0.71 (  0.46)	test_majacc   0.98 (  0.96)	Loss_d 0.184 (0.277)	test_acc_d   0.94 (  0.88)	test_minacc_d   0.71 (  0.46)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.85 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.70it/s]
Test: [  0/  1]	Loss 2.279 (2.279)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.91 (  0.91)	Loss_d 2.279 (2.279)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 2.279 (2.279)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.91 (  0.91)	Loss_d 2.279 (2.279)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.61 (  0.61)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0424 (0.0443)	validation_time 0.0004 (0.0010)	train_time 0.0419 (0.0430)
record: (train_acc, test_acc) (0.8848000177145005, 0.3330000042915344)
last accs (train_acc, test_acc) (0.8848000177145005, 0.3330000042915344)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.31it/s] 19%|#9        | 5/26 [00:00<00:01, 20.61it/s] 35%|###4      | 9/26 [00:00<00:00, 26.17it/s] 50%|#####     | 13/26 [00:00<00:00, 29.47it/s] 65%|######5   | 17/26 [00:00<00:00, 31.18it/s] 81%|########  | 21/26 [00:00<00:00, 31.66it/s] 96%|#########6| 25/26 [00:00<00:00, 33.16it/s]100%|##########| 26/26 [00:00<00:00, 27.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.197 (0.251)	train_nll   0.20 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.70 ( 23.54)	train_acc   0.92 (  0.89)	train_minacc   0.68 (  0.56)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.8553 (7.4349)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.72it/s] 27%|##6       | 7/26 [00:00<00:00, 34.24it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.24it/s] 46%|####6     | 12/26 [00:00<00:00, 39.86it/s] 65%|######5   | 17/26 [00:00<00:00, 38.08it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.08it/s] 85%|########4 | 22/26 [00:00<00:00, 41.43it/s]100%|##########| 26/26 [00:00<00:00, 36.30it/s]
Test: [   0/  26]	Loss 0.255 (0.255)	test_acc   0.90 (  0.90)	test_minacc   0.53 (  0.53)	test_majacc   0.97 (  0.97)	Loss_d 0.255 (0.255)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.210 (0.250)	test_acc   0.92 (  0.90)	test_minacc   0.57 (  0.54)	test_majacc   0.97 (  0.96)	Loss_d 0.210 (0.250)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.57 (  0.54)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.87 (  0.85)
Test: [  20/  26]	Loss 0.191 (0.242)	test_acc   0.93 (  0.90)	test_minacc   0.69 (  0.57)	test_majacc   0.97 (  0.96)	Loss_d 0.191 (0.242)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.69 (  0.57)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.82 (  0.84)
Test: [  26/  26]	Loss 0.148 (0.230)	test_acc   0.96 (  0.91)	test_minacc   0.79 (  0.59)	test_majacc   0.98 (  0.97)	Loss_d 0.148 (0.230)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.79 (  0.59)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.83 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.89it/s]
Test: [  0/  1]	Loss 2.409 (2.409)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.92 (  0.92)	Loss_d 2.409 (2.409)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 2.409 (2.409)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.92 (  0.92)	Loss_d 2.409 (2.409)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.54 (  0.54)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0393 (0.0439)	validation_time 0.0003 (0.0010)	train_time 0.0389 (0.0426)
record: (train_acc, test_acc) (0.9091000270247459, 0.39000001549720764)
last accs (train_acc, test_acc) (0.9091000270247459, 0.39000001549720764)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.04it/s] 19%|#9        | 5/26 [00:00<00:01, 13.44it/s] 35%|###4      | 9/26 [00:00<00:00, 20.19it/s] 50%|#####     | 13/26 [00:00<00:00, 24.97it/s] 65%|######5   | 17/26 [00:00<00:00, 28.65it/s] 81%|########  | 21/26 [00:00<00:00, 30.83it/s] 96%|#########6| 25/26 [00:01<00:00, 32.25it/s]100%|##########| 26/26 [00:01<00:00, 23.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.136 (0.238)	train_nll   0.14 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  24.09 ( 23.90)	train_acc   0.96 (  0.90)	train_minacc   0.76 (  0.61)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 8.0433 (7.4634)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.72it/s] 31%|###       | 8/26 [00:00<00:00, 34.46it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.46it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.22it/s] 77%|#######6  | 20/26 [00:00<00:00, 46.38it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 46.38it/s] 96%|#########6| 25/26 [00:00<00:00, 43.26it/s]100%|##########| 26/26 [00:00<00:00, 37.78it/s]
Test: [   0/  26]	Loss 0.268 (0.268)	test_acc   0.90 (  0.90)	test_minacc   0.61 (  0.61)	test_majacc   0.95 (  0.95)	Loss_d 0.268 (0.268)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.225 (0.273)	test_acc   0.91 (  0.89)	test_minacc   0.56 (  0.54)	test_majacc   0.97 (  0.95)	Loss_d 0.225 (0.273)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.87 (  0.84)
Test: [  20/  26]	Loss 0.194 (0.261)	test_acc   0.91 (  0.89)	test_minacc   0.63 (  0.56)	test_majacc   0.97 (  0.95)	Loss_d 0.194 (0.261)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.63 (  0.56)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.81 (  0.83)
Test: [  26/  26]	Loss 0.108 (0.244)	test_acc   0.97 (  0.90)	test_minacc   0.88 (  0.59)	test_majacc   0.99 (  0.96)	Loss_d 0.108 (0.244)	test_acc_d   0.97 (  0.90)	test_minacc_d   0.88 (  0.59)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.84 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.39it/s]
Test: [  0/  1]	Loss 2.722 (2.722)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.94 (  0.94)	Loss_d 2.722 (2.722)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 2.722 (2.722)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.94 (  0.94)	Loss_d 2.722 (2.722)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Overall Timing[ 12/  1]	epoch_time 0.0378 (0.0434)	validation_time 0.0004 (0.0009)	train_time 0.0374 (0.0422)
record: (train_acc, test_acc) (0.9091000270247459, 0.39000001549720764)
last accs (train_acc, test_acc) (0.9023000189661979, 0.3680000305175781)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 19%|#9        | 5/26 [00:00<00:01, 17.26it/s] 35%|###4      | 9/26 [00:00<00:00, 23.63it/s] 50%|#####     | 13/26 [00:00<00:00, 27.43it/s] 65%|######5   | 17/26 [00:00<00:00, 29.91it/s] 81%|########  | 21/26 [00:00<00:00, 31.95it/s] 96%|#########6| 25/26 [00:00<00:00, 33.05it/s]100%|##########| 26/26 [00:00<00:00, 26.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.164 (0.231)	train_nll   0.16 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  24.51 ( 24.30)	train_acc   0.95 (  0.90)	train_minacc   0.76 (  0.64)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.8601 (7.5270)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.62it/s]wandb: 429 encountered (Filestream rate limit exceeded, retrying in 2.3 seconds.), retrying request
 23%|##3       | 6/26 [00:00<00:00, 25.34it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.34it/s] 46%|####6     | 12/26 [00:00<00:00, 36.93it/s] 65%|######5   | 17/26 [00:00<00:00, 37.32it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.32it/s] 85%|########4 | 22/26 [00:00<00:00, 40.90it/s]100%|##########| 26/26 [00:00<00:00, 33.93it/s]
Test: [   0/  26]	Loss 0.210 (0.210)	test_acc   0.93 (  0.93)	test_minacc   0.69 (  0.69)	test_majacc   0.97 (  0.97)	Loss_d 0.210 (0.210)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.231 (0.229)	test_acc   0.90 (  0.90)	test_minacc   0.63 (  0.64)	test_majacc   0.95 (  0.95)	Loss_d 0.231 (0.229)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.63 (  0.64)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.82)
Test: [  20/  26]	Loss 0.159 (0.218)	test_acc   0.95 (  0.91)	test_minacc   0.79 (  0.66)	test_majacc   0.98 (  0.96)	Loss_d 0.159 (0.218)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.79 (  0.66)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.80 (  0.82)
Test: [  26/  26]	Loss 0.120 (0.205)	test_acc   0.98 (  0.92)	test_minacc   0.91 (  0.69)	test_majacc   0.99 (  0.96)	Loss_d 0.120 (0.205)	test_acc_d   0.98 (  0.92)	test_minacc_d   0.91 (  0.69)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.79 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.83it/s]
Test: [  0/  1]	Loss 2.575 (2.575)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.95 (  0.95)	Loss_d 2.575 (2.575)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 2.575 (2.575)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.95 (  0.95)	Loss_d 2.575 (2.575)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.51 (  0.51)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0422 (0.0433)	validation_time 0.0004 (0.0009)	train_time 0.0417 (0.0422)
record: (train_acc, test_acc) (0.9175000194311141, 0.4150000214576721)
last accs (train_acc, test_acc) (0.9175000194311141, 0.4150000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.06it/s] 19%|#9        | 5/26 [00:00<00:01, 13.44it/s] 35%|###4      | 9/26 [00:00<00:00, 20.53it/s] 50%|#####     | 13/26 [00:00<00:00, 25.31it/s] 65%|######5   | 17/26 [00:00<00:00, 28.67it/s] 81%|########  | 21/26 [00:00<00:00, 30.51it/s] 96%|#########6| 25/26 [00:01<00:00, 31.93it/s]100%|##########| 26/26 [00:01<00:00, 23.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.131 (0.195)	train_nll   0.13 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm  24.95 ( 24.72)	train_acc   0.95 (  0.92)	train_minacc   0.79 (  0.71)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.7518 (8.0784)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.44it/s] 19%|#9        | 5/26 [00:00<00:00, 23.79it/s]                                               19%|#9        | 5/26 [00:00<00:00, 23.79it/s] 42%|####2     | 11/26 [00:00<00:00, 36.69it/s] 62%|######1   | 16/26 [00:00<00:00, 39.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.55it/s] 81%|########  | 21/26 [00:00<00:00, 41.27it/s]100%|##########| 26/26 [00:00<00:00, 43.01it/s]100%|##########| 26/26 [00:00<00:00, 34.99it/s]
Test: [   0/  26]	Loss 0.180 (0.180)	test_acc   0.93 (  0.93)	test_minacc   0.66 (  0.66)	test_majacc   0.98 (  0.98)	Loss_d 0.180 (0.180)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.179 (0.195)	test_acc   0.93 (  0.92)	test_minacc   0.69 (  0.66)	test_majacc   0.96 (  0.97)	Loss_d 0.179 (0.195)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.69 (  0.66)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.82 (  0.82)
Test: [  20/  26]	Loss 0.168 (0.192)	test_acc   0.94 (  0.92)	test_minacc   0.71 (  0.67)	test_majacc   0.98 (  0.97)	Loss_d 0.168 (0.192)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.71 (  0.67)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.81 (  0.81)
Test: [  26/  26]	Loss 0.091 (0.180)	test_acc   0.98 (  0.93)	test_minacc   0.88 (  0.70)	test_majacc   1.00 (  0.97)	Loss_d 0.091 (0.180)	test_acc_d   0.98 (  0.93)	test_minacc_d   0.88 (  0.70)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.81 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.78it/s]
Test: [  0/  1]	Loss 2.676 (2.676)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 2.676 (2.676)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 2.676 (2.676)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 2.676 (2.676)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.58 (  0.58)
Overall Timing[ 14/  1]	epoch_time 0.0444 (0.0434)	validation_time 0.0003 (0.0008)	train_time 0.0440 (0.0423)
record: (train_acc, test_acc) (0.9175000194311141, 0.4150000214576721)
last accs (train_acc, test_acc) (0.9303000231981278, 0.36100003123283386)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.48it/s] 19%|#9        | 5/26 [00:00<00:00, 21.09it/s] 35%|###4      | 9/26 [00:00<00:00, 27.17it/s] 50%|#####     | 13/26 [00:00<00:00, 30.28it/s] 65%|######5   | 17/26 [00:00<00:00, 32.07it/s] 81%|########  | 21/26 [00:00<00:00, 33.39it/s] 96%|#########6| 25/26 [00:00<00:00, 34.19it/s]100%|##########| 26/26 [00:00<00:00, 28.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.002 (0.070)	train_nll   0.18 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm  25.37 ( 25.18)	train_acc   0.94 (  0.91)	train_minacc   0.91 (  0.77)	train_majacc   0.95 (  0.94)	train_corr   0.00 (  0.00)	l1 7.9329 (8.7704)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 15.49it/s] 35%|###4      | 9/26 [00:00<00:00, 34.10it/s]                                               35%|###4      | 9/26 [00:00<00:00, 34.10it/s] 54%|#####3    | 14/26 [00:00<00:00, 39.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.52it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.52it/s] 92%|#########2| 24/26 [00:00<00:00, 41.07it/s]100%|##########| 26/26 [00:00<00:00, 35.56it/s]
Test: [   0/  26]	Loss 0.237 (0.237)	test_acc   0.91 (  0.91)	test_minacc   0.90 (  0.90)	test_majacc   0.92 (  0.92)	Loss_d 0.237 (0.237)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.199 (0.220)	test_acc   0.92 (  0.91)	test_minacc   0.81 (  0.82)	test_majacc   0.94 (  0.92)	Loss_d 0.199 (0.220)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.94 (  0.92)	test_corr_d   0.78 (  0.75)
Test: [  20/  26]	Loss 0.192 (0.210)	test_acc   0.92 (  0.91)	test_minacc   0.74 (  0.82)	test_majacc   0.95 (  0.93)	Loss_d 0.192 (0.210)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.74 (  0.82)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.76 (  0.75)
Test: [  26/  26]	Loss 0.185 (0.214)	test_acc   0.94 (  0.91)	test_minacc   0.88 (  0.81)	test_majacc   0.94 (  0.93)	Loss_d 0.185 (0.214)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.88 (  0.81)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.74 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.33it/s]
Test: [  0/  1]	Loss 2.266 (2.266)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.91 (  0.91)	Loss_d 2.266 (2.266)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.266 (2.266)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.91 (  0.91)	Loss_d 2.266 (2.266)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.37 (  0.37)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0400 (0.0432)	validation_time 0.0004 (0.0008)	train_time 0.0396 (0.0421)
record: (train_acc, test_acc) (0.9101000216007232, 0.48100003600120544)
last accs (train_acc, test_acc) (0.9101000216007232, 0.48100003600120544)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.97it/s] 19%|#9        | 5/26 [00:00<00:00, 21.14it/s] 35%|###4      | 9/26 [00:00<00:00, 26.48it/s] 50%|#####     | 13/26 [00:00<00:00, 29.22it/s] 65%|######5   | 17/26 [00:00<00:00, 30.74it/s] 81%|########  | 21/26 [00:00<00:00, 32.03it/s] 96%|#########6| 25/26 [00:00<00:00, 32.87it/s]100%|##########| 26/26 [00:00<00:00, 27.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.002)	train_nll   0.31 (  0.30)	train_penalty   0.00 (  0.00)	weight_norm  25.48 ( 25.45)	train_acc   0.83 (  0.85)	train_minacc   0.91 (  0.86)	train_majacc   0.81 (  0.85)	train_corr   0.00 (  0.00)	l1 6.9479 (7.2336)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.96it/s] 23%|##3       | 6/26 [00:00<00:00, 29.38it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.38it/s] 42%|####2     | 11/26 [00:00<00:00, 36.69it/s] 62%|######1   | 16/26 [00:00<00:00, 40.45it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.45it/s] 81%|########  | 21/26 [00:00<00:00, 37.89it/s]100%|##########| 26/26 [00:00<00:00, 41.43it/s]100%|##########| 26/26 [00:00<00:00, 35.06it/s]
Test: [   0/  26]	Loss 0.358 (0.358)	test_acc   0.80 (  0.80)	test_minacc   0.90 (  0.90)	test_majacc   0.78 (  0.78)	Loss_d 0.358 (0.358)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.330 (0.340)	test_acc   0.81 (  0.81)	test_minacc   0.91 (  0.90)	test_majacc   0.79 (  0.80)	Loss_d 0.330 (0.340)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.79 (  0.80)	test_corr_d   0.62 (  0.60)
Test: [  20/  26]	Loss 0.319 (0.327)	test_acc   0.82 (  0.82)	test_minacc   0.89 (  0.91)	test_majacc   0.81 (  0.80)	Loss_d 0.319 (0.327)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.89 (  0.91)	test_majacc_d   0.81 (  0.80)	test_corr_d   0.60 (  0.60)
Test: [  26/  26]	Loss 0.310 (0.327)	test_acc   0.82 (  0.82)	test_minacc   0.91 (  0.91)	test_majacc   0.81 (  0.80)	Loss_d 0.310 (0.327)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.81 (  0.80)	test_corr_d   0.60 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.95it/s]
Test: [  0/  1]	Loss 1.692 (1.692)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.83 (  0.83)	Loss_d 1.692 (1.692)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.692 (1.692)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.83 (  0.83)	Loss_d 1.692 (1.692)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.13 (  0.13)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0404 (0.0430)	validation_time 0.0004 (0.0008)	train_time 0.0399 (0.0420)
record: (train_acc, test_acc) (0.8194000259637833, 0.6170000433921814)
last accs (train_acc, test_acc) (0.8194000259637833, 0.6170000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.27it/s] 19%|#9        | 5/26 [00:00<00:01, 18.44it/s] 35%|###4      | 9/26 [00:00<00:00, 24.68it/s] 50%|#####     | 13/26 [00:00<00:00, 28.31it/s] 65%|######5   | 17/26 [00:00<00:00, 31.09it/s] 81%|########  | 21/26 [00:00<00:00, 32.74it/s] 96%|#########6| 25/26 [00:00<00:00, 33.66it/s]100%|##########| 26/26 [00:00<00:00, 27.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.001 (0.001)	train_nll   0.35 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  25.50 ( 25.49)	train_acc   0.80 (  0.80)	train_minacc   0.91 (  0.91)	train_majacc   0.78 (  0.78)	train_corr   0.00 (  0.00)	l1 7.1445 (6.9868)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.63it/s] 15%|#5        | 4/26 [00:00<00:01, 19.51it/s] 35%|###4      | 9/26 [00:00<00:00, 30.96it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.90it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.61it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.61it/s] 92%|#########2| 24/26 [00:00<00:00, 39.96it/s]100%|##########| 26/26 [00:00<00:00, 33.68it/s]
Test: [   0/  26]	Loss 0.391 (0.391)	test_acc   0.78 (  0.78)	test_minacc   0.90 (  0.90)	test_majacc   0.76 (  0.76)	Loss_d 0.391 (0.391)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.364 (0.381)	test_acc   0.78 (  0.78)	test_minacc   0.94 (  0.90)	test_majacc   0.76 (  0.76)	Loss_d 0.364 (0.381)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.94 (  0.90)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.60 (  0.56)
Test: [  20/  26]	Loss 0.339 (0.368)	test_acc   0.81 (  0.79)	test_minacc   0.89 (  0.90)	test_majacc   0.80 (  0.77)	Loss_d 0.339 (0.368)	test_acc_d   0.81 (  0.79)	test_minacc_d   0.89 (  0.90)	test_majacc_d   0.80 (  0.77)	test_corr_d   0.57 (  0.56)
Test: [  26/  26]	Loss 0.343 (0.366)	test_acc   0.80 (  0.79)	test_minacc   0.91 (  0.90)	test_majacc   0.79 (  0.77)	Loss_d 0.343 (0.366)	test_acc_d   0.80 (  0.79)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.79 (  0.77)	test_corr_d   0.57 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.46it/s]
Test: [  0/  1]	Loss 1.697 (1.697)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.77 (  0.77)	Loss_d 1.697 (1.697)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.697 (1.697)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.77 (  0.77)	Loss_d 1.697 (1.697)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.11 (  0.11)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0398 (0.0428)	validation_time 0.0004 (0.0008)	train_time 0.0394 (0.0419)
record: (train_acc, test_acc) (0.7897000243663788, 0.6180000305175781)
last accs (train_acc, test_acc) (0.7897000243663788, 0.6180000305175781)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.22it/s] 19%|#9        | 5/26 [00:00<00:00, 22.99it/s] 35%|###4      | 9/26 [00:00<00:00, 29.12it/s] 50%|#####     | 13/26 [00:00<00:00, 32.56it/s] 65%|######5   | 17/26 [00:00<00:00, 33.76it/s] 81%|########  | 21/26 [00:00<00:00, 34.55it/s] 96%|#########6| 25/26 [00:00<00:00, 34.43it/s]100%|##########| 26/26 [00:00<00:00, 29.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.001 (0.001)	train_nll   0.35 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.50)	train_acc   0.80 (  0.81)	train_minacc   0.91 (  0.89)	train_majacc   0.78 (  0.80)	train_corr   0.00 (  0.00)	l1 7.4903 (6.9655)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.51it/s] 23%|##3       | 6/26 [00:00<00:00, 29.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.32it/s] 42%|####2     | 11/26 [00:00<00:00, 36.03it/s] 62%|######1   | 16/26 [00:00<00:00, 36.84it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.84it/s] 81%|########  | 21/26 [00:00<00:00, 39.50it/s]100%|##########| 26/26 [00:00<00:00, 42.29it/s]100%|##########| 26/26 [00:00<00:00, 34.56it/s]
Test: [   0/  26]	Loss 0.399 (0.399)	test_acc   0.77 (  0.77)	test_minacc   0.93 (  0.93)	test_majacc   0.74 (  0.74)	Loss_d 0.399 (0.399)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.404 (0.418)	test_acc   0.75 (  0.75)	test_minacc   0.93 (  0.90)	test_majacc   0.72 (  0.72)	Loss_d 0.404 (0.418)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.93 (  0.90)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.56 (  0.52)
Test: [  20/  26]	Loss 0.365 (0.410)	test_acc   0.78 (  0.75)	test_minacc   0.90 (  0.90)	test_majacc   0.75 (  0.73)	Loss_d 0.365 (0.410)	test_acc_d   0.78 (  0.75)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.75 (  0.73)	test_corr_d   0.53 (  0.52)
Test: [  26/  26]	Loss 0.350 (0.403)	test_acc   0.80 (  0.75)	test_minacc   0.91 (  0.90)	test_majacc   0.78 (  0.73)	Loss_d 0.350 (0.403)	test_acc_d   0.80 (  0.75)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.78 (  0.73)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.92it/s]
Test: [  0/  1]	Loss 1.753 (1.753)	test_acc   0.65 (  0.65)	test_minacc   0.64 (  0.64)	test_majacc   0.72 (  0.72)	Loss_d 1.753 (1.753)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.753 (1.753)	test_acc   0.65 (  0.65)	test_minacc   0.64 (  0.64)	test_majacc   0.72 (  0.72)	Loss_d 1.753 (1.753)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.05 (  0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0477 (0.0431)	validation_time 0.0004 (0.0008)	train_time 0.0473 (0.0422)
record: (train_acc, test_acc) (0.754600028693676, 0.6500000357627869)
last accs (train_acc, test_acc) (0.754600028693676, 0.6500000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.09it/s] 15%|#5        | 4/26 [00:00<00:02, 10.96it/s] 31%|###       | 8/26 [00:00<00:00, 18.91it/s] 46%|####6     | 12/26 [00:00<00:00, 24.54it/s] 62%|######1   | 16/26 [00:00<00:00, 27.23it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.87it/s] 92%|#########2| 24/26 [00:00<00:00, 31.52it/s]100%|##########| 26/26 [00:01<00:00, 24.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.001 (0.002)	train_nll   0.29 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  25.52 ( 25.51)	train_acc   0.83 (  0.81)	train_minacc   0.91 (  0.89)	train_majacc   0.82 (  0.80)	train_corr   0.00 (  0.00)	l1 7.3908 (6.9961)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.56it/s] 23%|##3       | 6/26 [00:00<00:00, 25.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.18it/s] 42%|####2     | 11/26 [00:00<00:00, 33.48it/s] 62%|######1   | 16/26 [00:00<00:00, 37.56it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.56it/s] 81%|########  | 21/26 [00:00<00:00, 40.20it/s]100%|##########| 26/26 [00:00<00:00, 42.45it/s]100%|##########| 26/26 [00:00<00:00, 33.01it/s]
Test: [   0/  26]	Loss 0.322 (0.322)	test_acc   0.81 (  0.81)	test_minacc   0.93 (  0.93)	test_majacc   0.79 (  0.79)	Loss_d 0.322 (0.322)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.370 (0.357)	test_acc   0.76 (  0.78)	test_minacc   0.89 (  0.91)	test_majacc   0.74 (  0.76)	Loss_d 0.370 (0.357)	test_acc_d   0.76 (  0.78)	test_minacc_d   0.89 (  0.91)	test_majacc_d   0.74 (  0.76)	test_corr_d   0.62 (  0.60)
Test: [  20/  26]	Loss 0.352 (0.364)	test_acc   0.78 (  0.77)	test_minacc   0.89 (  0.90)	test_majacc   0.76 (  0.75)	Loss_d 0.352 (0.364)	test_acc_d   0.78 (  0.77)	test_minacc_d   0.89 (  0.90)	test_majacc_d   0.76 (  0.75)	test_corr_d   0.61 (  0.60)
Test: [  26/  26]	Loss 0.299 (0.361)	test_acc   0.82 (  0.77)	test_minacc   0.91 (  0.90)	test_majacc   0.81 (  0.75)	Loss_d 0.299 (0.361)	test_acc_d   0.82 (  0.77)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.81 (  0.75)	test_corr_d   0.62 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.81it/s]
Test: [  0/  1]	Loss 1.837 (1.837)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.76 (  0.76)	Loss_d 1.837 (1.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.837 (1.837)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.76 (  0.76)	Loss_d 1.837 (1.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.14 (  0.14)
Overall Timing[ 19/  1]	epoch_time 0.0416 (0.0430)	validation_time 0.0003 (0.0007)	train_time 0.0412 (0.0421)
record: (train_acc, test_acc) (0.754600028693676, 0.6500000357627869)
last accs (train_acc, test_acc) (0.7722000320553779, 0.64000004529953)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:03,  7.93it/s] 23%|##3       | 6/26 [00:00<00:01, 18.26it/s] 38%|###8      | 10/26 [00:00<00:00, 24.08it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.01it/s] 69%|######9   | 18/26 [00:00<00:00, 27.50it/s] 85%|########4 | 22/26 [00:00<00:00, 29.95it/s]100%|##########| 26/26 [00:00<00:00, 32.26it/s]100%|##########| 26/26 [00:01<00:00, 25.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.002 (0.002)	train_nll   0.30 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  25.54 ( 25.53)	train_acc   0.81 (  0.78)	train_minacc   0.91 (  0.90)	train_majacc   0.80 (  0.76)	train_corr   0.00 (  0.00)	l1 6.9254 (7.3326)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.41it/s] 19%|#9        | 5/26 [00:00<00:01, 20.26it/s] 38%|###8      | 10/26 [00:00<00:00, 26.82it/s]                                                38%|###8      | 10/26 [00:00<00:00, 26.82it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.90it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.54it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.54it/s] 92%|#########2| 24/26 [00:00<00:00, 39.27it/s]100%|##########| 26/26 [00:00<00:00, 30.62it/s]
Test: [   0/  26]	Loss 0.317 (0.317)	test_acc   0.81 (  0.81)	test_minacc   0.93 (  0.93)	test_majacc   0.79 (  0.79)	Loss_d 0.317 (0.317)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.329 (0.318)	test_acc   0.78 (  0.80)	test_minacc   0.96 (  0.94)	test_majacc   0.76 (  0.78)	Loss_d 0.329 (0.318)	test_acc_d   0.78 (  0.80)	test_minacc_d   0.96 (  0.94)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.67 (  0.65)
Test: [  20/  26]	Loss 0.337 (0.324)	test_acc   0.79 (  0.80)	test_minacc   0.87 (  0.92)	test_majacc   0.78 (  0.78)	Loss_d 0.337 (0.324)	test_acc_d   0.79 (  0.80)	test_minacc_d   0.87 (  0.92)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.65 (  0.65)
Test: [  26/  26]	Loss 0.302 (0.325)	test_acc   0.80 (  0.80)	test_minacc   0.91 (  0.92)	test_majacc   0.79 (  0.77)	Loss_d 0.302 (0.325)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.91 (  0.92)	test_majacc_d   0.79 (  0.77)	test_corr_d   0.64 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.72it/s]
Test: [  0/  1]	Loss 1.659 (1.659)	test_acc   0.67 (  0.67)	test_minacc   0.65 (  0.65)	test_majacc   0.79 (  0.79)	Loss_d 1.659 (1.659)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.659 (1.659)	test_acc   0.67 (  0.67)	test_minacc   0.65 (  0.65)	test_majacc   0.79 (  0.79)	Loss_d 1.659 (1.659)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.15 (  0.15)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 20/  1]	epoch_time 0.0404 (0.0429)	validation_time 0.0004 (0.0007)	train_time 0.0400 (0.0420)
record: (train_acc, test_acc) (0.7955000286698342, 0.6650000214576721)
last accs (train_acc, test_acc) (0.7955000286698342, 0.6650000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.68it/s] 19%|#9        | 5/26 [00:00<00:01, 17.87it/s] 35%|###4      | 9/26 [00:00<00:00, 24.50it/s] 50%|#####     | 13/26 [00:00<00:00, 27.83it/s] 65%|######5   | 17/26 [00:00<00:00, 30.37it/s] 81%|########  | 21/26 [00:00<00:00, 31.59it/s] 96%|#########6| 25/26 [00:00<00:00, 32.85it/s]100%|##########| 26/26 [00:00<00:00, 26.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.001)	train_nll   0.33 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  25.55 ( 25.55)	train_acc   0.78 (  0.77)	train_minacc   0.91 (  0.92)	train_majacc   0.75 (  0.74)	train_corr   0.00 (  0.00)	l1 7.4061 (7.5235)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.62it/s] 23%|##3       | 6/26 [00:00<00:00, 25.15it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.15it/s] 42%|####2     | 11/26 [00:00<00:00, 32.96it/s] 62%|######1   | 16/26 [00:00<00:00, 34.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.89it/s] 81%|########  | 21/26 [00:00<00:00, 38.34it/s]100%|##########| 26/26 [00:00<00:00, 41.59it/s]100%|##########| 26/26 [00:00<00:00, 32.29it/s]
Test: [   0/  26]	Loss 0.343 (0.343)	test_acc   0.77 (  0.77)	test_minacc   0.88 (  0.88)	test_majacc   0.75 (  0.75)	Loss_d 0.343 (0.343)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.323 (0.327)	test_acc   0.78 (  0.79)	test_minacc   0.93 (  0.93)	test_majacc   0.76 (  0.76)	Loss_d 0.323 (0.327)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.68 (  0.66)
Test: [  20/  26]	Loss 0.344 (0.326)	test_acc   0.77 (  0.79)	test_minacc   0.89 (  0.92)	test_majacc   0.75 (  0.76)	Loss_d 0.344 (0.326)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.89 (  0.92)	test_majacc_d   0.75 (  0.76)	test_corr_d   0.65 (  0.66)
Test: [  26/  26]	Loss 0.325 (0.328)	test_acc   0.78 (  0.78)	test_minacc   0.91 (  0.91)	test_majacc   0.75 (  0.76)	Loss_d 0.325 (0.328)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.75 (  0.76)	test_corr_d   0.65 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.84it/s]
Test: [  0/  1]	Loss 1.770 (1.770)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.80 (  0.80)	Loss_d 1.770 (1.770)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.770 (1.770)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.80 (  0.80)	Loss_d 1.770 (1.770)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.16 (  0.16)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 21/  1]	epoch_time 0.0410 (0.0428)	validation_time 0.0004 (0.0007)	train_time 0.0406 (0.0419)
record: (train_acc, test_acc) (0.7829000259637833, 0.6720000505447388)
last accs (train_acc, test_acc) (0.7829000259637833, 0.6720000505447388)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.91it/s] 19%|#9        | 5/26 [00:00<00:01, 18.51it/s] 35%|###4      | 9/26 [00:00<00:00, 25.01it/s] 50%|#####     | 13/26 [00:00<00:00, 28.99it/s] 65%|######5   | 17/26 [00:00<00:00, 30.88it/s] 81%|########  | 21/26 [00:00<00:00, 32.82it/s] 96%|#########6| 25/26 [00:00<00:00, 33.90it/s]100%|##########| 26/26 [00:00<00:00, 27.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.001 (0.001)	train_nll   0.34 (  0.33)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.76 (  0.78)	train_minacc   0.91 (  0.92)	train_majacc   0.74 (  0.75)	train_corr   0.00 (  0.00)	l1 7.8831 (7.5687)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 28.86it/s] 38%|###8      | 10/26 [00:00<00:00, 41.93it/s]                                                38%|###8      | 10/26 [00:00<00:00, 41.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 40.44it/s] 77%|#######6  | 20/26 [00:00<00:00, 42.74it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 42.74it/s] 96%|#########6| 25/26 [00:00<00:00, 43.40it/s]100%|##########| 26/26 [00:00<00:00, 38.39it/s]
Test: [   0/  26]	Loss 0.352 (0.352)	test_acc   0.76 (  0.76)	test_minacc   0.90 (  0.90)	test_majacc   0.74 (  0.74)	Loss_d 0.352 (0.352)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.344 (0.356)	test_acc   0.77 (  0.76)	test_minacc   0.94 (  0.93)	test_majacc   0.74 (  0.73)	Loss_d 0.344 (0.356)	test_acc_d   0.77 (  0.76)	test_minacc_d   0.94 (  0.93)	test_majacc_d   0.74 (  0.73)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.355 (0.350)	test_acc   0.78 (  0.77)	test_minacc   0.94 (  0.93)	test_majacc   0.76 (  0.74)	Loss_d 0.355 (0.350)	test_acc_d   0.78 (  0.77)	test_minacc_d   0.94 (  0.93)	test_majacc_d   0.76 (  0.74)	test_corr_d   0.61 (  0.62)
Test: [  26/  26]	Loss 0.331 (0.349)	test_acc   0.77 (  0.76)	test_minacc   0.91 (  0.92)	test_majacc   0.75 (  0.74)	Loss_d 0.331 (0.349)	test_acc_d   0.77 (  0.76)	test_minacc_d   0.91 (  0.92)	test_majacc_d   0.75 (  0.74)	test_corr_d   0.60 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.74it/s]
Test: [  0/  1]	Loss 1.840 (1.840)	test_acc   0.68 (  0.68)	test_minacc   0.67 (  0.67)	test_majacc   0.76 (  0.76)	Loss_d 1.840 (1.840)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.840 (1.840)	test_acc   0.68 (  0.68)	test_minacc   0.67 (  0.67)	test_majacc   0.76 (  0.76)	Loss_d 1.840 (1.840)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.12 (  0.12)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 22/  1]	epoch_time 0.0432 (0.0428)	validation_time 0.0003 (0.0007)	train_time 0.0429 (0.0420)
record: (train_acc, test_acc) (0.7646000277996063, 0.675000011920929)
last accs (train_acc, test_acc) (0.7646000277996063, 0.675000011920929)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.74it/s] 15%|#5        | 4/26 [00:00<00:01, 17.26it/s] 31%|###       | 8/26 [00:00<00:00, 24.85it/s] 46%|####6     | 12/26 [00:00<00:00, 28.86it/s] 62%|######1   | 16/26 [00:00<00:00, 30.82it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.42it/s] 92%|#########2| 24/26 [00:00<00:00, 33.28it/s]100%|##########| 26/26 [00:00<00:00, 27.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 7.790616989135742
set z to 7.712710819244385
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
Epoch: [23][  26/  26]	Loss 0.000 (0.000)	train_nll   0.31 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.56)	train_acc   0.79 (  0.77)	train_minacc   0.91 (  0.93)	train_majacc   0.77 (  0.74)	train_corr   0.00 (  0.00)	l1 7.6580 (7.5911)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.44it/s] 23%|##3       | 6/26 [00:00<00:00, 30.45it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.45it/s] 42%|####2     | 11/26 [00:00<00:00, 33.98it/s] 62%|######1   | 16/26 [00:00<00:00, 38.13it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.13it/s] 81%|########  | 21/26 [00:00<00:00, 40.15it/s]100%|##########| 26/26 [00:00<00:00, 42.91it/s]100%|##########| 26/26 [00:00<00:00, 34.94it/s]
Test: [   0/  26]	Loss 0.332 (0.332)	test_acc   0.79 (  0.79)	test_minacc   0.93 (  0.93)	test_majacc   0.77 (  0.77)	Loss_d 0.332 (0.332)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.347 (0.347)	test_acc   0.76 (  0.77)	test_minacc   0.94 (  0.94)	test_majacc   0.74 (  0.73)	Loss_d 0.347 (0.347)	test_acc_d   0.76 (  0.77)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.74 (  0.73)	test_corr_d   0.65 (  0.63)
Test: [  20/  26]	Loss 0.350 (0.349)	test_acc   0.78 (  0.76)	test_minacc   0.92 (  0.93)	test_majacc   0.75 (  0.73)	Loss_d 0.350 (0.349)	test_acc_d   0.78 (  0.76)	test_minacc_d   0.92 (  0.93)	test_majacc_d   0.75 (  0.73)	test_corr_d   0.63 (  0.63)
Test: [  26/  26]	Loss 0.309 (0.346)	test_acc   0.79 (  0.76)	test_minacc   0.91 (  0.93)	test_majacc   0.77 (  0.73)	Loss_d 0.309 (0.346)	test_acc_d   0.79 (  0.76)	test_minacc_d   0.91 (  0.93)	test_majacc_d   0.77 (  0.73)	test_corr_d   0.63 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.37it/s]
Test: [  0/  1]	Loss 1.845 (1.845)	test_acc   0.68 (  0.68)	test_minacc   0.67 (  0.67)	test_majacc   0.79 (  0.79)	Loss_d 1.845 (1.845)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.845 (1.845)	test_acc   0.68 (  0.68)	test_minacc   0.67 (  0.67)	test_majacc   0.79 (  0.79)	Loss_d 1.845 (1.845)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.15 (  0.15)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/149/checkpoints/model_best.pth
Overall Timing[ 23/  1]	epoch_time 0.0403 (0.0427)	validation_time 0.0004 (0.0007)	train_time 0.0398 (0.0419)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.76it/s] 15%|#5        | 4/26 [00:00<00:01, 15.26it/s] 27%|##6       | 7/26 [00:00<00:00, 20.18it/s] 42%|####2     | 11/26 [00:00<00:00, 25.25it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.36it/s] 69%|######9   | 18/26 [00:00<00:00, 27.82it/s] 85%|########4 | 22/26 [00:00<00:00, 29.18it/s]100%|##########| 26/26 [00:00<00:00, 31.50it/s]100%|##########| 26/26 [00:01<00:00, 24.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 386 tensor(-0.0120, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 239 tensor(-0.0245, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 186 tensor(-0.0064, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 176 tensor(-0.0072, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 163 tensor(-0.0044, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 160 tensor(-0.0035, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.056)	train_nll   0.58 (  0.52)	train_penalty   0.00 (  0.06)	weight_norm  29.43 ( 27.32)	train_acc   0.66 (  0.73)	train_minacc   0.47 (  0.58)	train_majacc   0.69 (  0.76)	train_corr   0.00 (  0.00)	l1 8.9810 (9.3374)	zero_count 0.0000 (54.7950)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.37it/s] 23%|##3       | 6/26 [00:00<00:00, 30.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.24it/s] 42%|####2     | 11/26 [00:00<00:00, 36.33it/s] 62%|######1   | 16/26 [00:00<00:00, 40.97it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.97it/s] 81%|########  | 21/26 [00:00<00:00, 38.84it/s]100%|##########| 26/26 [00:00<00:00, 41.79it/s]100%|##########| 26/26 [00:00<00:00, 34.71it/s]
Test: [   0/  26]	Loss 0.638 (0.638)	test_acc   0.78 (  0.78)	test_minacc   0.36 (  0.36)	test_majacc   0.86 (  0.86)	Loss_d 0.638 (0.638)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.630 (0.622)	test_acc   0.79 (  0.79)	test_minacc   0.54 (  0.42)	test_majacc   0.83 (  0.86)	Loss_d 0.630 (0.622)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.54 (  0.42)	test_majacc_d   0.83 (  0.86)	test_corr_d   0.33 (  0.37)
Test: [  20/  26]	Loss 0.593 (0.618)	test_acc   0.80 (  0.79)	test_minacc   0.40 (  0.39)	test_majacc   0.87 (  0.86)	Loss_d 0.593 (0.618)	test_acc_d   0.80 (  0.79)	test_minacc_d   0.40 (  0.39)	test_majacc_d   0.87 (  0.86)	test_corr_d   0.40 (  0.37)
Test: [  26/  26]	Loss 0.592 (0.613)	test_acc   0.83 (  0.79)	test_minacc   0.38 (  0.38)	test_majacc   0.90 (  0.87)	Loss_d 0.592 (0.613)	test_acc_d   0.83 (  0.79)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.90 (  0.87)	test_corr_d   0.33 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.35it/s]
Test: [  0/  1]	Loss 1.345 (1.345)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.89 (  0.89)	Loss_d 1.345 (1.345)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.345 (1.345)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.89 (  0.89)	Loss_d 1.345 (1.345)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.13 (  0.13)
Overall Timing[ 24/  1]	epoch_time 0.0446 (0.0428)	validation_time 0.0003 (0.0007)	train_time 0.0442 (0.0420)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.7927000254392624, 0.3150000274181366)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.45it/s] 19%|#9        | 5/26 [00:00<00:00, 21.49it/s] 35%|###4      | 9/26 [00:00<00:00, 26.26it/s] 46%|####6     | 12/26 [00:00<00:00, 27.37it/s] 62%|######1   | 16/26 [00:00<00:00, 28.49it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.68it/s] 92%|#########2| 24/26 [00:00<00:00, 31.10it/s]100%|##########| 26/26 [00:01<00:00, 25.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 164 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 165 tensor(-0.0027, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 175 tensor(-0.0019, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 184 tensor(-0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 236 tensor(-0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 301 tensor(-0.0008, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.002)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.47 ( 30.15)	train_acc   0.59 (  0.68)	train_minacc   0.53 (  0.44)	train_majacc   0.60 (  0.73)	train_corr   0.00 (  0.00)	l1 7.8392 (7.9377)	zero_count 0.0000 (77.2980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.81it/s] 23%|##3       | 6/26 [00:00<00:00, 27.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.99it/s] 42%|####2     | 11/26 [00:00<00:00, 36.78it/s] 65%|######5   | 17/26 [00:00<00:00, 41.25it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.25it/s] 88%|########8 | 23/26 [00:00<00:00, 44.76it/s]100%|##########| 26/26 [00:00<00:00, 35.98it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.52 (  0.52)	test_minacc   0.54 (  0.54)	test_majacc   0.51 (  0.51)	Loss_d 0.635 (0.635)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.627 (0.636)	test_acc   0.49 (  0.48)	test_minacc   0.78 (  0.71)	test_majacc   0.44 (  0.44)	Loss_d 0.627 (0.636)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.78 (  0.71)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.22 (  0.26)
Test: [  20/  26]	Loss 0.621 (0.634)	test_acc   0.58 (  0.48)	test_minacc   0.63 (  0.71)	test_majacc   0.57 (  0.44)	Loss_d 0.621 (0.634)	test_acc_d   0.58 (  0.48)	test_minacc_d   0.63 (  0.71)	test_majacc_d   0.57 (  0.44)	test_corr_d   0.27 (  0.27)
Test: [  26/  26]	Loss 0.623 (0.633)	test_acc   0.51 (  0.48)	test_minacc   0.62 (  0.68)	test_majacc   0.49 (  0.45)	Loss_d 0.623 (0.633)	test_acc_d   0.51 (  0.48)	test_minacc_d   0.62 (  0.68)	test_majacc_d   0.49 (  0.45)	test_corr_d   0.21 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.17it/s]
Test: [  0/  1]	Loss 1.309 (1.309)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.309 (1.309)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 1.309 (1.309)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.309 (1.309)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.19 (  0.19)
Overall Timing[ 25/  1]	epoch_time 0.0421 (0.0428)	validation_time 0.0005 (0.0007)	train_time 0.0416 (0.0420)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.4831000072360039, 0.6670000553131104)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.91it/s] 12%|#1        | 3/26 [00:00<00:01, 12.79it/s] 23%|##3       | 6/26 [00:00<00:01, 19.24it/s] 38%|###8      | 10/26 [00:00<00:00, 23.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.37it/s] 69%|######9   | 18/26 [00:00<00:00, 29.26it/s] 81%|########  | 21/26 [00:00<00:00, 28.51it/s] 96%|#########6| 25/26 [00:00<00:00, 29.09it/s]100%|##########| 26/26 [00:01<00:00, 24.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 304 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 342 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 340 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 340 tensor(-7.8670e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 330 tensor(-7.2188e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.56 ( 30.53)	train_acc   0.48 (  0.57)	train_minacc   0.65 (  0.60)	train_majacc   0.45 (  0.57)	train_corr   0.00 (  0.00)	l1 7.7126 (7.7153)	zero_count 171.0000 (33.7980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.09it/s] 27%|##6       | 7/26 [00:00<00:00, 33.43it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.43it/s] 46%|####6     | 12/26 [00:00<00:00, 40.08it/s] 65%|######5   | 17/26 [00:00<00:00, 43.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.12it/s] 85%|########4 | 22/26 [00:00<00:00, 43.50it/s]100%|##########| 26/26 [00:00<00:00, 38.67it/s]
Test: [   0/  26]	Loss 0.631 (0.631)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.53)	Loss_d 0.631 (0.631)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.626 (0.632)	test_acc   0.48 (  0.48)	test_minacc   0.74 (  0.70)	test_majacc   0.44 (  0.44)	Loss_d 0.626 (0.632)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.74 (  0.70)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.24 (  0.27)
Test: [  20/  26]	Loss 0.624 (0.632)	test_acc   0.58 (  0.47)	test_minacc   0.68 (  0.69)	test_majacc   0.56 (  0.43)	Loss_d 0.624 (0.632)	test_acc_d   0.58 (  0.47)	test_minacc_d   0.68 (  0.69)	test_majacc_d   0.56 (  0.43)	test_corr_d   0.29 (  0.27)
Test: [  26/  26]	Loss 0.621 (0.631)	test_acc   0.41 (  0.47)	test_minacc   0.65 (  0.67)	test_majacc   0.37 (  0.44)	Loss_d 0.621 (0.631)	test_acc_d   0.41 (  0.47)	test_minacc_d   0.65 (  0.67)	test_majacc_d   0.37 (  0.44)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.50it/s]
Test: [  0/  1]	Loss 1.228 (1.228)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.46 (  0.46)	Loss_d 1.228 (1.228)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.228 (1.228)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.46 (  0.46)	Loss_d 1.228 (1.228)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Overall Timing[ 26/  1]	epoch_time 0.0422 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0418 (0.0420)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.472400006711483, 0.6840000152587891)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.40it/s] 15%|#5        | 4/26 [00:00<00:01, 13.32it/s] 31%|###       | 8/26 [00:00<00:00, 21.03it/s] 42%|####2     | 11/26 [00:00<00:00, 22.97it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.12it/s] 69%|######9   | 18/26 [00:00<00:00, 26.82it/s] 81%|########  | 21/26 [00:00<00:00, 26.87it/s] 96%|#########6| 25/26 [00:01<00:00, 29.59it/s]100%|##########| 26/26 [00:01<00:00, 23.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 313 tensor(-1.9892e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 314 tensor(-2.1013e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 371 tensor(-4.4569e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 365 tensor(-6.3135e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.56)	train_acc   0.40 (  0.40)	train_minacc   0.76 (  0.74)	train_majacc   0.34 (  0.34)	train_corr   0.00 (  0.00)	l1 7.7117 (7.7142)	zero_count 0.0000 (33.6180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.76it/s] 23%|##3       | 6/26 [00:00<00:00, 24.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.72it/s] 42%|####2     | 11/26 [00:00<00:00, 32.89it/s] 62%|######1   | 16/26 [00:00<00:00, 37.78it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.78it/s] 81%|########  | 21/26 [00:00<00:00, 36.93it/s]100%|##########| 26/26 [00:00<00:00, 40.21it/s]100%|##########| 26/26 [00:00<00:00, 32.13it/s]
Test: [   0/  26]	Loss 0.633 (0.633)	test_acc   0.46 (  0.46)	test_minacc   0.59 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.633 (0.633)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.626 (0.634)	test_acc   0.45 (  0.43)	test_minacc   0.76 (  0.73)	test_majacc   0.40 (  0.37)	Loss_d 0.626 (0.634)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.40 (  0.37)	test_corr_d   0.25 (  0.26)
Test: [  20/  26]	Loss 0.627 (0.634)	test_acc   0.53 (  0.43)	test_minacc   0.71 (  0.73)	test_majacc   0.50 (  0.37)	Loss_d 0.627 (0.634)	test_acc_d   0.53 (  0.43)	test_minacc_d   0.71 (  0.73)	test_majacc_d   0.50 (  0.37)	test_corr_d   0.29 (  0.27)
Test: [  26/  26]	Loss 0.624 (0.633)	test_acc   0.37 (  0.43)	test_minacc   0.76 (  0.72)	test_majacc   0.31 (  0.38)	Loss_d 0.624 (0.633)	test_acc_d   0.37 (  0.43)	test_minacc_d   0.76 (  0.72)	test_majacc_d   0.31 (  0.38)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.60it/s]
Test: [  0/  1]	Loss 1.215 (1.215)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.46 (  0.46)	Loss_d 1.215 (1.215)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.215 (1.215)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.46 (  0.46)	Loss_d 1.215 (1.215)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Overall Timing[ 27/  1]	epoch_time 0.0438 (0.0428)	validation_time 0.0003 (0.0006)	train_time 0.0434 (0.0420)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.42700000607967376, 0.6930000185966492)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.18it/s] 19%|#9        | 5/26 [00:00<00:00, 22.10it/s] 31%|###       | 8/26 [00:00<00:00, 24.26it/s] 46%|####6     | 12/26 [00:00<00:00, 28.87it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.39it/s] 69%|######9   | 18/26 [00:00<00:00, 28.22it/s] 85%|########4 | 22/26 [00:00<00:00, 30.96it/s]100%|##########| 26/26 [00:00<00:00, 30.46it/s]100%|##########| 26/26 [00:00<00:00, 26.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 395 tensor(-1.6625e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 381 tensor(3.1169e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 373 tensor(8.6315e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 374 tensor(-1.4369e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 371 tensor(6.0374e-07, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.36 (  0.40)	train_minacc   0.76 (  0.75)	train_majacc   0.29 (  0.34)	train_corr   0.00 (  0.00)	l1 7.7133 (7.7128)	zero_count 0.0000 (20.3190)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.01it/s] 23%|##3       | 6/26 [00:00<00:00, 28.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.14it/s] 42%|####2     | 11/26 [00:00<00:00, 35.49it/s] 62%|######1   | 16/26 [00:00<00:00, 39.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.50it/s] 81%|########  | 21/26 [00:00<00:00, 38.25it/s]100%|##########| 26/26 [00:00<00:00, 41.05it/s]100%|##########| 26/26 [00:00<00:00, 33.64it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.41 (  0.41)	test_minacc   0.61 (  0.61)	test_majacc   0.37 (  0.37)	Loss_d 0.635 (0.635)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.626 (0.635)	test_acc   0.41 (  0.40)	test_minacc   0.80 (  0.75)	test_majacc   0.34 (  0.34)	Loss_d 0.626 (0.635)	test_acc_d   0.41 (  0.40)	test_minacc_d   0.80 (  0.75)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.25 (  0.26)
Test: [  20/  26]	Loss 0.629 (0.635)	test_acc   0.48 (  0.40)	test_minacc   0.71 (  0.75)	test_majacc   0.44 (  0.34)	Loss_d 0.629 (0.635)	test_acc_d   0.48 (  0.40)	test_minacc_d   0.71 (  0.75)	test_majacc_d   0.44 (  0.34)	test_corr_d   0.28 (  0.26)
Test: [  26/  26]	Loss 0.626 (0.635)	test_acc   0.35 (  0.40)	test_minacc   0.76 (  0.75)	test_majacc   0.29 (  0.34)	Loss_d 0.626 (0.635)	test_acc_d   0.35 (  0.40)	test_minacc_d   0.76 (  0.75)	test_majacc_d   0.29 (  0.34)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.71it/s]
Test: [  0/  1]	Loss 1.212 (1.212)	test_acc   0.70 (  0.70)	test_minacc   0.72 (  0.72)	test_majacc   0.45 (  0.45)	Loss_d 1.212 (1.212)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.212 (1.212)	test_acc   0.70 (  0.70)	test_minacc   0.72 (  0.72)	test_majacc   0.45 (  0.45)	Loss_d 1.212 (1.212)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.13 (  0.13)
Overall Timing[ 28/  1]	epoch_time 0.0433 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0429 (0.0420)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.40090000638365747, 0.6970000267028809)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.10it/s] 15%|#5        | 4/26 [00:00<00:01, 15.70it/s] 27%|##6       | 7/26 [00:00<00:00, 20.38it/s] 42%|####2     | 11/26 [00:00<00:00, 25.50it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.26it/s] 65%|######5   | 17/26 [00:00<00:00, 26.72it/s] 81%|########  | 21/26 [00:00<00:00, 29.45it/s] 92%|#########2| 24/26 [00:00<00:00, 28.96it/s]100%|##########| 26/26 [00:01<00:00, 24.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 374 tensor(1.8438e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 362 tensor(3.2525e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 351 tensor(3.6765e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 349 tensor(1.3447e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 379 tensor(-3.9402e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 370 tensor(5.8351e-07, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.35 (  0.40)	train_minacc   0.79 (  0.75)	train_majacc   0.28 (  0.34)	train_corr   0.00 (  0.00)	l1 7.7136 (7.7133)	zero_count 0.0000 (34.3200)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 23%|##3       | 6/26 [00:00<00:00, 27.15it/s] 38%|###8      | 10/26 [00:00<00:00, 32.21it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.21it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.24it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.02it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.02it/s] 96%|#########6| 25/26 [00:00<00:00, 41.25it/s]100%|##########| 26/26 [00:00<00:00, 34.48it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.40 (  0.40)	test_minacc   0.66 (  0.66)	test_majacc   0.36 (  0.36)	Loss_d 0.635 (0.635)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.626 (0.635)	test_acc   0.39 (  0.39)	test_minacc   0.81 (  0.77)	test_majacc   0.33 (  0.33)	Loss_d 0.626 (0.635)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.81 (  0.77)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.25 (  0.26)
Test: [  20/  26]	Loss 0.630 (0.635)	test_acc   0.47 (  0.39)	test_minacc   0.71 (  0.76)	test_majacc   0.42 (  0.32)	Loss_d 0.630 (0.635)	test_acc_d   0.47 (  0.39)	test_minacc_d   0.71 (  0.76)	test_majacc_d   0.42 (  0.32)	test_corr_d   0.28 (  0.26)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.35 (  0.39)	test_minacc   0.79 (  0.75)	test_majacc   0.28 (  0.33)	Loss_d 0.627 (0.635)	test_acc_d   0.35 (  0.39)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.28 (  0.33)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.03it/s]
Test: [  0/  1]	Loss 1.211 (1.211)	test_acc   0.70 (  0.70)	test_minacc   0.73 (  0.73)	test_majacc   0.43 (  0.43)	Loss_d 1.211 (1.211)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.211 (1.211)	test_acc   0.70 (  0.70)	test_minacc   0.73 (  0.73)	test_majacc   0.43 (  0.43)	Loss_d 1.211 (1.211)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.13 (  0.13)
Overall Timing[ 29/  1]	epoch_time 0.0425 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0420 (0.0420)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.39190000787377355, 0.6960000395774841)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.53it/s] 12%|#1        | 3/26 [00:00<00:01, 12.66it/s] 23%|##3       | 6/26 [00:00<00:01, 19.52it/s] 38%|###8      | 10/26 [00:00<00:00, 25.50it/s] 50%|#####     | 13/26 [00:00<00:00, 26.13it/s] 62%|######1   | 16/26 [00:00<00:00, 26.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.68it/s] 88%|########8 | 23/26 [00:00<00:00, 28.26it/s]100%|##########| 26/26 [00:01<00:00, 27.91it/s]100%|##########| 26/26 [00:01<00:00, 23.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 369 tensor(1.9202e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 347 tensor(2.7665e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 337 tensor(3.8189e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 333 tensor(1.9802e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 369 tensor(-1.9202e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 369 tensor(4.3946e-07, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 369 tensor(1.2887e-09, device='cuda:0')
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.35 (  0.39)	train_minacc   0.79 (  0.75)	train_majacc   0.28 (  0.33)	train_corr   0.00 (  0.00)	l1 7.7138 (7.7133)	zero_count 0.0000 (36.6990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 23%|##3       | 6/26 [00:00<00:00, 25.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.21it/s] 42%|####2     | 11/26 [00:00<00:00, 33.49it/s] 62%|######1   | 16/26 [00:00<00:00, 38.77it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.77it/s] 81%|########  | 21/26 [00:00<00:00, 37.07it/s]100%|##########| 26/26 [00:00<00:00, 40.14it/s]100%|##########| 26/26 [00:00<00:00, 32.33it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.40 (  0.40)	test_minacc   0.66 (  0.66)	test_majacc   0.35 (  0.35)	Loss_d 0.635 (0.635)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.626 (0.635)	test_acc   0.39 (  0.39)	test_minacc   0.81 (  0.77)	test_majacc   0.32 (  0.32)	Loss_d 0.626 (0.635)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.81 (  0.77)	test_majacc_d   0.32 (  0.32)	test_corr_d   0.25 (  0.26)
Test: [  20/  26]	Loss 0.630 (0.635)	test_acc   0.46 (  0.39)	test_minacc   0.71 (  0.76)	test_majacc   0.41 (  0.32)	Loss_d 0.630 (0.635)	test_acc_d   0.46 (  0.39)	test_minacc_d   0.71 (  0.76)	test_majacc_d   0.41 (  0.32)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.35 (  0.39)	test_minacc   0.79 (  0.76)	test_majacc   0.28 (  0.32)	Loss_d 0.627 (0.635)	test_acc_d   0.35 (  0.39)	test_minacc_d   0.79 (  0.76)	test_majacc_d   0.28 (  0.32)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.90it/s]
Test: [  0/  1]	Loss 1.212 (1.212)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.42 (  0.42)	Loss_d 1.212 (1.212)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.212 (1.212)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.42 (  0.42)	Loss_d 1.212 (1.212)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.13 (  0.13)
Overall Timing[ 30/  1]	epoch_time 0.0445 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0441 (0.0421)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.3886000080704689, 0.6930000185966492)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 19%|#9        | 5/26 [00:00<00:01, 19.71it/s] 35%|###4      | 9/26 [00:00<00:00, 26.39it/s] 46%|####6     | 12/26 [00:00<00:00, 27.24it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.56it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.98it/s] 88%|########8 | 23/26 [00:00<00:00, 29.10it/s]100%|##########| 26/26 [00:00<00:00, 28.87it/s]100%|##########| 26/26 [00:01<00:00, 25.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 351 tensor(2.0862e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 326 tensor(2.9908e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 324 tensor(2.5823e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 357 tensor(2.4907e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 362 tensor(2.7192e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 365 tensor(1.4071e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.35 (  0.39)	train_minacc   0.79 (  0.75)	train_majacc   0.28 (  0.32)	train_corr   0.00 (  0.00)	l1 7.7127 (7.7132)	zero_count 149.0000 (36.0170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.58it/s] 23%|##3       | 6/26 [00:00<00:00, 29.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.27it/s] 42%|####2     | 11/26 [00:00<00:00, 34.94it/s] 62%|######1   | 16/26 [00:00<00:00, 38.10it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.10it/s] 81%|########  | 21/26 [00:00<00:00, 38.06it/s]100%|##########| 26/26 [00:00<00:00, 34.57it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.40 (  0.40)	test_minacc   0.66 (  0.66)	test_majacc   0.35 (  0.35)	Loss_d 0.636 (0.636)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.626 (0.635)	test_acc   0.38 (  0.39)	test_minacc   0.81 (  0.77)	test_majacc   0.32 (  0.32)	Loss_d 0.626 (0.635)	test_acc_d   0.38 (  0.39)	test_minacc_d   0.81 (  0.77)	test_majacc_d   0.32 (  0.32)	test_corr_d   0.25 (  0.26)
Test: [  20/  26]	Loss 0.630 (0.635)	test_acc   0.46 (  0.39)	test_minacc   0.73 (  0.76)	test_majacc   0.41 (  0.32)	Loss_d 0.630 (0.635)	test_acc_d   0.46 (  0.39)	test_minacc_d   0.73 (  0.76)	test_majacc_d   0.41 (  0.32)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.34 (  0.39)	test_minacc   0.79 (  0.76)	test_majacc   0.27 (  0.32)	Loss_d 0.628 (0.635)	test_acc_d   0.34 (  0.39)	test_minacc_d   0.79 (  0.76)	test_majacc_d   0.27 (  0.32)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.54it/s]
Test: [  0/  1]	Loss 1.213 (1.213)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.42 (  0.42)	Loss_d 1.213 (1.213)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.213 (1.213)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.42 (  0.42)	Loss_d 1.213 (1.213)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.13 (  0.13)
Overall Timing[ 31/  1]	epoch_time 0.0423 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0419 (0.0421)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.38640000799298285, 0.6850000619888306)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.94it/s] 15%|#5        | 4/26 [00:00<00:01, 12.86it/s] 31%|###       | 8/26 [00:00<00:00, 20.70it/s] 42%|####2     | 11/26 [00:00<00:00, 22.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.55it/s] 69%|######9   | 18/26 [00:00<00:00, 27.89it/s] 81%|########  | 21/26 [00:00<00:00, 27.62it/s] 92%|#########2| 24/26 [00:01<00:00, 27.79it/s]100%|##########| 26/26 [00:01<00:00, 22.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 352 tensor(1.0698e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 324 tensor(2.4854e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 319 tensor(2.6152e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 350 tensor(4.8635e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 366 tensor(3.7679e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 357 tensor(3.4231e-07, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.38)	train_minacc   0.79 (  0.75)	train_majacc   0.26 (  0.32)	train_corr   0.00 (  0.00)	l1 7.7129 (7.7131)	zero_count 0.0000 (38.6100)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 19.64it/s] 35%|###4      | 9/26 [00:00<00:00, 36.11it/s]                                               35%|###4      | 9/26 [00:00<00:00, 36.11it/s] 50%|#####     | 13/26 [00:00<00:00, 36.96it/s] 69%|######9   | 18/26 [00:00<00:00, 40.32it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.32it/s] 88%|########8 | 23/26 [00:00<00:00, 41.59it/s]100%|##########| 26/26 [00:00<00:00, 35.62it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.39 (  0.39)	test_minacc   0.66 (  0.66)	test_majacc   0.35 (  0.35)	Loss_d 0.636 (0.636)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.626 (0.635)	test_acc   0.38 (  0.38)	test_minacc   0.81 (  0.76)	test_majacc   0.31 (  0.32)	Loss_d 0.626 (0.635)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.81 (  0.76)	test_majacc_d   0.31 (  0.32)	test_corr_d   0.25 (  0.27)
Test: [  20/  26]	Loss 0.631 (0.635)	test_acc   0.45 (  0.38)	test_minacc   0.73 (  0.76)	test_majacc   0.39 (  0.31)	Loss_d 0.631 (0.635)	test_acc_d   0.45 (  0.38)	test_minacc_d   0.73 (  0.76)	test_majacc_d   0.39 (  0.31)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.34 (  0.38)	test_minacc   0.82 (  0.76)	test_majacc   0.26 (  0.32)	Loss_d 0.628 (0.635)	test_acc_d   0.34 (  0.38)	test_minacc_d   0.82 (  0.76)	test_majacc_d   0.26 (  0.32)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.12it/s]
Test: [  0/  1]	Loss 1.214 (1.214)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.43 (  0.43)	Loss_d 1.214 (1.214)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.214 (1.214)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.43 (  0.43)	Loss_d 1.214 (1.214)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.13 (  0.13)
Overall Timing[ 32/  1]	epoch_time 0.0435 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0430 (0.0421)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.38110000747442246, 0.6830000281333923)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.22it/s] 15%|#5        | 4/26 [00:00<00:01, 18.82it/s] 31%|###       | 8/26 [00:00<00:00, 23.83it/s] 46%|####6     | 12/26 [00:00<00:00, 27.36it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.85it/s] 69%|######9   | 18/26 [00:00<00:00, 26.86it/s] 85%|########4 | 22/26 [00:00<00:00, 29.10it/s] 96%|#########6| 25/26 [00:00<00:00, 28.28it/s]100%|##########| 26/26 [00:01<00:00, 25.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 354 tensor(4.6878e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 323 tensor(2.1502e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 320 tensor(2.1317e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 326 tensor(8.7493e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 360 tensor(2.3776e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 358 tensor(2.9221e-07, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.32 (  0.38)	train_minacc   0.79 (  0.75)	train_majacc   0.25 (  0.31)	train_corr   0.00 (  0.00)	l1 7.7130 (7.7131)	zero_count 0.0000 (40.0140)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.30it/s] 15%|#5        | 4/26 [00:00<00:01, 18.14it/s] 35%|###4      | 9/26 [00:00<00:00, 29.74it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.74it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.54it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.54it/s] 92%|#########2| 24/26 [00:00<00:00, 38.96it/s]100%|##########| 26/26 [00:00<00:00, 32.60it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.39 (  0.39)	test_minacc   0.64 (  0.64)	test_majacc   0.34 (  0.34)	Loss_d 0.636 (0.636)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.626 (0.635)	test_acc   0.37 (  0.38)	test_minacc   0.81 (  0.76)	test_majacc   0.30 (  0.31)	Loss_d 0.626 (0.635)	test_acc_d   0.37 (  0.38)	test_minacc_d   0.81 (  0.76)	test_majacc_d   0.30 (  0.31)	test_corr_d   0.25 (  0.27)
Test: [  20/  26]	Loss 0.631 (0.635)	test_acc   0.44 (  0.38)	test_minacc   0.73 (  0.76)	test_majacc   0.39 (  0.31)	Loss_d 0.631 (0.635)	test_acc_d   0.44 (  0.38)	test_minacc_d   0.73 (  0.76)	test_majacc_d   0.39 (  0.31)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.32 (  0.38)	test_minacc   0.79 (  0.75)	test_majacc   0.25 (  0.31)	Loss_d 0.628 (0.635)	test_acc_d   0.32 (  0.38)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.25 (  0.31)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.42it/s]
Test: [  0/  1]	Loss 1.215 (1.215)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.43 (  0.43)	Loss_d 1.215 (1.215)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.215 (1.215)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.43 (  0.43)	Loss_d 1.215 (1.215)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.13 (  0.13)
Overall Timing[ 33/  1]	epoch_time 0.0451 (0.0429)	validation_time 0.0003 (0.0006)	train_time 0.0447 (0.0422)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.37650000712275505, 0.6790000200271606)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.55it/s] 12%|#1        | 3/26 [00:00<00:02,  8.82it/s] 27%|##6       | 7/26 [00:00<00:01, 15.98it/s] 42%|####2     | 11/26 [00:00<00:00, 20.71it/s] 54%|#####3    | 14/26 [00:00<00:00, 22.11it/s] 65%|######5   | 17/26 [00:00<00:00, 23.53it/s] 81%|########  | 21/26 [00:01<00:00, 27.08it/s] 92%|#########2| 24/26 [00:01<00:00, 26.89it/s]100%|##########| 26/26 [00:01<00:00, 20.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 357 tensor(1.7981e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 330 tensor(1.6653e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 329 tensor(1.7441e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 327 tensor(1.1499e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 371 tensor(-8.8446e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 371 tensor(1.4869e-07, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.32 (  0.37)	train_minacc   0.79 (  0.75)	train_majacc   0.25 (  0.31)	train_corr   0.00 (  0.00)	l1 7.7131 (7.7130)	zero_count 0.0000 (38.7660)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.76it/s] 23%|##3       | 6/26 [00:00<00:00, 25.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.39it/s] 46%|####6     | 12/26 [00:00<00:00, 37.02it/s] 65%|######5   | 17/26 [00:00<00:00, 40.08it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.08it/s] 85%|########4 | 22/26 [00:00<00:00, 42.73it/s]100%|##########| 26/26 [00:00<00:00, 34.60it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.39 (  0.39)	test_minacc   0.64 (  0.64)	test_majacc   0.35 (  0.35)	Loss_d 0.636 (0.636)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.626 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.81 (  0.76)	test_majacc   0.30 (  0.31)	Loss_d 0.626 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.81 (  0.76)	test_majacc_d   0.30 (  0.31)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.631 (0.635)	test_acc   0.43 (  0.37)	test_minacc   0.73 (  0.76)	test_majacc   0.38 (  0.30)	Loss_d 0.631 (0.635)	test_acc_d   0.43 (  0.37)	test_minacc_d   0.73 (  0.76)	test_majacc_d   0.38 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.32 (  0.37)	test_minacc   0.79 (  0.75)	test_majacc   0.25 (  0.31)	Loss_d 0.628 (0.635)	test_acc_d   0.32 (  0.37)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.25 (  0.31)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.62it/s]
Test: [  0/  1]	Loss 1.216 (1.216)	test_acc   0.68 (  0.68)	test_minacc   0.70 (  0.70)	test_majacc   0.43 (  0.43)	Loss_d 1.216 (1.216)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.216 (1.216)	test_acc   0.68 (  0.68)	test_minacc   0.70 (  0.70)	test_majacc   0.43 (  0.43)	Loss_d 1.216 (1.216)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.13 (  0.13)
Overall Timing[ 34/  1]	epoch_time 0.0477 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0473 (0.0424)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.3731000073254108, 0.6760000586509705)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.25it/s] 19%|#9        | 5/26 [00:00<00:01, 18.18it/s] 31%|###       | 8/26 [00:00<00:00, 21.42it/s] 42%|####2     | 11/26 [00:00<00:00, 23.30it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.79it/s] 69%|######9   | 18/26 [00:00<00:00, 27.09it/s] 81%|########  | 21/26 [00:00<00:00, 26.78it/s] 96%|#########6| 25/26 [00:01<00:00, 28.60it/s]100%|##########| 26/26 [00:01<00:00, 23.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 376 tensor(6.8300e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 350 tensor(1.1670e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 351 tensor(1.4806e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 340 tensor(8.3621e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 377 tensor(-3.7844e-09, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 376 tensor(1.3913e-08, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.32 (  0.37)	train_minacc   0.79 (  0.75)	train_majacc   0.25 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7131 (7.7130)	zero_count 0.0000 (35.1390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.76it/s] 23%|##3       | 6/26 [00:00<00:00, 30.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.91it/s] 42%|####2     | 11/26 [00:00<00:00, 37.72it/s] 62%|######1   | 16/26 [00:00<00:00, 42.29it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.29it/s] 81%|########  | 21/26 [00:00<00:00, 41.55it/s]100%|##########| 26/26 [00:00<00:00, 36.66it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.39 (  0.39)	test_minacc   0.66 (  0.66)	test_majacc   0.34 (  0.34)	Loss_d 0.636 (0.636)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.626 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.83 (  0.76)	test_majacc   0.30 (  0.30)	Loss_d 0.626 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.83 (  0.76)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.631 (0.635)	test_acc   0.43 (  0.37)	test_minacc   0.76 (  0.76)	test_majacc   0.37 (  0.30)	Loss_d 0.631 (0.635)	test_acc_d   0.43 (  0.37)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.37 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.32 (  0.37)	test_minacc   0.79 (  0.75)	test_majacc   0.25 (  0.30)	Loss_d 0.628 (0.635)	test_acc_d   0.32 (  0.37)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.25 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.58it/s]
Test: [  0/  1]	Loss 1.217 (1.217)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.217 (1.217)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.217 (1.217)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.217 (1.217)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 35/  1]	epoch_time 0.0434 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0430 (0.0424)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.3704000074863434, 0.6690000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.01it/s] 19%|#9        | 5/26 [00:00<00:01, 19.62it/s] 35%|###4      | 9/26 [00:00<00:00, 25.78it/s] 46%|####6     | 12/26 [00:00<00:00, 26.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.17it/s] 85%|########4 | 22/26 [00:00<00:00, 28.16it/s] 96%|#########6| 25/26 [00:00<00:00, 27.23it/s]100%|##########| 26/26 [00:01<00:00, 24.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 365 tensor(1.0683e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 359 tensor(9.7354e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 357 tensor(8.8308e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 406 tensor(1.0544e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 397 tensor(-3.1510e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 395 tensor(3.9736e-08, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.32 (  0.37)	train_minacc   0.79 (  0.75)	train_majacc   0.25 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7127 (7.7129)	zero_count 113.0000 (29.8130)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.43it/s] 15%|#5        | 4/26 [00:00<00:01, 16.66it/s] 35%|###4      | 9/26 [00:00<00:00, 28.57it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.57it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.40it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.40it/s] 92%|#########2| 24/26 [00:00<00:00, 40.66it/s]100%|##########| 26/26 [00:00<00:00, 32.47it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.39 (  0.39)	test_minacc   0.66 (  0.66)	test_majacc   0.34 (  0.34)	Loss_d 0.636 (0.636)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.626 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.81 (  0.76)	test_majacc   0.29 (  0.30)	Loss_d 0.626 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.81 (  0.76)	test_majacc_d   0.29 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.43 (  0.37)	test_minacc   0.76 (  0.75)	test_majacc   0.36 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.43 (  0.37)	test_minacc_d   0.76 (  0.75)	test_majacc_d   0.36 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.32 (  0.37)	test_minacc   0.79 (  0.75)	test_majacc   0.25 (  0.30)	Loss_d 0.628 (0.635)	test_acc_d   0.32 (  0.37)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.25 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.36it/s]
Test: [  0/  1]	Loss 1.218 (1.218)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.218 (1.218)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.218 (1.218)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.218 (1.218)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 36/  1]	epoch_time 0.0415 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0411 (0.0423)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.36890000757575037, 0.6610000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.98it/s] 15%|#5        | 4/26 [00:00<00:01, 13.66it/s] 31%|###       | 8/26 [00:00<00:00, 21.02it/s] 42%|####2     | 11/26 [00:00<00:00, 22.47it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.42it/s] 69%|######9   | 18/26 [00:00<00:00, 26.88it/s] 81%|########  | 21/26 [00:00<00:00, 26.38it/s] 92%|#########2| 24/26 [00:01<00:00, 26.66it/s]100%|##########| 26/26 [00:01<00:00, 23.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 395 tensor(6.5746e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 375 tensor(8.0276e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 369 tensor(8.2222e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 419 tensor(-8.9691e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 405 tensor(-3.8875e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 404 tensor(9.7722e-08, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.37)	train_minacc   0.79 (  0.75)	train_majacc   0.25 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7128 (7.7129)	zero_count 0.0000 (27.5340)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.09it/s] 31%|###       | 8/26 [00:00<00:00, 35.43it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.43it/s] 50%|#####     | 13/26 [00:00<00:00, 39.63it/s] 69%|######9   | 18/26 [00:00<00:00, 43.23it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.23it/s] 88%|########8 | 23/26 [00:00<00:00, 41.24it/s]100%|##########| 26/26 [00:00<00:00, 37.83it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.38 (  0.38)	test_minacc   0.66 (  0.66)	test_majacc   0.34 (  0.34)	Loss_d 0.636 (0.636)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.635)	test_acc   0.36 (  0.37)	test_minacc   0.81 (  0.76)	test_majacc   0.29 (  0.30)	Loss_d 0.625 (0.635)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.81 (  0.76)	test_majacc_d   0.29 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.37)	test_minacc   0.76 (  0.75)	test_majacc   0.35 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.37)	test_minacc_d   0.76 (  0.75)	test_majacc_d   0.35 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.33 (  0.37)	test_minacc   0.79 (  0.75)	test_majacc   0.25 (  0.30)	Loss_d 0.628 (0.635)	test_acc_d   0.33 (  0.37)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.25 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.73it/s]
Test: [  0/  1]	Loss 1.219 (1.219)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.219 (1.219)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.219 (1.219)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.219 (1.219)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 37/  1]	epoch_time 0.0455 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0451 (0.0424)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.3672000078856945, 0.6620000600814819)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.29it/s] 19%|#9        | 5/26 [00:00<00:00, 22.50it/s] 31%|###       | 8/26 [00:00<00:00, 25.07it/s] 46%|####6     | 12/26 [00:00<00:00, 29.83it/s] 62%|######1   | 16/26 [00:00<00:00, 29.99it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.83it/s] 88%|########8 | 23/26 [00:00<00:00, 29.11it/s]100%|##########| 26/26 [00:00<00:00, 27.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 416 tensor(2.4814e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 372 tensor(8.4501e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 379 tensor(6.7259e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 433 tensor(2.1974e-09, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 417 tensor(-3.2968e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 405 tensor(-8.2213e-09, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.37)	train_minacc   0.79 (  0.74)	train_majacc   0.25 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7128 (7.7129)	zero_count 0.0000 (25.1550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.66it/s] 23%|##3       | 6/26 [00:00<00:00, 24.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.95it/s] 42%|####2     | 11/26 [00:00<00:00, 31.81it/s] 62%|######1   | 16/26 [00:00<00:00, 36.54it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.54it/s] 81%|########  | 21/26 [00:00<00:00, 38.49it/s]100%|##########| 26/26 [00:00<00:00, 41.20it/s]100%|##########| 26/26 [00:00<00:00, 32.41it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.38 (  0.38)	test_minacc   0.66 (  0.66)	test_majacc   0.34 (  0.34)	Loss_d 0.636 (0.636)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.81 (  0.76)	test_majacc   0.29 (  0.30)	Loss_d 0.625 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.81 (  0.76)	test_majacc_d   0.29 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.37)	test_minacc   0.76 (  0.75)	test_majacc   0.36 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.37)	test_minacc_d   0.76 (  0.75)	test_majacc_d   0.36 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.33 (  0.37)	test_minacc   0.79 (  0.75)	test_majacc   0.25 (  0.30)	Loss_d 0.628 (0.635)	test_acc_d   0.33 (  0.37)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.25 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.52it/s]
Test: [  0/  1]	Loss 1.221 (1.221)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.221 (1.221)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.221 (1.221)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.221 (1.221)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 38/  1]	epoch_time 0.0448 (0.0431)	validation_time 0.0003 (0.0006)	train_time 0.0445 (0.0425)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.36700000789761544, 0.6630000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.17it/s] 15%|#5        | 4/26 [00:00<00:01, 18.47it/s] 27%|##6       | 7/26 [00:00<00:00, 21.72it/s] 42%|####2     | 11/26 [00:00<00:00, 26.79it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.04it/s] 65%|######5   | 17/26 [00:00<00:00, 26.12it/s] 81%|########  | 21/26 [00:00<00:00, 27.63it/s] 96%|#########6| 25/26 [00:00<00:00, 29.87it/s]100%|##########| 26/26 [00:01<00:00, 25.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 439 tensor(1.6147e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 382 tensor(7.3455e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 383 tensor(5.6997e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 464 tensor(1.8971e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 418 tensor(-5.3715e-07, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.37)	train_minacc   0.79 (  0.74)	train_majacc   0.25 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7127 (7.7128)	zero_count 0.0000 (18.7980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.74it/s] 23%|##3       | 6/26 [00:00<00:00, 32.92it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.92it/s] 42%|####2     | 11/26 [00:00<00:00, 38.22it/s] 65%|######5   | 17/26 [00:00<00:00, 39.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.58it/s] 85%|########4 | 22/26 [00:00<00:00, 41.92it/s]100%|##########| 26/26 [00:00<00:00, 36.18it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.38 (  0.38)	test_minacc   0.66 (  0.66)	test_majacc   0.34 (  0.34)	Loss_d 0.635 (0.635)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.80 (  0.75)	test_majacc   0.30 (  0.30)	Loss_d 0.625 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.80 (  0.75)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.37)	test_minacc   0.76 (  0.75)	test_majacc   0.36 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.37)	test_minacc_d   0.76 (  0.75)	test_majacc_d   0.36 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.33 (  0.37)	test_minacc   0.79 (  0.74)	test_majacc   0.25 (  0.30)	Loss_d 0.628 (0.635)	test_acc_d   0.33 (  0.37)	test_minacc_d   0.79 (  0.74)	test_majacc_d   0.25 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.09it/s]
Test: [  0/  1]	Loss 1.222 (1.222)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.222 (1.222)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.222 (1.222)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.222 (1.222)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 39/  1]	epoch_time 0.0459 (0.0432)	validation_time 0.0004 (0.0006)	train_time 0.0455 (0.0425)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.3660000079572201, 0.6630000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.25it/s] 23%|##3       | 6/26 [00:00<00:00, 22.62it/s] 38%|###8      | 10/26 [00:00<00:00, 27.38it/s] 50%|#####     | 13/26 [00:00<00:00, 26.33it/s] 62%|######1   | 16/26 [00:00<00:00, 25.89it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.49it/s] 92%|#########2| 24/26 [00:00<00:00, 30.43it/s]100%|##########| 26/26 [00:01<00:00, 25.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 462 tensor(9.5779e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 409 tensor(7.6527e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 384 tensor(4.4959e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 438 tensor(1.7162e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 425 tensor(-5.6303e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.36)	train_minacc   0.79 (  0.74)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7127 (7.7128)	zero_count 0.0000 (17.3160)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.74it/s] 23%|##3       | 6/26 [00:00<00:00, 22.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.47it/s] 42%|####2     | 11/26 [00:00<00:00, 29.40it/s] 62%|######1   | 16/26 [00:00<00:00, 35.37it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.37it/s] 81%|########  | 21/26 [00:00<00:00, 38.75it/s]100%|##########| 26/26 [00:00<00:00, 41.68it/s]100%|##########| 26/26 [00:00<00:00, 31.05it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.38 (  0.38)	test_minacc   0.66 (  0.66)	test_majacc   0.34 (  0.34)	Loss_d 0.635 (0.635)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.80 (  0.75)	test_majacc   0.30 (  0.30)	Loss_d 0.625 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.80 (  0.75)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.36)	test_minacc   0.76 (  0.74)	test_majacc   0.36 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.36)	test_minacc_d   0.76 (  0.74)	test_majacc_d   0.36 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.33 (  0.37)	test_minacc   0.79 (  0.74)	test_majacc   0.26 (  0.30)	Loss_d 0.628 (0.635)	test_acc_d   0.33 (  0.37)	test_minacc_d   0.79 (  0.74)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.61it/s]
Test: [  0/  1]	Loss 1.223 (1.223)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.223 (1.223)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.223 (1.223)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.223 (1.223)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 40/  1]	epoch_time 0.0448 (0.0432)	validation_time 0.0004 (0.0006)	train_time 0.0443 (0.0426)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.3656000081896782, 0.6630000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.16it/s] 12%|#1        | 3/26 [00:00<00:01, 13.16it/s] 23%|##3       | 6/26 [00:00<00:01, 18.46it/s] 38%|###8      | 10/26 [00:00<00:00, 22.30it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.55it/s] 65%|######5   | 17/26 [00:00<00:00, 24.36it/s] 81%|########  | 21/26 [00:00<00:00, 27.66it/s] 96%|#########6| 25/26 [00:01<00:00, 29.89it/s]100%|##########| 26/26 [00:01<00:00, 23.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 427 tensor(9.6593e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 390 tensor(1.9513e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 395 tensor(3.1910e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.36)	train_minacc   0.79 (  0.73)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7126 (7.7128)	zero_count 0.0000 (15.8730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.22it/s] 15%|#5        | 4/26 [00:00<00:01, 14.73it/s] 35%|###4      | 9/26 [00:00<00:00, 27.10it/s]                                               35%|###4      | 9/26 [00:00<00:00, 27.10it/s] 50%|#####     | 13/26 [00:00<00:00, 31.52it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.37it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.37it/s] 92%|#########2| 24/26 [00:00<00:00, 39.07it/s]100%|##########| 26/26 [00:00<00:00, 32.21it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.38 (  0.38)	test_minacc   0.66 (  0.66)	test_majacc   0.34 (  0.34)	Loss_d 0.635 (0.635)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.635)	test_acc   0.37 (  0.36)	test_minacc   0.78 (  0.74)	test_majacc   0.30 (  0.30)	Loss_d 0.625 (0.635)	test_acc_d   0.37 (  0.36)	test_minacc_d   0.78 (  0.74)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.36)	test_minacc   0.76 (  0.74)	test_majacc   0.36 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.36)	test_minacc_d   0.76 (  0.74)	test_majacc_d   0.36 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.33 (  0.37)	test_minacc   0.79 (  0.73)	test_majacc   0.26 (  0.30)	Loss_d 0.628 (0.635)	test_acc_d   0.33 (  0.37)	test_minacc_d   0.79 (  0.73)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.49it/s]
Test: [  0/  1]	Loss 1.224 (1.224)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.224 (1.224)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.224 (1.224)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.224 (1.224)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 41/  1]	epoch_time 0.0429 (0.0432)	validation_time 0.0003 (0.0006)	train_time 0.0425 (0.0426)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.365000008225441, 0.6640000343322754)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.05it/s] 15%|#5        | 4/26 [00:00<00:01, 18.15it/s] 31%|###       | 8/26 [00:00<00:00, 25.76it/s] 42%|####2     | 11/26 [00:00<00:00, 26.25it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.66it/s] 69%|######9   | 18/26 [00:00<00:00, 29.57it/s] 85%|########4 | 22/26 [00:00<00:00, 31.54it/s]100%|##########| 26/26 [00:00<00:00, 29.90it/s]100%|##########| 26/26 [00:01<00:00, 25.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 435 tensor(-9.4055e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 398 tensor(4.0394e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 393 tensor(4.3932e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 421 tensor(-6.8814e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 453 tensor(2.5207e-08, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.37)	train_minacc   0.79 (  0.73)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7127 (7.7128)	zero_count 0.0000 (15.4830)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.01it/s] 27%|##6       | 7/26 [00:00<00:00, 34.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.34it/s] 46%|####6     | 12/26 [00:00<00:00, 40.08it/s] 65%|######5   | 17/26 [00:00<00:00, 42.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.98it/s] 85%|########4 | 22/26 [00:00<00:00, 40.83it/s]100%|##########| 26/26 [00:00<00:00, 37.55it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.38 (  0.38)	test_minacc   0.64 (  0.64)	test_majacc   0.34 (  0.34)	Loss_d 0.635 (0.635)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.78 (  0.74)	test_majacc   0.31 (  0.30)	Loss_d 0.625 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.78 (  0.74)	test_majacc_d   0.31 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.36 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.36 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.33 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.26 (  0.30)	Loss_d 0.627 (0.635)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.02it/s]
Test: [  0/  1]	Loss 1.225 (1.225)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.225 (1.225)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.225 (1.225)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.225 (1.225)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 42/  1]	epoch_time 0.0434 (0.0432)	validation_time 0.0007 (0.0006)	train_time 0.0427 (0.0426)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.3647000080347061, 0.6630000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.05it/s] 15%|#5        | 4/26 [00:00<00:01, 17.91it/s] 27%|##6       | 7/26 [00:00<00:00, 21.43it/s] 38%|###8      | 10/26 [00:00<00:00, 22.88it/s] 50%|#####     | 13/26 [00:00<00:00, 23.52it/s] 65%|######5   | 17/26 [00:00<00:00, 27.07it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.48it/s] 88%|########8 | 23/26 [00:00<00:00, 25.88it/s]100%|##########| 26/26 [00:01<00:00, 23.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 454 tensor(3.3850e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 399 tensor(6.6280e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 388 tensor(3.3832e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 438 tensor(-2.3353e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 429 tensor(-2.7612e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 423 tensor(-2.2492e-08, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.37)	train_minacc   0.76 (  0.73)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7128 (7.7128)	zero_count 0.0000 (19.6950)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.30it/s] 27%|##6       | 7/26 [00:00<00:00, 28.98it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.98it/s] 46%|####6     | 12/26 [00:00<00:00, 36.26it/s] 65%|######5   | 17/26 [00:00<00:00, 39.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.79it/s] 85%|########4 | 22/26 [00:00<00:00, 38.76it/s]100%|##########| 26/26 [00:00<00:00, 34.53it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.38 (  0.38)	test_minacc   0.64 (  0.64)	test_majacc   0.33 (  0.33)	Loss_d 0.635 (0.635)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.635)	test_acc   0.37 (  0.36)	test_minacc   0.78 (  0.73)	test_majacc   0.31 (  0.30)	Loss_d 0.625 (0.635)	test_acc_d   0.37 (  0.36)	test_minacc_d   0.78 (  0.73)	test_majacc_d   0.31 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.36 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.36 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.33 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.26 (  0.30)	Loss_d 0.627 (0.635)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.02it/s]
Test: [  0/  1]	Loss 1.226 (1.226)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.226 (1.226)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.226 (1.226)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.226 (1.226)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 43/  1]	epoch_time 0.0443 (0.0433)	validation_time 0.0003 (0.0006)	train_time 0.0439 (0.0426)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.36400000807642935, 0.6640000343322754)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.74it/s] 15%|#5        | 4/26 [00:00<00:01, 14.17it/s] 27%|##6       | 7/26 [00:00<00:01, 18.90it/s] 42%|####2     | 11/26 [00:00<00:00, 25.03it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.95it/s] 65%|######5   | 17/26 [00:00<00:00, 25.93it/s] 81%|########  | 21/26 [00:00<00:00, 29.23it/s] 96%|#########6| 25/26 [00:00<00:00, 31.58it/s]100%|##########| 26/26 [00:01<00:00, 24.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 476 tensor(2.3492e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 406 tensor(8.2714e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 389 tensor(2.5309e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 468 tensor(-2.7451e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 427 tensor(-3.5986e-07, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.36)	train_minacc   0.76 (  0.73)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7128 (7.7128)	zero_count 0.0000 (15.3270)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.33it/s] 31%|###       | 8/26 [00:00<00:00, 37.15it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.15it/s] 50%|#####     | 13/26 [00:00<00:00, 40.31it/s] 69%|######9   | 18/26 [00:00<00:00, 40.64it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.64it/s] 88%|########8 | 23/26 [00:00<00:00, 42.40it/s]100%|##########| 26/26 [00:00<00:00, 37.26it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.38 (  0.38)	test_minacc   0.64 (  0.64)	test_majacc   0.33 (  0.33)	Loss_d 0.635 (0.635)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.634)	test_acc   0.38 (  0.37)	test_minacc   0.78 (  0.73)	test_majacc   0.31 (  0.30)	Loss_d 0.625 (0.634)	test_acc_d   0.38 (  0.37)	test_minacc_d   0.78 (  0.73)	test_majacc_d   0.31 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.36 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.36 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.33 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.26 (  0.30)	Loss_d 0.627 (0.635)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.14it/s]
Test: [  0/  1]	Loss 1.227 (1.227)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.227 (1.227)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.227 (1.227)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.227 (1.227)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 44/  1]	epoch_time 0.0441 (0.0433)	validation_time 0.0004 (0.0005)	train_time 0.0437 (0.0426)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.3648000080287456, 0.6630000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.03it/s] 15%|#5        | 4/26 [00:00<00:01, 11.56it/s] 27%|##6       | 7/26 [00:00<00:01, 15.90it/s] 42%|####2     | 11/26 [00:00<00:00, 19.76it/s] 58%|#####7    | 15/26 [00:00<00:00, 23.65it/s] 69%|######9   | 18/26 [00:00<00:00, 24.20it/s] 85%|########4 | 22/26 [00:01<00:00, 27.40it/s]100%|##########| 26/26 [00:01<00:00, 27.67it/s]100%|##########| 26/26 [00:01<00:00, 21.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 489 tensor(1.0996e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 423 tensor(9.0082e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 389 tensor(2.3353e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 462 tensor(1.1844e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 428 tensor(-3.8014e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.37)	train_minacc   0.76 (  0.73)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7128 (7.7128)	zero_count 0.0000 (14.2350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.32it/s] 23%|##3       | 6/26 [00:00<00:00, 21.37it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.37it/s] 42%|####2     | 11/26 [00:00<00:00, 30.63it/s] 62%|######1   | 16/26 [00:00<00:00, 36.30it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.30it/s] 81%|########  | 21/26 [00:00<00:00, 36.66it/s]100%|##########| 26/26 [00:00<00:00, 39.37it/s]100%|##########| 26/26 [00:00<00:00, 30.53it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.64 (  0.64)	test_majacc   0.33 (  0.33)	Loss_d 0.635 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.634)	test_acc   0.38 (  0.36)	test_minacc   0.78 (  0.73)	test_majacc   0.31 (  0.30)	Loss_d 0.625 (0.634)	test_acc_d   0.38 (  0.36)	test_minacc_d   0.78 (  0.73)	test_majacc_d   0.31 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.35 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.35 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.33 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.26 (  0.30)	Loss_d 0.627 (0.635)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.22 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.30it/s]
Test: [  0/  1]	Loss 1.227 (1.227)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.227 (1.227)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.227 (1.227)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.227 (1.227)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 45/  1]	epoch_time 0.0471 (0.0434)	validation_time 0.0006 (0.0006)	train_time 0.0465 (0.0427)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.3644000080525875, 0.6620000600814819)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.71it/s] 12%|#1        | 3/26 [00:00<00:02, 11.33it/s] 23%|##3       | 6/26 [00:00<00:01, 16.85it/s] 38%|###8      | 10/26 [00:00<00:00, 20.91it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.85it/s] 65%|######5   | 17/26 [00:00<00:00, 24.76it/s] 81%|########  | 21/26 [00:00<00:00, 27.71it/s] 96%|#########6| 25/26 [00:01<00:00, 27.68it/s]100%|##########| 26/26 [00:01<00:00, 22.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 434 tensor(1.0162e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 400 tensor(2.5090e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 427 tensor(1.7714e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 423 tensor(-4.0149e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 449 tensor(1.3775e-08, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.37)	train_minacc   0.79 (  0.72)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7127 (7.7128)	zero_count 88.0000 (16.0450)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.51it/s] 27%|##6       | 7/26 [00:00<00:00, 30.49it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.49it/s] 46%|####6     | 12/26 [00:00<00:00, 36.56it/s] 65%|######5   | 17/26 [00:00<00:00, 40.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.69it/s] 85%|########4 | 22/26 [00:00<00:00, 38.72it/s]100%|##########| 26/26 [00:00<00:00, 35.18it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.64 (  0.64)	test_majacc   0.33 (  0.33)	Loss_d 0.635 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.634)	test_acc   0.37 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.31 (  0.30)	Loss_d 0.625 (0.634)	test_acc_d   0.37 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.31 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.35 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.35 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.33 (  0.36)	test_minacc   0.79 (  0.73)	test_majacc   0.26 (  0.30)	Loss_d 0.627 (0.635)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.79 (  0.73)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.22 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 52.42it/s]
Test: [  0/  1]	Loss 1.228 (1.228)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.228 (1.228)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.228 (1.228)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.228 (1.228)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 46/  1]	epoch_time 0.0448 (0.0434)	validation_time 0.0005 (0.0005)	train_time 0.0443 (0.0428)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.36400000828504564, 0.6630000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.38it/s] 15%|#5        | 4/26 [00:00<00:01, 17.13it/s] 31%|###       | 8/26 [00:00<00:00, 24.91it/s] 42%|####2     | 11/26 [00:00<00:00, 25.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.92it/s] 69%|######9   | 18/26 [00:00<00:00, 29.10it/s] 85%|########4 | 22/26 [00:00<00:00, 31.29it/s]100%|##########| 26/26 [00:00<00:00, 30.27it/s]100%|##########| 26/26 [00:01<00:00, 25.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 455 tensor(7.0375e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 395 tensor(5.1296e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 417 tensor(3.5706e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 423 tensor(-5.2969e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 423 tensor(1.9118e-08, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.37)	train_minacc   0.79 (  0.72)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7127 (7.7128)	zero_count 0.0000 (16.1850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.36it/s] 31%|###       | 8/26 [00:00<00:00, 36.96it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.96it/s] 50%|#####     | 13/26 [00:00<00:00, 40.48it/s] 69%|######9   | 18/26 [00:00<00:00, 39.93it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.93it/s] 88%|########8 | 23/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 36.95it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.64 (  0.64)	test_majacc   0.33 (  0.33)	Loss_d 0.635 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.634)	test_acc   0.37 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.31 (  0.30)	Loss_d 0.625 (0.634)	test_acc_d   0.37 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.31 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.36)	test_minacc   0.74 (  0.73)	test_majacc   0.35 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.36)	test_minacc_d   0.74 (  0.73)	test_majacc_d   0.35 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.33 (  0.36)	test_minacc   0.79 (  0.73)	test_majacc   0.26 (  0.30)	Loss_d 0.627 (0.635)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.79 (  0.73)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.28it/s]
Test: [  0/  1]	Loss 1.229 (1.229)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.229 (1.229)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.229 (1.229)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.229 (1.229)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 47/  1]	epoch_time 0.0473 (0.0435)	validation_time 0.0004 (0.0005)	train_time 0.0469 (0.0428)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.36370000830292704, 0.6610000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.22it/s] 15%|#5        | 4/26 [00:00<00:01, 17.96it/s] 31%|###       | 8/26 [00:00<00:00, 23.53it/s] 46%|####6     | 12/26 [00:00<00:00, 28.23it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.10it/s] 88%|########8 | 23/26 [00:00<00:00, 31.55it/s]100%|##########| 26/26 [00:00<00:00, 26.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 477 tensor(3.1024e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 400 tensor(9.1324e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 402 tensor(4.0229e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 425 tensor(-4.3094e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.37)	train_minacc   0.79 (  0.73)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7128 (7.7128)	zero_count 0.0000 (13.3380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.19it/s] 27%|##6       | 7/26 [00:00<00:00, 35.21it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.21it/s] 46%|####6     | 12/26 [00:00<00:00, 38.98it/s] 65%|######5   | 17/26 [00:00<00:00, 37.49it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.49it/s] 85%|########4 | 22/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 35.34it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.64 (  0.64)	test_majacc   0.33 (  0.33)	Loss_d 0.635 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.634)	test_acc   0.37 (  0.36)	test_minacc   0.76 (  0.73)	test_majacc   0.31 (  0.30)	Loss_d 0.625 (0.634)	test_acc_d   0.37 (  0.36)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.31 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.36)	test_minacc   0.74 (  0.73)	test_majacc   0.35 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.36)	test_minacc_d   0.74 (  0.73)	test_majacc_d   0.35 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.627 (0.634)	test_acc   0.33 (  0.36)	test_minacc   0.79 (  0.73)	test_majacc   0.26 (  0.30)	Loss_d 0.627 (0.634)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.79 (  0.73)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.13it/s]
Test: [  0/  1]	Loss 1.229 (1.229)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.229 (1.229)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.229 (1.229)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.229 (1.229)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 48/  1]	epoch_time 0.0431 (0.0435)	validation_time 0.0004 (0.0005)	train_time 0.0427 (0.0428)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.36430000826716424, 0.6610000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.89it/s] 15%|#5        | 4/26 [00:00<00:01, 18.82it/s] 27%|##6       | 7/26 [00:00<00:00, 22.38it/s] 42%|####2     | 11/26 [00:00<00:00, 27.41it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.16it/s] 65%|######5   | 17/26 [00:00<00:00, 26.21it/s] 81%|########  | 21/26 [00:00<00:00, 29.12it/s] 96%|#########6| 25/26 [00:00<00:00, 31.05it/s]100%|##########| 26/26 [00:01<00:00, 25.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 491 tensor(1.9093e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 405 tensor(9.2196e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 400 tensor(4.2452e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 497 tensor(1.4363e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 429 tensor(-3.1604e-07, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  30.57 ( 30.57)	train_acc   0.33 (  0.37)	train_minacc   0.79 (  0.73)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 7.7128 (7.7128)	zero_count 0.0000 (13.1430)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.04it/s]  8%|7         | 2/26 [00:00<00:04,  5.02it/s] 27%|##6       | 7/26 [00:00<00:01, 17.86it/s]                                               27%|##6       | 7/26 [00:00<00:01, 17.86it/s] 46%|####6     | 12/26 [00:00<00:00, 26.52it/s] 65%|######5   | 17/26 [00:00<00:00, 32.55it/s]                                                65%|######5   | 17/26 [00:00<00:00, 32.55it/s] 85%|########4 | 22/26 [00:00<00:00, 33.82it/s]100%|##########| 26/26 [00:01<00:00, 25.39it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.37 (  0.37)	test_minacc   0.64 (  0.64)	test_majacc   0.33 (  0.33)	Loss_d 0.635 (0.635)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.625 (0.634)	test_acc   0.37 (  0.37)	test_minacc   0.76 (  0.73)	test_majacc   0.31 (  0.30)	Loss_d 0.625 (0.634)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.76 (  0.73)	test_majacc_d   0.31 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.635)	test_acc   0.41 (  0.36)	test_minacc   0.74 (  0.73)	test_majacc   0.35 (  0.30)	Loss_d 0.632 (0.635)	test_acc_d   0.41 (  0.36)	test_minacc_d   0.74 (  0.73)	test_majacc_d   0.35 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.627 (0.634)	test_acc   0.33 (  0.36)	test_minacc   0.79 (  0.73)	test_majacc   0.26 (  0.30)	Loss_d 0.627 (0.634)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.79 (  0.73)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.28it/s]
Test: [  0/  1]	Loss 1.230 (1.230)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.230 (1.230)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.230 (1.230)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.44 (  0.44)	Loss_d 1.230 (1.230)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 49/  1]	epoch_time 0.0459 (0.0435)	validation_time 0.0003 (0.0005)	train_time 0.0455 (0.0429)
record: (train_acc, test_acc) (0.7635000289082527, 0.6780000329017639)
last accs (train_acc, test_acc) (0.3645000082552433, 0.6630000472068787)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.164 MB of 0.164 MB uploadedwandb: \ 0.164 MB of 0.164 MB uploadedwandb: | 0.164 MB of 0.164 MB uploadedwandb: / 0.187 MB of 0.195 MB uploaded (0.003 MB deduped)wandb: - 0.505 MB of 0.505 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/diagnostics/epoch_time_val █▂▂▁▁▁▂▂▂▁▁▂▁▁▁▃▁▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▃▂▃▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/diagnostics/train_time_val █▂▂▁▂▁▂▂▂▁▁▂▂▂▁▃▂▂▂▂▂▂▂▂▃▂▂▃▂▂▃▃▃▂▂▂▃▃▃▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/Loss_avg ▄▅▅▄▄▄▅▅▆▇█▇▆▃▃▄▃▄▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/Loss_d_avg ▄▅▅▄▄▄▅▅▆▇█▇▆▃▃▄▃▄▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/Loss_d_val ▄▅▅▄▄▄▅▅▆▇█▇▆▃▃▄▃▄▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/Loss_val ▄▅▅▄▄▄▅▅▆▇█▇▆▃▃▄▃▄▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_acc_avg ▁▁▁▂▃▄▃▂▄▄▄▅▅▇▇▇████████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_acc_d_avg ▁▁▁▂▃▄▃▂▄▄▄▅▅▇▇▇████████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_acc_d_val ▁▁▁▂▃▄▃▂▄▄▄▅▅▇▇▇████████████████████████
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_acc_val ▁▁▁▂▃▄▃▂▄▄▄▅▅▇▇▇████████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_corr_d_avg ███▇▆▆▆▇▅▅▅▄▃▂▁▁▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_corr_d_val ███▇▆▆▆▇▅▅▅▄▃▂▁▁▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_majacc_avg █████▇▇█▇▇▇▇▇▆▅▅▅▆▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_majacc_d_avg █████▇▇█▇▇▇▇▇▆▅▅▅▆▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_majacc_d_val █████▇▇█▇▇▇▇▇▆▅▅▅▆▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_majacc_val █████▇▇█▇▇▇▇▇▆▅▅▅▆▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_minacc_avg ▁▁▁▂▃▃▃▂▄▄▄▄▅▇▇▇▇▇▇▇████████████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_minacc_d_avg ▁▁▁▂▃▃▃▂▄▄▄▄▅▇▇▇▇▇▇▇████████████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_minacc_d_val ▁▁▁▂▃▃▃▂▄▄▄▄▅▇▇▇▇▇▇▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_minacc_val ▁▁▁▂▃▃▃▂▄▄▄▄▅▇▇▇▇▇▇▇████████████████████
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/Loss_avg █▇▆▆▅▅▅▅▅▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/Loss_val ██▇▇▆▅▅▆▄▄▃▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/l1_avg ▇▃▂▁▁▁▁▁▂▃▃▃█▂▁▁▂▃▃▃▅▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/l1_val ▆▆▄▃▃▃▂▁▅▇█▇▇▃▄▅▃▅▇▆▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_acc_avg ▇▇▇▇▇▇▇▇█████▇▇▇▆▆▆▆▅▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_acc_val ▇▇▇▇█▇▇▇█████▇▆▆▆▆▆▆▄▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_majacc_avg ████████████▇▇▆▆▆▅▆▆▅▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_majacc_val █████████████▆▆▆▆▆▆▆▄▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_minacc_avg ▁▁▁▂▃▃▄▄▅▅▆▆▇▇██████▄▅▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_minacc_val ▁▁▁▃▅▅▄▃▆▆▇▇████████▅▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_nll_avg ▆▄▄▄▃▃▃▃▂▂▂▁▁▂▃▃▃▃▃▃████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_nll_val ▅▅▅▄▃▃▃▃▂▂▁▁▂▃▄▄▃▄▄▃████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_penalty_avg █▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_penalty_val ▅█▅▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/weight_norm_avg ▁▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▅▅████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/weight_norm_val ▁▂▂▂▂▂▂▂▃▃▃▄▄▄▄▄▄▄▄▄████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▄▄▃▄▄▄▅▄▄▃▃▃▂▂▃▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▇▁▁▁▆▁▁▁▁▁▁▁▅▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/diagnostics/epoch_time_val 0.04585
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/diagnostics/train_time_val 0.0455
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/diagnostics/validation_time_val 0.00032
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/Loss_avg 1.22985
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/Loss_d_avg 1.22985
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/Loss_d_val 1.22985
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/Loss_val 1.22985
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_acc_avg 0.663
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_acc_d_avg 0.663
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_acc_d_val 0.663
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_acc_val 0.663
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_corr_d_avg 0.12872
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_corr_d_val 0.12872
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_majacc_avg 0.44
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_majacc_d_avg 0.44
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_majacc_d_val 0.44
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_majacc_val 0.44
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_minacc_avg 0.68778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_minacc_d_avg 0.68778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_minacc_d_val 0.68778
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/test/test_minacc_val 0.68778
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/Loss_val 6e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/l1_avg 7.71278
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/l1_val 7.71276
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_acc_avg 0.3661
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_acc_val 0.332
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_majacc_avg 0.30259
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_majacc_val 0.25926
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_minacc_avg 0.72611
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_minacc_val 0.79412
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_nll_avg 0.63432
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_nll_val 0.6271
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/weight_norm_avg 30.56699
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/weight_norm_val 30.56699
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/zero_count_avg 13.143
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/149/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/tpr5lzwx
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_202556-tpr5lzwx/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_202839-xd8bkq4d
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/xd8bkq4d
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1171
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5939, 3, 32, 32) (6061, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:41,  1.68s/it] 19%|#9        | 5/26 [00:01<00:05,  3.65it/s] 35%|###4      | 9/26 [00:01<00:02,  7.21it/s] 50%|#####     | 13/26 [00:02<00:01, 11.11it/s] 65%|######5   | 17/26 [00:02<00:00, 15.08it/s] 81%|########  | 21/26 [00:02<00:00, 18.90it/s] 96%|#########6| 25/26 [00:02<00:00, 22.08it/s]100%|##########| 26/26 [00:02<00:00,  9.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.361 (0.558)	train_nll   0.36 (  0.56)	train_penalty   0.04 (  0.26)	weight_norm  20.90 ( 18.15)	train_acc   0.88 (  0.80)	train_minacc   0.03 (  0.06)	train_majacc   1.00 (  0.94)	train_corr   0.00 (  0.00)	l1 6.2314 (7.7936)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.49it/s] 23%|##3       | 6/26 [00:00<00:00, 30.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.77it/s] 42%|####2     | 11/26 [00:00<00:00, 37.36it/s] 62%|######1   | 16/26 [00:00<00:00, 41.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.27it/s] 81%|########  | 21/26 [00:00<00:00, 39.24it/s]100%|##########| 26/26 [00:00<00:00, 41.57it/s]100%|##########| 26/26 [00:00<00:00, 34.80it/s]
Test: [   0/  26]	Loss 0.364 (0.364)	test_acc   0.88 (  0.88)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.364 (0.364)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.391 (0.400)	test_acc   0.87 (  0.86)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.391 (0.400)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.452 (0.412)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.452 (0.412)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.98)
Test: [  26/  26]	Loss 0.352 (0.414)	test_acc   0.88 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.352 (0.414)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]
Test: [  0/  1]	Loss 1.741 (1.741)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.741 (1.741)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.741 (1.741)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.741 (1.741)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0811 (0.0811)	validation_time 0.0068 (0.0068)	train_time 0.0699 (0.0699)
record: (train_acc, test_acc) (0.8479000220894813, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8479000220894813, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.53it/s] 15%|#5        | 4/26 [00:00<00:01, 14.08it/s] 31%|###       | 8/26 [00:00<00:00, 22.61it/s] 46%|####6     | 12/26 [00:00<00:00, 27.62it/s] 62%|######1   | 16/26 [00:00<00:00, 29.39it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.11it/s] 92%|#########2| 24/26 [00:00<00:00, 32.54it/s]100%|##########| 26/26 [00:01<00:00, 25.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.356 (0.415)	train_nll   0.36 (  0.42)	train_penalty   0.04 (  0.06)	weight_norm  22.00 ( 21.66)	train_acc   0.88 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 5.7599 (6.0734)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.28it/s] 19%|#9        | 5/26 [00:00<00:00, 24.66it/s] 38%|###8      | 10/26 [00:00<00:00, 31.07it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.07it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.55it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.76it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.76it/s] 96%|#########6| 25/26 [00:00<00:00, 42.29it/s]100%|##########| 26/26 [00:00<00:00, 34.30it/s]
Test: [   0/  26]	Loss 0.366 (0.366)	test_acc   0.88 (  0.88)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.366 (0.366)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.417 (0.413)	test_acc   0.87 (  0.86)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.417 (0.413)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  20/  26]	Loss 0.463 (0.423)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.463 (0.423)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  26/  26]	Loss 0.358 (0.423)	test_acc   0.88 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.358 (0.423)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.34it/s]
Test: [  0/  1]	Loss 1.658 (1.658)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.658 (1.658)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  1/  1]	Loss 1.658 (1.658)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.658 (1.658)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Overall Timing[  1/  1]	epoch_time 0.0406 (0.0609)	validation_time 0.0003 (0.0036)	train_time 0.0402 (0.0551)
record: (train_acc, test_acc) (0.8479000220894813, 0.1080000028014183)
last accs (train_acc, test_acc) (0.848600024163723, 0.10100000351667404)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.89it/s] 19%|#9        | 5/26 [00:00<00:00, 24.24it/s] 35%|###4      | 9/26 [00:00<00:00, 28.43it/s] 50%|#####     | 13/26 [00:00<00:00, 31.89it/s] 65%|######5   | 17/26 [00:00<00:00, 32.37it/s] 81%|########  | 21/26 [00:00<00:00, 32.91it/s] 96%|#########6| 25/26 [00:00<00:00, 33.43it/s]100%|##########| 26/26 [00:00<00:00, 29.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.363 (0.409)	train_nll   0.36 (  0.41)	train_penalty   0.04 (  0.06)	weight_norm  22.11 ( 22.07)	train_acc   0.88 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 5.5931 (5.8541)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.30it/s] 23%|##3       | 6/26 [00:00<00:00, 31.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.72it/s] 42%|####2     | 11/26 [00:00<00:00, 37.21it/s] 62%|######1   | 16/26 [00:00<00:00, 41.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.80it/s] 81%|########  | 21/26 [00:00<00:00, 39.48it/s]100%|##########| 26/26 [00:00<00:00, 42.54it/s]100%|##########| 26/26 [00:00<00:00, 36.18it/s]
Test: [   0/  26]	Loss 0.367 (0.367)	test_acc   0.88 (  0.88)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 0.367 (0.367)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.403 (0.401)	test_acc   0.87 (  0.86)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.403 (0.401)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.436 (0.408)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.436 (0.408)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.97)
Test: [  26/  26]	Loss 0.357 (0.407)	test_acc   0.88 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.357 (0.407)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.22it/s]
Test: [  0/  1]	Loss 1.642 (1.642)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.642 (1.642)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.642 (1.642)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.642 (1.642)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Overall Timing[  2/  1]	epoch_time 0.0420 (0.0546)	validation_time 0.0004 (0.0025)	train_time 0.0416 (0.0506)
record: (train_acc, test_acc) (0.8479000220894813, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8491000229716301, 0.10200000554323196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.04it/s] 12%|#1        | 3/26 [00:00<00:02, 10.42it/s] 27%|##6       | 7/26 [00:00<00:00, 19.55it/s] 42%|####2     | 11/26 [00:00<00:00, 25.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.80it/s] 69%|######9   | 18/26 [00:00<00:00, 19.92it/s] 85%|########4 | 22/26 [00:01<00:00, 23.96it/s]100%|##########| 26/26 [00:01<00:00, 27.26it/s]100%|##########| 26/26 [00:01<00:00, 21.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.350 (0.396)	train_nll   0.35 (  0.40)	train_penalty   0.03 (  0.05)	weight_norm  22.16 ( 22.14)	train_acc   0.88 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 5.5341 (5.7737)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 23%|##3       | 6/26 [00:00<00:00, 24.38it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.38it/s] 42%|####2     | 11/26 [00:00<00:00, 33.65it/s] 62%|######1   | 16/26 [00:00<00:00, 38.75it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.75it/s] 81%|########  | 21/26 [00:00<00:00, 36.66it/s]100%|##########| 26/26 [00:00<00:00, 40.38it/s]100%|##########| 26/26 [00:00<00:00, 32.21it/s]
Test: [   0/  26]	Loss 0.365 (0.365)	test_acc   0.87 (  0.87)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.365 (0.365)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.399 (0.387)	test_acc   0.88 (  0.86)	test_minacc   0.08 (  0.06)	test_majacc   1.00 (  0.99)	Loss_d 0.399 (0.387)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.08 (  0.06)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.414 (0.393)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.05)	test_majacc   1.00 (  0.99)	Loss_d 0.414 (0.393)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.05)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.342 (0.391)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.342 (0.391)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.86it/s]
Test: [  0/  1]	Loss 1.694 (1.694)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.694 (1.694)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.694 (1.694)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.694 (1.694)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0449 (0.0521)	validation_time 0.0003 (0.0020)	train_time 0.0445 (0.0491)
record: (train_acc, test_acc) (0.8502000259757042, 0.125)
last accs (train_acc, test_acc) (0.8502000259757042, 0.125)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.56it/s] 23%|##3       | 6/26 [00:00<00:00, 25.98it/s] 38%|###8      | 10/26 [00:00<00:00, 29.08it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.86it/s] 69%|######9   | 18/26 [00:00<00:00, 31.75it/s] 85%|########4 | 22/26 [00:00<00:00, 32.90it/s]100%|##########| 26/26 [00:00<00:00, 33.14it/s]100%|##########| 26/26 [00:00<00:00, 28.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.319 (0.378)	train_nll   0.32 (  0.38)	train_penalty   0.02 (  0.04)	weight_norm  22.23 ( 22.19)	train_acc   0.86 (  0.85)	train_minacc   0.07 (  0.07)	train_majacc   0.97 (  0.99)	train_corr   0.00 (  0.00)	l1 5.6230 (5.7630)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.67it/s] 23%|##3       | 6/26 [00:00<00:00, 24.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.66it/s] 42%|####2     | 11/26 [00:00<00:00, 32.81it/s] 62%|######1   | 16/26 [00:00<00:00, 38.05it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.05it/s] 81%|########  | 21/26 [00:00<00:00, 37.26it/s]100%|##########| 26/26 [00:00<00:00, 40.48it/s]100%|##########| 26/26 [00:00<00:00, 32.27it/s]
Test: [   0/  26]	Loss 0.335 (0.335)	test_acc   0.88 (  0.88)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 0.335 (0.335)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.372 (0.350)	test_acc   0.87 (  0.86)	test_minacc   0.20 (  0.15)	test_majacc   0.98 (  0.98)	Loss_d 0.372 (0.350)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.20 (  0.15)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.379 (0.354)	test_acc   0.85 (  0.86)	test_minacc   0.09 (  0.13)	test_majacc   0.99 (  0.98)	Loss_d 0.379 (0.354)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.09 (  0.13)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.301 (0.351)	test_acc   0.88 (  0.86)	test_minacc   0.10 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 0.301 (0.351)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.10 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.52it/s]
Test: [  0/  1]	Loss 1.782 (1.782)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.782 (1.782)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.782 (1.782)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.782 (1.782)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.86 (  0.86)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0416 (0.0500)	validation_time 0.0004 (0.0017)	train_time 0.0411 (0.0475)
record: (train_acc, test_acc) (0.856000027000904, 0.15400001406669617)
last accs (train_acc, test_acc) (0.856000027000904, 0.15400001406669617)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.24it/s] 19%|#9        | 5/26 [00:00<00:00, 22.18it/s] 35%|###4      | 9/26 [00:00<00:00, 27.26it/s] 50%|#####     | 13/26 [00:00<00:00, 29.97it/s] 65%|######5   | 17/26 [00:00<00:00, 31.40it/s] 81%|########  | 21/26 [00:00<00:00, 32.48it/s] 96%|#########6| 25/26 [00:00<00:00, 33.34it/s]100%|##########| 26/26 [00:00<00:00, 27.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.317 (0.368)	train_nll   0.32 (  0.37)	train_penalty   0.02 (  0.04)	weight_norm  22.33 ( 22.28)	train_acc   0.88 (  0.85)	train_minacc   0.10 (  0.12)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 5.3854 (5.7460)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 34.46it/s] 35%|###4      | 9/26 [00:00<00:00, 37.56it/s]                                               35%|###4      | 9/26 [00:00<00:00, 37.56it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.90it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.90it/s] 92%|#########2| 24/26 [00:00<00:00, 42.26it/s]100%|##########| 26/26 [00:00<00:00, 37.86it/s]
Test: [   0/  26]	Loss 0.333 (0.333)	test_acc   0.88 (  0.88)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.333 (0.333)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.362 (0.343)	test_acc   0.88 (  0.86)	test_minacc   0.12 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 0.362 (0.343)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.12 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.379 (0.351)	test_acc   0.84 (  0.86)	test_minacc   0.03 (  0.10)	test_majacc   1.00 (  0.99)	Loss_d 0.379 (0.351)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.03 (  0.10)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.296 (0.348)	test_acc   0.88 (  0.85)	test_minacc   0.03 (  0.09)	test_majacc   1.00 (  0.99)	Loss_d 0.296 (0.348)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.03 (  0.09)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.94 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.63it/s]
Test: [  0/  1]	Loss 1.794 (1.794)	test_acc   0.14 (  0.14)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 1.794 (1.794)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.794 (1.794)	test_acc   0.14 (  0.14)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 1.794 (1.794)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Overall Timing[  5/  1]	epoch_time 0.0410 (0.0485)	validation_time 0.0003 (0.0014)	train_time 0.0407 (0.0463)
record: (train_acc, test_acc) (0.856000027000904, 0.15400001406669617)
last accs (train_acc, test_acc) (0.8544000191688538, 0.14400000870227814)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.66it/s] 19%|#9        | 5/26 [00:00<00:01, 19.56it/s] 35%|###4      | 9/26 [00:00<00:00, 25.72it/s] 50%|#####     | 13/26 [00:00<00:00, 28.78it/s] 65%|######5   | 17/26 [00:00<00:00, 30.40it/s] 81%|########  | 21/26 [00:00<00:00, 31.85it/s] 96%|#########6| 25/26 [00:00<00:00, 32.42it/s]100%|##########| 26/26 [00:00<00:00, 26.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.278 (0.344)	train_nll   0.28 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.45 ( 22.39)	train_acc   0.88 (  0.85)	train_minacc   0.07 (  0.18)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 5.5646 (5.7502)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s] 15%|#5        | 4/26 [00:00<00:01, 16.93it/s] 35%|###4      | 9/26 [00:00<00:00, 29.07it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.07it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.25it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.22it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.22it/s]100%|##########| 26/26 [00:00<00:00, 44.61it/s]100%|##########| 26/26 [00:00<00:00, 33.48it/s]
Test: [   0/  26]	Loss 0.301 (0.301)	test_acc   0.89 (  0.89)	test_minacc   0.19 (  0.19)	test_majacc   0.99 (  0.99)	Loss_d 0.301 (0.301)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.339 (0.309)	test_acc   0.87 (  0.87)	test_minacc   0.12 (  0.12)	test_majacc   0.98 (  0.99)	Loss_d 0.339 (0.309)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.331 (0.315)	test_acc   0.85 (  0.86)	test_minacc   0.09 (  0.11)	test_majacc   1.00 (  0.99)	Loss_d 0.331 (0.315)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.09 (  0.11)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.262 (0.313)	test_acc   0.89 (  0.86)	test_minacc   0.10 (  0.11)	test_majacc   1.00 (  0.99)	Loss_d 0.262 (0.313)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.10 (  0.11)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.94 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.27it/s]
Test: [  0/  1]	Loss 1.895 (1.895)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 1.895 (1.895)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.895 (1.895)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 1.895 (1.895)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0394 (0.0472)	validation_time 0.0006 (0.0013)	train_time 0.0387 (0.0453)
record: (train_acc, test_acc) (0.857100020468235, 0.16300000250339508)
last accs (train_acc, test_acc) (0.857100020468235, 0.16300000250339508)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 16.95it/s] 27%|##6       | 7/26 [00:00<00:00, 25.77it/s] 42%|####2     | 11/26 [00:00<00:00, 29.94it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.76it/s] 88%|########8 | 23/26 [00:00<00:00, 34.73it/s]100%|##########| 26/26 [00:00<00:00, 29.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.259 (0.319)	train_nll   0.26 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.55 ( 22.50)	train_acc   0.87 (  0.86)	train_minacc   0.37 (  0.29)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 5.6441 (6.0478)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.23it/s] 31%|###       | 8/26 [00:00<00:00, 31.13it/s]                                               31%|###       | 8/26 [00:00<00:00, 31.13it/s] 46%|####6     | 12/26 [00:00<00:00, 33.96it/s] 65%|######5   | 17/26 [00:00<00:00, 36.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.29it/s] 85%|########4 | 22/26 [00:00<00:00, 40.26it/s]100%|##########| 26/26 [00:00<00:00, 33.53it/s]
Test: [   0/  26]	Loss 0.284 (0.284)	test_acc   0.89 (  0.89)	test_minacc   0.43 (  0.43)	test_majacc   0.95 (  0.95)	Loss_d 0.284 (0.284)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.331 (0.285)	test_acc   0.87 (  0.88)	test_minacc   0.37 (  0.46)	test_majacc   0.94 (  0.95)	Loss_d 0.331 (0.285)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.37 (  0.46)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.89 (  0.87)
Test: [  20/  26]	Loss 0.297 (0.290)	test_acc   0.87 (  0.87)	test_minacc   0.44 (  0.44)	test_majacc   0.96 (  0.95)	Loss_d 0.297 (0.290)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  26/  26]	Loss 0.240 (0.287)	test_acc   0.90 (  0.87)	test_minacc   0.50 (  0.46)	test_majacc   0.96 (  0.95)	Loss_d 0.240 (0.287)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.50 (  0.46)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.15it/s]
Test: [  0/  1]	Loss 1.750 (1.750)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.98 (  0.98)	Loss_d 1.750 (1.750)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.67 (  0.67)
Test: [  1/  1]	Loss 1.750 (1.750)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.98 (  0.98)	Loss_d 1.750 (1.750)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.67 (  0.67)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0400 (0.0463)	validation_time 0.0004 (0.0012)	train_time 0.0396 (0.0445)
record: (train_acc, test_acc) (0.8743000235557556, 0.35500001907348633)
last accs (train_acc, test_acc) (0.8743000235557556, 0.35500001907348633)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.19it/s] 19%|#9        | 5/26 [00:00<00:01, 20.19it/s] 35%|###4      | 9/26 [00:00<00:00, 26.04it/s] 50%|#####     | 13/26 [00:00<00:00, 29.50it/s] 65%|######5   | 17/26 [00:00<00:00, 31.27it/s] 81%|########  | 21/26 [00:00<00:00, 32.89it/s] 96%|#########6| 25/26 [00:00<00:00, 33.86it/s]100%|##########| 26/26 [00:00<00:00, 27.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.237 (0.296)	train_nll   0.24 (  0.30)	train_penalty   0.01 (  0.01)	weight_norm  22.68 ( 22.62)	train_acc   0.91 (  0.87)	train_minacc   0.57 (  0.42)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 5.9800 (6.2749)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 23.33it/s] 35%|###4      | 9/26 [00:00<00:00, 34.49it/s]                                               35%|###4      | 9/26 [00:00<00:00, 34.49it/s] 54%|#####3    | 14/26 [00:00<00:00, 39.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.40it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.40it/s] 92%|#########2| 24/26 [00:00<00:00, 40.22it/s]100%|##########| 26/26 [00:00<00:00, 36.10it/s]
Test: [   0/  26]	Loss 0.272 (0.272)	test_acc   0.88 (  0.88)	test_minacc   0.45 (  0.45)	test_majacc   0.94 (  0.94)	Loss_d 0.272 (0.272)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.310 (0.273)	test_acc   0.86 (  0.88)	test_minacc   0.35 (  0.49)	test_majacc   0.94 (  0.95)	Loss_d 0.310 (0.273)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.35 (  0.49)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.88 (  0.86)
Test: [  20/  26]	Loss 0.264 (0.273)	test_acc   0.87 (  0.88)	test_minacc   0.50 (  0.49)	test_majacc   0.94 (  0.95)	Loss_d 0.264 (0.273)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  26/  26]	Loss 0.206 (0.269)	test_acc   0.92 (  0.88)	test_minacc   0.67 (  0.51)	test_majacc   0.95 (  0.95)	Loss_d 0.206 (0.269)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.67 (  0.51)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.63it/s]
Test: [  0/  1]	Loss 1.831 (1.831)	test_acc   0.41 (  0.41)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 1.831 (1.831)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 1.831 (1.831)	test_acc   0.41 (  0.41)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 1.831 (1.831)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.56 (  0.56)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0427 (0.0459)	validation_time 0.0004 (0.0011)	train_time 0.0423 (0.0443)
record: (train_acc, test_acc) (0.8820000212788582, 0.40700000524520874)
last accs (train_acc, test_acc) (0.8820000212788582, 0.40700000524520874)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 17.46it/s] 27%|##6       | 7/26 [00:00<00:00, 24.96it/s] 42%|####2     | 11/26 [00:00<00:00, 29.14it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.38it/s] 88%|########8 | 23/26 [00:00<00:00, 33.38it/s]100%|##########| 26/26 [00:00<00:00, 28.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.224 (0.285)	train_nll   0.22 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.82 ( 22.74)	train_acc   0.91 (  0.87)	train_minacc   0.63 (  0.43)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 5.8502 (6.2396)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.48it/s] 12%|#1        | 3/26 [00:00<00:01, 12.93it/s] 31%|###       | 8/26 [00:00<00:00, 27.21it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.21it/s] 50%|#####     | 13/26 [00:00<00:00, 34.33it/s] 69%|######9   | 18/26 [00:00<00:00, 38.36it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.36it/s] 88%|########8 | 23/26 [00:00<00:00, 36.55it/s]100%|##########| 26/26 [00:00<00:00, 30.99it/s]
Test: [   0/  26]	Loss 0.267 (0.267)	test_acc   0.88 (  0.88)	test_minacc   0.43 (  0.43)	test_majacc   0.94 (  0.94)	Loss_d 0.267 (0.267)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.313 (0.272)	test_acc   0.87 (  0.88)	test_minacc   0.43 (  0.55)	test_majacc   0.94 (  0.94)	Loss_d 0.313 (0.272)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.43 (  0.55)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.86 (  0.84)
Test: [  20/  26]	Loss 0.248 (0.271)	test_acc   0.89 (  0.88)	test_minacc   0.67 (  0.55)	test_majacc   0.94 (  0.94)	Loss_d 0.248 (0.271)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.67 (  0.55)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.82 (  0.84)
Test: [  26/  26]	Loss 0.207 (0.266)	test_acc   0.92 (  0.89)	test_minacc   0.70 (  0.57)	test_majacc   0.95 (  0.94)	Loss_d 0.207 (0.266)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.70 (  0.57)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.87 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.53it/s]
Test: [  0/  1]	Loss 1.892 (1.892)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.93 (  0.93)	Loss_d 1.892 (1.892)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 1.892 (1.892)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.93 (  0.93)	Loss_d 1.892 (1.892)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.60 (  0.60)
Overall Timing[  9/  1]	epoch_time 0.0408 (0.0454)	validation_time 0.0004 (0.0010)	train_time 0.0404 (0.0439)
record: (train_acc, test_acc) (0.8820000212788582, 0.40700000524520874)
last accs (train_acc, test_acc) (0.8852000235319137, 0.37300002574920654)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.16it/s] 19%|#9        | 5/26 [00:00<00:01, 20.89it/s] 35%|###4      | 9/26 [00:00<00:00, 26.25it/s] 50%|#####     | 13/26 [00:00<00:00, 29.43it/s] 65%|######5   | 17/26 [00:00<00:00, 30.87it/s] 81%|########  | 21/26 [00:00<00:00, 31.37it/s] 96%|#########6| 25/26 [00:00<00:00, 32.70it/s]100%|##########| 26/26 [00:00<00:00, 27.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.224 (0.275)	train_nll   0.22 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.01 ( 22.91)	train_acc   0.89 (  0.87)	train_minacc   0.73 (  0.48)	train_majacc   0.91 (  0.94)	train_corr   0.00 (  0.00)	l1 6.1784 (6.6720)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.33it/s] 23%|##3       | 6/26 [00:00<00:01, 19.36it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.36it/s] 42%|####2     | 11/26 [00:00<00:00, 28.07it/s] 62%|######1   | 16/26 [00:00<00:00, 34.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.27it/s] 81%|########  | 21/26 [00:00<00:00, 37.89it/s]100%|##########| 26/26 [00:00<00:00, 30.66it/s]
Test: [   0/  26]	Loss 0.268 (0.268)	test_acc   0.88 (  0.88)	test_minacc   0.43 (  0.43)	test_majacc   0.94 (  0.94)	Loss_d 0.268 (0.268)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.317 (0.275)	test_acc   0.85 (  0.88)	test_minacc   0.45 (  0.57)	test_majacc   0.91 (  0.93)	Loss_d 0.317 (0.275)	test_acc_d   0.85 (  0.88)	test_minacc_d   0.45 (  0.57)	test_majacc_d   0.91 (  0.93)	test_corr_d   0.86 (  0.84)
Test: [  20/  26]	Loss 0.254 (0.274)	test_acc   0.90 (  0.88)	test_minacc   0.70 (  0.57)	test_majacc   0.94 (  0.93)	Loss_d 0.254 (0.274)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.70 (  0.57)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.82 (  0.84)
Test: [  26/  26]	Loss 0.203 (0.268)	test_acc   0.92 (  0.88)	test_minacc   0.83 (  0.59)	test_majacc   0.94 (  0.93)	Loss_d 0.203 (0.268)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.83 (  0.59)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.84 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.58it/s]
Test: [  0/  1]	Loss 1.987 (1.987)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.92 (  0.92)	Loss_d 1.987 (1.987)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 1.987 (1.987)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.92 (  0.92)	Loss_d 1.987 (1.987)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.58 (  0.58)
Overall Timing[ 10/  1]	epoch_time 0.0412 (0.0450)	validation_time 0.0009 (0.0010)	train_time 0.0403 (0.0436)
record: (train_acc, test_acc) (0.8820000212788582, 0.40700000524520874)
last accs (train_acc, test_acc) (0.8828000202775002, 0.406000018119812)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.24it/s] 12%|#1        | 3/26 [00:00<00:02,  8.76it/s] 27%|##6       | 7/26 [00:00<00:01, 17.75it/s] 42%|####2     | 11/26 [00:00<00:00, 23.28it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.04it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.43it/s] 88%|########8 | 23/26 [00:00<00:00, 30.95it/s]100%|##########| 26/26 [00:01<00:00, 24.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.213 (0.267)	train_nll   0.21 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  23.26 ( 23.13)	train_acc   0.90 (  0.88)	train_minacc   0.67 (  0.54)	train_majacc   0.94 (  0.94)	train_corr   0.00 (  0.00)	l1 6.4939 (7.0188)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.07it/s] 27%|##6       | 7/26 [00:00<00:00, 19.27it/s]                                               27%|##6       | 7/26 [00:00<00:00, 19.27it/s] 46%|####6     | 12/26 [00:00<00:00, 27.69it/s] 65%|######5   | 17/26 [00:00<00:00, 33.03it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.03it/s] 85%|########4 | 22/26 [00:00<00:00, 36.46it/s]100%|##########| 26/26 [00:00<00:00, 28.17it/s]
Test: [   0/  26]	Loss 0.272 (0.272)	test_acc   0.87 (  0.87)	test_minacc   0.49 (  0.49)	test_majacc   0.93 (  0.93)	Loss_d 0.272 (0.272)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.295 (0.269)	test_acc   0.86 (  0.88)	test_minacc   0.43 (  0.56)	test_majacc   0.92 (  0.93)	Loss_d 0.295 (0.269)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.43 (  0.56)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.85 (  0.84)
Test: [  20/  26]	Loss 0.273 (0.268)	test_acc   0.87 (  0.88)	test_minacc   0.61 (  0.56)	test_majacc   0.93 (  0.93)	Loss_d 0.273 (0.268)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.61 (  0.56)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.82 (  0.84)
Test: [  26/  26]	Loss 0.202 (0.263)	test_acc   0.91 (  0.88)	test_minacc   0.77 (  0.58)	test_majacc   0.93 (  0.93)	Loss_d 0.202 (0.263)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.77 (  0.58)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.85 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.42it/s]
Test: [  0/  1]	Loss 2.024 (2.024)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 2.024 (2.024)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 2.024 (2.024)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 2.024 (2.024)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.58 (  0.58)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0420 (0.0448)	validation_time 0.0004 (0.0010)	train_time 0.0416 (0.0434)
record: (train_acc, test_acc) (0.8814000210165978, 0.4180000126361847)
last accs (train_acc, test_acc) (0.8814000210165978, 0.4180000126361847)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 19%|#9        | 5/26 [00:00<00:00, 21.95it/s] 35%|###4      | 9/26 [00:00<00:00, 27.37it/s] 50%|#####     | 13/26 [00:00<00:00, 29.94it/s] 65%|######5   | 17/26 [00:00<00:00, 31.36it/s] 81%|########  | 21/26 [00:00<00:00, 32.44it/s] 96%|#########6| 25/26 [00:00<00:00, 33.55it/s]100%|##########| 26/26 [00:00<00:00, 28.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.197 (0.251)	train_nll   0.20 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.55 ( 23.41)	train_acc   0.90 (  0.89)	train_minacc   0.57 (  0.56)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 7.6516 (7.1547)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.51it/s] 35%|###4      | 9/26 [00:00<00:00, 40.97it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.97it/s] 54%|#####3    | 14/26 [00:00<00:00, 40.49it/s] 77%|#######6  | 20/26 [00:00<00:00, 45.45it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 45.45it/s] 96%|#########6| 25/26 [00:00<00:00, 46.67it/s]100%|##########| 26/26 [00:00<00:00, 40.18it/s]
Test: [   0/  26]	Loss 0.236 (0.236)	test_acc   0.90 (  0.90)	test_minacc   0.53 (  0.53)	test_majacc   0.95 (  0.95)	Loss_d 0.236 (0.236)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.264 (0.244)	test_acc   0.89 (  0.90)	test_minacc   0.41 (  0.54)	test_majacc   0.96 (  0.95)	Loss_d 0.264 (0.244)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.41 (  0.54)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.89 (  0.85)
Test: [  20/  26]	Loss 0.204 (0.237)	test_acc   0.91 (  0.90)	test_minacc   0.66 (  0.56)	test_majacc   0.96 (  0.95)	Loss_d 0.204 (0.237)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.66 (  0.56)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.82 (  0.85)
Test: [  26/  26]	Loss 0.159 (0.229)	test_acc   0.94 (  0.90)	test_minacc   0.80 (  0.57)	test_majacc   0.95 (  0.96)	Loss_d 0.159 (0.229)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.80 (  0.57)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.86 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.42it/s]
Test: [  0/  1]	Loss 2.527 (2.527)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.94 (  0.94)	Loss_d 2.527 (2.527)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 2.527 (2.527)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.94 (  0.94)	Loss_d 2.527 (2.527)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Overall Timing[ 12/  1]	epoch_time 0.0453 (0.0448)	validation_time 0.0004 (0.0009)	train_time 0.0449 (0.0435)
record: (train_acc, test_acc) (0.8814000210165978, 0.4180000126361847)
last accs (train_acc, test_acc) (0.8988000211119652, 0.3620000183582306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.38it/s] 15%|#5        | 4/26 [00:00<00:01, 15.87it/s] 31%|###       | 8/26 [00:00<00:00, 24.07it/s] 46%|####6     | 12/26 [00:00<00:00, 28.10it/s] 62%|######1   | 16/26 [00:00<00:00, 30.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.69it/s] 92%|#########2| 24/26 [00:00<00:00, 33.03it/s]100%|##########| 26/26 [00:00<00:00, 27.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.177 (0.227)	train_nll   0.18 (  0.23)	train_penalty   0.00 (  0.00)	weight_norm  23.89 ( 23.73)	train_acc   0.92 (  0.90)	train_minacc   0.77 (  0.65)	train_majacc   0.95 (  0.94)	train_corr   0.00 (  0.00)	l1 8.0451 (7.5115)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.73it/s] 27%|##6       | 7/26 [00:00<00:01, 18.47it/s]                                               27%|##6       | 7/26 [00:00<00:01, 18.47it/s] 50%|#####     | 13/26 [00:00<00:00, 28.63it/s] 69%|######9   | 18/26 [00:00<00:00, 34.51it/s]                                                69%|######9   | 18/26 [00:00<00:00, 34.51it/s] 92%|#########2| 24/26 [00:00<00:00, 37.36it/s]100%|##########| 26/26 [00:00<00:00, 27.94it/s]
Test: [   0/  26]	Loss 0.205 (0.205)	test_acc   0.90 (  0.90)	test_minacc   0.53 (  0.53)	test_majacc   0.95 (  0.95)	Loss_d 0.205 (0.205)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.236 (0.214)	test_acc   0.90 (  0.91)	test_minacc   0.45 (  0.59)	test_majacc   0.96 (  0.96)	Loss_d 0.236 (0.214)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.45 (  0.59)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.86)
Test: [  20/  26]	Loss 0.184 (0.205)	test_acc   0.93 (  0.91)	test_minacc   0.75 (  0.62)	test_majacc   0.96 (  0.97)	Loss_d 0.184 (0.205)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.75 (  0.62)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.80 (  0.85)
Test: [  26/  26]	Loss 0.119 (0.195)	test_acc   0.96 (  0.92)	test_minacc   0.90 (  0.65)	test_majacc   0.97 (  0.97)	Loss_d 0.119 (0.195)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.90 (  0.65)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.09it/s]
Test: [  0/  1]	Loss 2.823 (2.823)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.92 (  0.92)	Loss_d 2.823 (2.823)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 2.823 (2.823)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.92 (  0.92)	Loss_d 2.823 (2.823)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.61 (  0.61)
Overall Timing[ 13/  1]	epoch_time 0.0507 (0.0452)	validation_time 0.0004 (0.0009)	train_time 0.0502 (0.0440)
record: (train_acc, test_acc) (0.8814000210165978, 0.4180000126361847)
last accs (train_acc, test_acc) (0.919500020802021, 0.3580000102519989)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.01it/s] 12%|#1        | 3/26 [00:00<00:02,  9.49it/s] 27%|##6       | 7/26 [00:00<00:00, 19.10it/s] 42%|####2     | 11/26 [00:00<00:00, 24.59it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.29it/s] 88%|########8 | 23/26 [00:00<00:00, 30.92it/s]100%|##########| 26/26 [00:01<00:00, 24.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.144 (0.211)	train_nll   0.14 (  0.21)	train_penalty   0.00 (  0.01)	weight_norm  24.29 ( 24.09)	train_acc   0.95 (  0.91)	train_minacc   0.77 (  0.67)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.9418 (8.1142)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.48it/s] 19%|#9        | 5/26 [00:00<00:00, 25.07it/s] 38%|###8      | 10/26 [00:00<00:00, 34.51it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.51it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.61it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.48it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.48it/s] 96%|#########6| 25/26 [00:00<00:00, 41.57it/s]100%|##########| 26/26 [00:00<00:00, 35.05it/s]
Test: [   0/  26]	Loss 0.195 (0.195)	test_acc   0.92 (  0.92)	test_minacc   0.79 (  0.79)	test_majacc   0.94 (  0.94)	Loss_d 0.195 (0.195)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.256 (0.202)	test_acc   0.88 (  0.91)	test_minacc   0.69 (  0.77)	test_majacc   0.91 (  0.94)	Loss_d 0.256 (0.202)	test_acc_d   0.88 (  0.91)	test_minacc_d   0.69 (  0.77)	test_majacc_d   0.91 (  0.94)	test_corr_d   0.77 (  0.77)
Test: [  20/  26]	Loss 0.181 (0.191)	test_acc   0.92 (  0.92)	test_minacc   0.84 (  0.78)	test_majacc   0.94 (  0.94)	Loss_d 0.181 (0.191)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.71 (  0.76)
Test: [  26/  26]	Loss 0.108 (0.182)	test_acc   0.98 (  0.92)	test_minacc   0.97 (  0.80)	test_majacc   0.98 (  0.94)	Loss_d 0.108 (0.182)	test_acc_d   0.98 (  0.92)	test_minacc_d   0.97 (  0.80)	test_majacc_d   0.98 (  0.94)	test_corr_d   0.82 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.62it/s]
Test: [  0/  1]	Loss 2.470 (2.470)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.93 (  0.93)	Loss_d 2.470 (2.470)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 2.470 (2.470)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.93 (  0.93)	Loss_d 2.470 (2.470)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0510 (0.0456)	validation_time 0.0004 (0.0009)	train_time 0.0506 (0.0444)
record: (train_acc, test_acc) (0.9216000179052353, 0.4520000219345093)
last accs (train_acc, test_acc) (0.9216000179052353, 0.4520000219345093)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.86it/s] 19%|#9        | 5/26 [00:00<00:00, 22.52it/s] 35%|###4      | 9/26 [00:00<00:00, 27.49it/s] 50%|#####     | 13/26 [00:00<00:00, 29.76it/s] 65%|######5   | 17/26 [00:00<00:00, 30.90it/s] 81%|########  | 21/26 [00:00<00:00, 31.63it/s] 96%|#########6| 25/26 [00:00<00:00, 32.55it/s]100%|##########| 26/26 [00:00<00:00, 27.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.002 (0.078)	train_nll   0.35 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  24.64 ( 24.48)	train_acc   0.82 (  0.88)	train_minacc   0.97 (  0.75)	train_majacc   0.80 (  0.90)	train_corr   0.00 (  0.00)	l1 5.8135 (7.6374)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.08it/s] 27%|##6       | 7/26 [00:00<00:00, 36.78it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.78it/s] 46%|####6     | 12/26 [00:00<00:00, 41.79it/s] 65%|######5   | 17/26 [00:00<00:00, 43.20it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.20it/s] 85%|########4 | 22/26 [00:00<00:00, 40.99it/s]100%|##########| 26/26 [00:00<00:00, 37.49it/s]
Test: [   0/  26]	Loss 0.404 (0.404)	test_acc   0.79 (  0.79)	test_minacc   0.89 (  0.89)	test_majacc   0.78 (  0.78)	Loss_d 0.404 (0.404)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.439 (0.374)	test_acc   0.75 (  0.80)	test_minacc   0.90 (  0.93)	test_majacc   0.72 (  0.78)	Loss_d 0.439 (0.374)	test_acc_d   0.75 (  0.80)	test_minacc_d   0.90 (  0.93)	test_majacc_d   0.72 (  0.78)	test_corr_d   0.48 (  0.50)
Test: [  20/  26]	Loss 0.401 (0.373)	test_acc   0.78 (  0.80)	test_minacc   0.94 (  0.93)	test_majacc   0.75 (  0.77)	Loss_d 0.401 (0.373)	test_acc_d   0.78 (  0.80)	test_minacc_d   0.94 (  0.93)	test_majacc_d   0.75 (  0.77)	test_corr_d   0.46 (  0.49)
Test: [  26/  26]	Loss 0.369 (0.372)	test_acc   0.80 (  0.80)	test_minacc   0.97 (  0.93)	test_majacc   0.78 (  0.77)	Loss_d 0.369 (0.372)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.97 (  0.93)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.51 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.77it/s]
Test: [  0/  1]	Loss 1.258 (1.258)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.62)	test_majacc   0.80 (  0.80)	Loss_d 1.258 (1.258)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.80 (  0.80)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 1.258 (1.258)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.62)	test_majacc   0.80 (  0.80)	Loss_d 1.258 (1.258)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.80 (  0.80)	test_corr_d  -0.00 ( -0.00)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0456 (0.0456)	validation_time 0.0004 (0.0008)	train_time 0.0452 (0.0445)
record: (train_acc, test_acc) (0.7968000237345696, 0.6390000581741333)
last accs (train_acc, test_acc) (0.7968000237345696, 0.6390000581741333)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 15%|#5        | 4/26 [00:00<00:01, 16.44it/s] 31%|###       | 8/26 [00:00<00:00, 24.08it/s] 46%|####6     | 12/26 [00:00<00:00, 28.19it/s] 62%|######1   | 16/26 [00:00<00:00, 30.62it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.02it/s] 92%|#########2| 24/26 [00:00<00:00, 33.12it/s]100%|##########| 26/26 [00:00<00:00, 27.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.001 (0.001)	train_nll   0.44 (  0.43)	train_penalty   0.00 (  0.00)	weight_norm  24.73 ( 24.70)	train_acc   0.72 (  0.75)	train_minacc   0.97 (  0.88)	train_majacc   0.69 (  0.73)	train_corr   0.00 (  0.00)	l1 4.9043 (5.1624)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.96it/s] 23%|##3       | 6/26 [00:00<00:00, 31.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.91it/s] 42%|####2     | 11/26 [00:00<00:00, 37.74it/s] 62%|######1   | 16/26 [00:00<00:00, 40.35it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.35it/s] 81%|########  | 21/26 [00:00<00:00, 39.18it/s]100%|##########| 26/26 [00:00<00:00, 41.67it/s]100%|##########| 26/26 [00:00<00:00, 35.29it/s]
Test: [   0/  26]	Loss 0.436 (0.436)	test_acc   0.75 (  0.75)	test_minacc   0.79 (  0.79)	test_majacc   0.75 (  0.75)	Loss_d 0.436 (0.436)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.457 (0.425)	test_acc   0.73 (  0.76)	test_minacc   0.84 (  0.82)	test_majacc   0.71 (  0.74)	Loss_d 0.457 (0.425)	test_acc_d   0.73 (  0.76)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.52 (  0.55)
Test: [  20/  26]	Loss 0.420 (0.428)	test_acc   0.75 (  0.75)	test_minacc   0.81 (  0.82)	test_majacc   0.74 (  0.74)	Loss_d 0.420 (0.428)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.53 (  0.54)
Test: [  26/  26]	Loss 0.431 (0.428)	test_acc   0.74 (  0.75)	test_minacc   0.97 (  0.82)	test_majacc   0.71 (  0.74)	Loss_d 0.431 (0.428)	test_acc_d   0.74 (  0.75)	test_minacc_d   0.97 (  0.82)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.53 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.34it/s]
Test: [  0/  1]	Loss 1.248 (1.248)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.75 (  0.75)	Loss_d 1.248 (1.248)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 1.248 (1.248)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.75 (  0.75)	Loss_d 1.248 (1.248)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.19 (  0.19)
Overall Timing[ 16/  1]	epoch_time 0.0396 (0.0453)	validation_time 0.0003 (0.0008)	train_time 0.0393 (0.0442)
record: (train_acc, test_acc) (0.7968000237345696, 0.6390000581741333)
last accs (train_acc, test_acc) (0.7506000275015831, 0.5910000205039978)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.31it/s] 19%|#9        | 5/26 [00:00<00:01, 17.00it/s] 35%|###4      | 9/26 [00:00<00:00, 23.79it/s] 50%|#####     | 13/26 [00:00<00:00, 27.83it/s] 65%|######5   | 17/26 [00:00<00:00, 30.51it/s] 81%|########  | 21/26 [00:00<00:00, 32.10it/s] 96%|#########6| 25/26 [00:00<00:00, 32.96it/s]100%|##########| 26/26 [00:00<00:00, 26.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.004 (0.002)	train_nll   0.49 (  0.44)	train_penalty   0.00 (  0.00)	weight_norm  24.75 ( 24.74)	train_acc   0.68 (  0.74)	train_minacc   0.97 (  0.87)	train_majacc   0.65 (  0.71)	train_corr   0.00 (  0.00)	l1 5.2528 (4.9198)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.01it/s] 23%|##3       | 6/26 [00:00<00:00, 20.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.13it/s] 42%|####2     | 11/26 [00:00<00:00, 28.51it/s] 62%|######1   | 16/26 [00:00<00:00, 34.43it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.43it/s] 81%|########  | 21/26 [00:00<00:00, 34.84it/s]100%|##########| 26/26 [00:00<00:00, 38.30it/s]100%|##########| 26/26 [00:00<00:00, 29.12it/s]
Test: [   0/  26]	Loss 0.512 (0.512)	test_acc   0.68 (  0.68)	test_minacc   0.91 (  0.91)	test_majacc   0.65 (  0.65)	Loss_d 0.512 (0.512)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.489 (0.481)	test_acc   0.71 (  0.70)	test_minacc   0.88 (  0.89)	test_majacc   0.68 (  0.67)	Loss_d 0.489 (0.481)	test_acc_d   0.71 (  0.70)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.68 (  0.67)	test_corr_d   0.41 (  0.42)
Test: [  20/  26]	Loss 0.469 (0.486)	test_acc   0.70 (  0.70)	test_minacc   0.89 (  0.88)	test_majacc   0.67 (  0.67)	Loss_d 0.469 (0.486)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.89 (  0.88)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.41 (  0.41)
Test: [  26/  26]	Loss 0.478 (0.483)	test_acc   0.69 (  0.70)	test_minacc   0.97 (  0.89)	test_majacc   0.65 (  0.67)	Loss_d 0.478 (0.483)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.97 (  0.89)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.43 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.57it/s]
Test: [  0/  1]	Loss 1.169 (1.169)	test_acc   0.67 (  0.67)	test_minacc   0.67 (  0.67)	test_majacc   0.67 (  0.67)	Loss_d 1.169 (1.169)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 1.169 (1.169)	test_acc   0.67 (  0.67)	test_minacc   0.67 (  0.67)	test_majacc   0.67 (  0.67)	Loss_d 1.169 (1.169)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.05 ( -0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0444 (0.0452)	validation_time 0.0004 (0.0008)	train_time 0.0439 (0.0442)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.98it/s] 19%|#9        | 5/26 [00:00<00:00, 21.22it/s] 35%|###4      | 9/26 [00:00<00:00, 26.77it/s] 50%|#####     | 13/26 [00:00<00:00, 29.74it/s] 65%|######5   | 17/26 [00:00<00:00, 31.35it/s] 81%|########  | 21/26 [00:00<00:00, 32.49it/s] 96%|#########6| 25/26 [00:00<00:00, 33.17it/s]100%|##########| 26/26 [00:00<00:00, 27.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.005 (0.002)	train_nll   0.37 (  0.43)	train_penalty   0.01 (  0.00)	weight_norm  24.76 ( 24.76)	train_acc   0.80 (  0.74)	train_minacc   0.93 (  0.86)	train_majacc   0.78 (  0.72)	train_corr   0.00 (  0.00)	l1 5.0302 (5.1507)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.67it/s] 23%|##3       | 6/26 [00:00<00:00, 32.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.22it/s] 42%|####2     | 11/26 [00:00<00:00, 38.03it/s] 62%|######1   | 16/26 [00:00<00:00, 41.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.06it/s] 81%|########  | 21/26 [00:00<00:00, 39.44it/s]100%|##########| 26/26 [00:00<00:00, 41.71it/s]100%|##########| 26/26 [00:00<00:00, 35.53it/s]
Test: [   0/  26]	Loss 0.413 (0.413)	test_acc   0.75 (  0.75)	test_minacc   0.87 (  0.87)	test_majacc   0.73 (  0.73)	Loss_d 0.413 (0.413)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.440 (0.419)	test_acc   0.71 (  0.74)	test_minacc   0.84 (  0.87)	test_majacc   0.69 (  0.72)	Loss_d 0.440 (0.419)	test_acc_d   0.71 (  0.74)	test_minacc_d   0.84 (  0.87)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.56 (  0.57)
Test: [  20/  26]	Loss 0.427 (0.419)	test_acc   0.74 (  0.74)	test_minacc   0.86 (  0.86)	test_majacc   0.71 (  0.73)	Loss_d 0.427 (0.419)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.55 (  0.57)
Test: [  26/  26]	Loss 0.375 (0.416)	test_acc   0.79 (  0.75)	test_minacc   0.93 (  0.86)	test_majacc   0.77 (  0.73)	Loss_d 0.375 (0.416)	test_acc_d   0.79 (  0.75)	test_minacc_d   0.93 (  0.86)	test_majacc_d   0.77 (  0.73)	test_corr_d   0.62 (  0.57)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.08it/s]
Test: [  0/  1]	Loss 1.271 (1.271)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.78 (  0.78)	Loss_d 1.271 (1.271)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.271 (1.271)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.78 (  0.78)	Loss_d 1.271 (1.271)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.14 (  0.14)
Overall Timing[ 18/  1]	epoch_time 0.0432 (0.0451)	validation_time 0.0006 (0.0008)	train_time 0.0425 (0.0441)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.7477000288963318, 0.6340000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.03it/s] 19%|#9        | 5/26 [00:00<00:01, 20.13it/s] 35%|###4      | 9/26 [00:00<00:00, 26.45it/s] 50%|#####     | 13/26 [00:00<00:00, 29.82it/s] 65%|######5   | 17/26 [00:00<00:00, 32.24it/s] 81%|########  | 21/26 [00:00<00:00, 33.18it/s] 96%|#########6| 25/26 [00:00<00:00, 33.74it/s]100%|##########| 26/26 [00:00<00:00, 28.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.42 (  0.44)	train_penalty   0.00 (  0.00)	weight_norm  24.77 ( 24.77)	train_acc   0.74 (  0.72)	train_minacc   0.97 (  0.86)	train_majacc   0.71 (  0.70)	train_corr   0.00 (  0.00)	l1 5.2663 (5.2367)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.02it/s] 12%|#1        | 3/26 [00:00<00:01, 13.28it/s] 31%|###       | 8/26 [00:00<00:00, 27.26it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.26it/s] 50%|#####     | 13/26 [00:00<00:00, 33.92it/s] 69%|######9   | 18/26 [00:00<00:00, 38.42it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.42it/s] 88%|########8 | 23/26 [00:00<00:00, 37.50it/s]100%|##########| 26/26 [00:00<00:00, 31.73it/s]
Test: [   0/  26]	Loss 0.447 (0.447)	test_acc   0.70 (  0.70)	test_minacc   0.87 (  0.87)	test_majacc   0.67 (  0.67)	Loss_d 0.447 (0.447)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.448 (0.439)	test_acc   0.69 (  0.72)	test_minacc   0.86 (  0.88)	test_majacc   0.67 (  0.69)	Loss_d 0.448 (0.439)	test_acc_d   0.69 (  0.72)	test_minacc_d   0.86 (  0.88)	test_majacc_d   0.67 (  0.69)	test_corr_d   0.51 (  0.53)
Test: [  20/  26]	Loss 0.450 (0.441)	test_acc   0.71 (  0.72)	test_minacc   0.86 (  0.86)	test_majacc   0.68 (  0.69)	Loss_d 0.450 (0.441)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.51 (  0.52)
Test: [  26/  26]	Loss 0.419 (0.440)	test_acc   0.74 (  0.72)	test_minacc   0.97 (  0.86)	test_majacc   0.71 (  0.69)	Loss_d 0.419 (0.440)	test_acc_d   0.74 (  0.72)	test_minacc_d   0.97 (  0.86)	test_majacc_d   0.71 (  0.69)	test_corr_d   0.55 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.67it/s]
Test: [  0/  1]	Loss 1.284 (1.284)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.73 (  0.73)	Loss_d 1.284 (1.284)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.284 (1.284)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.73 (  0.73)	Loss_d 1.284 (1.284)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.08 (  0.08)
Overall Timing[ 19/  1]	epoch_time 0.0418 (0.0449)	validation_time 0.0005 (0.0008)	train_time 0.0413 (0.0439)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.7172000341415405, 0.6540000438690186)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.29it/s] 23%|##3       | 6/26 [00:00<00:00, 26.39it/s] 38%|###8      | 10/26 [00:00<00:00, 31.00it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.59it/s] 69%|######9   | 18/26 [00:00<00:00, 34.84it/s] 85%|########4 | 22/26 [00:00<00:00, 35.38it/s]100%|##########| 26/26 [00:00<00:00, 35.36it/s]100%|##########| 26/26 [00:00<00:00, 31.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.42 (  0.44)	train_penalty   0.00 (  0.00)	weight_norm  24.77 ( 24.77)	train_acc   0.73 (  0.72)	train_minacc   0.97 (  0.87)	train_majacc   0.70 (  0.69)	train_corr   0.00 (  0.00)	l1 5.2165 (5.2539)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.70it/s] 27%|##6       | 7/26 [00:00<00:00, 36.56it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.56it/s] 46%|####6     | 12/26 [00:00<00:00, 40.93it/s] 65%|######5   | 17/26 [00:00<00:00, 43.43it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.43it/s] 88%|########8 | 23/26 [00:00<00:00, 45.18it/s]100%|##########| 26/26 [00:00<00:00, 39.00it/s]
Test: [   0/  26]	Loss 0.439 (0.439)	test_acc   0.72 (  0.72)	test_minacc   0.89 (  0.89)	test_majacc   0.69 (  0.69)	Loss_d 0.439 (0.439)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.441 (0.434)	test_acc   0.70 (  0.72)	test_minacc   0.86 (  0.88)	test_majacc   0.68 (  0.69)	Loss_d 0.441 (0.434)	test_acc_d   0.70 (  0.72)	test_minacc_d   0.86 (  0.88)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.52 (  0.53)
Test: [  20/  26]	Loss 0.441 (0.435)	test_acc   0.71 (  0.72)	test_minacc   0.88 (  0.87)	test_majacc   0.68 (  0.69)	Loss_d 0.441 (0.435)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.88 (  0.87)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.52 (  0.52)
Test: [  26/  26]	Loss 0.421 (0.435)	test_acc   0.73 (  0.72)	test_minacc   0.97 (  0.87)	test_majacc   0.70 (  0.69)	Loss_d 0.421 (0.435)	test_acc_d   0.73 (  0.72)	test_minacc_d   0.97 (  0.87)	test_majacc_d   0.70 (  0.69)	test_corr_d   0.55 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.32it/s]
Test: [  0/  1]	Loss 1.269 (1.269)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.73 (  0.73)	Loss_d 1.269 (1.269)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.269 (1.269)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.73 (  0.73)	Loss_d 1.269 (1.269)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.09 (  0.09)
Overall Timing[ 20/  1]	epoch_time 0.0428 (0.0448)	validation_time 0.0004 (0.0007)	train_time 0.0424 (0.0439)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.7198000313639641, 0.6540000438690186)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.13it/s] 19%|#9        | 5/26 [00:00<00:01, 16.79it/s] 35%|###4      | 9/26 [00:00<00:00, 24.06it/s] 50%|#####     | 13/26 [00:00<00:00, 28.23it/s] 65%|######5   | 17/26 [00:00<00:00, 30.50it/s] 81%|########  | 21/26 [00:00<00:00, 32.19it/s] 96%|#########6| 25/26 [00:00<00:00, 33.30it/s]100%|##########| 26/26 [00:00<00:00, 26.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.42 (  0.44)	train_penalty   0.00 (  0.00)	weight_norm  24.77 ( 24.77)	train_acc   0.73 (  0.72)	train_minacc   0.97 (  0.87)	train_majacc   0.70 (  0.69)	train_corr   0.00 (  0.00)	l1 5.2267 (5.2605)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.50it/s] 23%|##3       | 6/26 [00:00<00:00, 26.55it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.55it/s] 42%|####2     | 11/26 [00:00<00:00, 34.49it/s] 62%|######1   | 16/26 [00:00<00:00, 39.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.52it/s] 81%|########  | 21/26 [00:00<00:00, 38.00it/s]100%|##########| 26/26 [00:00<00:00, 40.47it/s]100%|##########| 26/26 [00:00<00:00, 33.03it/s]
Test: [   0/  26]	Loss 0.438 (0.438)	test_acc   0.72 (  0.72)	test_minacc   0.89 (  0.89)	test_majacc   0.70 (  0.70)	Loss_d 0.438 (0.438)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.438 (0.432)	test_acc   0.71 (  0.72)	test_minacc   0.86 (  0.88)	test_majacc   0.68 (  0.70)	Loss_d 0.438 (0.432)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.86 (  0.88)	test_majacc_d   0.68 (  0.70)	test_corr_d   0.53 (  0.54)
Test: [  20/  26]	Loss 0.440 (0.434)	test_acc   0.72 (  0.72)	test_minacc   0.88 (  0.87)	test_majacc   0.68 (  0.70)	Loss_d 0.440 (0.434)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.88 (  0.87)	test_majacc_d   0.68 (  0.70)	test_corr_d   0.52 (  0.53)
Test: [  26/  26]	Loss 0.424 (0.434)	test_acc   0.73 (  0.72)	test_minacc   0.97 (  0.87)	test_majacc   0.70 (  0.70)	Loss_d 0.424 (0.434)	test_acc_d   0.73 (  0.72)	test_minacc_d   0.97 (  0.87)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.55 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.77it/s]
Test: [  0/  1]	Loss 1.274 (1.274)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.74 (  0.74)	Loss_d 1.274 (1.274)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.274 (1.274)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.74 (  0.74)	Loss_d 1.274 (1.274)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.09 (  0.09)
Overall Timing[ 21/  1]	epoch_time 0.0451 (0.0449)	validation_time 0.0007 (0.0007)	train_time 0.0444 (0.0439)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.7213000347614288, 0.656000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.79it/s] 23%|##3       | 6/26 [00:00<00:00, 26.82it/s] 38%|###8      | 10/26 [00:00<00:00, 30.16it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.26it/s] 69%|######9   | 18/26 [00:00<00:00, 33.58it/s] 85%|########4 | 22/26 [00:00<00:00, 34.19it/s]100%|##########| 26/26 [00:00<00:00, 34.57it/s]100%|##########| 26/26 [00:00<00:00, 30.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.42 (  0.44)	train_penalty   0.00 (  0.00)	weight_norm  24.77 ( 24.77)	train_acc   0.72 (  0.72)	train_minacc   0.97 (  0.87)	train_majacc   0.69 (  0.69)	train_corr   0.00 (  0.00)	l1 5.2393 (5.2783)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 23%|##3       | 6/26 [00:00<00:00, 26.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.77it/s] 42%|####2     | 11/26 [00:00<00:00, 34.45it/s] 62%|######1   | 16/26 [00:00<00:00, 38.61it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.61it/s] 81%|########  | 21/26 [00:00<00:00, 37.24it/s]100%|##########| 26/26 [00:00<00:00, 40.35it/s]100%|##########| 26/26 [00:00<00:00, 33.34it/s]
Test: [   0/  26]	Loss 0.436 (0.436)	test_acc   0.72 (  0.72)	test_minacc   0.89 (  0.89)	test_majacc   0.70 (  0.70)	Loss_d 0.436 (0.436)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.435 (0.431)	test_acc   0.71 (  0.73)	test_minacc   0.86 (  0.88)	test_majacc   0.68 (  0.70)	Loss_d 0.435 (0.431)	test_acc_d   0.71 (  0.73)	test_minacc_d   0.86 (  0.88)	test_majacc_d   0.68 (  0.70)	test_corr_d   0.53 (  0.54)
Test: [  20/  26]	Loss 0.436 (0.431)	test_acc   0.72 (  0.72)	test_minacc   0.88 (  0.87)	test_majacc   0.68 (  0.70)	Loss_d 0.436 (0.431)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.88 (  0.87)	test_majacc_d   0.68 (  0.70)	test_corr_d   0.53 (  0.53)
Test: [  26/  26]	Loss 0.425 (0.432)	test_acc   0.72 (  0.72)	test_minacc   0.97 (  0.87)	test_majacc   0.69 (  0.70)	Loss_d 0.425 (0.432)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.97 (  0.87)	test_majacc_d   0.69 (  0.70)	test_corr_d   0.55 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.30it/s]
Test: [  0/  1]	Loss 1.276 (1.276)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.74 (  0.74)	Loss_d 1.276 (1.276)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.276 (1.276)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.74 (  0.74)	Loss_d 1.276 (1.276)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.10 (  0.10)
Overall Timing[ 22/  1]	epoch_time 0.0442 (0.0448)	validation_time 0.0004 (0.0007)	train_time 0.0437 (0.0439)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.7231000332832337, 0.6580000519752502)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.01it/s] 19%|#9        | 5/26 [00:00<00:00, 21.11it/s] 31%|###       | 8/26 [00:00<00:00, 22.95it/s] 46%|####6     | 12/26 [00:00<00:00, 27.36it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.95it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.33it/s] 88%|########8 | 23/26 [00:00<00:00, 29.98it/s]100%|##########| 26/26 [00:00<00:00, 26.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 5.251925468444824
set z to 5.199406213760376
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 385 tensor(-0.0088, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 245 tensor(-0.0137, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 209 tensor(-0.0041, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 195 tensor(-0.0027, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 189 tensor(-0.0010, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.009 (0.017)	train_nll   0.35 (  0.43)	train_penalty   0.01 (  0.02)	weight_norm  25.29 ( 24.93)	train_acc   0.88 (  0.79)	train_minacc   0.60 (  0.62)	train_majacc   0.91 (  0.82)	train_corr   0.00 (  0.00)	l1 5.9501 (6.1448)	zero_count 0.0000 (39.3900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.09it/s] 23%|##3       | 6/26 [00:00<00:00, 28.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.77it/s] 42%|####2     | 11/26 [00:00<00:00, 32.46it/s] 62%|######1   | 16/26 [00:00<00:00, 37.94it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.94it/s] 81%|########  | 21/26 [00:00<00:00, 40.61it/s]100%|##########| 26/26 [00:00<00:00, 42.91it/s]100%|##########| 26/26 [00:00<00:00, 34.59it/s]
Test: [   0/  26]	Loss 0.485 (0.485)	test_acc   0.82 (  0.82)	test_minacc   0.32 (  0.32)	test_majacc   0.89 (  0.89)	Loss_d 0.485 (0.485)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.432 (0.459)	test_acc   0.85 (  0.84)	test_minacc   0.41 (  0.45)	test_majacc   0.92 (  0.90)	Loss_d 0.432 (0.459)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.41 (  0.45)	test_majacc_d   0.92 (  0.90)	test_corr_d   0.77 (  0.77)
Test: [  20/  26]	Loss 0.454 (0.461)	test_acc   0.83 (  0.84)	test_minacc   0.52 (  0.47)	test_majacc   0.90 (  0.90)	Loss_d 0.454 (0.461)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.52 (  0.47)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.75 (  0.77)
Test: [  26/  26]	Loss 0.445 (0.464)	test_acc   0.83 (  0.83)	test_minacc   0.30 (  0.46)	test_majacc   0.90 (  0.90)	Loss_d 0.445 (0.464)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.30 (  0.46)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.78 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.76it/s]
Test: [  0/  1]	Loss 1.916 (1.916)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.85 (  0.85)	Loss_d 1.916 (1.916)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 1.916 (1.916)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.85 (  0.85)	Loss_d 1.916 (1.916)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.45 (  0.45)
Overall Timing[ 23/  1]	epoch_time 0.0446 (0.0448)	validation_time 0.0003 (0.0007)	train_time 0.0443 (0.0439)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.834100025177002, 0.4130000174045563)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.80it/s]  8%|7         | 2/26 [00:00<00:03,  6.07it/s] 23%|##3       | 6/26 [00:00<00:01, 16.69it/s] 35%|###4      | 9/26 [00:00<00:00, 20.17it/s] 46%|####6     | 12/26 [00:00<00:00, 22.86it/s] 62%|######1   | 16/26 [00:00<00:00, 26.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.07it/s] 88%|########8 | 23/26 [00:01<00:00, 28.41it/s]100%|##########| 26/26 [00:01<00:00, 21.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 184 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 269 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 280 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 223 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 199 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 190 tensor(-0.0003, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.001)	train_nll   0.45 (  0.48)	train_penalty   0.00 (  0.00)	weight_norm  25.56 ( 25.47)	train_acc   0.76 (  0.67)	train_minacc   0.80 (  0.63)	train_majacc   0.76 (  0.67)	train_corr   0.00 (  0.00)	l1 5.3856 (5.3190)	zero_count 0.0000 (67.1190)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.51it/s] 27%|##6       | 7/26 [00:00<00:00, 27.69it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.69it/s] 50%|#####     | 13/26 [00:00<00:00, 36.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.33it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.33it/s] 96%|#########6| 25/26 [00:00<00:00, 44.51it/s]100%|##########| 26/26 [00:00<00:00, 35.18it/s]
Test: [   0/  26]	Loss 0.500 (0.500)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.500 (0.500)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.456 (0.476)	test_acc   0.55 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.456 (0.476)	test_acc_d   0.55 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.69 (  0.68)
Test: [  20/  26]	Loss 0.483 (0.479)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.483 (0.479)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.66 (  0.68)
Test: [  26/  26]	Loss 0.473 (0.481)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.473 (0.481)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.71 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.40it/s]
Test: [  0/  1]	Loss 1.716 (1.716)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.716 (1.716)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.716 (1.716)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.716 (1.716)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Overall Timing[ 24/  1]	epoch_time 0.0430 (0.0447)	validation_time 0.0003 (0.0007)	train_time 0.0426 (0.0439)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.499900011241436, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.22it/s] 19%|#9        | 5/26 [00:00<00:01, 13.61it/s] 31%|###       | 8/26 [00:00<00:00, 18.10it/s] 42%|####2     | 11/26 [00:00<00:00, 20.64it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.99it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.10it/s] 88%|########8 | 23/26 [00:01<00:00, 28.59it/s]100%|##########| 26/26 [00:01<00:00, 21.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 189 tensor(-5.5685e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 237 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 379 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 284 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 281 tensor(-5.5027e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.48 (  0.48)	train_penalty   0.00 (  0.00)	weight_norm  25.58 ( 25.57)	train_acc   0.48 (  0.57)	train_minacc   0.40 (  0.58)	train_majacc   0.50 (  0.57)	train_corr   0.00 (  0.00)	l1 5.2003 (5.2316)	zero_count 0.0000 (49.7640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.01it/s] 27%|##6       | 7/26 [00:00<00:00, 35.41it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.41it/s] 46%|####6     | 12/26 [00:00<00:00, 36.98it/s] 65%|######5   | 17/26 [00:00<00:00, 39.24it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.24it/s] 85%|########4 | 22/26 [00:00<00:00, 41.38it/s]100%|##########| 26/26 [00:00<00:00, 36.24it/s]
Test: [   0/  26]	Loss 0.496 (0.496)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.496 (0.496)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.464 (0.479)	test_acc   0.55 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.464 (0.479)	test_acc_d   0.55 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.66 (  0.65)
Test: [  20/  26]	Loss 0.493 (0.482)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.493 (0.482)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.64 (  0.66)
Test: [  26/  26]	Loss 0.481 (0.484)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.481 (0.484)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.70 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.83it/s]
Test: [  0/  1]	Loss 1.678 (1.678)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.678 (1.678)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.678 (1.678)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.678 (1.678)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 25/  1]	epoch_time 0.0435 (0.0447)	validation_time 0.0004 (0.0007)	train_time 0.0430 (0.0438)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.4997000124156475, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.18it/s] 15%|#5        | 4/26 [00:00<00:01, 15.02it/s] 27%|##6       | 7/26 [00:00<00:00, 19.09it/s] 38%|###8      | 10/26 [00:00<00:00, 21.52it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.91it/s] 65%|######5   | 17/26 [00:00<00:00, 25.65it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.30it/s] 92%|#########2| 24/26 [00:00<00:00, 29.04it/s]100%|##########| 26/26 [00:01<00:00, 23.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 461 tensor(-2.6618e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 446 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 399 tensor(9.4489e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 288 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 285 tensor(-2.2173e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 495 tensor(8.2850e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.48 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.58 ( 25.58)	train_acc   0.48 (  0.58)	train_minacc   0.43 (  0.61)	train_majacc   0.49 (  0.58)	train_corr   0.00 (  0.00)	l1 5.1994 (5.2242)	zero_count 226.0000 (32.1700)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.27it/s] 27%|##6       | 7/26 [00:00<00:00, 34.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.00it/s] 46%|####6     | 12/26 [00:00<00:00, 39.47it/s] 65%|######5   | 17/26 [00:00<00:00, 41.90it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.90it/s] 85%|########4 | 22/26 [00:00<00:00, 39.92it/s]100%|##########| 26/26 [00:00<00:00, 37.21it/s]
Test: [   0/  26]	Loss 0.495 (0.495)	test_acc   0.46 (  0.46)	test_minacc   0.45 (  0.45)	test_majacc   0.47 (  0.47)	Loss_d 0.495 (0.495)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.469 (0.481)	test_acc   0.56 (  0.51)	test_minacc   0.67 (  0.53)	test_majacc   0.54 (  0.51)	Loss_d 0.469 (0.481)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.67 (  0.53)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.66 (  0.65)
Test: [  20/  26]	Loss 0.480 (0.483)	test_acc   0.53 (  0.51)	test_minacc   0.53 (  0.54)	test_majacc   0.53 (  0.50)	Loss_d 0.480 (0.483)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.53 (  0.54)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.63 (  0.65)
Test: [  26/  26]	Loss 0.480 (0.484)	test_acc   0.48 (  0.51)	test_minacc   0.43 (  0.53)	test_majacc   0.49 (  0.50)	Loss_d 0.480 (0.484)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.43 (  0.53)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.69 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.24it/s]
Test: [  0/  1]	Loss 1.672 (1.672)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.672 (1.672)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.672 (1.672)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.672 (1.672)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 26/  1]	epoch_time 0.0433 (0.0446)	validation_time 0.0004 (0.0007)	train_time 0.0429 (0.0438)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.5050000154674054, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.51it/s] 15%|#5        | 4/26 [00:00<00:01, 15.75it/s] 31%|###       | 8/26 [00:00<00:00, 23.06it/s] 42%|####2     | 11/26 [00:00<00:00, 23.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.92it/s] 69%|######9   | 18/26 [00:00<00:00, 27.70it/s] 85%|########4 | 22/26 [00:00<00:00, 30.18it/s]100%|##########| 26/26 [00:00<00:00, 31.76it/s]100%|##########| 26/26 [00:01<00:00, 25.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 487 tensor(2.2350e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 483 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 387 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.48 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.58 ( 25.58)	train_acc   0.51 (  0.55)	train_minacc   0.63 (  0.58)	train_majacc   0.49 (  0.55)	train_corr   0.00 (  0.00)	l1 5.1164 (5.1969)	zero_count 0.0000 (7.4880)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.84it/s] 15%|#5        | 4/26 [00:00<00:01, 17.61it/s] 35%|###4      | 9/26 [00:00<00:00, 30.34it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.34it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.85it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.85it/s] 96%|#########6| 25/26 [00:00<00:00, 38.91it/s]100%|##########| 26/26 [00:00<00:00, 32.70it/s]
Test: [   0/  26]	Loss 0.499 (0.499)	test_acc   0.46 (  0.46)	test_minacc   0.45 (  0.45)	test_majacc   0.46 (  0.46)	Loss_d 0.499 (0.499)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.473 (0.483)	test_acc   0.55 (  0.51)	test_minacc   0.61 (  0.50)	test_majacc   0.55 (  0.51)	Loss_d 0.473 (0.483)	test_acc_d   0.55 (  0.51)	test_minacc_d   0.61 (  0.50)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.66 (  0.65)
Test: [  20/  26]	Loss 0.486 (0.486)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.486 (0.486)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.63 (  0.65)
Test: [  26/  26]	Loss 0.483 (0.488)	test_acc   0.48 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.483 (0.488)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.69 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.82it/s]
Test: [  0/  1]	Loss 1.663 (1.663)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.663 (1.663)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.663 (1.663)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.663 (1.663)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 27/  1]	epoch_time 0.0426 (0.0446)	validation_time 0.0004 (0.0007)	train_time 0.0421 (0.0437)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.5001000120639801, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.87it/s] 19%|#9        | 5/26 [00:00<00:00, 23.63it/s] 35%|###4      | 9/26 [00:00<00:00, 28.63it/s] 50%|#####     | 13/26 [00:00<00:00, 28.70it/s] 65%|######5   | 17/26 [00:00<00:00, 30.77it/s] 81%|########  | 21/26 [00:00<00:00, 32.27it/s] 96%|#########6| 25/26 [00:00<00:00, 31.03it/s]100%|##########| 26/26 [00:00<00:00, 27.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 391 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 301 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 301 tensor(6.1752e-06, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.48 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.58 ( 25.58)	train_acc   0.56 (  0.54)	train_minacc   0.73 (  0.56)	train_majacc   0.54 (  0.53)	train_corr   0.00 (  0.00)	l1 5.2072 (5.1671)	zero_count 0.0000 (12.8700)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.75it/s] 27%|##6       | 7/26 [00:00<00:00, 34.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.14it/s] 46%|####6     | 12/26 [00:00<00:00, 40.69it/s] 65%|######5   | 17/26 [00:00<00:00, 37.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.80it/s] 85%|########4 | 22/26 [00:00<00:00, 40.57it/s]100%|##########| 26/26 [00:00<00:00, 35.62it/s]
Test: [   0/  26]	Loss 0.497 (0.497)	test_acc   0.47 (  0.47)	test_minacc   0.51 (  0.51)	test_majacc   0.46 (  0.46)	Loss_d 0.497 (0.497)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.471 (0.481)	test_acc   0.55 (  0.52)	test_minacc   0.73 (  0.59)	test_majacc   0.53 (  0.50)	Loss_d 0.471 (0.481)	test_acc_d   0.55 (  0.52)	test_minacc_d   0.73 (  0.59)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.65 (  0.64)
Test: [  20/  26]	Loss 0.489 (0.483)	test_acc   0.53 (  0.51)	test_minacc   0.59 (  0.60)	test_majacc   0.51 (  0.50)	Loss_d 0.489 (0.483)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.59 (  0.60)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.65)
Test: [  26/  26]	Loss 0.479 (0.485)	test_acc   0.50 (  0.51)	test_minacc   0.60 (  0.60)	test_majacc   0.49 (  0.49)	Loss_d 0.479 (0.485)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.69 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.26it/s]
Test: [  0/  1]	Loss 1.688 (1.688)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.688 (1.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.688 (1.688)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.688 (1.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.16 (  0.16)
Overall Timing[ 28/  1]	epoch_time 0.0407 (0.0444)	validation_time 0.0004 (0.0007)	train_time 0.0403 (0.0436)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.5097000182271004, 0.5070000290870667)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.89it/s] 23%|##3       | 6/26 [00:00<00:00, 25.41it/s] 35%|###4      | 9/26 [00:00<00:00, 24.83it/s] 46%|####6     | 12/26 [00:00<00:00, 24.81it/s] 62%|######1   | 16/26 [00:00<00:00, 28.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.96it/s] 85%|########4 | 22/26 [00:00<00:00, 27.65it/s]100%|##########| 26/26 [00:00<00:00, 30.38it/s]100%|##########| 26/26 [00:01<00:00, 25.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 469 tensor(1.9865e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 503 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 494 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 492 tensor(1.4536e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 300 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 289 tensor(-2.9848e-05, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.47 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.58 ( 25.58)	train_acc   0.72 (  0.54)	train_minacc   0.83 (  0.58)	train_majacc   0.70 (  0.53)	train_corr   0.00 (  0.00)	l1 5.2605 (5.2223)	zero_count 0.0000 (19.7730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.31it/s] 35%|###4      | 9/26 [00:00<00:00, 40.44it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.44it/s] 54%|#####3    | 14/26 [00:00<00:00, 38.59it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.02it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.02it/s] 92%|#########2| 24/26 [00:00<00:00, 42.60it/s]100%|##########| 26/26 [00:00<00:00, 37.78it/s]
Test: [   0/  26]	Loss 0.495 (0.495)	test_acc   0.48 (  0.48)	test_minacc   0.55 (  0.55)	test_majacc   0.47 (  0.47)	Loss_d 0.495 (0.495)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.469 (0.480)	test_acc   0.57 (  0.54)	test_minacc   0.78 (  0.66)	test_majacc   0.54 (  0.52)	Loss_d 0.469 (0.480)	test_acc_d   0.57 (  0.54)	test_minacc_d   0.78 (  0.66)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.66 (  0.65)
Test: [  20/  26]	Loss 0.483 (0.481)	test_acc   0.54 (  0.54)	test_minacc   0.69 (  0.67)	test_majacc   0.51 (  0.52)	Loss_d 0.483 (0.481)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.69 (  0.67)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.63 (  0.65)
Test: [  26/  26]	Loss 0.476 (0.483)	test_acc   0.55 (  0.54)	test_minacc   0.73 (  0.67)	test_majacc   0.52 (  0.52)	Loss_d 0.476 (0.483)	test_acc_d   0.55 (  0.54)	test_minacc_d   0.73 (  0.67)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.69 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.90it/s]
Test: [  0/  1]	Loss 1.699 (1.699)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.699 (1.699)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.699 (1.699)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.699 (1.699)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 29/  1]	epoch_time 0.0428 (0.0444)	validation_time 0.0004 (0.0006)	train_time 0.0424 (0.0436)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.5380000103712081, 0.5220000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.17it/s] 19%|#9        | 5/26 [00:00<00:01, 16.44it/s] 31%|###       | 8/26 [00:00<00:00, 19.52it/s] 42%|####2     | 11/26 [00:00<00:00, 21.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.30it/s] 69%|######9   | 18/26 [00:00<00:00, 25.14it/s] 85%|########4 | 22/26 [00:00<00:00, 28.37it/s]100%|##########| 26/26 [00:01<00:00, 30.38it/s]100%|##########| 26/26 [00:01<00:00, 23.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 489 tensor(2.2456e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 486 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 477 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 465 tensor(8.4628e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.47 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.58 ( 25.58)	train_acc   0.71 (  0.54)	train_minacc   0.90 (  0.58)	train_majacc   0.69 (  0.53)	train_corr   0.00 (  0.00)	l1 5.1618 (5.2042)	zero_count 0.0000 (13.6110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.56it/s] 27%|##6       | 7/26 [00:00<00:00, 21.57it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.57it/s] 46%|####6     | 12/26 [00:00<00:00, 29.44it/s] 65%|######5   | 17/26 [00:00<00:00, 32.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 32.11it/s] 85%|########4 | 22/26 [00:00<00:00, 36.26it/s]100%|##########| 26/26 [00:00<00:00, 28.08it/s]
Test: [   0/  26]	Loss 0.489 (0.489)	test_acc   0.65 (  0.65)	test_minacc   0.74 (  0.74)	test_majacc   0.64 (  0.64)	Loss_d 0.489 (0.489)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.462 (0.474)	test_acc   0.72 (  0.71)	test_minacc   0.84 (  0.84)	test_majacc   0.71 (  0.69)	Loss_d 0.462 (0.474)	test_acc_d   0.72 (  0.71)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.71 (  0.69)	test_corr_d   0.65 (  0.64)
Test: [  20/  26]	Loss 0.475 (0.475)	test_acc   0.71 (  0.71)	test_minacc   0.84 (  0.84)	test_majacc   0.69 (  0.68)	Loss_d 0.475 (0.475)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.61 (  0.64)
Test: [  26/  26]	Loss 0.472 (0.477)	test_acc   0.70 (  0.70)	test_minacc   0.87 (  0.84)	test_majacc   0.67 (  0.68)	Loss_d 0.472 (0.477)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.87 (  0.84)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.68 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.85it/s]
Test: [  0/  1]	Loss 1.657 (1.657)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.63 (  0.63)	Loss_d 1.657 (1.657)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.657 (1.657)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.63 (  0.63)	Loss_d 1.657 (1.657)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.14 (  0.14)
Overall Timing[ 30/  1]	epoch_time 0.0453 (0.0444)	validation_time 0.0003 (0.0006)	train_time 0.0449 (0.0436)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.7030000321865082, 0.6240000128746033)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.63it/s] 19%|#9        | 5/26 [00:00<00:01, 15.28it/s] 35%|###4      | 9/26 [00:00<00:00, 22.25it/s] 50%|#####     | 13/26 [00:00<00:00, 26.75it/s] 65%|######5   | 17/26 [00:00<00:00, 27.03it/s] 81%|########  | 21/26 [00:00<00:00, 29.71it/s] 96%|#########6| 25/26 [00:00<00:00, 30.83it/s]100%|##########| 26/26 [00:01<00:00, 24.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 452 tensor(9.5332e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.47 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.58 ( 25.58)	train_acc   0.71 (  0.55)	train_minacc   0.90 (  0.60)	train_majacc   0.69 (  0.54)	train_corr   0.00 (  0.00)	l1 5.1963 (5.1724)	zero_count 0.0000 (2.3010)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.16it/s] 23%|##3       | 6/26 [00:00<00:01, 17.12it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.12it/s] 42%|####2     | 11/26 [00:00<00:00, 26.33it/s] 62%|######1   | 16/26 [00:00<00:00, 31.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 31.25it/s] 81%|########  | 21/26 [00:00<00:00, 33.44it/s]100%|##########| 26/26 [00:00<00:00, 37.75it/s]100%|##########| 26/26 [00:00<00:00, 27.23it/s]
Test: [   0/  26]	Loss 0.484 (0.484)	test_acc   0.66 (  0.66)	test_minacc   0.74 (  0.74)	test_majacc   0.65 (  0.65)	Loss_d 0.484 (0.484)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.457 (0.468)	test_acc   0.73 (  0.72)	test_minacc   0.86 (  0.86)	test_majacc   0.71 (  0.70)	Loss_d 0.457 (0.468)	test_acc_d   0.73 (  0.72)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.64 (  0.63)
Test: [  20/  26]	Loss 0.466 (0.468)	test_acc   0.72 (  0.72)	test_minacc   0.84 (  0.86)	test_majacc   0.69 (  0.69)	Loss_d 0.466 (0.468)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.84 (  0.86)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.61 (  0.63)
Test: [  26/  26]	Loss 0.468 (0.471)	test_acc   0.71 (  0.71)	test_minacc   0.90 (  0.86)	test_majacc   0.69 (  0.69)	Loss_d 0.468 (0.471)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.90 (  0.86)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.67 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.49it/s]
Test: [  0/  1]	Loss 1.651 (1.651)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.63 (  0.63)	Loss_d 1.651 (1.651)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.651 (1.651)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.63 (  0.63)	Loss_d 1.651 (1.651)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.13 (  0.13)
Overall Timing[ 31/  1]	epoch_time 0.0444 (0.0444)	validation_time 0.0004 (0.0006)	train_time 0.0440 (0.0436)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.7127000297904015, 0.6360000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.51it/s] 12%|#1        | 3/26 [00:00<00:01, 12.23it/s] 27%|##6       | 7/26 [00:00<00:00, 22.03it/s] 38%|###8      | 10/26 [00:00<00:00, 23.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.41it/s] 69%|######9   | 18/26 [00:00<00:00, 30.11it/s] 85%|########4 | 22/26 [00:00<00:00, 31.79it/s]100%|##########| 26/26 [00:00<00:00, 32.88it/s]100%|##########| 26/26 [00:01<00:00, 25.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 409 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 334 tensor(-0.0005, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.48 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.59 ( 25.59)	train_acc   0.69 (  0.56)	train_minacc   0.90 (  0.62)	train_majacc   0.66 (  0.55)	train_corr   0.00 (  0.00)	l1 5.1950 (5.1708)	zero_count 0.0000 (3.9780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.41it/s] 23%|##3       | 6/26 [00:00<00:00, 30.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.39it/s] 42%|####2     | 11/26 [00:00<00:00, 37.32it/s] 62%|######1   | 16/26 [00:00<00:00, 41.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.27it/s] 81%|########  | 21/26 [00:00<00:00, 39.37it/s]100%|##########| 26/26 [00:00<00:00, 42.29it/s]100%|##########| 26/26 [00:00<00:00, 35.18it/s]
Test: [   0/  26]	Loss 0.499 (0.499)	test_acc   0.46 (  0.46)	test_minacc   0.47 (  0.47)	test_majacc   0.46 (  0.46)	Loss_d 0.499 (0.499)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.469 (0.485)	test_acc   0.56 (  0.51)	test_minacc   0.67 (  0.55)	test_majacc   0.54 (  0.50)	Loss_d 0.469 (0.485)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.67 (  0.55)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.65 (  0.64)
Test: [  20/  26]	Loss 0.478 (0.485)	test_acc   0.53 (  0.51)	test_minacc   0.53 (  0.56)	test_majacc   0.53 (  0.50)	Loss_d 0.478 (0.485)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.53 (  0.56)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.62 (  0.64)
Test: [  26/  26]	Loss 0.489 (0.487)	test_acc   0.48 (  0.50)	test_minacc   0.50 (  0.55)	test_majacc   0.48 (  0.50)	Loss_d 0.489 (0.487)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.50 (  0.55)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.69 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.40it/s]
Test: [  0/  1]	Loss 1.696 (1.696)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.696 (1.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.696 (1.696)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.696 (1.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 32/  1]	epoch_time 0.0414 (0.0443)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0435)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.5045000178217888, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.89it/s] 15%|#5        | 4/26 [00:00<00:01, 14.39it/s] 31%|###       | 8/26 [00:00<00:00, 19.40it/s] 42%|####2     | 11/26 [00:00<00:00, 21.97it/s] 54%|#####3    | 14/26 [00:00<00:00, 22.61it/s] 69%|######9   | 18/26 [00:00<00:00, 26.10it/s] 85%|########4 | 22/26 [00:00<00:00, 28.73it/s]100%|##########| 26/26 [00:01<00:00, 30.78it/s]100%|##########| 26/26 [00:01<00:00, 23.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 296 tensor(-7.4388e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 497 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 410 tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.48 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.59 ( 25.59)	train_acc   0.63 (  0.54)	train_minacc   0.90 (  0.61)	train_majacc   0.60 (  0.53)	train_corr   0.00 (  0.00)	l1 5.1049 (5.1998)	zero_count 0.0000 (19.7730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.48it/s] 27%|##6       | 7/26 [00:00<00:00, 30.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.00it/s] 46%|####6     | 12/26 [00:00<00:00, 36.55it/s] 65%|######5   | 17/26 [00:00<00:00, 40.17it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.17it/s] 85%|########4 | 22/26 [00:00<00:00, 38.31it/s]100%|##########| 26/26 [00:00<00:00, 35.05it/s]
Test: [   0/  26]	Loss 0.491 (0.491)	test_acc   0.63 (  0.63)	test_minacc   0.81 (  0.81)	test_majacc   0.60 (  0.60)	Loss_d 0.491 (0.491)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.462 (0.476)	test_acc   0.71 (  0.69)	test_minacc   0.86 (  0.87)	test_majacc   0.68 (  0.66)	Loss_d 0.462 (0.476)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.86 (  0.87)	test_majacc_d   0.68 (  0.66)	test_corr_d   0.63 (  0.62)
Test: [  20/  26]	Loss 0.470 (0.475)	test_acc   0.69 (  0.68)	test_minacc   0.86 (  0.87)	test_majacc   0.66 (  0.65)	Loss_d 0.470 (0.475)	test_acc_d   0.69 (  0.68)	test_minacc_d   0.86 (  0.87)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.60 (  0.62)
Test: [  26/  26]	Loss 0.478 (0.477)	test_acc   0.68 (  0.68)	test_minacc   0.90 (  0.87)	test_majacc   0.65 (  0.65)	Loss_d 0.478 (0.477)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.90 (  0.87)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.66 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.06it/s]
Test: [  0/  1]	Loss 1.639 (1.639)	test_acc   0.65 (  0.65)	test_minacc   0.66 (  0.66)	test_majacc   0.60 (  0.60)	Loss_d 1.639 (1.639)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.639 (1.639)	test_acc   0.65 (  0.65)	test_minacc   0.66 (  0.66)	test_majacc   0.60 (  0.60)	Loss_d 1.639 (1.639)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.11 (  0.11)
Overall Timing[ 33/  1]	epoch_time 0.0409 (0.0442)	validation_time 0.0004 (0.0006)	train_time 0.0405 (0.0435)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.6807000293135643, 0.6540000438690186)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 15%|#5        | 4/26 [00:00<00:01, 15.57it/s] 27%|##6       | 7/26 [00:00<00:00, 19.70it/s] 42%|####2     | 11/26 [00:00<00:00, 24.86it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.82it/s] 65%|######5   | 17/26 [00:00<00:00, 24.43it/s] 81%|########  | 21/26 [00:00<00:00, 27.93it/s] 96%|#########6| 25/26 [00:00<00:00, 30.42it/s]100%|##########| 26/26 [00:01<00:00, 23.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 313 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 299 tensor(-8.4861e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 478 tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 473 tensor(5.9935e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.48 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.59 ( 25.59)	train_acc   0.62 (  0.57)	train_minacc   0.90 (  0.69)	train_majacc   0.58 (  0.55)	train_corr   0.00 (  0.00)	l1 5.1398 (5.2116)	zero_count 0.0000 (18.7590)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.42it/s] 23%|##3       | 6/26 [00:00<00:00, 24.48it/s] 38%|###8      | 10/26 [00:00<00:00, 30.28it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.28it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.68it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.14it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.14it/s] 96%|#########6| 25/26 [00:00<00:00, 38.88it/s]100%|##########| 26/26 [00:00<00:00, 31.95it/s]
Test: [   0/  26]	Loss 0.501 (0.501)	test_acc   0.59 (  0.59)	test_minacc   0.81 (  0.81)	test_majacc   0.57 (  0.57)	Loss_d 0.501 (0.501)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.470 (0.486)	test_acc   0.68 (  0.66)	test_minacc   0.90 (  0.88)	test_majacc   0.64 (  0.62)	Loss_d 0.470 (0.486)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.90 (  0.88)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.62 (  0.61)
Test: [  20/  26]	Loss 0.480 (0.484)	test_acc   0.67 (  0.66)	test_minacc   0.86 (  0.87)	test_majacc   0.63 (  0.62)	Loss_d 0.480 (0.484)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.86 (  0.87)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.59 (  0.61)
Test: [  26/  26]	Loss 0.480 (0.485)	test_acc   0.62 (  0.65)	test_minacc   0.90 (  0.87)	test_majacc   0.59 (  0.61)	Loss_d 0.480 (0.485)	test_acc_d   0.62 (  0.65)	test_minacc_d   0.90 (  0.87)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.65 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.74it/s]
Test: [  0/  1]	Loss 1.632 (1.632)	test_acc   0.66 (  0.66)	test_minacc   0.66 (  0.66)	test_majacc   0.58 (  0.58)	Loss_d 1.632 (1.632)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.632 (1.632)	test_acc   0.66 (  0.66)	test_minacc   0.66 (  0.66)	test_majacc   0.58 (  0.58)	Loss_d 1.632 (1.632)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.10 (  0.10)
Overall Timing[ 34/  1]	epoch_time 0.0442 (0.0442)	validation_time 0.0005 (0.0006)	train_time 0.0438 (0.0435)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.6511000193953514, 0.656000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.90it/s] 19%|#9        | 5/26 [00:00<00:00, 24.52it/s] 35%|###4      | 9/26 [00:00<00:00, 29.14it/s] 46%|####6     | 12/26 [00:00<00:00, 27.45it/s] 62%|######1   | 16/26 [00:00<00:00, 26.59it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.82it/s] 92%|#########2| 24/26 [00:00<00:00, 30.31it/s]100%|##########| 26/26 [00:00<00:00, 26.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 479 tensor(2.9065e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 463 tensor(3.0922e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 308 tensor(-0.0005, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.48 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.59 ( 25.59)	train_acc   0.64 (  0.59)	train_minacc   0.90 (  0.74)	train_majacc   0.61 (  0.56)	train_corr   0.00 (  0.00)	l1 5.2444 (5.1795)	zero_count 0.0000 (3.1200)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.52it/s] 27%|##6       | 7/26 [00:00<00:00, 25.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.93it/s] 46%|####6     | 12/26 [00:00<00:00, 33.88it/s] 65%|######5   | 17/26 [00:00<00:00, 35.40it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.40it/s] 85%|########4 | 22/26 [00:00<00:00, 38.45it/s]100%|##########| 26/26 [00:00<00:00, 31.80it/s]
Test: [   0/  26]	Loss 0.509 (0.509)	test_acc   0.46 (  0.46)	test_minacc   0.62 (  0.62)	test_majacc   0.44 (  0.44)	Loss_d 0.509 (0.509)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.479 (0.495)	test_acc   0.55 (  0.52)	test_minacc   0.75 (  0.71)	test_majacc   0.52 (  0.49)	Loss_d 0.479 (0.495)	test_acc_d   0.55 (  0.52)	test_minacc_d   0.75 (  0.71)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.63 (  0.62)
Test: [  20/  26]	Loss 0.490 (0.492)	test_acc   0.53 (  0.51)	test_minacc   0.75 (  0.71)	test_majacc   0.49 (  0.48)	Loss_d 0.490 (0.492)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.75 (  0.71)	test_majacc_d   0.49 (  0.48)	test_corr_d   0.59 (  0.62)
Test: [  26/  26]	Loss 0.491 (0.494)	test_acc   0.50 (  0.51)	test_minacc   0.70 (  0.71)	test_majacc   0.47 (  0.48)	Loss_d 0.491 (0.494)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.70 (  0.71)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.67 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.31it/s]
Test: [  0/  1]	Loss 1.679 (1.679)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.679 (1.679)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.679 (1.679)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.679 (1.679)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Overall Timing[ 35/  1]	epoch_time 0.0412 (0.0441)	validation_time 0.0005 (0.0006)	train_time 0.0407 (0.0434)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.5113000132739544, 0.5090000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.15it/s] 12%|#1        | 3/26 [00:00<00:01, 13.39it/s] 19%|#9        | 5/26 [00:00<00:01, 15.94it/s] 35%|###4      | 9/26 [00:00<00:00, 23.54it/s] 46%|####6     | 12/26 [00:00<00:00, 25.33it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.36it/s] 85%|########4 | 22/26 [00:00<00:00, 27.36it/s] 96%|#########6| 25/26 [00:01<00:00, 27.24it/s]100%|##########| 26/26 [00:01<00:00, 23.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 288 tensor(-6.7878e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 282 tensor(-3.1645e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 463 tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 452 tensor(6.9103e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 301 tensor(-0.0006, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 294 tensor(-3.6998e-05, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.49 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  25.59 ( 25.59)	train_acc   0.53 (  0.56)	train_minacc   0.87 (  0.71)	train_majacc   0.49 (  0.54)	train_corr   0.00 (  0.00)	l1 5.1988 (5.2326)	zero_count 210.0000 (34.9680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 23%|##3       | 6/26 [00:00<00:00, 24.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.90it/s] 42%|####2     | 11/26 [00:00<00:00, 32.50it/s] 62%|######1   | 16/26 [00:00<00:00, 37.73it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.73it/s] 81%|########  | 21/26 [00:00<00:00, 36.45it/s]100%|##########| 26/26 [00:00<00:00, 40.22it/s]100%|##########| 26/26 [00:00<00:00, 31.95it/s]
Test: [   0/  26]	Loss 0.510 (0.510)	test_acc   0.51 (  0.51)	test_minacc   0.79 (  0.79)	test_majacc   0.47 (  0.47)	Loss_d 0.510 (0.510)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.487 (0.498)	test_acc   0.58 (  0.56)	test_minacc   0.90 (  0.86)	test_majacc   0.53 (  0.51)	Loss_d 0.487 (0.498)	test_acc_d   0.58 (  0.56)	test_minacc_d   0.90 (  0.86)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.61 (  0.60)
Test: [  20/  26]	Loss 0.483 (0.494)	test_acc   0.58 (  0.56)	test_minacc   0.83 (  0.85)	test_majacc   0.53 (  0.51)	Loss_d 0.483 (0.494)	test_acc_d   0.58 (  0.56)	test_minacc_d   0.83 (  0.85)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.57 (  0.61)
Test: [  26/  26]	Loss 0.492 (0.496)	test_acc   0.55 (  0.56)	test_minacc   0.90 (  0.85)	test_majacc   0.50 (  0.50)	Loss_d 0.492 (0.496)	test_acc_d   0.55 (  0.56)	test_minacc_d   0.90 (  0.85)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.60it/s]
Test: [  0/  1]	Loss 1.676 (1.676)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.49 (  0.49)	Loss_d 1.676 (1.676)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.676 (1.676)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.49 (  0.49)	Loss_d 1.676 (1.676)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.12 (  0.12)
Overall Timing[ 36/  1]	epoch_time 0.0474 (0.0442)	validation_time 0.0006 (0.0006)	train_time 0.0467 (0.0435)
record: (train_acc, test_acc) (0.6989000322222709, 0.6660000085830688)
last accs (train_acc, test_acc) (0.5551000142097473, 0.5640000104904175)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.05it/s] 15%|#5        | 4/26 [00:00<00:01, 17.75it/s] 31%|###       | 8/26 [00:00<00:00, 25.18it/s] 42%|####2     | 11/26 [00:00<00:00, 24.97it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.88it/s] 69%|######9   | 18/26 [00:00<00:00, 28.06it/s] 81%|########  | 21/26 [00:00<00:00, 27.45it/s] 96%|#########6| 25/26 [00:00<00:00, 29.73it/s]100%|##########| 26/26 [00:01<00:00, 25.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 289 tensor(-6.3393e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 432 tensor(1.6454e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 471 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 405 tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.50 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  25.60 ( 25.59)	train_acc   0.53 (  0.54)	train_minacc   0.90 (  0.68)	train_majacc   0.48 (  0.52)	train_corr   0.00 (  0.00)	l1 5.0844 (5.2325)	zero_count 0.0000 (25.8960)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.74it/s] 23%|##3       | 6/26 [00:00<00:00, 27.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.27it/s] 42%|####2     | 11/26 [00:00<00:00, 35.08it/s] 62%|######1   | 16/26 [00:00<00:00, 39.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.08it/s] 81%|########  | 21/26 [00:00<00:00, 37.96it/s]100%|##########| 26/26 [00:00<00:00, 40.66it/s]100%|##########| 26/26 [00:00<00:00, 33.42it/s]
Test: [   0/  26]	Loss 0.513 (0.513)	test_acc   0.57 (  0.57)	test_minacc   0.91 (  0.91)	test_majacc   0.52 (  0.52)	Loss_d 0.513 (0.513)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.488 (0.502)	test_acc   0.63 (  0.61)	test_minacc   0.94 (  0.91)	test_majacc   0.58 (  0.56)	Loss_d 0.488 (0.502)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.94 (  0.91)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.56 (  0.54)
Test: [  20/  26]	Loss 0.483 (0.498)	test_acc   0.63 (  0.61)	test_minacc   0.91 (  0.92)	test_majacc   0.58 (  0.56)	Loss_d 0.483 (0.498)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.91 (  0.92)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.50 (  0.54)
Test: [  26/  26]	Loss 0.493 (0.498)	test_acc   0.59 (  0.61)	test_minacc   0.90 (  0.92)	test_majacc   0.55 (  0.56)	Loss_d 0.493 (0.498)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.90 (  0.92)	test_majacc_d   0.55 (  0.56)	test_corr_d   0.60 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.05it/s]
Test: [  0/  1]	Loss 1.571 (1.571)	test_acc   0.72 (  0.72)	test_minacc   0.73 (  0.73)	test_majacc   0.56 (  0.56)	Loss_d 1.571 (1.571)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.571 (1.571)	test_acc   0.72 (  0.72)	test_minacc   0.73 (  0.73)	test_majacc   0.56 (  0.56)	Loss_d 1.571 (1.571)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.04 (  0.04)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/150/checkpoints/model_best.pth
Overall Timing[ 37/  1]	epoch_time 0.0453 (0.0443)	validation_time 0.0004 (0.0006)	train_time 0.0449 (0.0435)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.66it/s] 15%|#5        | 4/26 [00:00<00:01, 19.83it/s] 31%|###       | 8/26 [00:00<00:00, 24.39it/s] 46%|####6     | 12/26 [00:00<00:00, 27.77it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.57it/s] 69%|######9   | 18/26 [00:00<00:00, 26.94it/s] 85%|########4 | 22/26 [00:00<00:00, 29.49it/s] 96%|#########6| 25/26 [00:00<00:00, 28.37it/s]100%|##########| 26/26 [00:01<00:00, 25.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 294 tensor(-0.0008, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 285 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 341 tensor(7.2177e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 468 tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 415 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.52 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  25.60 ( 25.60)	train_acc   0.47 (  0.55)	train_minacc   0.33 (  0.72)	train_majacc   0.49 (  0.52)	train_corr   0.00 (  0.00)	l1 5.1359 (5.2555)	zero_count 0.0000 (29.3280)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.24it/s] 23%|##3       | 6/26 [00:00<00:00, 26.35it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.35it/s] 42%|####2     | 11/26 [00:00<00:00, 34.02it/s] 62%|######1   | 16/26 [00:00<00:00, 38.44it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.44it/s] 81%|########  | 21/26 [00:00<00:00, 37.88it/s]100%|##########| 26/26 [00:00<00:00, 41.45it/s]100%|##########| 26/26 [00:00<00:00, 33.12it/s]
Test: [   0/  26]	Loss 0.526 (0.526)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.526 (0.526)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.504 (0.520)	test_acc   0.56 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.504 (0.520)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.58 (  0.57)
Test: [  20/  26]	Loss 0.496 (0.514)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.496 (0.514)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.52 (  0.58)
Test: [  26/  26]	Loss 0.509 (0.513)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.509 (0.513)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.62 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.69it/s]
Test: [  0/  1]	Loss 1.610 (1.610)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.610 (1.610)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.610 (1.610)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.610 (1.610)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Overall Timing[ 38/  1]	epoch_time 0.0435 (0.0442)	validation_time 0.0003 (0.0006)	train_time 0.0432 (0.0435)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.49940000545978547, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.65it/s] 15%|#5        | 4/26 [00:00<00:01, 17.65it/s] 27%|##6       | 7/26 [00:00<00:00, 21.43it/s] 42%|####2     | 11/26 [00:00<00:00, 26.19it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.40it/s] 65%|######5   | 17/26 [00:00<00:00, 24.53it/s] 81%|########  | 21/26 [00:00<00:00, 27.73it/s] 92%|#########2| 24/26 [00:00<00:00, 26.67it/s]100%|##########| 26/26 [00:01<00:00, 23.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 295 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 289 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 457 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 454 tensor(0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 445 tensor(4.8911e-05, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.001 (0.000)	train_nll   0.51 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  25.60 ( 25.60)	train_acc   0.47 (  0.56)	train_minacc   0.33 (  0.74)	train_majacc   0.49 (  0.52)	train_corr   0.00 (  0.00)	l1 5.2643 (5.2366)	zero_count 0.0000 (21.4110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.25it/s] 19%|#9        | 5/26 [00:00<00:00, 25.91it/s] 38%|###8      | 10/26 [00:00<00:00, 33.20it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.20it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.95it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.54it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.54it/s] 96%|#########6| 25/26 [00:00<00:00, 42.90it/s]100%|##########| 26/26 [00:00<00:00, 35.45it/s]
Test: [   0/  26]	Loss 0.525 (0.525)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.525 (0.525)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.505 (0.521)	test_acc   0.56 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.505 (0.521)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.65 (  0.64)
Test: [  20/  26]	Loss 0.501 (0.517)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.501 (0.517)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.59 (  0.65)
Test: [  26/  26]	Loss 0.506 (0.516)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.506 (0.516)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.69 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.11it/s]
Test: [  0/  1]	Loss 1.726 (1.726)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.726 (1.726)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.726 (1.726)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.726 (1.726)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 39/  1]	epoch_time 0.0503 (0.0444)	validation_time 0.0004 (0.0006)	train_time 0.0499 (0.0437)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.500000010073185, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.95it/s] 19%|#9        | 5/26 [00:00<00:01, 20.93it/s] 31%|###       | 8/26 [00:00<00:00, 23.06it/s] 42%|####2     | 11/26 [00:00<00:00, 24.51it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.07it/s] 69%|######9   | 18/26 [00:00<00:00, 28.31it/s] 81%|########  | 21/26 [00:00<00:00, 27.30it/s] 96%|#########6| 25/26 [00:00<00:00, 29.74it/s]100%|##########| 26/26 [00:01<00:00, 24.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 331 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 287 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 279 tensor(-5.5426e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 464 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 454 tensor(0.0004, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 454 tensor(9.0861e-07, device='cuda:0')
Epoch: [40][  26/  26]	Loss 0.001 (0.000)	train_nll   0.52 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  25.61 ( 25.60)	train_acc   0.47 (  0.53)	train_minacc   0.33 (  0.72)	train_majacc   0.49 (  0.49)	train_corr   0.00 (  0.00)	l1 5.4348 (5.2489)	zero_count 0.0000 (29.2110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.09it/s] 12%|#1        | 3/26 [00:00<00:02, 10.89it/s] 31%|###       | 8/26 [00:00<00:00, 24.82it/s]                                               31%|###       | 8/26 [00:00<00:00, 24.82it/s] 50%|#####     | 13/26 [00:00<00:00, 32.53it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.14it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.14it/s] 96%|#########6| 25/26 [00:00<00:00, 42.62it/s]100%|##########| 26/26 [00:00<00:00, 32.07it/s]
Test: [   0/  26]	Loss 0.527 (0.527)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.527 (0.527)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.511 (0.520)	test_acc   0.56 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.511 (0.520)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.63 (  0.63)
Test: [  20/  26]	Loss 0.507 (0.519)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.507 (0.519)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.58 (  0.63)
Test: [  26/  26]	Loss 0.509 (0.518)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.509 (0.518)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.68 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.23it/s]
Test: [  0/  1]	Loss 1.721 (1.721)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.721 (1.721)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.721 (1.721)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.721 (1.721)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 40/  1]	epoch_time 0.0441 (0.0444)	validation_time 0.0004 (0.0006)	train_time 0.0436 (0.0437)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.500000010073185, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.66it/s] 15%|#5        | 4/26 [00:00<00:01, 17.38it/s] 31%|###       | 8/26 [00:00<00:00, 24.47it/s] 46%|####6     | 12/26 [00:00<00:00, 27.98it/s] 62%|######1   | 16/26 [00:00<00:00, 29.90it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.98it/s] 92%|#########2| 24/26 [00:00<00:00, 32.28it/s]100%|##########| 26/26 [00:00<00:00, 27.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  25.61 ( 25.61)	train_acc   0.47 (  0.52)	train_minacc   0.33 (  0.80)	train_majacc   0.49 (  0.47)	train_corr   0.00 (  0.00)	l1 5.1177 (5.1495)	zero_count 0.0000 (2.2230)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.06it/s] 31%|###       | 8/26 [00:00<00:00, 38.07it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.07it/s] 50%|#####     | 13/26 [00:00<00:00, 43.02it/s] 69%|######9   | 18/26 [00:00<00:00, 40.95it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.95it/s] 88%|########8 | 23/26 [00:00<00:00, 42.27it/s]100%|##########| 26/26 [00:00<00:00, 38.39it/s]
Test: [   0/  26]	Loss 0.528 (0.528)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.528 (0.528)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.509 (0.520)	test_acc   0.56 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.509 (0.520)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.62 (  0.61)
Test: [  20/  26]	Loss 0.513 (0.520)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.513 (0.520)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.56 (  0.62)
Test: [  26/  26]	Loss 0.511 (0.520)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.511 (0.520)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.66 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.59it/s]
Test: [  0/  1]	Loss 1.707 (1.707)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.707 (1.707)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.707 (1.707)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.707 (1.707)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 41/  1]	epoch_time 0.0398 (0.0443)	validation_time 0.0004 (0.0006)	train_time 0.0394 (0.0436)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.500000010073185, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 15%|#5        | 4/26 [00:00<00:01, 15.65it/s] 31%|###       | 8/26 [00:00<00:00, 23.51it/s] 46%|####6     | 12/26 [00:00<00:00, 28.04it/s] 62%|######1   | 16/26 [00:00<00:00, 30.81it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.30it/s] 92%|#########2| 24/26 [00:00<00:00, 33.21it/s]100%|##########| 26/26 [00:00<00:00, 26.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 423 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.50 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  25.61 ( 25.61)	train_acc   0.50 (  0.50)	train_minacc   0.93 (  0.77)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 5.0893 (5.1685)	zero_count 0.0000 (3.4320)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.98it/s] 19%|#9        | 5/26 [00:00<00:00, 24.81it/s] 38%|###8      | 10/26 [00:00<00:00, 34.71it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.71it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.02it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.02it/s] 96%|#########6| 25/26 [00:00<00:00, 40.50it/s]100%|##########| 26/26 [00:00<00:00, 34.08it/s]
Test: [   0/  26]	Loss 0.523 (0.523)	test_acc   0.44 (  0.44)	test_minacc   0.91 (  0.91)	test_majacc   0.38 (  0.38)	Loss_d 0.523 (0.523)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.512 (0.512)	test_acc   0.51 (  0.49)	test_minacc   0.94 (  0.88)	test_majacc   0.44 (  0.43)	Loss_d 0.512 (0.512)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.94 (  0.88)	test_majacc_d   0.44 (  0.43)	test_corr_d   0.56 (  0.55)
Test: [  20/  26]	Loss 0.522 (0.514)	test_acc   0.52 (  0.49)	test_minacc   0.89 (  0.89)	test_majacc   0.44 (  0.42)	Loss_d 0.522 (0.514)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.44 (  0.42)	test_corr_d   0.50 (  0.56)
Test: [  26/  26]	Loss 0.502 (0.514)	test_acc   0.49 (  0.49)	test_minacc   0.90 (  0.90)	test_majacc   0.43 (  0.42)	Loss_d 0.502 (0.514)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.43 (  0.42)	test_corr_d   0.60 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.00it/s]
Test: [  0/  1]	Loss 1.671 (1.671)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.49 (  0.49)	Loss_d 1.671 (1.671)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.671 (1.671)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.49 (  0.49)	Loss_d 1.671 (1.671)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.21 (  0.21)
Overall Timing[ 42/  1]	epoch_time 0.0412 (0.0442)	validation_time 0.0003 (0.0006)	train_time 0.0408 (0.0435)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.49160000833868983, 0.690000057220459)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.25it/s] 19%|#9        | 5/26 [00:00<00:01, 16.49it/s] 31%|###       | 8/26 [00:00<00:00, 19.90it/s] 46%|####6     | 12/26 [00:00<00:00, 24.98it/s] 62%|######1   | 16/26 [00:00<00:00, 28.25it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.61it/s] 92%|#########2| 24/26 [00:00<00:00, 30.06it/s]100%|##########| 26/26 [00:01<00:00, 24.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 430 tensor(-8.8508e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 338 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  25.62 ( 25.61)	train_acc   0.46 (  0.50)	train_minacc   0.40 (  0.68)	train_majacc   0.47 (  0.47)	train_corr   0.00 (  0.00)	l1 5.1439 (5.1514)	zero_count 0.0000 (9.9060)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.63it/s] 23%|##3       | 6/26 [00:00<00:00, 30.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.72it/s] 42%|####2     | 11/26 [00:00<00:00, 38.11it/s] 62%|######1   | 16/26 [00:00<00:00, 41.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.63it/s] 81%|########  | 21/26 [00:00<00:00, 38.44it/s]100%|##########| 26/26 [00:00<00:00, 41.31it/s]100%|##########| 26/26 [00:00<00:00, 34.73it/s]
Test: [   0/  26]	Loss 0.524 (0.524)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.524 (0.524)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.500 (0.512)	test_acc   0.56 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.500 (0.512)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.60 (  0.58)
Test: [  20/  26]	Loss 0.524 (0.514)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.524 (0.514)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.52 (  0.59)
Test: [  26/  26]	Loss 0.512 (0.515)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.512 (0.515)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.62 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.84it/s]
Test: [  0/  1]	Loss 1.663 (1.663)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.663 (1.663)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.663 (1.663)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.663 (1.663)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 43/  1]	epoch_time 0.0438 (0.0442)	validation_time 0.0007 (0.0006)	train_time 0.0431 (0.0435)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.500000010073185, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.62it/s] 19%|#9        | 5/26 [00:00<00:00, 22.29it/s] 31%|###       | 8/26 [00:00<00:00, 22.88it/s] 46%|####6     | 12/26 [00:00<00:00, 25.32it/s] 62%|######1   | 16/26 [00:00<00:00, 29.54it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.08it/s] 92%|#########2| 24/26 [00:00<00:00, 32.39it/s]100%|##########| 26/26 [00:00<00:00, 26.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 506 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 500 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.52 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  25.62 ( 25.62)	train_acc   0.47 (  0.50)	train_minacc   0.33 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 5.1223 (5.1891)	zero_count 0.0000 (0.6240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.34it/s] 27%|##6       | 7/26 [00:00<00:00, 24.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.68it/s] 50%|#####     | 13/26 [00:00<00:00, 33.97it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.96it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.96it/s] 92%|#########2| 24/26 [00:00<00:00, 43.27it/s]100%|##########| 26/26 [00:00<00:00, 33.87it/s]
Test: [   0/  26]	Loss 0.534 (0.534)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.534 (0.534)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.506 (0.521)	test_acc   0.56 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.506 (0.521)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.59 (  0.57)
Test: [  20/  26]	Loss 0.524 (0.521)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.524 (0.521)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.51 (  0.58)
Test: [  26/  26]	Loss 0.521 (0.522)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.521 (0.522)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.60 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.06it/s]
Test: [  0/  1]	Loss 1.638 (1.638)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.638 (1.638)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 1.638 (1.638)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.638 (1.638)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 44/  1]	epoch_time 0.0444 (0.0442)	validation_time 0.0004 (0.0006)	train_time 0.0440 (0.0435)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.500000010073185, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.34it/s] 23%|##3       | 6/26 [00:00<00:00, 24.68it/s] 38%|###8      | 10/26 [00:00<00:00, 28.08it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.35it/s] 69%|######9   | 18/26 [00:00<00:00, 31.21it/s] 85%|########4 | 22/26 [00:00<00:00, 31.47it/s]100%|##########| 26/26 [00:00<00:00, 32.59it/s]100%|##########| 26/26 [00:00<00:00, 28.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.52 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  25.62 ( 25.62)	train_acc   0.46 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 5.1342 (5.1411)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.05it/s] 15%|#5        | 4/26 [00:00<00:01, 17.99it/s] 35%|###4      | 9/26 [00:00<00:00, 29.76it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.76it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.57it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.57it/s] 92%|#########2| 24/26 [00:00<00:00, 38.41it/s]100%|##########| 26/26 [00:00<00:00, 32.21it/s]
Test: [   0/  26]	Loss 0.532 (0.532)	test_acc   0.45 (  0.45)	test_minacc   0.53 (  0.53)	test_majacc   0.44 (  0.44)	Loss_d 0.532 (0.532)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.507 (0.519)	test_acc   0.53 (  0.49)	test_minacc   0.61 (  0.55)	test_majacc   0.51 (  0.48)	Loss_d 0.507 (0.519)	test_acc_d   0.53 (  0.49)	test_minacc_d   0.61 (  0.55)	test_majacc_d   0.51 (  0.48)	test_corr_d   0.59 (  0.57)
Test: [  20/  26]	Loss 0.523 (0.520)	test_acc   0.52 (  0.49)	test_minacc   0.58 (  0.57)	test_majacc   0.50 (  0.48)	Loss_d 0.523 (0.520)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.50 (  0.48)	test_corr_d   0.52 (  0.58)
Test: [  26/  26]	Loss 0.517 (0.521)	test_acc   0.46 (  0.49)	test_minacc   0.43 (  0.56)	test_majacc   0.47 (  0.48)	Loss_d 0.517 (0.521)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.43 (  0.56)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.61 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 1.658 (1.658)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.658 (1.658)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.658 (1.658)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.658 (1.658)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Overall Timing[ 45/  1]	epoch_time 0.0384 (0.0441)	validation_time 0.0003 (0.0006)	train_time 0.0381 (0.0434)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.48920000913739203, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.02it/s] 19%|#9        | 5/26 [00:00<00:00, 21.45it/s] 35%|###4      | 9/26 [00:00<00:00, 27.75it/s] 50%|#####     | 13/26 [00:00<00:00, 30.68it/s] 65%|######5   | 17/26 [00:00<00:00, 32.32it/s] 81%|########  | 21/26 [00:00<00:00, 33.65it/s] 96%|#########6| 25/26 [00:00<00:00, 34.04it/s]100%|##########| 26/26 [00:00<00:00, 29.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.52 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  25.62 ( 25.62)	train_acc   0.47 (  0.50)	train_minacc   0.33 (  0.51)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 5.1201 (5.1483)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.85it/s] 19%|#9        | 5/26 [00:00<00:00, 23.29it/s] 38%|###8      | 10/26 [00:00<00:00, 33.47it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.47it/s] 62%|######1   | 16/26 [00:00<00:00, 40.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.16it/s] 81%|########  | 21/26 [00:00<00:00, 41.78it/s]100%|##########| 26/26 [00:00<00:00, 43.93it/s]100%|##########| 26/26 [00:00<00:00, 34.92it/s]
Test: [   0/  26]	Loss 0.530 (0.530)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.530 (0.530)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.506 (0.517)	test_acc   0.56 (  0.51)	test_minacc   0.61 (  0.50)	test_majacc   0.55 (  0.51)	Loss_d 0.506 (0.517)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.61 (  0.50)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.60 (  0.58)
Test: [  20/  26]	Loss 0.520 (0.518)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.520 (0.518)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.53 (  0.59)
Test: [  26/  26]	Loss 0.515 (0.519)	test_acc   0.47 (  0.50)	test_minacc   0.37 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.515 (0.519)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.37 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.62 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.38it/s]
Test: [  0/  1]	Loss 1.666 (1.666)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.666 (1.666)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.666 (1.666)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.666 (1.666)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 46/  1]	epoch_time 0.0417 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0412 (0.0433)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.49710000908374785, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 10.52it/s] 19%|#9        | 5/26 [00:00<00:01, 18.55it/s] 35%|###4      | 9/26 [00:00<00:00, 24.59it/s] 50%|#####     | 13/26 [00:00<00:00, 27.39it/s] 62%|######1   | 16/26 [00:00<00:00, 26.46it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.56it/s] 92%|#########2| 24/26 [00:00<00:00, 30.40it/s]100%|##########| 26/26 [00:01<00:00, 25.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 487 tensor(-3.4932e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.52 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  25.62 ( 25.62)	train_acc   0.47 (  0.50)	train_minacc   0.33 (  0.51)	train_majacc   0.49 (  0.49)	train_corr   0.00 (  0.00)	l1 5.1284 (5.1494)	zero_count 0.0000 (0.9360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 23%|##3       | 6/26 [00:00<00:00, 24.88it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.88it/s] 42%|####2     | 11/26 [00:00<00:00, 33.30it/s] 62%|######1   | 16/26 [00:00<00:00, 37.87it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.87it/s] 81%|########  | 21/26 [00:00<00:00, 37.06it/s]100%|##########| 26/26 [00:00<00:00, 40.55it/s]100%|##########| 26/26 [00:00<00:00, 32.60it/s]
Test: [   0/  26]	Loss 0.530 (0.530)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.530 (0.530)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.507 (0.518)	test_acc   0.56 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.507 (0.518)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.60 (  0.59)
Test: [  20/  26]	Loss 0.520 (0.518)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.520 (0.518)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.53 (  0.59)
Test: [  26/  26]	Loss 0.516 (0.519)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.516 (0.519)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.62 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.63it/s]
Test: [  0/  1]	Loss 1.668 (1.668)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.668 (1.668)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.668 (1.668)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.668 (1.668)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 47/  1]	epoch_time 0.0430 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0426 (0.0433)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.500000010073185, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.53it/s] 19%|#9        | 5/26 [00:00<00:01, 20.49it/s] 35%|###4      | 9/26 [00:00<00:00, 26.12it/s] 50%|#####     | 13/26 [00:00<00:00, 28.54it/s] 62%|######1   | 16/26 [00:00<00:00, 28.50it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.13it/s] 88%|########8 | 23/26 [00:00<00:00, 29.96it/s]100%|##########| 26/26 [00:01<00:00, 25.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 480 tensor(9.9214e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.52 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  25.62 ( 25.62)	train_acc   0.47 (  0.50)	train_minacc   0.33 (  0.53)	train_majacc   0.49 (  0.49)	train_corr   0.00 (  0.00)	l1 5.1426 (5.1511)	zero_count 0.0000 (1.2090)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.51it/s] 23%|##3       | 6/26 [00:00<00:00, 22.33it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.33it/s] 42%|####2     | 11/26 [00:00<00:00, 31.57it/s] 65%|######5   | 17/26 [00:00<00:00, 35.84it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.84it/s] 85%|########4 | 22/26 [00:00<00:00, 38.80it/s]100%|##########| 26/26 [00:00<00:00, 31.75it/s]
Test: [   0/  26]	Loss 0.530 (0.530)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.530 (0.530)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.508 (0.519)	test_acc   0.56 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.508 (0.519)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.60 (  0.59)
Test: [  20/  26]	Loss 0.519 (0.519)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.519 (0.519)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.54 (  0.59)
Test: [  26/  26]	Loss 0.517 (0.519)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.517 (0.519)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.62 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.15it/s]
Test: [  0/  1]	Loss 1.664 (1.664)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.664 (1.664)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.664 (1.664)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.664 (1.664)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 48/  1]	epoch_time 0.0421 (0.0440)	validation_time 0.0003 (0.0006)	train_time 0.0418 (0.0433)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.500000010073185, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.59it/s] 15%|#5        | 4/26 [00:00<00:01, 20.19it/s] 31%|###       | 8/26 [00:00<00:00, 25.85it/s] 46%|####6     | 12/26 [00:00<00:00, 28.16it/s] 62%|######1   | 16/26 [00:00<00:00, 30.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.35it/s] 85%|########4 | 22/26 [00:00<00:00, 27.66it/s]100%|##########| 26/26 [00:00<00:00, 30.35it/s]100%|##########| 26/26 [00:00<00:00, 26.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 475 tensor(2.2597e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 473 tensor(3.6190e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.52 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  25.62 ( 25.62)	train_acc   0.47 (  0.50)	train_minacc   0.33 (  0.59)	train_majacc   0.49 (  0.48)	train_corr   0.00 (  0.00)	l1 5.1512 (5.1518)	zero_count 0.0000 (2.8860)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 18.33it/s] 31%|###       | 8/26 [00:00<00:00, 32.22it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.22it/s] 50%|#####     | 13/26 [00:00<00:00, 37.56it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.06it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.06it/s] 92%|#########2| 24/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 36.39it/s]
Test: [   0/  26]	Loss 0.530 (0.530)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.46 (  0.46)	Loss_d 0.530 (0.530)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.509 (0.520)	test_acc   0.56 (  0.51)	test_minacc   0.61 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.509 (0.520)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.61 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.61 (  0.60)
Test: [  20/  26]	Loss 0.518 (0.520)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.518 (0.520)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.54 (  0.60)
Test: [  26/  26]	Loss 0.517 (0.520)	test_acc   0.47 (  0.50)	test_minacc   0.33 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.517 (0.520)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.33 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.63 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.22it/s]
Test: [  0/  1]	Loss 1.664 (1.664)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.664 (1.664)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.664 (1.664)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.664 (1.664)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 49/  1]	epoch_time 0.0492 (0.0441)	validation_time 0.0005 (0.0006)	train_time 0.0487 (0.0434)
record: (train_acc, test_acc) (0.6118000097274781, 0.7150000333786011)
last accs (train_acc, test_acc) (0.500000010073185, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.161 MB of 0.161 MB uploadedwandb: \ 0.184 MB of 0.190 MB uploaded (0.003 MB deduped)wandb: | 0.501 MB of 0.501 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/diagnostics/epoch_time_val █▁▂▂▁▁▁▂▁▂▂▃▂▁▂▂▂▂▂▂▂▂▂▁▂▂▁▁▁▂▂▂▂▁▁▂▁▂▂▃
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/diagnostics/train_time_val █▁▂▂▂▁▁▂▁▂▃▄▃▁▂▂▂▂▂▂▂▂▂▁▃▂▂▂▂▃▂▂▂▁▂▂▁▂▂▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/Loss_avg ▃▃▃▃▄▄▃▄▄▅▇█▁▁▁▁▁▁▁▄▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/Loss_d_avg ▃▃▃▃▄▄▃▄▄▅▇█▁▁▁▁▁▁▁▄▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/Loss_d_val ▃▃▃▃▄▄▃▄▄▅▇█▁▁▁▁▁▁▁▄▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/Loss_val ▃▃▃▃▄▄▃▄▄▅▇█▁▁▁▁▁▁▁▄▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_acc_avg ▁▁▁▁▁▂▄▄▄▅▄▄▇▇▇▇▇▇▇▅▆▆▆▆▇▇▆▇▆▆█▆▆▆█▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_acc_d_avg ▁▁▁▁▁▂▄▄▄▅▄▄▇▇▇▇▇▇▇▅▆▆▆▆▇▇▆▇▆▆█▆▆▆█▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_acc_d_val ▁▁▁▁▁▂▄▄▄▅▄▄▇▇▇▇▇▇▇▅▆▆▆▆▇▇▆▇▆▆█▆▆▆█▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_acc_val ▁▁▁▁▁▂▄▄▄▅▄▄▇▇▇▇▇▇▇▅▆▆▆▆▇▇▆▇▆▆█▆▆▆█▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_corr_d_avg ████▇▇▆▅▅▅▅▅▁▃▁▂▂▂▂▄▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_corr_d_val ████▇▇▆▅▅▅▅▅▁▃▁▂▂▂▂▄▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_majacc_avg ████████▇▇▇▇▅▅▃▅▄▄▄▆▁▁▁▁▃▃▁▃▁▁▂▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_majacc_d_avg ████████▇▇▇▇▅▅▃▅▄▄▄▆▁▁▁▁▃▃▁▃▁▁▂▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_majacc_d_val ████████▇▇▇▇▅▅▃▅▄▄▄▆▁▁▁▁▃▃▁▃▁▁▂▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_majacc_val ████████▇▇▇▇▅▅▃▅▄▄▄▆▁▁▁▁▃▃▁▃▁▁▂▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_minacc_avg ▁▁▁▁▁▂▄▄▄▄▄▄▇▆▇▇▇▇▇▄▆▆▆▆▇▇▆▇▆▆█▆▆▆█▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_minacc_d_avg ▁▁▁▁▁▂▄▄▄▄▄▄▇▆▇▇▇▇▇▄▆▆▆▆▇▇▆▇▆▆█▆▆▆█▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_minacc_d_val ▁▁▁▁▁▂▄▄▄▄▄▄▇▆▇▇▇▇▇▄▆▆▆▆▇▇▆▇▆▆█▆▆▆█▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_minacc_val ▁▁▁▁▁▂▄▄▄▄▄▄▇▆▇▇▇▇▇▄▆▆▆▆▇▇▆▇▆▆█▆▆▆█▆▆▆▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/Loss_avg █▆▆▆▆▅▅▅▄▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/Loss_val ████▇▆▆▆▅▅▅▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/l1_avg █▄▃▃▃▃▄▄▅▆▆▇█▂▁▂▂▂▂▄▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/l1_val ▄▃▃▂▂▂▃▃▄▅▇█▃▁▂▁▂▂▂▃▂▂▁▂▂▂▂▁▂▂▁▂▂▁▁▂▂▁▁▂
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇█████▅▅▅▅▅▅▆▂▂▂▂▂▂▂▂▃▂▂▂▂▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_acc_val ▇▇▇▇▇▇▇█████▆▅▄▆▅▅▅▇▁▁▂▃▅▅▅▄▄▂▂▁▁▁▂▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_majacc_avg ▇██████▇▇▇▇▇▇▅▄▅▄▄▄▆▃▃▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▂▂▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_majacc_val ██████▇▇▇▇▇▇▅▄▄▅▄▄▄▇▂▂▂▂▄▄▄▃▃▂▂▂▂▂▁▁▁▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_minacc_avg ▁▁▁▁▂▂▃▄▅▅▅▆▇██████▆▆▆▆▅▆▆▆▆▇▇▆▇▇▇▇▆▅▅▅▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_minacc_val ▁▁▁▁▂▁▄▅▆▆▅▇███████▅▄▄▆▆█████▇█▃▃▃█▄▄▃▃▃
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_nll_avg █▅▅▅▄▃▃▂▂▂▂▁▂▅▆▅▅▅▅▅▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_nll_val ▅▅▅▅▄▃▃▂▂▂▁▁▅▆▇▅▆▆▆▅▇▇▇▇▇▇▇▇▇▇██████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_penalty_avg █▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_penalty_val ██▇▆▅▄▃▂▂▂▁▁▁▁▂▂▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/weight_norm_avg ▁▄▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇▇████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/weight_norm_val ▁▃▃▃▃▃▃▄▄▄▅▅▇▇▇▇▇▇▇█████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▇█▆▂▃▃▁▂▄▁▆▅▅▅▁▁▂▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/diagnostics/epoch_time_val 0.04916
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/diagnostics/train_time_val 0.04868
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/diagnostics/validation_time_val 0.00047
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/Loss_avg 1.66448
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/Loss_d_avg 1.66448
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/Loss_d_val 1.66448
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/Loss_val 1.66448
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_corr_d_avg 0.23817
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_corr_d_val 0.23817
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/Loss_avg 8e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/Loss_val 8e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/l1_avg 5.15182
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/l1_val 5.15122
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_acc_avg 0.4978
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_acc_val 0.472
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_majacc_avg 0.48196
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_majacc_val 0.49091
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_minacc_avg 0.58706
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_minacc_val 0.33333
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_nll_avg 0.51955
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_nll_val 0.51822
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_penalty_avg 3e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/train_penalty_val 2e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/weight_norm_avg 25.61812
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/weight_norm_val 25.61858
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/zero_count_avg 2.886
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/150/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/xd8bkq4d
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_202839-xd8bkq4d/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_203131-vbq09sqi
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/vbq09sqi
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1193
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6019, 3, 32, 32) (5981, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:43,  1.74s/it] 19%|#9        | 5/26 [00:01<00:05,  3.52it/s] 35%|###4      | 9/26 [00:01<00:02,  6.89it/s] 50%|#####     | 13/26 [00:02<00:01, 10.64it/s] 65%|######5   | 17/26 [00:02<00:00, 14.47it/s] 81%|########  | 21/26 [00:02<00:00, 18.25it/s] 96%|#########6| 25/26 [00:02<00:00, 21.75it/s]100%|##########| 26/26 [00:02<00:00,  9.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.408 (0.572)	train_nll   0.41 (  0.57)	train_penalty   0.07 (  0.32)	weight_norm  20.83 ( 18.08)	train_acc   0.85 (  0.81)	train_minacc   0.03 (  0.08)	train_majacc   0.99 (  0.93)	train_corr   0.00 (  0.00)	l1 6.3798 (7.7339)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 23%|##3       | 6/26 [00:00<00:00, 31.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.08it/s] 42%|####2     | 11/26 [00:00<00:00, 37.64it/s] 62%|######1   | 16/26 [00:00<00:00, 41.73it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.73it/s] 81%|########  | 21/26 [00:00<00:00, 42.55it/s]100%|##########| 26/26 [00:00<00:00, 35.75it/s]
Test: [   0/  26]	Loss 0.456 (0.456)	test_acc   0.83 (  0.83)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.456 (0.456)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.407 (0.424)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.407 (0.424)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
Test: [  20/  26]	Loss 0.414 (0.428)	test_acc   0.86 (  0.84)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.414 (0.428)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.405 (0.422)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.405 (0.422)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.55it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]
Test: [  0/  1]	Loss 1.986 (1.986)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.986 (1.986)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.986 (1.986)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.986 (1.986)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0795 (0.0795)	validation_time 0.0066 (0.0066)	train_time 0.0705 (0.0705)
record: (train_acc, test_acc) (0.8466000254750252, 0.11100000888109207)
last accs (train_acc, test_acc) (0.8466000254750252, 0.11100000888109207)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.54it/s] 23%|##3       | 6/26 [00:00<00:00, 27.55it/s] 38%|###8      | 10/26 [00:00<00:00, 30.49it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.04it/s] 69%|######9   | 18/26 [00:00<00:00, 32.58it/s] 85%|########4 | 22/26 [00:00<00:00, 33.38it/s]100%|##########| 26/26 [00:00<00:00, 34.29it/s]100%|##########| 26/26 [00:00<00:00, 30.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.390 (0.418)	train_nll   0.39 (  0.42)	train_penalty   0.06 (  0.06)	weight_norm  21.94 ( 21.60)	train_acc   0.86 (  0.85)	train_minacc   0.03 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 5.9759 (6.0115)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.82it/s] 23%|##3       | 6/26 [00:00<00:00, 28.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.47it/s] 42%|####2     | 11/26 [00:00<00:00, 35.73it/s] 62%|######1   | 16/26 [00:00<00:00, 39.33it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.33it/s] 81%|########  | 21/26 [00:00<00:00, 38.88it/s]100%|##########| 26/26 [00:00<00:00, 41.40it/s]100%|##########| 26/26 [00:00<00:00, 34.26it/s]
Test: [   0/  26]	Loss 0.439 (0.439)	test_acc   0.83 (  0.83)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.439 (0.439)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.397 (0.411)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.397 (0.411)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  20/  26]	Loss 0.405 (0.416)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.405 (0.416)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.99)
Test: [  26/  26]	Loss 0.389 (0.410)	test_acc   0.86 (  0.85)	test_minacc   0.03 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.389 (0.410)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.03 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.99)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.48it/s]
Test: [  0/  1]	Loss 1.930 (1.930)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.930 (1.930)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.930 (1.930)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.930 (1.930)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Overall Timing[  1/  1]	epoch_time 0.0395 (0.0595)	validation_time 0.0004 (0.0035)	train_time 0.0390 (0.0548)
record: (train_acc, test_acc) (0.8466000254750252, 0.11100000888109207)
last accs (train_acc, test_acc) (0.8487000232338905, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.19it/s] 15%|#5        | 4/26 [00:00<00:01, 18.70it/s] 31%|###       | 8/26 [00:00<00:00, 25.63it/s] 46%|####6     | 12/26 [00:00<00:00, 28.52it/s] 62%|######1   | 16/26 [00:00<00:00, 30.67it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.18it/s] 92%|#########2| 24/26 [00:00<00:00, 33.56it/s]100%|##########| 26/26 [00:00<00:00, 28.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.379 (0.408)	train_nll   0.38 (  0.41)	train_penalty   0.06 (  0.06)	weight_norm  22.05 ( 22.01)	train_acc   0.85 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.0034 (5.8780)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 27%|##6       | 7/26 [00:00<00:00, 30.28it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.28it/s] 46%|####6     | 12/26 [00:00<00:00, 36.82it/s] 69%|######9   | 18/26 [00:00<00:00, 43.01it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.01it/s] 88%|########8 | 23/26 [00:00<00:00, 44.07it/s]100%|##########| 26/26 [00:00<00:00, 36.55it/s]
Test: [   0/  26]	Loss 0.419 (0.419)	test_acc   0.83 (  0.83)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.419 (0.419)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.383 (0.399)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.383 (0.399)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.98)
Test: [  20/  26]	Loss 0.400 (0.403)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.400 (0.403)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.373 (0.397)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.373 (0.397)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.60it/s]
Test: [  0/  1]	Loss 1.963 (1.963)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.963 (1.963)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.963 (1.963)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.963 (1.963)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  2/  1]	epoch_time 0.0398 (0.0529)	validation_time 0.0004 (0.0025)	train_time 0.0394 (0.0496)
record: (train_acc, test_acc) (0.8466000254750252, 0.11100000888109207)
last accs (train_acc, test_acc) (0.849100024163723, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.17it/s] 19%|#9        | 5/26 [00:00<00:00, 21.32it/s] 35%|###4      | 9/26 [00:00<00:00, 27.27it/s] 50%|#####     | 13/26 [00:00<00:00, 30.52it/s] 65%|######5   | 17/26 [00:00<00:00, 32.31it/s] 81%|########  | 21/26 [00:00<00:00, 33.75it/s] 96%|#########6| 25/26 [00:00<00:00, 34.75it/s]100%|##########| 26/26 [00:00<00:00, 29.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.353 (0.394)	train_nll   0.35 (  0.39)	train_penalty   0.05 (  0.05)	weight_norm  22.09 ( 22.07)	train_acc   0.85 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.2799 (5.9461)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.60it/s] 23%|##3       | 6/26 [00:00<00:00, 30.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.91it/s] 42%|####2     | 11/26 [00:00<00:00, 33.26it/s] 62%|######1   | 16/26 [00:00<00:00, 38.20it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.20it/s] 81%|########  | 21/26 [00:00<00:00, 40.48it/s]100%|##########| 26/26 [00:00<00:00, 35.74it/s]
Test: [   0/  26]	Loss 0.381 (0.381)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.381 (0.381)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.360 (0.372)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.360 (0.372)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.96)
Test: [  20/  26]	Loss 0.400 (0.375)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.400 (0.375)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.344 (0.370)	test_acc   0.86 (  0.85)	test_minacc   0.03 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.344 (0.370)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.03 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.31it/s]
Test: [  0/  1]	Loss 1.948 (1.948)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.948 (1.948)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.948 (1.948)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.948 (1.948)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0440 (0.0507)	validation_time 0.0004 (0.0020)	train_time 0.0435 (0.0481)
record: (train_acc, test_acc) (0.8513000254034996, 0.12000000476837158)
last accs (train_acc, test_acc) (0.8513000254034996, 0.12000000476837158)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 19%|#9        | 5/26 [00:00<00:00, 22.19it/s] 35%|###4      | 9/26 [00:00<00:00, 28.28it/s] 50%|#####     | 13/26 [00:00<00:00, 31.69it/s] 65%|######5   | 17/26 [00:00<00:00, 32.86it/s] 81%|########  | 21/26 [00:00<00:00, 33.43it/s] 96%|#########6| 25/26 [00:00<00:00, 34.10it/s]100%|##########| 26/26 [00:00<00:00, 29.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.330 (0.372)	train_nll   0.33 (  0.37)	train_penalty   0.03 (  0.04)	weight_norm  22.16 ( 22.12)	train_acc   0.84 (  0.85)	train_minacc   0.08 (  0.09)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 6.5728 (6.1353)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.11it/s] 27%|##6       | 7/26 [00:00<00:00, 30.42it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.42it/s] 46%|####6     | 12/26 [00:00<00:00, 37.13it/s] 65%|######5   | 17/26 [00:00<00:00, 41.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.14it/s] 85%|########4 | 22/26 [00:00<00:00, 40.62it/s]100%|##########| 26/26 [00:00<00:00, 36.97it/s]
Test: [   0/  26]	Loss 0.358 (0.358)	test_acc   0.85 (  0.85)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.358 (0.358)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.345 (0.353)	test_acc   0.85 (  0.85)	test_minacc   0.04 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.345 (0.353)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.04 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.375 (0.355)	test_acc   0.86 (  0.85)	test_minacc   0.07 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.375 (0.355)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.07 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.94)
Test: [  26/  26]	Loss 0.317 (0.350)	test_acc   0.85 (  0.85)	test_minacc   0.08 (  0.09)	test_majacc   0.98 (  0.99)	Loss_d 0.317 (0.350)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.08 (  0.09)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.75it/s]
Test: [  0/  1]	Loss 2.017 (2.017)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 2.017 (2.017)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.89 (  0.89)
Test: [  1/  1]	Loss 2.017 (2.017)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 2.017 (2.017)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.89 (  0.89)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0389 (0.0483)	validation_time 0.0005 (0.0017)	train_time 0.0384 (0.0462)
record: (train_acc, test_acc) (0.8535000225305557, 0.15300001204013824)
last accs (train_acc, test_acc) (0.8535000225305557, 0.15300001204013824)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.28it/s] 19%|#9        | 5/26 [00:00<00:00, 22.57it/s] 35%|###4      | 9/26 [00:00<00:00, 28.02it/s] 50%|#####     | 13/26 [00:00<00:00, 30.63it/s] 65%|######5   | 17/26 [00:00<00:00, 32.24it/s] 81%|########  | 21/26 [00:00<00:00, 33.40it/s] 96%|#########6| 25/26 [00:00<00:00, 34.27it/s]100%|##########| 26/26 [00:00<00:00, 28.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.329 (0.350)	train_nll   0.33 (  0.35)	train_penalty   0.03 (  0.03)	weight_norm  22.23 ( 22.19)	train_acc   0.86 (  0.85)	train_minacc   0.08 (  0.19)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 6.5026 (6.3410)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.22it/s] 23%|##3       | 6/26 [00:00<00:01, 17.75it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.75it/s] 42%|####2     | 11/26 [00:00<00:00, 26.77it/s] 65%|######5   | 17/26 [00:00<00:00, 34.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.12it/s] 88%|########8 | 23/26 [00:00<00:00, 40.71it/s]100%|##########| 26/26 [00:00<00:00, 29.43it/s]
Test: [   0/  26]	Loss 0.346 (0.346)	test_acc   0.84 (  0.84)	test_minacc   0.05 (  0.05)	test_majacc   1.00 (  1.00)	Loss_d 0.346 (0.346)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.05 (  0.05)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.333 (0.343)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.05)	test_majacc   0.99 (  1.00)	Loss_d 0.333 (0.343)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.05)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.366 (0.344)	test_acc   0.87 (  0.85)	test_minacc   0.05 (  0.06)	test_majacc   1.00 (  0.99)	Loss_d 0.366 (0.344)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.05 (  0.06)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.94 (  0.95)
Test: [  26/  26]	Loss 0.323 (0.341)	test_acc   0.86 (  0.85)	test_minacc   0.08 (  0.06)	test_majacc   1.00 (  0.99)	Loss_d 0.323 (0.341)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.08 (  0.06)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.27it/s]
Test: [  0/  1]	Loss 1.937 (1.937)	test_acc   0.13 (  0.13)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 1.937 (1.937)	test_acc_d   0.13 (  0.13)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.89 (  0.89)
Test: [  1/  1]	Loss 1.937 (1.937)	test_acc   0.13 (  0.13)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 1.937 (1.937)	test_acc_d   0.13 (  0.13)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.89 (  0.89)
Overall Timing[  5/  1]	epoch_time 0.0432 (0.0475)	validation_time 0.0003 (0.0014)	train_time 0.0428 (0.0456)
record: (train_acc, test_acc) (0.8535000225305557, 0.15300001204013824)
last accs (train_acc, test_acc) (0.8541000251173974, 0.1290000081062317)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.55it/s] 19%|#9        | 5/26 [00:00<00:00, 23.84it/s] 35%|###4      | 9/26 [00:00<00:00, 28.81it/s] 50%|#####     | 13/26 [00:00<00:00, 31.11it/s] 65%|######5   | 17/26 [00:00<00:00, 32.34it/s] 81%|########  | 21/26 [00:00<00:00, 33.84it/s] 96%|#########6| 25/26 [00:00<00:00, 35.42it/s]100%|##########| 26/26 [00:00<00:00, 29.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.300 (0.337)	train_nll   0.30 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.31 ( 22.27)	train_acc   0.87 (  0.86)	train_minacc   0.24 (  0.23)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 6.2912 (6.2321)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 16.91it/s] 31%|###       | 8/26 [00:00<00:00, 31.51it/s]                                               31%|###       | 8/26 [00:00<00:00, 31.51it/s] 50%|#####     | 13/26 [00:00<00:00, 37.65it/s] 69%|######9   | 18/26 [00:00<00:00, 41.62it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.62it/s] 88%|########8 | 23/26 [00:00<00:00, 42.81it/s]100%|##########| 26/26 [00:00<00:00, 36.06it/s]
Test: [   0/  26]	Loss 0.348 (0.348)	test_acc   0.84 (  0.84)	test_minacc   0.11 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 0.348 (0.348)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.308 (0.326)	test_acc   0.86 (  0.86)	test_minacc   0.11 (  0.14)	test_majacc   0.99 (  0.99)	Loss_d 0.308 (0.326)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.11 (  0.14)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.93)
Test: [  20/  26]	Loss 0.354 (0.329)	test_acc   0.87 (  0.86)	test_minacc   0.11 (  0.14)	test_majacc   0.99 (  0.99)	Loss_d 0.354 (0.329)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.11 (  0.14)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.93)
Test: [  26/  26]	Loss 0.296 (0.324)	test_acc   0.86 (  0.86)	test_minacc   0.16 (  0.14)	test_majacc   0.99 (  0.99)	Loss_d 0.296 (0.324)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.16 (  0.14)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.60it/s]
Test: [  0/  1]	Loss 1.996 (1.996)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 1.996 (1.996)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.996 (1.996)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 1.996 (1.996)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0396 (0.0463)	validation_time 0.0004 (0.0013)	train_time 0.0392 (0.0447)
record: (train_acc, test_acc) (0.8603000284433365, 0.17100000381469727)
last accs (train_acc, test_acc) (0.8603000284433365, 0.17100000381469727)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.87it/s] 19%|#9        | 5/26 [00:00<00:00, 22.64it/s] 35%|###4      | 9/26 [00:00<00:00, 28.41it/s] 50%|#####     | 13/26 [00:00<00:00, 30.75it/s] 65%|######5   | 17/26 [00:00<00:00, 32.02it/s] 81%|########  | 21/26 [00:00<00:00, 33.01it/s] 96%|#########6| 25/26 [00:00<00:00, 33.97it/s]100%|##########| 26/26 [00:00<00:00, 29.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.288 (0.323)	train_nll   0.29 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.40 ( 22.36)	train_acc   0.86 (  0.86)	train_minacc   0.19 (  0.30)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 6.2175 (6.1439)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.48it/s] 23%|##3       | 6/26 [00:00<00:00, 26.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.75it/s] 42%|####2     | 11/26 [00:00<00:00, 35.00it/s] 62%|######1   | 16/26 [00:00<00:00, 39.31it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.31it/s] 81%|########  | 21/26 [00:00<00:00, 38.36it/s]100%|##########| 26/26 [00:00<00:00, 41.58it/s]100%|##########| 26/26 [00:00<00:00, 33.74it/s]
Test: [   0/  26]	Loss 0.347 (0.347)	test_acc   0.85 (  0.85)	test_minacc   0.14 (  0.14)	test_majacc   0.99 (  0.99)	Loss_d 0.347 (0.347)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.305 (0.322)	test_acc   0.87 (  0.86)	test_minacc   0.16 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 0.305 (0.322)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.16 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.93)
Test: [  20/  26]	Loss 0.337 (0.324)	test_acc   0.86 (  0.86)	test_minacc   0.11 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 0.337 (0.324)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.11 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.283 (0.320)	test_acc   0.88 (  0.86)	test_minacc   0.24 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 0.283 (0.320)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.24 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 1.979 (1.979)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   1.00 (  1.00)	Loss_d 1.979 (1.979)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.85 (  0.85)
Test: [  1/  1]	Loss 1.979 (1.979)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   1.00 (  1.00)	Loss_d 1.979 (1.979)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.85 (  0.85)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0382 (0.0453)	validation_time 0.0003 (0.0012)	train_time 0.0379 (0.0439)
record: (train_acc, test_acc) (0.8609000245928764, 0.18300001323223114)
last accs (train_acc, test_acc) (0.8609000245928764, 0.18300001323223114)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.63it/s] 19%|#9        | 5/26 [00:00<00:01, 19.54it/s] 35%|###4      | 9/26 [00:00<00:00, 25.51it/s] 50%|#####     | 13/26 [00:00<00:00, 28.60it/s] 65%|######5   | 17/26 [00:00<00:00, 30.00it/s] 81%|########  | 21/26 [00:00<00:00, 31.37it/s] 96%|#########6| 25/26 [00:00<00:00, 32.42it/s]100%|##########| 26/26 [00:00<00:00, 26.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.277 (0.310)	train_nll   0.28 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.50 ( 22.45)	train_acc   0.88 (  0.86)	train_minacc   0.32 (  0.35)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 6.0283 (6.1409)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.14it/s] 27%|##6       | 7/26 [00:00<00:00, 33.78it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.78it/s] 46%|####6     | 12/26 [00:00<00:00, 40.66it/s] 65%|######5   | 17/26 [00:00<00:00, 43.72it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.72it/s] 85%|########4 | 22/26 [00:00<00:00, 44.39it/s]100%|##########| 26/26 [00:00<00:00, 38.21it/s]
Test: [   0/  26]	Loss 0.330 (0.330)	test_acc   0.86 (  0.86)	test_minacc   0.31 (  0.31)	test_majacc   0.97 (  0.97)	Loss_d 0.330 (0.330)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.293 (0.310)	test_acc   0.87 (  0.86)	test_minacc   0.20 (  0.23)	test_majacc   0.99 (  0.97)	Loss_d 0.293 (0.310)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.20 (  0.23)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.93 (  0.91)
Test: [  20/  26]	Loss 0.310 (0.312)	test_acc   0.88 (  0.86)	test_minacc   0.27 (  0.24)	test_majacc   0.98 (  0.97)	Loss_d 0.310 (0.312)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.27 (  0.24)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  26/  26]	Loss 0.261 (0.307)	test_acc   0.88 (  0.86)	test_minacc   0.30 (  0.24)	test_majacc   0.98 (  0.97)	Loss_d 0.261 (0.307)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.30 (  0.24)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.93it/s]
Test: [  0/  1]	Loss 1.964 (1.964)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 1.964 (1.964)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.78 (  0.78)
Test: [  1/  1]	Loss 1.964 (1.964)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 1.964 (1.964)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.78 (  0.78)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0424 (0.0450)	validation_time 0.0004 (0.0011)	train_time 0.0420 (0.0436)
record: (train_acc, test_acc) (0.8633000230789185, 0.242000013589859)
last accs (train_acc, test_acc) (0.8633000230789185, 0.242000013589859)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.35it/s] 19%|#9        | 5/26 [00:00<00:01, 20.69it/s] 35%|###4      | 9/26 [00:00<00:00, 26.77it/s] 50%|#####     | 13/26 [00:00<00:00, 29.79it/s] 65%|######5   | 17/26 [00:00<00:00, 32.07it/s] 81%|########  | 21/26 [00:00<00:00, 32.99it/s] 96%|#########6| 25/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:00<00:00, 28.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.233 (0.293)	train_nll   0.23 (  0.29)	train_penalty   0.01 (  0.02)	weight_norm  22.63 ( 22.56)	train_acc   0.88 (  0.87)	train_minacc   0.41 (  0.42)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 5.9033 (6.1851)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.75it/s] 27%|##6       | 7/26 [00:00<00:00, 32.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.96it/s] 46%|####6     | 12/26 [00:00<00:00, 38.91it/s] 65%|######5   | 17/26 [00:00<00:00, 41.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.29it/s] 85%|########4 | 22/26 [00:00<00:00, 41.07it/s]100%|##########| 26/26 [00:00<00:00, 37.02it/s]
Test: [   0/  26]	Loss 0.335 (0.335)	test_acc   0.86 (  0.86)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 0.335 (0.335)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.293 (0.298)	test_acc   0.87 (  0.87)	test_minacc   0.27 (  0.34)	test_majacc   0.98 (  0.96)	Loss_d 0.293 (0.298)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.27 (  0.34)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.91 (  0.89)
Test: [  20/  26]	Loss 0.297 (0.301)	test_acc   0.89 (  0.87)	test_minacc   0.38 (  0.33)	test_majacc   0.98 (  0.96)	Loss_d 0.297 (0.301)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.38 (  0.33)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.90 (  0.89)
Test: [  26/  26]	Loss 0.220 (0.295)	test_acc   0.89 (  0.87)	test_minacc   0.43 (  0.34)	test_majacc   0.97 (  0.96)	Loss_d 0.220 (0.295)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.43 (  0.34)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.22it/s]
Test: [  0/  1]	Loss 1.948 (1.948)	test_acc   0.27 (  0.27)	test_minacc   0.20 (  0.20)	test_majacc   0.97 (  0.97)	Loss_d 1.948 (1.948)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 1.948 (1.948)	test_acc   0.27 (  0.27)	test_minacc   0.20 (  0.20)	test_majacc   0.97 (  0.97)	Loss_d 1.948 (1.948)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.73 (  0.73)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0392 (0.0444)	validation_time 0.0005 (0.0010)	train_time 0.0387 (0.0432)
record: (train_acc, test_acc) (0.8702000231742859, 0.27300000190734863)
last accs (train_acc, test_acc) (0.8702000231742859, 0.27300000190734863)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.99it/s] 19%|#9        | 5/26 [00:00<00:01, 19.97it/s] 35%|###4      | 9/26 [00:00<00:00, 26.16it/s] 50%|#####     | 13/26 [00:00<00:00, 29.08it/s] 65%|######5   | 17/26 [00:00<00:00, 30.85it/s] 81%|########  | 21/26 [00:00<00:00, 32.35it/s] 96%|#########6| 25/26 [00:00<00:00, 33.48it/s]100%|##########| 26/26 [00:00<00:00, 27.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.238 (0.287)	train_nll   0.24 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.80 ( 22.71)	train_acc   0.88 (  0.88)	train_minacc   0.43 (  0.46)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 5.9167 (6.2113)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.12it/s] 27%|##6       | 7/26 [00:00<00:00, 34.01it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.01it/s] 46%|####6     | 12/26 [00:00<00:00, 39.66it/s] 65%|######5   | 17/26 [00:00<00:00, 39.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.29it/s] 85%|########4 | 22/26 [00:00<00:00, 41.49it/s]100%|##########| 26/26 [00:00<00:00, 37.26it/s]
Test: [   0/  26]	Loss 0.304 (0.304)	test_acc   0.87 (  0.87)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 0.304 (0.304)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.243 (0.272)	test_acc   0.89 (  0.88)	test_minacc   0.39 (  0.36)	test_majacc   0.98 (  0.97)	Loss_d 0.243 (0.272)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.39 (  0.36)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.89)
Test: [  20/  26]	Loss 0.282 (0.274)	test_acc   0.89 (  0.88)	test_minacc   0.36 (  0.38)	test_majacc   0.98 (  0.97)	Loss_d 0.282 (0.274)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.36 (  0.38)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.89)
Test: [  26/  26]	Loss 0.219 (0.271)	test_acc   0.90 (  0.88)	test_minacc   0.43 (  0.37)	test_majacc   0.98 (  0.97)	Loss_d 0.219 (0.271)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.43 (  0.37)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.14it/s]
Test: [  0/  1]	Loss 1.981 (1.981)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.99 (  0.99)	Loss_d 1.981 (1.981)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 1.981 (1.981)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.99 (  0.99)	Loss_d 1.981 (1.981)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Overall Timing[ 10/  1]	epoch_time 0.0433 (0.0443)	validation_time 0.0003 (0.0010)	train_time 0.0430 (0.0431)
record: (train_acc, test_acc) (0.8702000231742859, 0.27300000190734863)
last accs (train_acc, test_acc) (0.8802000239491463, 0.2580000162124634)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 10.61it/s] 23%|##3       | 6/26 [00:00<00:00, 21.77it/s] 38%|###8      | 10/26 [00:00<00:00, 27.23it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.17it/s] 69%|######9   | 18/26 [00:00<00:00, 32.29it/s] 85%|########4 | 22/26 [00:00<00:00, 33.32it/s]100%|##########| 26/26 [00:00<00:00, 34.03it/s]100%|##########| 26/26 [00:00<00:00, 28.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.229 (0.280)	train_nll   0.23 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  23.01 ( 22.90)	train_acc   0.89 (  0.88)	train_minacc   0.30 (  0.48)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 5.7173 (6.3986)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.77it/s] 19%|#9        | 5/26 [00:00<00:00, 23.43it/s] 38%|###8      | 10/26 [00:00<00:00, 34.04it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.04it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.04it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.04it/s] 96%|#########6| 25/26 [00:00<00:00, 41.32it/s]100%|##########| 26/26 [00:00<00:00, 35.27it/s]
Test: [   0/  26]	Loss 0.309 (0.309)	test_acc   0.85 (  0.85)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 0.309 (0.309)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.248 (0.268)	test_acc   0.88 (  0.87)	test_minacc   0.29 (  0.27)	test_majacc   0.98 (  0.98)	Loss_d 0.248 (0.268)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.29 (  0.27)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.284 (0.269)	test_acc   0.88 (  0.87)	test_minacc   0.25 (  0.30)	test_majacc   0.99 (  0.98)	Loss_d 0.284 (0.269)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.25 (  0.30)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.90)
Test: [  26/  26]	Loss 0.212 (0.266)	test_acc   0.90 (  0.88)	test_minacc   0.35 (  0.30)	test_majacc   0.99 (  0.98)	Loss_d 0.212 (0.266)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.35 (  0.30)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.58it/s]
Test: [  0/  1]	Loss 1.878 (1.878)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 1.878 (1.878)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 1.878 (1.878)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 1.878 (1.878)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Overall Timing[ 11/  1]	epoch_time 0.0402 (0.0440)	validation_time 0.0005 (0.0009)	train_time 0.0397 (0.0429)
record: (train_acc, test_acc) (0.8702000231742859, 0.27300000190734863)
last accs (train_acc, test_acc) (0.8768000195026397, 0.25699999928474426)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.19it/s] 23%|##3       | 6/26 [00:00<00:00, 24.11it/s] 38%|###8      | 10/26 [00:00<00:00, 28.31it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.00it/s] 69%|######9   | 18/26 [00:00<00:00, 31.78it/s] 85%|########4 | 22/26 [00:00<00:00, 32.62it/s]100%|##########| 26/26 [00:00<00:00, 33.88it/s]100%|##########| 26/26 [00:00<00:00, 28.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.241 (0.270)	train_nll   0.24 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.27 ( 23.14)	train_acc   0.89 (  0.88)	train_minacc   0.49 (  0.52)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 5.9553 (6.5429)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.65it/s] 23%|##3       | 6/26 [00:00<00:00, 30.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.39it/s] 42%|####2     | 11/26 [00:00<00:00, 37.01it/s] 62%|######1   | 16/26 [00:00<00:00, 40.12it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.12it/s] 81%|########  | 21/26 [00:00<00:00, 38.91it/s]100%|##########| 26/26 [00:00<00:00, 41.71it/s]100%|##########| 26/26 [00:00<00:00, 34.84it/s]
Test: [   0/  26]	Loss 0.321 (0.321)	test_acc   0.86 (  0.86)	test_minacc   0.39 (  0.39)	test_majacc   0.95 (  0.95)	Loss_d 0.321 (0.321)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.272 (0.277)	test_acc   0.88 (  0.88)	test_minacc   0.45 (  0.45)	test_majacc   0.96 (  0.96)	Loss_d 0.272 (0.277)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  20/  26]	Loss 0.262 (0.274)	test_acc   0.89 (  0.88)	test_minacc   0.45 (  0.46)	test_majacc   0.97 (  0.96)	Loss_d 0.262 (0.274)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.45 (  0.46)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.220 (0.270)	test_acc   0.92 (  0.89)	test_minacc   0.57 (  0.47)	test_majacc   0.98 (  0.96)	Loss_d 0.220 (0.270)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.57 (  0.47)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.88 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 55.32it/s]
Test: [  0/  1]	Loss 1.908 (1.908)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.97 (  0.97)	Loss_d 1.908 (1.908)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 1.908 (1.908)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.97 (  0.97)	Loss_d 1.908 (1.908)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.69 (  0.69)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0416 (0.0438)	validation_time 0.0005 (0.0009)	train_time 0.0411 (0.0427)
record: (train_acc, test_acc) (0.886100022315979, 0.33100003004074097)
last accs (train_acc, test_acc) (0.886100022315979, 0.33100003004074097)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.01it/s] 23%|##3       | 6/26 [00:00<00:00, 26.01it/s] 38%|###8      | 10/26 [00:00<00:00, 29.44it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.52it/s] 69%|######9   | 18/26 [00:00<00:00, 32.63it/s] 85%|########4 | 22/26 [00:00<00:00, 33.31it/s]100%|##########| 26/26 [00:00<00:00, 34.31it/s]100%|##########| 26/26 [00:00<00:00, 29.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.246 (0.263)	train_nll   0.25 (  0.26)	train_penalty   0.01 (  0.01)	weight_norm  23.57 ( 23.41)	train_acc   0.89 (  0.89)	train_minacc   0.32 (  0.54)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 6.1558 (6.8355)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.66it/s] 23%|##3       | 6/26 [00:00<00:00, 25.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.20it/s] 42%|####2     | 11/26 [00:00<00:00, 33.32it/s] 62%|######1   | 16/26 [00:00<00:00, 38.36it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.36it/s] 81%|########  | 21/26 [00:00<00:00, 37.64it/s]100%|##########| 26/26 [00:00<00:00, 32.72it/s]
Test: [   0/  26]	Loss 0.322 (0.322)	test_acc   0.85 (  0.85)	test_minacc   0.25 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 0.322 (0.322)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.267 (0.279)	test_acc   0.87 (  0.88)	test_minacc   0.27 (  0.32)	test_majacc   0.97 (  0.97)	Loss_d 0.267 (0.279)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.27 (  0.32)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.90)
Test: [  20/  26]	Loss 0.260 (0.279)	test_acc   0.90 (  0.88)	test_minacc   0.38 (  0.34)	test_majacc   0.98 (  0.97)	Loss_d 0.260 (0.279)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.38 (  0.34)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.223 (0.273)	test_acc   0.89 (  0.88)	test_minacc   0.38 (  0.34)	test_majacc   0.98 (  0.97)	Loss_d 0.223 (0.273)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.38 (  0.34)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.33it/s]
Test: [  0/  1]	Loss 2.033 (2.033)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 2.033 (2.033)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 2.033 (2.033)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 2.033 (2.033)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.77 (  0.77)
Overall Timing[ 13/  1]	epoch_time 0.0382 (0.0434)	validation_time 0.0007 (0.0009)	train_time 0.0375 (0.0423)
record: (train_acc, test_acc) (0.886100022315979, 0.33100003004074097)
last accs (train_acc, test_acc) (0.8783000192046165, 0.2630000114440918)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.76it/s] 23%|##3       | 6/26 [00:00<00:00, 23.97it/s] 38%|###8      | 10/26 [00:00<00:00, 29.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.10it/s] 69%|######9   | 18/26 [00:00<00:00, 32.52it/s] 85%|########4 | 22/26 [00:00<00:00, 33.24it/s]100%|##########| 26/26 [00:00<00:00, 33.94it/s]100%|##########| 26/26 [00:00<00:00, 29.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.241 (0.262)	train_nll   0.24 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  23.95 ( 23.77)	train_acc   0.90 (  0.88)	train_minacc   0.57 (  0.56)	train_majacc   0.95 (  0.94)	train_corr   0.00 (  0.00)	l1 6.5745 (6.9163)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 23%|##3       | 6/26 [00:00<00:00, 29.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.24it/s] 42%|####2     | 11/26 [00:00<00:00, 35.73it/s] 62%|######1   | 16/26 [00:00<00:00, 39.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.62it/s] 81%|########  | 21/26 [00:00<00:00, 39.27it/s]100%|##########| 26/26 [00:00<00:00, 42.00it/s]100%|##########| 26/26 [00:00<00:00, 35.07it/s]
Test: [   0/  26]	Loss 0.293 (0.293)	test_acc   0.87 (  0.87)	test_minacc   0.41 (  0.41)	test_majacc   0.96 (  0.96)	Loss_d 0.293 (0.293)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.231 (0.263)	test_acc   0.88 (  0.89)	test_minacc   0.39 (  0.41)	test_majacc   0.96 (  0.97)	Loss_d 0.231 (0.263)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.39 (  0.41)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.219 (0.257)	test_acc   0.90 (  0.89)	test_minacc   0.42 (  0.45)	test_majacc   0.98 (  0.97)	Loss_d 0.219 (0.257)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.42 (  0.45)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.88 (  0.87)
Test: [  26/  26]	Loss 0.203 (0.250)	test_acc   0.91 (  0.89)	test_minacc   0.54 (  0.45)	test_majacc   0.98 (  0.97)	Loss_d 0.203 (0.250)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.54 (  0.45)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.86 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 52.64it/s]
Test: [  0/  1]	Loss 2.166 (2.166)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.96 (  0.96)	Loss_d 2.166 (2.166)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 2.166 (2.166)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.96 (  0.96)	Loss_d 2.166 (2.166)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Overall Timing[ 14/  1]	epoch_time 0.0414 (0.0433)	validation_time 0.0005 (0.0009)	train_time 0.0409 (0.0422)
record: (train_acc, test_acc) (0.886100022315979, 0.33100003004074097)
last accs (train_acc, test_acc) (0.893500022828579, 0.2840000092983246)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.60it/s] 19%|#9        | 5/26 [00:00<00:01, 20.12it/s] 35%|###4      | 9/26 [00:00<00:00, 26.07it/s] 50%|#####     | 13/26 [00:00<00:00, 29.60it/s] 65%|######5   | 17/26 [00:00<00:00, 31.46it/s] 81%|########  | 21/26 [00:00<00:00, 32.05it/s] 96%|#########6| 25/26 [00:00<00:00, 33.01it/s]100%|##########| 26/26 [00:00<00:00, 27.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.003 (0.100)	train_nll   0.29 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  24.25 ( 24.13)	train_acc   0.87 (  0.89)	train_minacc   0.81 (  0.60)	train_majacc   0.88 (  0.94)	train_corr   0.00 (  0.00)	l1 6.8458 (6.9125)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.21it/s] 27%|##6       | 7/26 [00:00<00:00, 34.31it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.31it/s] 46%|####6     | 12/26 [00:00<00:00, 40.13it/s] 65%|######5   | 17/26 [00:00<00:00, 38.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.79it/s] 85%|########4 | 22/26 [00:00<00:00, 41.46it/s]100%|##########| 26/26 [00:00<00:00, 36.70it/s]
Test: [   0/  26]	Loss 0.337 (0.337)	test_acc   0.84 (  0.84)	test_minacc   0.78 (  0.78)	test_majacc   0.86 (  0.86)	Loss_d 0.337 (0.337)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.303 (0.281)	test_acc   0.89 (  0.89)	test_minacc   0.86 (  0.83)	test_majacc   0.90 (  0.90)	Loss_d 0.303 (0.281)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.86 (  0.83)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.64 (  0.65)
Test: [  20/  26]	Loss 0.299 (0.290)	test_acc   0.88 (  0.88)	test_minacc   0.73 (  0.84)	test_majacc   0.91 (  0.89)	Loss_d 0.299 (0.290)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.73 (  0.84)	test_majacc_d   0.91 (  0.89)	test_corr_d   0.70 (  0.64)
Test: [  26/  26]	Loss 0.311 (0.298)	test_acc   0.87 (  0.88)	test_minacc   0.81 (  0.82)	test_majacc   0.88 (  0.89)	Loss_d 0.311 (0.298)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.88 (  0.89)	test_corr_d   0.64 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.37it/s]
Test: [  0/  1]	Loss 1.560 (1.560)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.81 (  0.81)	Loss_d 1.560 (1.560)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.560 (1.560)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.81 (  0.81)	Loss_d 1.560 (1.560)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.12 (  0.12)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0416 (0.0432)	validation_time 0.0004 (0.0008)	train_time 0.0411 (0.0422)
record: (train_acc, test_acc) (0.878600015938282, 0.5250000357627869)
last accs (train_acc, test_acc) (0.878600015938282, 0.5250000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.18it/s] 12%|#1        | 3/26 [00:00<00:02, 10.34it/s] 27%|##6       | 7/26 [00:00<00:00, 19.41it/s] 42%|####2     | 11/26 [00:00<00:00, 24.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.34it/s] 88%|########8 | 23/26 [00:00<00:00, 31.03it/s]100%|##########| 26/26 [00:01<00:00, 24.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.002 (0.003)	train_nll   0.34 (  0.33)	train_penalty   0.00 (  0.00)	weight_norm  24.31 ( 24.29)	train_acc   0.83 (  0.85)	train_minacc   0.95 (  0.87)	train_majacc   0.81 (  0.84)	train_corr   0.00 (  0.00)	l1 6.5725 (6.5188)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.05it/s] 23%|##3       | 6/26 [00:00<00:00, 30.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.68it/s] 42%|####2     | 11/26 [00:00<00:00, 37.79it/s] 62%|######1   | 16/26 [00:00<00:00, 41.28it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.28it/s] 81%|########  | 21/26 [00:00<00:00, 43.21it/s]100%|##########| 26/26 [00:00<00:00, 37.31it/s]
Test: [   0/  26]	Loss 0.326 (0.326)	test_acc   0.84 (  0.84)	test_minacc   0.78 (  0.78)	test_majacc   0.86 (  0.86)	Loss_d 0.326 (0.326)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.273 (0.300)	test_acc   0.86 (  0.85)	test_minacc   0.88 (  0.86)	test_majacc   0.86 (  0.85)	Loss_d 0.273 (0.300)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.88 (  0.86)	test_majacc_d   0.86 (  0.85)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.321 (0.306)	test_acc   0.84 (  0.85)	test_minacc   0.85 (  0.86)	test_majacc   0.84 (  0.85)	Loss_d 0.321 (0.306)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.85 (  0.86)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.62 (  0.60)
Test: [  26/  26]	Loss 0.324 (0.309)	test_acc   0.84 (  0.85)	test_minacc   0.95 (  0.85)	test_majacc   0.82 (  0.85)	Loss_d 0.324 (0.309)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.95 (  0.85)	test_majacc_d   0.82 (  0.85)	test_corr_d   0.57 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.20it/s]
Test: [  0/  1]	Loss 1.543 (1.543)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.83 (  0.83)	Loss_d 1.543 (1.543)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 1.543 (1.543)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.83 (  0.83)	Loss_d 1.543 (1.543)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.02 (  0.02)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0438 (0.0432)	validation_time 0.0004 (0.0008)	train_time 0.0433 (0.0422)
record: (train_acc, test_acc) (0.8482000259160996, 0.6170000433921814)
last accs (train_acc, test_acc) (0.8482000259160996, 0.6170000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.49it/s] 19%|#9        | 5/26 [00:00<00:01, 19.06it/s] 35%|###4      | 9/26 [00:00<00:00, 25.13it/s] 50%|#####     | 13/26 [00:00<00:00, 28.40it/s] 65%|######5   | 17/26 [00:00<00:00, 30.12it/s] 81%|########  | 21/26 [00:00<00:00, 31.79it/s] 96%|#########6| 25/26 [00:00<00:00, 33.08it/s]100%|##########| 26/26 [00:00<00:00, 27.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.002 (0.002)	train_nll   0.27 (  0.30)	train_penalty   0.00 (  0.00)	weight_norm  24.32 ( 24.32)	train_acc   0.88 (  0.85)	train_minacc   0.95 (  0.83)	train_majacc   0.86 (  0.86)	train_corr   0.00 (  0.00)	l1 6.0926 (6.3490)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.95it/s] 27%|##6       | 7/26 [00:00<00:00, 37.59it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.59it/s] 50%|#####     | 13/26 [00:00<00:00, 43.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.42it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.42it/s] 92%|#########2| 24/26 [00:00<00:00, 43.71it/s]100%|##########| 26/26 [00:00<00:00, 39.23it/s]
Test: [   0/  26]	Loss 0.271 (0.271)	test_acc   0.87 (  0.87)	test_minacc   0.83 (  0.83)	test_majacc   0.87 (  0.87)	Loss_d 0.271 (0.271)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.269 (0.281)	test_acc   0.87 (  0.86)	test_minacc   0.86 (  0.85)	test_majacc   0.87 (  0.86)	Loss_d 0.269 (0.281)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.86 (  0.85)	test_majacc_d   0.87 (  0.86)	test_corr_d   0.71 (  0.67)
Test: [  20/  26]	Loss 0.294 (0.284)	test_acc   0.85 (  0.86)	test_minacc   0.87 (  0.86)	test_majacc   0.85 (  0.86)	Loss_d 0.294 (0.284)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.87 (  0.86)	test_majacc_d   0.85 (  0.86)	test_corr_d   0.67 (  0.66)
Test: [  26/  26]	Loss 0.276 (0.284)	test_acc   0.88 (  0.86)	test_minacc   0.95 (  0.85)	test_majacc   0.86 (  0.86)	Loss_d 0.276 (0.284)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.95 (  0.85)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.66 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.88it/s]
Test: [  0/  1]	Loss 1.578 (1.578)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.85 (  0.85)	Loss_d 1.578 (1.578)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.578 (1.578)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.85 (  0.85)	Loss_d 1.578 (1.578)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.15 (  0.15)
Overall Timing[ 17/  1]	epoch_time 0.0381 (0.0429)	validation_time 0.0004 (0.0008)	train_time 0.0377 (0.0420)
record: (train_acc, test_acc) (0.8482000259160996, 0.6170000433921814)
last accs (train_acc, test_acc) (0.8613000208735466, 0.5980000495910645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.66it/s] 19%|#9        | 5/26 [00:00<00:01, 19.52it/s] 35%|###4      | 9/26 [00:00<00:00, 25.55it/s] 50%|#####     | 13/26 [00:00<00:00, 28.86it/s] 65%|######5   | 17/26 [00:00<00:00, 30.09it/s] 81%|########  | 21/26 [00:00<00:00, 31.53it/s] 96%|#########6| 25/26 [00:00<00:00, 32.53it/s]100%|##########| 26/26 [00:00<00:00, 27.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.001)	train_nll   0.30 (  0.30)	train_penalty   0.00 (  0.00)	weight_norm  24.33 ( 24.33)	train_acc   0.85 (  0.85)	train_minacc   0.95 (  0.87)	train_majacc   0.84 (  0.84)	train_corr   0.00 (  0.00)	l1 6.4331 (6.4334)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.75it/s] 27%|##6       | 7/26 [00:00<00:00, 32.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.92it/s] 46%|####6     | 12/26 [00:00<00:00, 38.95it/s] 65%|######5   | 17/26 [00:00<00:00, 41.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.41it/s] 85%|########4 | 22/26 [00:00<00:00, 43.43it/s]100%|##########| 26/26 [00:00<00:00, 36.80it/s]
Test: [   0/  26]	Loss 0.290 (0.290)	test_acc   0.85 (  0.85)	test_minacc   0.83 (  0.83)	test_majacc   0.86 (  0.86)	Loss_d 0.290 (0.290)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.266 (0.290)	test_acc   0.87 (  0.85)	test_minacc   0.89 (  0.86)	test_majacc   0.86 (  0.85)	Loss_d 0.266 (0.290)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.86 (  0.85)	test_corr_d   0.69 (  0.65)
Test: [  20/  26]	Loss 0.298 (0.290)	test_acc   0.85 (  0.85)	test_minacc   0.89 (  0.87)	test_majacc   0.84 (  0.85)	Loss_d 0.298 (0.290)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.89 (  0.87)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.66 (  0.64)
Test: [  26/  26]	Loss 0.300 (0.292)	test_acc   0.85 (  0.85)	test_minacc   0.95 (  0.86)	test_majacc   0.84 (  0.85)	Loss_d 0.300 (0.292)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.95 (  0.86)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.62 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.09it/s]
Test: [  0/  1]	Loss 1.618 (1.618)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.85 (  0.85)	Loss_d 1.618 (1.618)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.618 (1.618)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.85 (  0.85)	Loss_d 1.618 (1.618)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.11 (  0.11)
Overall Timing[ 18/  1]	epoch_time 0.0418 (0.0429)	validation_time 0.0004 (0.0008)	train_time 0.0413 (0.0420)
record: (train_acc, test_acc) (0.8482000259160996, 0.6170000433921814)
last accs (train_acc, test_acc) (0.8504000275731086, 0.6080000400543213)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.02it/s] 19%|#9        | 5/26 [00:00<00:00, 24.50it/s] 35%|###4      | 9/26 [00:00<00:00, 27.42it/s] 50%|#####     | 13/26 [00:00<00:00, 29.97it/s] 65%|######5   | 17/26 [00:00<00:00, 31.55it/s] 81%|########  | 21/26 [00:00<00:00, 32.87it/s] 96%|#########6| 25/26 [00:00<00:00, 34.12it/s]100%|##########| 26/26 [00:00<00:00, 29.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.30 (  0.30)	train_penalty   0.00 (  0.00)	weight_norm  24.33 ( 24.33)	train_acc   0.85 (  0.84)	train_minacc   0.95 (  0.87)	train_majacc   0.84 (  0.84)	train_corr   0.00 (  0.00)	l1 6.4168 (6.5288)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.03it/s] 23%|##3       | 6/26 [00:00<00:00, 27.59it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.59it/s] 42%|####2     | 11/26 [00:00<00:00, 34.95it/s] 62%|######1   | 16/26 [00:00<00:00, 40.03it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.03it/s] 81%|########  | 21/26 [00:00<00:00, 40.07it/s]100%|##########| 26/26 [00:00<00:00, 42.49it/s]100%|##########| 26/26 [00:00<00:00, 34.61it/s]
Test: [   0/  26]	Loss 0.290 (0.290)	test_acc   0.85 (  0.85)	test_minacc   0.84 (  0.84)	test_majacc   0.85 (  0.85)	Loss_d 0.290 (0.290)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.272 (0.291)	test_acc   0.85 (  0.85)	test_minacc   0.86 (  0.86)	test_majacc   0.85 (  0.85)	Loss_d 0.272 (0.291)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.69 (  0.66)
Test: [  20/  26]	Loss 0.291 (0.289)	test_acc   0.85 (  0.85)	test_minacc   0.87 (  0.87)	test_majacc   0.84 (  0.85)	Loss_d 0.291 (0.289)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.67 (  0.65)
Test: [  26/  26]	Loss 0.302 (0.291)	test_acc   0.85 (  0.85)	test_minacc   0.92 (  0.86)	test_majacc   0.84 (  0.85)	Loss_d 0.302 (0.291)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.92 (  0.86)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.63 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.97it/s]
Test: [  0/  1]	Loss 1.623 (1.623)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.85 (  0.85)	Loss_d 1.623 (1.623)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.623 (1.623)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.85 (  0.85)	Loss_d 1.623 (1.623)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.13 (  0.13)
Overall Timing[ 19/  1]	epoch_time 0.0409 (0.0428)	validation_time 0.0003 (0.0007)	train_time 0.0406 (0.0419)
record: (train_acc, test_acc) (0.8482000259160996, 0.6170000433921814)
last accs (train_acc, test_acc) (0.8501000250577927, 0.6010000109672546)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.99it/s] 19%|#9        | 5/26 [00:00<00:01, 13.39it/s] 35%|###4      | 9/26 [00:00<00:00, 20.36it/s] 50%|#####     | 13/26 [00:00<00:00, 25.00it/s] 65%|######5   | 17/26 [00:00<00:00, 28.69it/s] 81%|########  | 21/26 [00:00<00:00, 31.84it/s] 96%|#########6| 25/26 [00:00<00:00, 33.41it/s]100%|##########| 26/26 [00:01<00:00, 24.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.31 (  0.30)	train_penalty   0.00 (  0.00)	weight_norm  24.33 ( 24.33)	train_acc   0.84 (  0.85)	train_minacc   0.92 (  0.86)	train_majacc   0.83 (  0.84)	train_corr   0.00 (  0.00)	l1 6.5827 (6.5360)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.59it/s] 27%|##6       | 7/26 [00:00<00:00, 25.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.87it/s] 46%|####6     | 12/26 [00:00<00:00, 34.02it/s] 65%|######5   | 17/26 [00:00<00:00, 37.59it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.59it/s] 85%|########4 | 22/26 [00:00<00:00, 39.25it/s]100%|##########| 26/26 [00:00<00:00, 32.92it/s]
Test: [   0/  26]	Loss 0.299 (0.299)	test_acc   0.84 (  0.84)	test_minacc   0.81 (  0.81)	test_majacc   0.85 (  0.85)	Loss_d 0.299 (0.299)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.283 (0.304)	test_acc   0.85 (  0.84)	test_minacc   0.86 (  0.84)	test_majacc   0.84 (  0.83)	Loss_d 0.283 (0.304)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.86 (  0.84)	test_majacc_d   0.84 (  0.83)	test_corr_d   0.68 (  0.64)
Test: [  20/  26]	Loss 0.286 (0.297)	test_acc   0.86 (  0.84)	test_minacc   0.89 (  0.86)	test_majacc   0.86 (  0.84)	Loss_d 0.286 (0.297)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.86 (  0.84)	test_corr_d   0.67 (  0.64)
Test: [  26/  26]	Loss 0.307 (0.297)	test_acc   0.84 (  0.84)	test_minacc   0.92 (  0.85)	test_majacc   0.83 (  0.84)	Loss_d 0.307 (0.297)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.92 (  0.85)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.62 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.42it/s]
Test: [  0/  1]	Loss 1.661 (1.661)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.85 (  0.85)	Loss_d 1.661 (1.661)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.661 (1.661)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.85 (  0.85)	Loss_d 1.661 (1.661)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.13 (  0.13)
Overall Timing[ 20/  1]	epoch_time 0.0396 (0.0426)	validation_time 0.0004 (0.0007)	train_time 0.0391 (0.0418)
record: (train_acc, test_acc) (0.8482000259160996, 0.6170000433921814)
last accs (train_acc, test_acc) (0.8436000192165375, 0.6040000319480896)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.76it/s] 12%|#1        | 3/26 [00:00<00:02, 10.66it/s] 27%|##6       | 7/26 [00:00<00:00, 19.83it/s] 42%|####2     | 11/26 [00:00<00:00, 24.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.40it/s] 88%|########8 | 23/26 [00:00<00:00, 32.02it/s]100%|##########| 26/26 [00:01<00:00, 25.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.000)	train_nll   0.32 (  0.30)	train_penalty   0.00 (  0.00)	weight_norm  24.34 ( 24.33)	train_acc   0.84 (  0.85)	train_minacc   0.92 (  0.86)	train_majacc   0.82 (  0.84)	train_corr   0.00 (  0.00)	l1 6.8205 (6.5637)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.50it/s] 27%|##6       | 7/26 [00:00<00:00, 24.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.96it/s] 46%|####6     | 12/26 [00:00<00:00, 32.01it/s] 65%|######5   | 17/26 [00:00<00:00, 34.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.35it/s] 85%|########4 | 22/26 [00:00<00:00, 38.26it/s]100%|##########| 26/26 [00:00<00:00, 31.24it/s]
Test: [   0/  26]	Loss 0.307 (0.307)	test_acc   0.84 (  0.84)	test_minacc   0.84 (  0.84)	test_majacc   0.84 (  0.84)	Loss_d 0.307 (0.307)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.302 (0.319)	test_acc   0.83 (  0.82)	test_minacc   0.84 (  0.85)	test_majacc   0.83 (  0.82)	Loss_d 0.302 (0.319)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.84 (  0.85)	test_majacc_d   0.83 (  0.82)	test_corr_d   0.66 (  0.62)
Test: [  20/  26]	Loss 0.287 (0.310)	test_acc   0.86 (  0.83)	test_minacc   0.89 (  0.86)	test_majacc   0.85 (  0.83)	Loss_d 0.287 (0.310)	test_acc_d   0.86 (  0.83)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.85 (  0.83)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.309 (0.308)	test_acc   0.84 (  0.84)	test_minacc   0.92 (  0.86)	test_majacc   0.83 (  0.83)	Loss_d 0.309 (0.308)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.92 (  0.86)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.60 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.89it/s]
Test: [  0/  1]	Loss 1.692 (1.692)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.84 (  0.84)	Loss_d 1.692 (1.692)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.692 (1.692)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.84 (  0.84)	Loss_d 1.692 (1.692)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.09 (  0.09)
Overall Timing[ 21/  1]	epoch_time 0.0423 (0.0426)	validation_time 0.0004 (0.0007)	train_time 0.0419 (0.0418)
record: (train_acc, test_acc) (0.8482000259160996, 0.6170000433921814)
last accs (train_acc, test_acc) (0.8351000208854675, 0.612000048160553)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.37it/s] 12%|#1        | 3/26 [00:00<00:02, 10.22it/s] 27%|##6       | 7/26 [00:00<00:00, 19.58it/s] 42%|####2     | 11/26 [00:00<00:00, 25.56it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.78it/s] 88%|########8 | 23/26 [00:00<00:00, 33.49it/s]100%|##########| 26/26 [00:01<00:00, 25.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.30 (  0.29)	train_penalty   0.00 (  0.00)	weight_norm  24.34 ( 24.34)	train_acc   0.85 (  0.85)	train_minacc   0.95 (  0.86)	train_majacc   0.84 (  0.85)	train_corr   0.00 (  0.00)	l1 7.1185 (6.6330)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.00it/s] 23%|##3       | 6/26 [00:00<00:00, 23.15it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.15it/s] 42%|####2     | 11/26 [00:00<00:00, 31.97it/s] 62%|######1   | 16/26 [00:00<00:00, 36.81it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.81it/s] 81%|########  | 21/26 [00:00<00:00, 36.59it/s]100%|##########| 26/26 [00:00<00:00, 40.06it/s]100%|##########| 26/26 [00:00<00:00, 31.98it/s]
Test: [   0/  26]	Loss 0.305 (0.305)	test_acc   0.84 (  0.84)	test_minacc   0.86 (  0.86)	test_majacc   0.83 (  0.83)	Loss_d 0.305 (0.305)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.318 (0.326)	test_acc   0.83 (  0.82)	test_minacc   0.82 (  0.86)	test_majacc   0.84 (  0.82)	Loss_d 0.318 (0.326)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.84 (  0.82)	test_corr_d   0.64 (  0.60)
Test: [  20/  26]	Loss 0.289 (0.321)	test_acc   0.85 (  0.83)	test_minacc   0.89 (  0.86)	test_majacc   0.84 (  0.82)	Loss_d 0.289 (0.321)	test_acc_d   0.85 (  0.83)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.84 (  0.82)	test_corr_d   0.64 (  0.60)
Test: [  26/  26]	Loss 0.297 (0.316)	test_acc   0.85 (  0.83)	test_minacc   0.95 (  0.86)	test_majacc   0.84 (  0.83)	Loss_d 0.297 (0.316)	test_acc_d   0.85 (  0.83)	test_minacc_d   0.95 (  0.86)	test_majacc_d   0.84 (  0.83)	test_corr_d   0.60 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.41it/s]
Test: [  0/  1]	Loss 1.770 (1.770)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.84 (  0.84)	Loss_d 1.770 (1.770)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 1.770 (1.770)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.84 (  0.84)	Loss_d 1.770 (1.770)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.07 (  0.07)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/152/checkpoints/model_best.pth
Overall Timing[ 22/  1]	epoch_time 0.0379 (0.0424)	validation_time 0.0005 (0.0007)	train_time 0.0374 (0.0416)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.31it/s] 15%|#5        | 4/26 [00:00<00:01, 19.42it/s] 31%|###       | 8/26 [00:00<00:00, 26.24it/s] 46%|####6     | 12/26 [00:00<00:00, 29.74it/s] 62%|######1   | 16/26 [00:00<00:00, 31.67it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.93it/s] 92%|#########2| 24/26 [00:00<00:00, 33.62it/s]100%|##########| 26/26 [00:00<00:00, 28.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 7.093507766723633
set z to 7.022572689056396
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 379 tensor(-0.0110, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.000 (0.001)	train_nll   0.26 (  0.28)	train_penalty   0.00 (  0.00)	weight_norm  24.35 ( 24.34)	train_acc   0.87 (  0.85)	train_minacc   0.92 (  0.86)	train_majacc   0.86 (  0.85)	train_corr   0.00 (  0.00)	l1 7.1270 (6.7492)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.27it/s] 23%|##3       | 6/26 [00:00<00:01, 19.44it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.44it/s] 42%|####2     | 11/26 [00:00<00:00, 28.46it/s] 62%|######1   | 16/26 [00:00<00:00, 34.67it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.67it/s] 81%|########  | 21/26 [00:00<00:00, 38.10it/s]100%|##########| 26/26 [00:00<00:00, 41.15it/s]100%|##########| 26/26 [00:00<00:00, 30.72it/s]
Test: [   0/  26]	Loss 1.020 (1.020)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.47 (  0.47)	Loss_d 1.020 (1.020)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.997 (1.009)	test_acc   0.51 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.997 (1.009)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.15 (  0.18)
Test: [  20/  26]	Loss 0.990 (1.019)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.990 (1.019)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.17 (  0.18)
Test: [  26/  26]	Loss 0.952 (1.015)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.952 (1.015)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.09 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.48it/s]
Test: [  0/  1]	Loss 1.933 (1.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.933 (1.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.30 ( -0.30)
Test: [  1/  1]	Loss 1.933 (1.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.933 (1.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.30 ( -0.30)
Overall Timing[ 23/  1]	epoch_time 0.0385 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0381 (0.0414)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.5000000115931034, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.27it/s] 19%|#9        | 5/26 [00:00<00:00, 24.16it/s] 31%|###       | 8/26 [00:00<00:00, 25.82it/s] 46%|####6     | 12/26 [00:00<00:00, 28.05it/s] 62%|######1   | 16/26 [00:00<00:00, 29.57it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.38it/s] 88%|########8 | 23/26 [00:00<00:00, 30.13it/s]100%|##########| 26/26 [00:00<00:00, 27.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 308 tensor(-0.0096, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 225 tensor(-0.0128, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 207 tensor(-0.0065, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 197 tensor(-0.0051, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 190 tensor(-0.0037, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 183 tensor(-0.0018, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.004 (0.026)	train_nll   0.46 (  0.45)	train_penalty   0.00 (  0.03)	weight_norm  25.65 ( 25.04)	train_acc   0.76 (  0.77)	train_minacc   0.86 (  0.65)	train_majacc   0.74 (  0.79)	train_corr   0.00 (  0.00)	l1 7.8697 (8.4819)	zero_count 0.0000 (60.8400)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.79it/s] 23%|##3       | 6/26 [00:00<00:00, 25.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.39it/s] 42%|####2     | 11/26 [00:00<00:00, 33.68it/s] 62%|######1   | 16/26 [00:00<00:00, 38.94it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.94it/s] 81%|########  | 21/26 [00:00<00:00, 38.27it/s]100%|##########| 26/26 [00:00<00:00, 41.48it/s]100%|##########| 26/26 [00:00<00:00, 33.37it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.49 (  0.49)	test_minacc   0.89 (  0.89)	test_majacc   0.41 (  0.41)	Loss_d 0.560 (0.560)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.555 (0.559)	test_acc   0.48 (  0.48)	test_minacc   0.95 (  0.89)	test_majacc   0.40 (  0.40)	Loss_d 0.555 (0.559)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.95 (  0.89)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.45 (  0.51)
Test: [  20/  26]	Loss 0.597 (0.564)	test_acc   0.47 (  0.47)	test_minacc   0.91 (  0.90)	test_majacc   0.40 (  0.40)	Loss_d 0.597 (0.564)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.51 (  0.51)
Test: [  26/  26]	Loss 0.527 (0.564)	test_acc   0.48 (  0.47)	test_minacc   0.95 (  0.89)	test_majacc   0.39 (  0.40)	Loss_d 0.527 (0.564)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.95 (  0.89)	test_majacc_d   0.39 (  0.40)	test_corr_d   0.44 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.66it/s]
Test: [  0/  1]	Loss 1.437 (1.437)	test_acc   0.71 (  0.71)	test_minacc   0.74 (  0.74)	test_majacc   0.42 (  0.42)	Loss_d 1.437 (1.437)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.437 (1.437)	test_acc   0.71 (  0.71)	test_minacc   0.74 (  0.74)	test_majacc   0.42 (  0.42)	Loss_d 1.437 (1.437)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.10 (  0.10)
Overall Timing[ 24/  1]	epoch_time 0.0419 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0415 (0.0414)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.47120000544190405, 0.7110000252723694)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.58it/s] 19%|#9        | 5/26 [00:00<00:01, 11.98it/s] 31%|###       | 8/26 [00:00<00:01, 16.72it/s] 42%|####2     | 11/26 [00:00<00:00, 20.03it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.31it/s] 69%|######9   | 18/26 [00:00<00:00, 25.78it/s] 81%|########  | 21/26 [00:01<00:00, 26.52it/s] 96%|#########6| 25/26 [00:01<00:00, 28.87it/s]100%|##########| 26/26 [00:01<00:00, 20.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 182 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 180 tensor(-0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 178 tensor(-0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 178 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 193 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 262 tensor(-0.0006, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.001)	train_nll   0.54 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.91 ( 25.84)	train_acc   0.54 (  0.52)	train_minacc   1.00 (  0.94)	train_majacc   0.46 (  0.45)	train_corr   0.00 (  0.00)	l1 7.1356 (7.2127)	zero_count 0.0000 (76.9080)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.58it/s] 31%|###       | 8/26 [00:00<00:00, 34.59it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.59it/s] 50%|#####     | 13/26 [00:00<00:00, 39.30it/s] 69%|######9   | 18/26 [00:00<00:00, 42.21it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.21it/s] 88%|########8 | 23/26 [00:00<00:00, 39.55it/s]100%|##########| 26/26 [00:00<00:00, 37.06it/s]
Test: [   0/  26]	Loss 0.540 (0.540)	test_acc   0.51 (  0.51)	test_minacc   0.98 (  0.98)	test_majacc   0.42 (  0.42)	Loss_d 0.540 (0.540)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.554 (0.556)	test_acc   0.45 (  0.47)	test_minacc   0.96 (  0.95)	test_majacc   0.36 (  0.39)	Loss_d 0.554 (0.556)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.96 (  0.95)	test_majacc_d   0.36 (  0.39)	test_corr_d   0.47 (  0.51)
Test: [  20/  26]	Loss 0.577 (0.558)	test_acc   0.45 (  0.47)	test_minacc   0.96 (  0.96)	test_majacc   0.36 (  0.39)	Loss_d 0.577 (0.558)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.96 (  0.96)	test_majacc_d   0.36 (  0.39)	test_corr_d   0.50 (  0.51)
Test: [  26/  26]	Loss 0.542 (0.559)	test_acc   0.48 (  0.47)	test_minacc   1.00 (  0.95)	test_majacc   0.39 (  0.39)	Loss_d 0.542 (0.559)	test_acc_d   0.48 (  0.47)	test_minacc_d   1.00 (  0.95)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.49 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.39it/s]
Test: [  0/  1]	Loss 1.534 (1.534)	test_acc   0.74 (  0.74)	test_minacc   0.78 (  0.78)	test_majacc   0.40 (  0.40)	Loss_d 1.534 (1.534)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.534 (1.534)	test_acc   0.74 (  0.74)	test_minacc   0.78 (  0.78)	test_majacc   0.40 (  0.40)	Loss_d 1.534 (1.534)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.33 (  0.33)
Overall Timing[ 25/  1]	epoch_time 0.0426 (0.0422)	validation_time 0.0003 (0.0007)	train_time 0.0422 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4704000047445297, 0.7440000176429749)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.96it/s] 15%|#5        | 4/26 [00:00<00:01, 19.40it/s] 27%|##6       | 7/26 [00:00<00:00, 21.94it/s] 38%|###8      | 10/26 [00:00<00:00, 23.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.64it/s] 65%|######5   | 17/26 [00:00<00:00, 27.14it/s] 81%|########  | 21/26 [00:00<00:00, 29.60it/s] 96%|#########6| 25/26 [00:00<00:00, 31.19it/s]100%|##########| 26/26 [00:00<00:00, 26.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 292 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 325 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 347 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 398 tensor(-0.0003, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.94 ( 25.93)	train_acc   0.51 (  0.45)	train_minacc   1.00 (  0.94)	train_majacc   0.43 (  0.36)	train_corr   0.00 (  0.00)	l1 7.0218 (7.0274)	zero_count 0.0000 (31.9020)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.96it/s] 27%|##6       | 7/26 [00:00<00:00, 33.61it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.61it/s] 46%|####6     | 12/26 [00:00<00:00, 39.04it/s] 65%|######5   | 17/26 [00:00<00:00, 37.36it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.36it/s] 85%|########4 | 22/26 [00:00<00:00, 40.30it/s]100%|##########| 26/26 [00:00<00:00, 35.83it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.48 (  0.48)	test_minacc   0.98 (  0.98)	test_majacc   0.38 (  0.38)	Loss_d 0.547 (0.547)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.564 (0.561)	test_acc   0.43 (  0.45)	test_minacc   0.95 (  0.95)	test_majacc   0.34 (  0.36)	Loss_d 0.564 (0.561)	test_acc_d   0.43 (  0.45)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.34 (  0.36)	test_corr_d   0.45 (  0.49)
Test: [  20/  26]	Loss 0.581 (0.563)	test_acc   0.43 (  0.45)	test_minacc   0.96 (  0.95)	test_majacc   0.34 (  0.36)	Loss_d 0.581 (0.563)	test_acc_d   0.43 (  0.45)	test_minacc_d   0.96 (  0.95)	test_majacc_d   0.34 (  0.36)	test_corr_d   0.47 (  0.49)
Test: [  26/  26]	Loss 0.550 (0.563)	test_acc   0.46 (  0.45)	test_minacc   1.00 (  0.94)	test_majacc   0.37 (  0.36)	Loss_d 0.550 (0.563)	test_acc_d   0.46 (  0.45)	test_minacc_d   1.00 (  0.94)	test_majacc_d   0.37 (  0.36)	test_corr_d   0.47 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.11it/s]
Test: [  0/  1]	Loss 1.467 (1.467)	test_acc   0.75 (  0.75)	test_minacc   0.79 (  0.79)	test_majacc   0.39 (  0.39)	Loss_d 1.467 (1.467)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.467 (1.467)	test_acc   0.75 (  0.75)	test_minacc   0.79 (  0.79)	test_majacc   0.39 (  0.39)	Loss_d 1.467 (1.467)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.31 (  0.31)
Overall Timing[ 26/  1]	epoch_time 0.0413 (0.0422)	validation_time 0.0005 (0.0007)	train_time 0.0409 (0.0414)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4453000034093857, 0.7470000386238098)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.51it/s] 15%|#5        | 4/26 [00:00<00:01, 16.76it/s] 31%|###       | 8/26 [00:00<00:00, 23.78it/s] 42%|####2     | 11/26 [00:00<00:00, 24.19it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.04it/s] 69%|######9   | 18/26 [00:00<00:00, 28.34it/s] 81%|########  | 21/26 [00:00<00:00, 27.56it/s] 96%|#########6| 25/26 [00:00<00:00, 29.99it/s]100%|##########| 26/26 [00:01<00:00, 24.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 432 tensor(-4.1803e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 396 tensor(3.8714e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 393 tensor(1.9472e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 390 tensor(-1.1098e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.94 ( 25.94)	train_acc   0.44 (  0.43)	train_minacc   1.00 (  0.94)	train_majacc   0.34 (  0.34)	train_corr   0.00 (  0.00)	l1 6.9852 (7.0208)	zero_count 0.0000 (21.2940)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.25it/s] 27%|##6       | 7/26 [00:00<00:00, 35.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.09it/s] 46%|####6     | 12/26 [00:00<00:00, 39.96it/s] 65%|######5   | 17/26 [00:00<00:00, 39.02it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.02it/s] 85%|########4 | 22/26 [00:00<00:00, 41.16it/s]100%|##########| 26/26 [00:00<00:00, 36.13it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.50 (  0.50)	test_minacc   0.97 (  0.97)	test_majacc   0.40 (  0.40)	Loss_d 0.547 (0.547)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.565 (0.561)	test_acc   0.42 (  0.45)	test_minacc   0.96 (  0.95)	test_majacc   0.33 (  0.36)	Loss_d 0.565 (0.561)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.96 (  0.95)	test_majacc_d   0.33 (  0.36)	test_corr_d   0.46 (  0.49)
Test: [  20/  26]	Loss 0.573 (0.561)	test_acc   0.42 (  0.45)	test_minacc   0.95 (  0.95)	test_majacc   0.33 (  0.36)	Loss_d 0.573 (0.561)	test_acc_d   0.42 (  0.45)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.33 (  0.36)	test_corr_d   0.48 (  0.50)
Test: [  26/  26]	Loss 0.551 (0.562)	test_acc   0.45 (  0.45)	test_minacc   1.00 (  0.94)	test_majacc   0.35 (  0.36)	Loss_d 0.551 (0.562)	test_acc_d   0.45 (  0.45)	test_minacc_d   1.00 (  0.94)	test_majacc_d   0.35 (  0.36)	test_corr_d   0.47 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.13it/s]
Test: [  0/  1]	Loss 1.473 (1.473)	test_acc   0.74 (  0.74)	test_minacc   0.78 (  0.78)	test_majacc   0.38 (  0.38)	Loss_d 1.473 (1.473)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.473 (1.473)	test_acc   0.74 (  0.74)	test_minacc   0.78 (  0.78)	test_majacc   0.38 (  0.38)	Loss_d 1.473 (1.473)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.33 (  0.33)
Overall Timing[ 27/  1]	epoch_time 0.0435 (0.0422)	validation_time 0.0004 (0.0006)	train_time 0.0430 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.44650000461935996, 0.7420000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 19%|#9        | 5/26 [00:00<00:00, 23.18it/s] 35%|###4      | 9/26 [00:00<00:00, 28.31it/s] 50%|#####     | 13/26 [00:00<00:00, 28.36it/s] 65%|######5   | 17/26 [00:00<00:00, 30.83it/s] 81%|########  | 21/26 [00:00<00:00, 30.26it/s] 96%|#########6| 25/26 [00:00<00:00, 32.05it/s]100%|##########| 26/26 [00:00<00:00, 28.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 375 tensor(7.0004e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 373 tensor(4.3914e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.94 ( 25.94)	train_acc   0.44 (  0.43)	train_minacc   1.00 (  0.92)	train_majacc   0.34 (  0.34)	train_corr   0.00 (  0.00)	l1 6.9773 (7.0076)	zero_count 0.0000 (10.6860)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.17it/s] 27%|##6       | 7/26 [00:00<00:00, 35.57it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.57it/s] 46%|####6     | 12/26 [00:00<00:00, 40.71it/s] 65%|######5   | 17/26 [00:00<00:00, 39.82it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.82it/s] 85%|########4 | 22/26 [00:00<00:00, 42.98it/s]100%|##########| 26/26 [00:00<00:00, 38.67it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.47 (  0.47)	test_minacc   0.95 (  0.95)	test_majacc   0.38 (  0.38)	Loss_d 0.550 (0.550)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.568 (0.564)	test_acc   0.41 (  0.43)	test_minacc   0.96 (  0.94)	test_majacc   0.32 (  0.34)	Loss_d 0.568 (0.564)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.96 (  0.94)	test_majacc_d   0.32 (  0.34)	test_corr_d   0.46 (  0.49)
Test: [  20/  26]	Loss 0.571 (0.563)	test_acc   0.41 (  0.43)	test_minacc   0.96 (  0.95)	test_majacc   0.32 (  0.34)	Loss_d 0.571 (0.563)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.96 (  0.95)	test_majacc_d   0.32 (  0.34)	test_corr_d   0.48 (  0.49)
Test: [  26/  26]	Loss 0.554 (0.564)	test_acc   0.44 (  0.43)	test_minacc   1.00 (  0.94)	test_majacc   0.34 (  0.34)	Loss_d 0.554 (0.564)	test_acc_d   0.44 (  0.43)	test_minacc_d   1.00 (  0.94)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.47 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.65it/s]
Test: [  0/  1]	Loss 1.487 (1.487)	test_acc   0.74 (  0.74)	test_minacc   0.78 (  0.78)	test_majacc   0.37 (  0.37)	Loss_d 1.487 (1.487)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.487 (1.487)	test_acc   0.74 (  0.74)	test_minacc   0.78 (  0.78)	test_majacc   0.37 (  0.37)	Loss_d 1.487 (1.487)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.34 (  0.34)
Overall Timing[ 28/  1]	epoch_time 0.0404 (0.0422)	validation_time 0.0003 (0.0006)	train_time 0.0400 (0.0414)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.42920000460743907, 0.737000048160553)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s]  8%|7         | 2/26 [00:00<00:04,  5.90it/s] 23%|##3       | 6/26 [00:00<00:01, 15.88it/s] 38%|###8      | 10/26 [00:00<00:00, 22.18it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.34it/s] 69%|######9   | 18/26 [00:00<00:00, 28.75it/s] 85%|########4 | 22/26 [00:00<00:00, 30.90it/s]100%|##########| 26/26 [00:01<00:00, 32.56it/s]100%|##########| 26/26 [00:01<00:00, 24.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.43 (  0.42)	train_minacc   0.97 (  0.92)	train_majacc   0.33 (  0.34)	train_corr   0.00 (  0.00)	l1 6.9900 (6.9908)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.32it/s] 19%|#9        | 5/26 [00:00<00:01, 11.19it/s] 38%|###8      | 10/26 [00:00<00:00, 20.41it/s]                                                38%|###8      | 10/26 [00:00<00:00, 20.41it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.40it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.18it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 32.18it/s] 96%|#########6| 25/26 [00:00<00:00, 36.16it/s]100%|##########| 26/26 [00:01<00:00, 24.37it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.43 (  0.43)	test_minacc   0.95 (  0.95)	test_majacc   0.33 (  0.33)	Loss_d 0.556 (0.556)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.573 (0.569)	test_acc   0.41 (  0.41)	test_minacc   0.95 (  0.93)	test_majacc   0.32 (  0.32)	Loss_d 0.573 (0.569)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.95 (  0.93)	test_majacc_d   0.32 (  0.32)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.573 (0.569)	test_acc   0.41 (  0.42)	test_minacc   0.96 (  0.94)	test_majacc   0.32 (  0.32)	Loss_d 0.573 (0.569)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.96 (  0.94)	test_majacc_d   0.32 (  0.32)	test_corr_d   0.47 (  0.48)
Test: [  26/  26]	Loss 0.559 (0.569)	test_acc   0.43 (  0.42)	test_minacc   1.00 (  0.93)	test_majacc   0.33 (  0.33)	Loss_d 0.559 (0.569)	test_acc_d   0.43 (  0.42)	test_minacc_d   1.00 (  0.93)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.09it/s]
Test: [  0/  1]	Loss 1.495 (1.495)	test_acc   0.73 (  0.73)	test_minacc   0.76 (  0.76)	test_majacc   0.37 (  0.37)	Loss_d 1.495 (1.495)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.495 (1.495)	test_acc   0.73 (  0.73)	test_minacc   0.76 (  0.76)	test_majacc   0.37 (  0.37)	Loss_d 1.495 (1.495)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.34 (  0.34)
Overall Timing[ 29/  1]	epoch_time 0.0445 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0440 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4160000051856041, 0.7250000238418579)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.29it/s] 19%|#9        | 5/26 [00:00<00:01, 11.11it/s] 35%|###4      | 9/26 [00:00<00:00, 17.60it/s] 50%|#####     | 13/26 [00:00<00:00, 22.46it/s] 65%|######5   | 17/26 [00:00<00:00, 25.91it/s] 81%|########  | 21/26 [00:01<00:00, 28.55it/s] 96%|#########6| 25/26 [00:01<00:00, 30.59it/s]100%|##########| 26/26 [00:01<00:00, 21.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.95 (  0.92)	train_majacc   0.35 (  0.33)	train_corr   0.00 (  0.00)	l1 7.0114 (6.9912)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 13.57it/s] 31%|###       | 8/26 [00:00<00:00, 27.20it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.20it/s] 50%|#####     | 13/26 [00:00<00:00, 33.57it/s] 69%|######9   | 18/26 [00:00<00:00, 38.86it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.86it/s] 88%|########8 | 23/26 [00:00<00:00, 37.72it/s]100%|##########| 26/26 [00:00<00:00, 33.49it/s]
Test: [   0/  26]	Loss 0.562 (0.562)	test_acc   0.42 (  0.42)	test_minacc   0.92 (  0.92)	test_majacc   0.32 (  0.32)	Loss_d 0.562 (0.562)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.32 (  0.32)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.579 (0.575)	test_acc   0.41 (  0.41)	test_minacc   0.93 (  0.90)	test_majacc   0.33 (  0.32)	Loss_d 0.579 (0.575)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.93 (  0.90)	test_majacc_d   0.33 (  0.32)	test_corr_d   0.43 (  0.47)
Test: [  20/  26]	Loss 0.577 (0.574)	test_acc   0.40 (  0.41)	test_minacc   0.91 (  0.90)	test_majacc   0.32 (  0.33)	Loss_d 0.577 (0.574)	test_acc_d   0.40 (  0.41)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.32 (  0.33)	test_corr_d   0.46 (  0.47)
Test: [  26/  26]	Loss 0.564 (0.574)	test_acc   0.44 (  0.41)	test_minacc   0.97 (  0.89)	test_majacc   0.35 (  0.33)	Loss_d 0.564 (0.574)	test_acc_d   0.44 (  0.41)	test_minacc_d   0.97 (  0.89)	test_majacc_d   0.35 (  0.33)	test_corr_d   0.45 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.64it/s]
Test: [  0/  1]	Loss 1.497 (1.497)	test_acc   0.71 (  0.71)	test_minacc   0.75 (  0.75)	test_majacc   0.37 (  0.37)	Loss_d 1.497 (1.497)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.497 (1.497)	test_acc   0.71 (  0.71)	test_minacc   0.75 (  0.75)	test_majacc   0.37 (  0.37)	Loss_d 1.497 (1.497)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.33 (  0.33)
Overall Timing[ 30/  1]	epoch_time 0.0438 (0.0423)	validation_time 0.0005 (0.0006)	train_time 0.0433 (0.0416)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.41280000579357146, 0.7090000510215759)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.13it/s] 27%|##6       | 7/26 [00:00<00:00, 31.21it/s] 42%|####2     | 11/26 [00:00<00:00, 32.89it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.27it/s] 88%|########8 | 23/26 [00:00<00:00, 33.98it/s]100%|##########| 26/26 [00:00<00:00, 31.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.41)	train_minacc   0.95 (  0.91)	train_majacc   0.35 (  0.32)	train_corr   0.00 (  0.00)	l1 7.0209 (6.9963)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.43it/s] 19%|#9        | 5/26 [00:00<00:00, 24.23it/s] 38%|###8      | 10/26 [00:00<00:00, 33.99it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.99it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.96it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.40it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.40it/s] 96%|#########6| 25/26 [00:00<00:00, 41.35it/s]100%|##########| 26/26 [00:00<00:00, 34.70it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.41 (  0.41)	test_minacc   0.92 (  0.92)	test_majacc   0.31 (  0.31)	Loss_d 0.564 (0.564)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.580 (0.576)	test_acc   0.41 (  0.41)	test_minacc   0.93 (  0.89)	test_majacc   0.33 (  0.32)	Loss_d 0.580 (0.576)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.93 (  0.89)	test_majacc_d   0.33 (  0.32)	test_corr_d   0.43 (  0.46)
Test: [  20/  26]	Loss 0.579 (0.576)	test_acc   0.39 (  0.41)	test_minacc   0.85 (  0.89)	test_majacc   0.32 (  0.33)	Loss_d 0.579 (0.576)	test_acc_d   0.39 (  0.41)	test_minacc_d   0.85 (  0.89)	test_majacc_d   0.32 (  0.33)	test_corr_d   0.46 (  0.47)
Test: [  26/  26]	Loss 0.566 (0.576)	test_acc   0.44 (  0.41)	test_minacc   0.95 (  0.88)	test_majacc   0.36 (  0.33)	Loss_d 0.566 (0.576)	test_acc_d   0.44 (  0.41)	test_minacc_d   0.95 (  0.88)	test_majacc_d   0.36 (  0.33)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.56it/s]
Test: [  0/  1]	Loss 1.495 (1.495)	test_acc   0.71 (  0.71)	test_minacc   0.75 (  0.75)	test_majacc   0.37 (  0.37)	Loss_d 1.495 (1.495)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.495 (1.495)	test_acc   0.71 (  0.71)	test_minacc   0.75 (  0.75)	test_majacc   0.37 (  0.37)	Loss_d 1.495 (1.495)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.32 (  0.32)
Overall Timing[ 31/  1]	epoch_time 0.0398 (0.0422)	validation_time 0.0003 (0.0006)	train_time 0.0395 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.41150000607967374, 0.7090000510215759)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.85it/s] 19%|#9        | 5/26 [00:00<00:00, 21.28it/s] 35%|###4      | 9/26 [00:00<00:00, 26.63it/s] 50%|#####     | 13/26 [00:00<00:00, 29.47it/s] 65%|######5   | 17/26 [00:00<00:00, 30.19it/s] 81%|########  | 21/26 [00:00<00:00, 31.41it/s] 96%|#########6| 25/26 [00:00<00:00, 32.56it/s]100%|##########| 26/26 [00:00<00:00, 27.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.41)	train_minacc   0.95 (  0.90)	train_majacc   0.35 (  0.33)	train_corr   0.00 (  0.00)	l1 7.0195 (7.0074)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.30it/s] 23%|##3       | 6/26 [00:00<00:00, 21.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.21it/s] 42%|####2     | 11/26 [00:00<00:00, 30.65it/s] 62%|######1   | 16/26 [00:00<00:00, 36.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.55it/s] 81%|########  | 21/26 [00:00<00:00, 36.82it/s]100%|##########| 26/26 [00:00<00:00, 40.44it/s]100%|##########| 26/26 [00:00<00:00, 31.23it/s]
Test: [   0/  26]	Loss 0.563 (0.563)	test_acc   0.42 (  0.42)	test_minacc   0.91 (  0.91)	test_majacc   0.32 (  0.32)	Loss_d 0.563 (0.563)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.32 (  0.32)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.578 (0.573)	test_acc   0.42 (  0.41)	test_minacc   0.93 (  0.90)	test_majacc   0.33 (  0.33)	Loss_d 0.578 (0.573)	test_acc_d   0.42 (  0.41)	test_minacc_d   0.93 (  0.90)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.43 (  0.47)
Test: [  20/  26]	Loss 0.577 (0.574)	test_acc   0.39 (  0.41)	test_minacc   0.85 (  0.89)	test_majacc   0.32 (  0.33)	Loss_d 0.577 (0.574)	test_acc_d   0.39 (  0.41)	test_minacc_d   0.85 (  0.89)	test_majacc_d   0.32 (  0.33)	test_corr_d   0.46 (  0.47)
Test: [  26/  26]	Loss 0.565 (0.574)	test_acc   0.43 (  0.41)	test_minacc   0.89 (  0.88)	test_majacc   0.35 (  0.33)	Loss_d 0.565 (0.574)	test_acc_d   0.43 (  0.41)	test_minacc_d   0.89 (  0.88)	test_majacc_d   0.35 (  0.33)	test_corr_d   0.45 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 55.98it/s]
Test: [  0/  1]	Loss 1.492 (1.492)	test_acc   0.71 (  0.71)	test_minacc   0.74 (  0.74)	test_majacc   0.38 (  0.38)	Loss_d 1.492 (1.492)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.492 (1.492)	test_acc   0.71 (  0.71)	test_minacc   0.74 (  0.74)	test_majacc   0.38 (  0.38)	Loss_d 1.492 (1.492)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.32 (  0.32)
Overall Timing[ 32/  1]	epoch_time 0.0406 (0.0422)	validation_time 0.0005 (0.0006)	train_time 0.0401 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4118000054359436, 0.7070000171661377)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 15%|#5        | 4/26 [00:00<00:01, 17.58it/s] 31%|###       | 8/26 [00:00<00:00, 24.39it/s] 46%|####6     | 12/26 [00:00<00:00, 27.76it/s] 62%|######1   | 16/26 [00:00<00:00, 29.68it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.81it/s] 92%|#########2| 24/26 [00:00<00:00, 31.90it/s]100%|##########| 26/26 [00:00<00:00, 26.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 383 tensor(-7.8596e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.86 (  0.85)	train_majacc   0.37 (  0.34)	train_corr   0.00 (  0.00)	l1 7.0115 (7.0133)	zero_count 0.0000 (4.9920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.50it/s] 27%|##6       | 7/26 [00:00<00:00, 29.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.60it/s] 46%|####6     | 12/26 [00:00<00:00, 35.84it/s] 65%|######5   | 17/26 [00:00<00:00, 39.89it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.89it/s] 85%|########4 | 22/26 [00:00<00:00, 38.40it/s]100%|##########| 26/26 [00:00<00:00, 35.20it/s]
Test: [   0/  26]	Loss 0.562 (0.562)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.562 (0.562)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.576 (0.571)	test_acc   0.42 (  0.42)	test_minacc   0.91 (  0.87)	test_majacc   0.34 (  0.34)	Loss_d 0.576 (0.571)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.91 (  0.87)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.44 (  0.48)
Test: [  20/  26]	Loss 0.575 (0.572)	test_acc   0.41 (  0.42)	test_minacc   0.84 (  0.86)	test_majacc   0.33 (  0.34)	Loss_d 0.575 (0.572)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.84 (  0.86)	test_majacc_d   0.33 (  0.34)	test_corr_d   0.47 (  0.48)
Test: [  26/  26]	Loss 0.563 (0.572)	test_acc   0.44 (  0.42)	test_minacc   0.86 (  0.85)	test_majacc   0.37 (  0.34)	Loss_d 0.563 (0.572)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.86 (  0.85)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.01it/s]
Test: [  0/  1]	Loss 1.501 (1.501)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.39 (  0.39)	Loss_d 1.501 (1.501)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.501 (1.501)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.39 (  0.39)	Loss_d 1.501 (1.501)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.33 (  0.33)
Overall Timing[ 33/  1]	epoch_time 0.0421 (0.0422)	validation_time 0.0004 (0.0006)	train_time 0.0416 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4182000054717064, 0.687000036239624)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.50it/s] 19%|#9        | 5/26 [00:00<00:01, 19.45it/s] 35%|###4      | 9/26 [00:00<00:00, 25.57it/s] 50%|#####     | 13/26 [00:00<00:00, 29.02it/s] 65%|######5   | 17/26 [00:00<00:00, 30.79it/s] 81%|########  | 21/26 [00:00<00:00, 32.23it/s] 96%|#########6| 25/26 [00:00<00:00, 33.10it/s]100%|##########| 26/26 [00:00<00:00, 27.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.86 (  0.84)	train_majacc   0.37 (  0.34)	train_corr   0.00 (  0.00)	l1 7.0129 (7.0148)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.00it/s] 31%|###       | 8/26 [00:00<00:00, 31.50it/s]                                               31%|###       | 8/26 [00:00<00:00, 31.50it/s] 50%|#####     | 13/26 [00:00<00:00, 37.22it/s] 69%|######9   | 18/26 [00:00<00:00, 40.89it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.89it/s] 88%|########8 | 23/26 [00:00<00:00, 42.43it/s]100%|##########| 26/26 [00:00<00:00, 36.41it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.561 (0.561)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.575 (0.570)	test_acc   0.42 (  0.42)	test_minacc   0.91 (  0.87)	test_majacc   0.34 (  0.34)	Loss_d 0.575 (0.570)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.91 (  0.87)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.574 (0.571)	test_acc   0.41 (  0.42)	test_minacc   0.84 (  0.86)	test_majacc   0.33 (  0.34)	Loss_d 0.574 (0.571)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.84 (  0.86)	test_majacc_d   0.33 (  0.34)	test_corr_d   0.47 (  0.48)
Test: [  26/  26]	Loss 0.562 (0.571)	test_acc   0.44 (  0.42)	test_minacc   0.86 (  0.85)	test_majacc   0.37 (  0.34)	Loss_d 0.562 (0.571)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.86 (  0.85)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.58it/s]
Test: [  0/  1]	Loss 1.504 (1.504)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.39 (  0.39)	Loss_d 1.504 (1.504)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.504 (1.504)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.39 (  0.39)	Loss_d 1.504 (1.504)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.34 (  0.34)
Overall Timing[ 34/  1]	epoch_time 0.0436 (0.0422)	validation_time 0.0004 (0.0006)	train_time 0.0432 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.41810000547766685, 0.6850000619888306)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.53it/s] 19%|#9        | 5/26 [00:00<00:01, 17.56it/s] 35%|###4      | 9/26 [00:00<00:00, 24.31it/s] 50%|#####     | 13/26 [00:00<00:00, 27.75it/s] 65%|######5   | 17/26 [00:00<00:00, 30.24it/s] 81%|########  | 21/26 [00:00<00:00, 31.53it/s] 96%|#########6| 25/26 [00:00<00:00, 32.58it/s]100%|##########| 26/26 [00:00<00:00, 26.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.84 (  0.84)	train_majacc   0.37 (  0.35)	train_corr   0.00 (  0.00)	l1 7.0170 (7.0172)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.06it/s] 19%|#9        | 5/26 [00:00<00:00, 22.85it/s]                                               19%|#9        | 5/26 [00:00<00:00, 22.85it/s] 42%|####2     | 11/26 [00:00<00:00, 35.63it/s] 62%|######1   | 16/26 [00:00<00:00, 38.26it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.26it/s] 81%|########  | 21/26 [00:00<00:00, 40.90it/s]100%|##########| 26/26 [00:00<00:00, 35.08it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.561 (0.561)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.575 (0.570)	test_acc   0.42 (  0.42)	test_minacc   0.91 (  0.87)	test_majacc   0.34 (  0.34)	Loss_d 0.575 (0.570)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.91 (  0.87)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.574 (0.571)	test_acc   0.41 (  0.42)	test_minacc   0.84 (  0.86)	test_majacc   0.34 (  0.34)	Loss_d 0.574 (0.571)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.84 (  0.86)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.47 (  0.48)
Test: [  26/  26]	Loss 0.562 (0.571)	test_acc   0.44 (  0.42)	test_minacc   0.84 (  0.84)	test_majacc   0.37 (  0.34)	Loss_d 0.562 (0.571)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.24it/s]
Test: [  0/  1]	Loss 1.508 (1.508)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.39 (  0.39)	Loss_d 1.508 (1.508)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.508 (1.508)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.39 (  0.39)	Loss_d 1.508 (1.508)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.34 (  0.34)
Overall Timing[ 35/  1]	epoch_time 0.0415 (0.0422)	validation_time 0.0005 (0.0006)	train_time 0.0410 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4186000054478645, 0.6800000071525574)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 19%|#9        | 5/26 [00:00<00:01, 20.34it/s] 35%|###4      | 9/26 [00:00<00:00, 26.30it/s] 50%|#####     | 13/26 [00:00<00:00, 29.39it/s] 65%|######5   | 17/26 [00:00<00:00, 31.09it/s] 81%|########  | 21/26 [00:00<00:00, 32.77it/s] 96%|#########6| 25/26 [00:00<00:00, 33.41it/s]100%|##########| 26/26 [00:00<00:00, 27.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.84 (  0.84)	train_majacc   0.37 (  0.34)	train_corr   0.00 (  0.00)	l1 7.0208 (7.0191)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.84it/s] 27%|##6       | 7/26 [00:00<00:00, 29.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.17it/s] 46%|####6     | 12/26 [00:00<00:00, 37.01it/s] 65%|######5   | 17/26 [00:00<00:00, 40.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.10it/s] 85%|########4 | 22/26 [00:00<00:00, 42.46it/s]100%|##########| 26/26 [00:00<00:00, 34.28it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.561 (0.561)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.575 (0.570)	test_acc   0.42 (  0.42)	test_minacc   0.91 (  0.87)	test_majacc   0.34 (  0.34)	Loss_d 0.575 (0.570)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.91 (  0.87)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.574 (0.571)	test_acc   0.41 (  0.42)	test_minacc   0.85 (  0.85)	test_majacc   0.34 (  0.34)	Loss_d 0.574 (0.571)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.47 (  0.48)
Test: [  26/  26]	Loss 0.562 (0.571)	test_acc   0.44 (  0.42)	test_minacc   0.84 (  0.84)	test_majacc   0.37 (  0.34)	Loss_d 0.562 (0.571)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.40it/s]
Test: [  0/  1]	Loss 1.510 (1.510)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.39 (  0.39)	Loss_d 1.510 (1.510)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.510 (1.510)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.39 (  0.39)	Loss_d 1.510 (1.510)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.34 (  0.34)
Overall Timing[ 36/  1]	epoch_time 0.0411 (0.0422)	validation_time 0.0004 (0.0006)	train_time 0.0407 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4176000055074692, 0.6810000538825989)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.34it/s] 19%|#9        | 5/26 [00:00<00:00, 21.13it/s] 35%|###4      | 9/26 [00:00<00:00, 27.19it/s] 50%|#####     | 13/26 [00:00<00:00, 30.49it/s] 65%|######5   | 17/26 [00:00<00:00, 31.37it/s] 81%|########  | 21/26 [00:00<00:00, 29.37it/s] 96%|#########6| 25/26 [00:00<00:00, 28.88it/s]100%|##########| 26/26 [00:00<00:00, 26.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 399 tensor(-4.2671e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 420 tensor(1.5721e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.81 (  0.83)	train_majacc   0.38 (  0.35)	train_corr   0.00 (  0.00)	l1 7.0222 (7.0219)	zero_count 0.0000 (7.9170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.70it/s] 15%|#5        | 4/26 [00:00<00:01, 20.39it/s] 31%|###       | 8/26 [00:00<00:00, 28.23it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.23it/s] 50%|#####     | 13/26 [00:00<00:00, 36.15it/s] 69%|######9   | 18/26 [00:00<00:00, 39.94it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.94it/s] 88%|########8 | 23/26 [00:00<00:00, 38.81it/s]100%|##########| 26/26 [00:00<00:00, 33.71it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.42 (  0.42)	test_minacc   0.88 (  0.88)	test_majacc   0.33 (  0.33)	Loss_d 0.561 (0.561)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.574 (0.570)	test_acc   0.41 (  0.42)	test_minacc   0.82 (  0.83)	test_majacc   0.34 (  0.35)	Loss_d 0.574 (0.570)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.34 (  0.35)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.574 (0.571)	test_acc   0.42 (  0.42)	test_minacc   0.82 (  0.82)	test_majacc   0.36 (  0.35)	Loss_d 0.574 (0.571)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.36 (  0.35)	test_corr_d   0.47 (  0.48)
Test: [  26/  26]	Loss 0.562 (0.571)	test_acc   0.44 (  0.42)	test_minacc   0.81 (  0.82)	test_majacc   0.38 (  0.35)	Loss_d 0.562 (0.571)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.38 (  0.35)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.91it/s]
Test: [  0/  1]	Loss 1.518 (1.518)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.41 (  0.41)	Loss_d 1.518 (1.518)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.518 (1.518)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.41 (  0.41)	Loss_d 1.518 (1.518)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Overall Timing[ 37/  1]	epoch_time 0.0406 (0.0421)	validation_time 0.0004 (0.0006)	train_time 0.0402 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4227000052034855, 0.6620000600814819)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.00it/s] 19%|#9        | 5/26 [00:00<00:00, 22.00it/s] 35%|###4      | 9/26 [00:00<00:00, 28.11it/s] 50%|#####     | 13/26 [00:00<00:00, 30.61it/s] 65%|######5   | 17/26 [00:00<00:00, 32.18it/s] 81%|########  | 21/26 [00:00<00:00, 33.26it/s] 96%|#########6| 25/26 [00:00<00:00, 34.04it/s]100%|##########| 26/26 [00:00<00:00, 28.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.84 (  0.83)	train_majacc   0.37 (  0.35)	train_corr   0.00 (  0.00)	l1 7.0222 (7.0204)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.62it/s] 23%|##3       | 6/26 [00:00<00:00, 27.34it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.34it/s] 42%|####2     | 11/26 [00:00<00:00, 34.93it/s] 62%|######1   | 16/26 [00:00<00:00, 38.64it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.64it/s] 81%|########  | 21/26 [00:00<00:00, 38.04it/s]100%|##########| 26/26 [00:00<00:00, 41.25it/s]100%|##########| 26/26 [00:00<00:00, 33.73it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.561 (0.561)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.574 (0.570)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.86)	test_majacc   0.34 (  0.34)	Loss_d 0.574 (0.570)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.574 (0.571)	test_acc   0.41 (  0.42)	test_minacc   0.84 (  0.85)	test_majacc   0.34 (  0.34)	Loss_d 0.574 (0.571)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.84 (  0.85)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.47 (  0.48)
Test: [  26/  26]	Loss 0.562 (0.571)	test_acc   0.44 (  0.42)	test_minacc   0.84 (  0.84)	test_majacc   0.37 (  0.34)	Loss_d 0.562 (0.571)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.17it/s]
Test: [  0/  1]	Loss 1.517 (1.517)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.517 (1.517)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.517 (1.517)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.517 (1.517)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Overall Timing[ 38/  1]	epoch_time 0.0425 (0.0421)	validation_time 0.0005 (0.0006)	train_time 0.0420 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.41870000544190406, 0.6790000200271606)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.49it/s] 23%|##3       | 6/26 [00:00<00:00, 23.84it/s] 35%|###4      | 9/26 [00:00<00:00, 24.83it/s] 50%|#####     | 13/26 [00:00<00:00, 29.13it/s] 65%|######5   | 17/26 [00:00<00:00, 31.62it/s] 81%|########  | 21/26 [00:00<00:00, 33.35it/s] 96%|#########6| 25/26 [00:00<00:00, 34.39it/s]100%|##########| 26/26 [00:00<00:00, 28.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 401 tensor(-9.2449e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 417 tensor(1.0723e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 402 tensor(-3.9579e-06, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.81 (  0.83)	train_majacc   0.37 (  0.35)	train_corr   0.00 (  0.00)	l1 7.0226 (7.0216)	zero_count 0.0000 (7.9560)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.38it/s] 31%|###       | 8/26 [00:00<00:00, 37.50it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.50it/s] 50%|#####     | 13/26 [00:00<00:00, 36.61it/s] 69%|######9   | 18/26 [00:00<00:00, 40.24it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.24it/s] 88%|########8 | 23/26 [00:00<00:00, 41.55it/s]100%|##########| 26/26 [00:00<00:00, 36.70it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.561 (0.561)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.574 (0.569)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.85)	test_majacc   0.34 (  0.35)	Loss_d 0.574 (0.569)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.85)	test_majacc_d   0.34 (  0.35)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.574 (0.570)	test_acc   0.41 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.35 (  0.35)	Loss_d 0.574 (0.570)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.47 (  0.48)
Test: [  26/  26]	Loss 0.562 (0.570)	test_acc   0.44 (  0.42)	test_minacc   0.81 (  0.83)	test_majacc   0.37 (  0.35)	Loss_d 0.562 (0.570)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.81 (  0.83)	test_majacc_d   0.37 (  0.35)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.68it/s]
Test: [  0/  1]	Loss 1.521 (1.521)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.521 (1.521)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.521 (1.521)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.521 (1.521)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Overall Timing[ 39/  1]	epoch_time 0.0419 (0.0421)	validation_time 0.0003 (0.0006)	train_time 0.0415 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.42050000512599944, 0.6760000586509705)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.87it/s] 19%|#9        | 5/26 [00:00<00:01, 18.51it/s] 31%|###       | 8/26 [00:00<00:00, 21.69it/s] 42%|####2     | 11/26 [00:00<00:00, 24.12it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.29it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.75it/s] 88%|########8 | 23/26 [00:00<00:00, 32.14it/s]100%|##########| 26/26 [00:01<00:00, 25.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 421 tensor(1.4960e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 404 tensor(3.9772e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.81 (  0.83)	train_majacc   0.37 (  0.35)	train_corr   0.00 (  0.00)	l1 7.0221 (7.0219)	zero_count 0.0000 (11.9340)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.45it/s] 23%|##3       | 6/26 [00:00<00:00, 30.38it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.38it/s] 42%|####2     | 11/26 [00:00<00:00, 37.53it/s] 62%|######1   | 16/26 [00:00<00:00, 38.14it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.14it/s] 81%|########  | 21/26 [00:00<00:00, 40.16it/s]100%|##########| 26/26 [00:00<00:00, 42.71it/s]100%|##########| 26/26 [00:00<00:00, 35.09it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.560 (0.560)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.573 (0.569)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.86)	test_majacc   0.34 (  0.34)	Loss_d 0.573 (0.569)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.573 (0.570)	test_acc   0.41 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.35 (  0.35)	Loss_d 0.573 (0.570)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.47 (  0.49)
Test: [  26/  26]	Loss 0.561 (0.570)	test_acc   0.44 (  0.42)	test_minacc   0.81 (  0.83)	test_majacc   0.37 (  0.35)	Loss_d 0.561 (0.570)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.81 (  0.83)	test_majacc_d   0.37 (  0.35)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.28it/s]
Test: [  0/  1]	Loss 1.523 (1.523)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.523 (1.523)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.523 (1.523)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.523 (1.523)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Overall Timing[ 40/  1]	epoch_time 0.0427 (0.0421)	validation_time 0.0006 (0.0006)	train_time 0.0421 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.419300005197525, 0.6770000457763672)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.91it/s] 19%|#9        | 5/26 [00:00<00:01, 12.04it/s] 35%|###4      | 9/26 [00:00<00:00, 18.76it/s] 50%|#####     | 13/26 [00:00<00:00, 23.42it/s] 65%|######5   | 17/26 [00:00<00:00, 26.85it/s] 81%|########  | 21/26 [00:00<00:00, 29.57it/s] 96%|#########6| 25/26 [00:01<00:00, 31.47it/s]100%|##########| 26/26 [00:01<00:00, 22.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 390 tensor(1.2756e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.84 (  0.83)	train_majacc   0.37 (  0.35)	train_corr   0.00 (  0.00)	l1 7.0222 (7.0224)	zero_count 0.0000 (4.7190)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 30.01it/s] 35%|###4      | 9/26 [00:00<00:00, 38.87it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.81it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.81it/s] 92%|#########2| 24/26 [00:00<00:00, 42.13it/s]100%|##########| 26/26 [00:00<00:00, 39.03it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.560 (0.560)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.573 (0.569)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.86)	test_majacc   0.34 (  0.34)	Loss_d 0.573 (0.569)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.573 (0.569)	test_acc   0.41 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.34 (  0.34)	Loss_d 0.573 (0.569)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.47 (  0.49)
Test: [  26/  26]	Loss 0.561 (0.570)	test_acc   0.44 (  0.42)	test_minacc   0.84 (  0.83)	test_majacc   0.37 (  0.34)	Loss_d 0.561 (0.570)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.04it/s]
Test: [  0/  1]	Loss 1.524 (1.524)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.524 (1.524)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.524 (1.524)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.524 (1.524)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Overall Timing[ 41/  1]	epoch_time 0.0409 (0.0421)	validation_time 0.0005 (0.0006)	train_time 0.0403 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.41840000545978545, 0.6780000329017639)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.22it/s] 15%|#5        | 4/26 [00:00<00:01, 18.16it/s] 31%|###       | 8/26 [00:00<00:00, 24.50it/s] 42%|####2     | 11/26 [00:00<00:00, 24.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.37it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.23it/s] 88%|########8 | 23/26 [00:00<00:00, 31.72it/s]100%|##########| 26/26 [00:00<00:00, 26.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 392 tensor(-7.5954e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 409 tensor(2.9250e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 412 tensor(-1.9027e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.81 (  0.83)	train_majacc   0.37 (  0.35)	train_corr   0.00 (  0.00)	l1 7.0225 (7.0225)	zero_count 0.0000 (12.4800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.69it/s] 23%|##3       | 6/26 [00:00<00:00, 29.02it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.02it/s] 42%|####2     | 11/26 [00:00<00:00, 35.88it/s] 62%|######1   | 16/26 [00:00<00:00, 39.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.71it/s] 81%|########  | 21/26 [00:00<00:00, 38.32it/s]100%|##########| 26/26 [00:00<00:00, 34.99it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.560 (0.560)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.572 (0.568)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.86)	test_majacc   0.34 (  0.34)	Loss_d 0.572 (0.568)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.573 (0.569)	test_acc   0.42 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.35 (  0.35)	Loss_d 0.573 (0.569)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.47 (  0.49)
Test: [  26/  26]	Loss 0.561 (0.569)	test_acc   0.44 (  0.42)	test_minacc   0.81 (  0.83)	test_majacc   0.37 (  0.35)	Loss_d 0.561 (0.569)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.81 (  0.83)	test_majacc_d   0.37 (  0.35)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.13it/s]
Test: [  0/  1]	Loss 1.527 (1.527)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.527 (1.527)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.527 (1.527)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.527 (1.527)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Overall Timing[ 42/  1]	epoch_time 0.0408 (0.0421)	validation_time 0.0004 (0.0006)	train_time 0.0404 (0.0414)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4186000052392483, 0.6770000457763672)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 17.56it/s] 27%|##6       | 7/26 [00:00<00:00, 26.00it/s] 38%|###8      | 10/26 [00:00<00:00, 26.57it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.89it/s] 69%|######9   | 18/26 [00:00<00:00, 29.32it/s] 85%|########4 | 22/26 [00:00<00:00, 31.06it/s]100%|##########| 26/26 [00:00<00:00, 29.88it/s]100%|##########| 26/26 [00:00<00:00, 27.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 396 tensor(1.2792e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 390 tensor(9.6099e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 407 tensor(-2.1364e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 428 tensor(1.0270e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.84 (  0.83)	train_majacc   0.37 (  0.35)	train_corr   0.00 (  0.00)	l1 7.0223 (7.0226)	zero_count 0.0000 (16.4970)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.88it/s] 23%|##3       | 6/26 [00:00<00:00, 27.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.74it/s] 42%|####2     | 11/26 [00:00<00:00, 33.71it/s] 62%|######1   | 16/26 [00:00<00:00, 36.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.90it/s] 81%|########  | 21/26 [00:00<00:00, 38.40it/s]100%|##########| 26/26 [00:00<00:00, 41.30it/s]100%|##########| 26/26 [00:00<00:00, 33.57it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.560 (0.560)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.572 (0.568)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.86)	test_majacc   0.34 (  0.34)	Loss_d 0.572 (0.568)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.573 (0.569)	test_acc   0.42 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.35 (  0.34)	Loss_d 0.573 (0.569)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.35 (  0.34)	test_corr_d   0.47 (  0.49)
Test: [  26/  26]	Loss 0.561 (0.569)	test_acc   0.44 (  0.42)	test_minacc   0.81 (  0.83)	test_majacc   0.37 (  0.34)	Loss_d 0.561 (0.569)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.81 (  0.83)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.98it/s]
Test: [  0/  1]	Loss 1.528 (1.528)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.528 (1.528)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.528 (1.528)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.528 (1.528)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.34 (  0.34)
Overall Timing[ 43/  1]	epoch_time 0.0418 (0.0421)	validation_time 0.0005 (0.0006)	train_time 0.0414 (0.0414)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4177000052928925, 0.6780000329017639)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.74it/s] 15%|#5        | 4/26 [00:00<00:01, 14.06it/s] 27%|##6       | 7/26 [00:00<00:01, 18.43it/s] 42%|####2     | 11/26 [00:00<00:00, 24.06it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.85it/s] 69%|######9   | 18/26 [00:00<00:00, 27.43it/s] 85%|########4 | 22/26 [00:00<00:00, 27.70it/s]100%|##########| 26/26 [00:01<00:00, 30.05it/s]100%|##########| 26/26 [00:01<00:00, 23.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 412 tensor(2.3784e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 414 tensor(3.6699e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 407 tensor(-9.6653e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 431 tensor(2.9162e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.81 (  0.83)	train_majacc   0.37 (  0.35)	train_corr   0.00 (  0.00)	l1 7.0225 (7.0228)	zero_count 0.0000 (14.8200)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.78it/s] 23%|##3       | 6/26 [00:00<00:00, 27.36it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.36it/s] 42%|####2     | 11/26 [00:00<00:00, 34.69it/s] 62%|######1   | 16/26 [00:00<00:00, 39.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.71it/s] 81%|########  | 21/26 [00:00<00:00, 38.60it/s]100%|##########| 26/26 [00:00<00:00, 41.79it/s]100%|##########| 26/26 [00:00<00:00, 34.39it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.560 (0.560)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.572 (0.568)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.86)	test_majacc   0.34 (  0.34)	Loss_d 0.572 (0.568)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.46 (  0.49)
Test: [  20/  26]	Loss 0.572 (0.569)	test_acc   0.42 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.35 (  0.34)	Loss_d 0.572 (0.569)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.35 (  0.34)	test_corr_d   0.47 (  0.49)
Test: [  26/  26]	Loss 0.561 (0.569)	test_acc   0.44 (  0.42)	test_minacc   0.81 (  0.83)	test_majacc   0.37 (  0.34)	Loss_d 0.561 (0.569)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.81 (  0.83)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.77it/s]
Test: [  0/  1]	Loss 1.531 (1.531)	test_acc   0.68 (  0.68)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 1.531 (1.531)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.531 (1.531)	test_acc   0.68 (  0.68)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 1.531 (1.531)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Overall Timing[ 44/  1]	epoch_time 0.0426 (0.0421)	validation_time 0.0004 (0.0006)	train_time 0.0422 (0.0415)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4177000052928925, 0.675000011920929)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.03it/s] 15%|#5        | 4/26 [00:00<00:01, 12.68it/s] 27%|##6       | 7/26 [00:00<00:01, 17.18it/s] 42%|####2     | 11/26 [00:00<00:00, 23.09it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.96it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.50it/s] 88%|########8 | 23/26 [00:00<00:00, 28.86it/s]100%|##########| 26/26 [00:01<00:00, 23.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 430 tensor(5.3326e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 395 tensor(1.1415e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 389 tensor(4.0592e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.84 (  0.83)	train_majacc   0.37 (  0.34)	train_corr   0.00 (  0.00)	l1 7.0225 (7.0226)	zero_count 0.0000 (12.4410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.55it/s] 23%|##3       | 6/26 [00:00<00:00, 28.76it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.76it/s] 42%|####2     | 11/26 [00:00<00:00, 35.54it/s] 62%|######1   | 16/26 [00:00<00:00, 40.33it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.33it/s] 81%|########  | 21/26 [00:00<00:00, 38.42it/s]100%|##########| 26/26 [00:00<00:00, 41.29it/s]100%|##########| 26/26 [00:00<00:00, 34.22it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.560 (0.560)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.572 (0.568)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.86)	test_majacc   0.34 (  0.34)	Loss_d 0.572 (0.568)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.86)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.46 (  0.49)
Test: [  20/  26]	Loss 0.572 (0.569)	test_acc   0.42 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.35 (  0.34)	Loss_d 0.572 (0.569)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.35 (  0.34)	test_corr_d   0.47 (  0.49)
Test: [  26/  26]	Loss 0.561 (0.569)	test_acc   0.44 (  0.42)	test_minacc   0.84 (  0.83)	test_majacc   0.37 (  0.34)	Loss_d 0.561 (0.569)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.97it/s]
Test: [  0/  1]	Loss 1.532 (1.532)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.532 (1.532)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.532 (1.532)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.41 (  0.41)	Loss_d 1.532 (1.532)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Overall Timing[ 45/  1]	epoch_time 0.0417 (0.0421)	validation_time 0.0004 (0.0006)	train_time 0.0412 (0.0414)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4171000055372715, 0.6760000586509705)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.24it/s] 19%|#9        | 5/26 [00:00<00:01, 15.06it/s] 35%|###4      | 9/26 [00:00<00:00, 21.55it/s] 46%|####6     | 12/26 [00:00<00:00, 23.16it/s] 62%|######1   | 16/26 [00:00<00:00, 27.10it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.65it/s] 92%|#########2| 24/26 [00:00<00:00, 29.95it/s]100%|##########| 26/26 [00:01<00:00, 23.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 415 tensor(2.6352e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 406 tensor(7.5216e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 387 tensor(1.2363e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 432 tensor(1.2026e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 443 tensor(1.1384e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.81 (  0.82)	train_majacc   0.37 (  0.34)	train_corr   0.00 (  0.00)	l1 7.0226 (7.0228)	zero_count 79.0000 (14.6500)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.78it/s] 12%|#1        | 3/26 [00:00<00:02,  9.13it/s] 31%|###       | 8/26 [00:00<00:00, 22.04it/s]                                               31%|###       | 8/26 [00:00<00:00, 22.04it/s] 46%|####6     | 12/26 [00:00<00:00, 27.62it/s] 65%|######5   | 17/26 [00:00<00:00, 34.31it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.31it/s] 85%|########4 | 22/26 [00:00<00:00, 35.37it/s]100%|##########| 26/26 [00:00<00:00, 27.79it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.560 (0.560)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.571 (0.568)	test_acc   0.42 (  0.42)	test_minacc   0.88 (  0.85)	test_majacc   0.34 (  0.34)	Loss_d 0.571 (0.568)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.88 (  0.85)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.46 (  0.49)
Test: [  20/  26]	Loss 0.572 (0.569)	test_acc   0.42 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.35 (  0.34)	Loss_d 0.572 (0.569)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.35 (  0.34)	test_corr_d   0.47 (  0.49)
Test: [  26/  26]	Loss 0.560 (0.569)	test_acc   0.44 (  0.42)	test_minacc   0.81 (  0.82)	test_majacc   0.37 (  0.34)	Loss_d 0.560 (0.569)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.52it/s]
Test: [  0/  1]	Loss 1.534 (1.534)	test_acc   0.67 (  0.67)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 1.534 (1.534)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.534 (1.534)	test_acc   0.67 (  0.67)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 1.534 (1.534)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Overall Timing[ 46/  1]	epoch_time 0.0484 (0.0422)	validation_time 0.0005 (0.0006)	train_time 0.0479 (0.0416)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4166000053584576, 0.6740000247955322)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.53it/s] 19%|#9        | 5/26 [00:00<00:01, 20.87it/s] 35%|###4      | 9/26 [00:00<00:00, 24.37it/s] 50%|#####     | 13/26 [00:00<00:00, 27.96it/s] 65%|######5   | 17/26 [00:00<00:00, 29.53it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.66it/s] 92%|#########2| 24/26 [00:00<00:00, 28.04it/s]100%|##########| 26/26 [00:01<00:00, 25.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 399 tensor(8.1420e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 383 tensor(3.3155e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 391 tensor(-3.4060e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 432 tensor(8.3694e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.84 (  0.83)	train_majacc   0.37 (  0.34)	train_corr   0.00 (  0.00)	l1 7.0224 (7.0226)	zero_count 0.0000 (19.7730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.83it/s] 15%|#5        | 4/26 [00:00<00:01, 17.63it/s] 35%|###4      | 9/26 [00:00<00:00, 29.47it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.47it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.93it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.35it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.35it/s] 92%|#########2| 24/26 [00:00<00:00, 39.09it/s]100%|##########| 26/26 [00:00<00:00, 32.01it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.560 (0.560)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.571 (0.568)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.85)	test_majacc   0.34 (  0.34)	Loss_d 0.571 (0.568)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.85)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.46 (  0.49)
Test: [  20/  26]	Loss 0.572 (0.568)	test_acc   0.42 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.35 (  0.34)	Loss_d 0.572 (0.568)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.35 (  0.34)	test_corr_d   0.47 (  0.49)
Test: [  26/  26]	Loss 0.560 (0.568)	test_acc   0.44 (  0.42)	test_minacc   0.84 (  0.83)	test_majacc   0.37 (  0.34)	Loss_d 0.560 (0.568)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.64it/s]
Test: [  0/  1]	Loss 1.535 (1.535)	test_acc   0.67 (  0.67)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 1.535 (1.535)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.535 (1.535)	test_acc   0.67 (  0.67)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 1.535 (1.535)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Overall Timing[ 47/  1]	epoch_time 0.0434 (0.0422)	validation_time 0.0005 (0.0006)	train_time 0.0429 (0.0416)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.41610000559687615, 0.6740000247955322)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.39it/s] 15%|#5        | 4/26 [00:00<00:01, 18.85it/s] 31%|###       | 8/26 [00:00<00:00, 23.06it/s] 46%|####6     | 12/26 [00:00<00:00, 27.41it/s] 62%|######1   | 16/26 [00:00<00:00, 29.65it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.11it/s] 88%|########8 | 23/26 [00:00<00:00, 28.08it/s]100%|##########| 26/26 [00:01<00:00, 25.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 428 tensor(1.1660e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 430 tensor(3.0004e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 437 tensor(-2.3733e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 442 tensor(2.2529e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 489 tensor(3.1140e-08, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.81 (  0.82)	train_majacc   0.37 (  0.34)	train_corr   0.00 (  0.00)	l1 7.0225 (7.0227)	zero_count 0.0000 (11.9730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.09it/s] 15%|#5        | 4/26 [00:00<00:01, 11.57it/s] 35%|###4      | 9/26 [00:00<00:00, 22.73it/s]                                               35%|###4      | 9/26 [00:00<00:00, 22.73it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.16it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.16it/s] 92%|#########2| 24/26 [00:00<00:00, 35.75it/s]100%|##########| 26/26 [00:00<00:00, 27.37it/s]
Test: [   0/  26]	Loss 0.559 (0.559)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.559 (0.559)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.571 (0.567)	test_acc   0.42 (  0.42)	test_minacc   0.88 (  0.85)	test_majacc   0.34 (  0.34)	Loss_d 0.571 (0.567)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.88 (  0.85)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.46 (  0.49)
Test: [  20/  26]	Loss 0.571 (0.568)	test_acc   0.42 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.35 (  0.34)	Loss_d 0.571 (0.568)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.35 (  0.34)	test_corr_d   0.48 (  0.49)
Test: [  26/  26]	Loss 0.560 (0.568)	test_acc   0.44 (  0.42)	test_minacc   0.81 (  0.82)	test_majacc   0.37 (  0.34)	Loss_d 0.560 (0.568)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.93it/s]
Test: [  0/  1]	Loss 1.537 (1.537)	test_acc   0.67 (  0.67)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 1.537 (1.537)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.537 (1.537)	test_acc   0.67 (  0.67)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 1.537 (1.537)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Overall Timing[ 48/  1]	epoch_time 0.0472 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0468 (0.0417)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4162000053822994, 0.6730000376701355)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.12it/s] 23%|##3       | 6/26 [00:00<00:00, 21.85it/s] 35%|###4      | 9/26 [00:00<00:00, 23.21it/s] 50%|#####     | 13/26 [00:00<00:00, 27.23it/s] 65%|######5   | 17/26 [00:00<00:00, 27.26it/s] 81%|########  | 21/26 [00:00<00:00, 29.65it/s] 96%|#########6| 25/26 [00:00<00:00, 28.97it/s]100%|##########| 26/26 [00:01<00:00, 25.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 438 tensor(5.6916e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 397 tensor(4.6845e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 406 tensor(-9.1736e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 426 tensor(1.0397e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.44 (  0.42)	train_minacc   0.84 (  0.83)	train_majacc   0.37 (  0.34)	train_corr   0.00 (  0.00)	l1 7.0224 (7.0226)	zero_count 0.0000 (15.5610)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 23%|##3       | 6/26 [00:00<00:00, 29.92it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.92it/s] 42%|####2     | 11/26 [00:00<00:00, 38.09it/s] 62%|######1   | 16/26 [00:00<00:00, 41.72it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.72it/s] 81%|########  | 21/26 [00:00<00:00, 39.29it/s]100%|##########| 26/26 [00:00<00:00, 42.13it/s]100%|##########| 26/26 [00:00<00:00, 35.46it/s]
Test: [   0/  26]	Loss 0.559 (0.559)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.89)	test_majacc   0.33 (  0.33)	Loss_d 0.559 (0.559)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.571 (0.567)	test_acc   0.42 (  0.42)	test_minacc   0.89 (  0.85)	test_majacc   0.34 (  0.34)	Loss_d 0.571 (0.567)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.89 (  0.85)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.46 (  0.49)
Test: [  20/  26]	Loss 0.571 (0.568)	test_acc   0.42 (  0.42)	test_minacc   0.82 (  0.84)	test_majacc   0.35 (  0.34)	Loss_d 0.571 (0.568)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.35 (  0.34)	test_corr_d   0.48 (  0.49)
Test: [  26/  26]	Loss 0.560 (0.568)	test_acc   0.44 (  0.42)	test_minacc   0.84 (  0.83)	test_majacc   0.37 (  0.34)	Loss_d 0.560 (0.568)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.37 (  0.34)	test_corr_d   0.46 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.29it/s]
Test: [  0/  1]	Loss 1.537 (1.537)	test_acc   0.68 (  0.68)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 1.537 (1.537)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.537 (1.537)	test_acc   0.68 (  0.68)	test_minacc   0.70 (  0.70)	test_majacc   0.41 (  0.41)	Loss_d 1.537 (1.537)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.35 (  0.35)
Overall Timing[ 49/  1]	epoch_time 0.0420 (0.0423)	validation_time 0.0007 (0.0006)	train_time 0.0413 (0.0417)
record: (train_acc, test_acc) (0.8315000275373459, 0.6180000305175781)
last accs (train_acc, test_acc) (0.4154000056385994, 0.675000011920929)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.168 MB of 0.168 MB uploadedwandb: \ 0.168 MB of 0.168 MB uploadedwandb: | 0.168 MB of 0.168 MB uploadedwandb: / 0.168 MB of 0.168 MB uploadedwandb: - 0.168 MB of 0.168 MB uploadedwandb: \ 0.038 MB of 0.501 MB uploaded (0.003 MB deduped)wandb: | 0.501 MB of 0.501 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/diagnostics/epoch_time_val █▁▁▂▂▁▁▂▂▁▂▁▂▂▁▂▁▂▁▁▂▂▂▁▂▁▁▂▂▂▁▂▂▁▁▂▂▃▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/diagnostics/train_time_val █▁▁▂▂▁▁▂▂▁▂▁▂▂▁▂▁▂▁▁▂▂▂▂▂▁▂▂▂▂▂▂▂▂▂▂▂▃▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/Loss_avg ▇▇▇▇▇█▇▇▇▆▆█▂▂▂▃▃▄▅▇▂▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/Loss_d_avg ▇▇▇▇▇█▇▇▇▆▆█▂▂▂▃▃▄▅▇▂▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/Loss_d_val ▇▇▇▇▇█▇▇▇▆▆█▂▂▂▃▃▄▅▇▂▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/Loss_val ▇▇▇▇▇█▇▇▇▆▆█▂▂▂▃▃▄▅▇▂▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_acc_avg ▁▁▁▁▁▂▂▂▃▃▃▃▆▇▆▆▆▇▇▅███████▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_acc_d_avg ▁▁▁▁▁▂▂▂▃▃▃▃▆▇▆▆▆▇▇▅███████▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_acc_d_val ▁▁▁▁▁▂▂▂▃▃▃▃▆▇▆▆▆▇▇▅███████▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_acc_val ▁▁▁▁▁▂▂▂▃▃▃▃▆▇▆▆▆▇▇▅███████▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_corr_d_avg █████▇▇▇▇▇▆▇▃▃▃▃▃▃▃▁▄▄▄▅▄▄▄▄▅▅▅▅▅▅▅▅▅▅▅▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_corr_d_val █████▇▇▇▇▇▆▇▃▃▃▃▃▃▃▁▄▄▄▅▄▄▄▄▅▅▅▅▅▅▅▅▅▅▅▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_majacc_avg ████████████▆▆▆▆▆▆▆▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_majacc_d_avg ████████████▆▆▆▆▆▆▆▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_majacc_d_val ████████████▆▆▆▆▆▆▆▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_majacc_val ████████████▆▆▆▆▆▆▆▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_minacc_avg ▁▁▁▁▁▂▂▂▃▃▃▃▅▆▆▆▆▆▆▅███████▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_minacc_d_avg ▁▁▁▁▁▂▂▂▃▃▃▃▅▆▆▆▆▆▆▅███████▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_minacc_d_val ▁▁▁▁▁▂▂▂▃▃▃▃▅▆▆▆▆▆▆▅███████▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_minacc_val ▁▁▁▁▁▂▂▂▃▃▃▃▅▆▆▆▆▆▆▅███████▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/Loss_avg █▆▆▆▅▅▅▅▅▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/Loss_val ██▇▇▇▆▆▆▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/l1_avg █▂▁▁▃▂▂▂▂▃▄▅▅▃▃▃▃▄▄▄▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/l1_val ▄▂▂▄▅▄▃▃▂▁▂▃▇▅▃▅▅▆███▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_acc_avg ▇▇▇▇▇████████▇█▇▇▇▇▇▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_acc_val ▇▇▇▇█████████▇█▇▇▇▇█▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_majacc_avg ▇█████████▇▇▇▆▇▆▆▆▆▆▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_majacc_val ████████████▇▆▇▆▆▆▆▇▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_minacc_avg ▂▁▁▁▂▃▃▄▄▅▅▅▅▇▇▇▇▇▇▇███████▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_minacc_val ▁▁▁▁▂▃▂▃▄▃▄▃▇███▇▇█▇███████▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_nll_avg █▅▄▄▃▃▂▂▂▁▁▁▁▃▂▂▂▂▂▁████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_nll_val ▅▄▄▄▃▂▂▂▁▁▁▁▂▃▂▂▃▃▂▂▇███████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_penalty_avg █▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_penalty_val █▇▇▆▄▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/weight_norm_avg ▁▄▄▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/weight_norm_val ▁▃▃▃▃▃▃▃▄▄▄▅▆▆▆▆▆▆▆▆████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▄▃▂▁▁▁▁▁▁▂▁▂▁▂▃▂▂▃▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/diagnostics/epoch_time_val 0.04197
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/diagnostics/train_time_val 0.04127
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/diagnostics/validation_time_val 0.00067
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/Loss_avg 1.53744
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/Loss_d_avg 1.53744
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/Loss_d_val 1.53744
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/Loss_val 1.53744
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_acc_avg 0.675
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_acc_d_avg 0.675
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_acc_d_val 0.675
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_acc_val 0.675
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_corr_d_avg 0.34769
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_corr_d_val 0.34769
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_majacc_avg 0.41
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_majacc_d_avg 0.41
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_majacc_d_val 0.41
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_majacc_val 0.41
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_minacc_avg 0.70444
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_minacc_d_avg 0.70444
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_minacc_d_val 0.70444
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/test/test_minacc_val 0.70444
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/Loss_val 6e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/l1_avg 7.0226
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/l1_val 7.02244
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_acc_avg 0.4156
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_acc_val 0.44
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_majacc_avg 0.34285
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_majacc_val 0.37089
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_minacc_avg 0.82546
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_minacc_val 0.83784
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_nll_avg 0.56809
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_nll_val 0.55999
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/weight_norm_avg 25.95066
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/weight_norm_val 25.95067
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/zero_count_avg 15.561
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/152/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/vbq09sqi
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_203131-vbq09sqi/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_203419-wlmkc7lc
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/wlmkc7lc
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1211
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5967, 3, 32, 32) (6033, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:37,  1.50s/it] 19%|#9        | 5/26 [00:01<00:05,  3.99it/s] 35%|###4      | 9/26 [00:01<00:02,  7.82it/s] 50%|#####     | 13/26 [00:01<00:01, 11.99it/s] 65%|######5   | 17/26 [00:01<00:00, 16.25it/s] 81%|########  | 21/26 [00:02<00:00, 20.52it/s] 96%|#########6| 25/26 [00:02<00:00, 24.12it/s]100%|##########| 26/26 [00:02<00:00, 10.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.450 (0.647)	train_nll   0.45 (  0.65)	train_penalty   0.06 (  0.64)	weight_norm  20.95 ( 18.15)	train_acc   0.82 (  0.78)	train_minacc   0.02 (  0.11)	train_majacc   0.99 (  0.90)	train_corr   0.00 (  0.00)	l1 6.9330 (7.5428)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  9.60it/s] 27%|##6       | 7/26 [00:00<00:00, 25.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.16it/s] 46%|####6     | 12/26 [00:00<00:00, 32.57it/s] 65%|######5   | 17/26 [00:00<00:00, 37.57it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.57it/s] 85%|########4 | 22/26 [00:00<00:00, 37.72it/s]100%|##########| 26/26 [00:00<00:00, 32.95it/s]
Test: [   0/  26]	Loss 0.423 (0.423)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.423 (0.423)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.387 (0.405)	test_acc   0.86 (  0.85)	test_minacc   0.04 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.387 (0.405)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.04 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.389 (0.409)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.389 (0.409)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  26/  26]	Loss 0.450 (0.409)	test_acc   0.82 (  0.84)	test_minacc   0.02 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.450 (0.409)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.02 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.49it/s]100%|##########| 1/1 [00:00<00:00,  2.49it/s]
Test: [  0/  1]	Loss 1.747 (1.747)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.747 (1.747)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.747 (1.747)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.747 (1.747)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0748 (0.0748)	validation_time 0.0071 (0.0071)	train_time 0.0653 (0.0653)
record: (train_acc, test_acc) (0.8439000252485275, 0.1210000067949295)
last accs (train_acc, test_acc) (0.8439000252485275, 0.1210000067949295)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 15%|#5        | 4/26 [00:00<00:01, 14.25it/s] 31%|###       | 8/26 [00:00<00:00, 22.44it/s] 46%|####6     | 12/26 [00:00<00:00, 27.06it/s] 62%|######1   | 16/26 [00:00<00:00, 30.07it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.00it/s] 92%|#########2| 24/26 [00:00<00:00, 33.38it/s]100%|##########| 26/26 [00:00<00:00, 26.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.421 (0.406)	train_nll   0.42 (  0.41)	train_penalty   0.05 (  0.05)	weight_norm  22.09 ( 21.74)	train_acc   0.82 (  0.85)	train_minacc   0.04 (  0.02)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 7.1673 (7.0707)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.77it/s] 35%|###4      | 9/26 [00:00<00:00, 40.00it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.00it/s] 54%|#####3    | 14/26 [00:00<00:00, 40.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.20it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.20it/s] 92%|#########2| 24/26 [00:00<00:00, 43.70it/s]100%|##########| 26/26 [00:00<00:00, 38.53it/s]
Test: [   0/  26]	Loss 0.414 (0.414)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.414 (0.414)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.367 (0.391)	test_acc   0.86 (  0.85)	test_minacc   0.04 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.367 (0.391)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.04 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.376 (0.395)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.376 (0.395)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  26/  26]	Loss 0.420 (0.395)	test_acc   0.82 (  0.85)	test_minacc   0.04 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.420 (0.395)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.04 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.37it/s]
Test: [  0/  1]	Loss 1.713 (1.713)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.713 (1.713)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.713 (1.713)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.713 (1.713)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Overall Timing[  1/  1]	epoch_time 0.0387 (0.0568)	validation_time 0.0005 (0.0038)	train_time 0.0383 (0.0518)
record: (train_acc, test_acc) (0.8439000252485275, 0.1210000067949295)
last accs (train_acc, test_acc) (0.8473000264167786, 0.12000000476837158)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.74it/s] 19%|#9        | 5/26 [00:00<00:01, 12.54it/s] 35%|###4      | 9/26 [00:00<00:00, 19.48it/s] 50%|#####     | 13/26 [00:00<00:00, 24.26it/s] 65%|######5   | 17/26 [00:00<00:00, 27.70it/s] 81%|########  | 21/26 [00:00<00:00, 30.33it/s] 96%|#########6| 25/26 [00:01<00:00, 32.48it/s]100%|##########| 26/26 [00:01<00:00, 22.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.407 (0.389)	train_nll   0.41 (  0.39)	train_penalty   0.04 (  0.05)	weight_norm  22.20 ( 22.16)	train_acc   0.83 (  0.85)	train_minacc   0.07 (  0.04)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.2322 (7.2077)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.32it/s] 27%|##6       | 7/26 [00:00<00:00, 32.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.92it/s] 46%|####6     | 12/26 [00:00<00:00, 38.84it/s] 65%|######5   | 17/26 [00:00<00:00, 38.92it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.92it/s] 85%|########4 | 22/26 [00:00<00:00, 41.40it/s]100%|##########| 26/26 [00:00<00:00, 35.83it/s]
Test: [   0/  26]	Loss 0.391 (0.391)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.391 (0.391)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.350 (0.373)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.04)	test_majacc   1.00 (  0.99)	Loss_d 0.350 (0.373)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.04)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.355 (0.374)	test_acc   0.86 (  0.85)	test_minacc   0.05 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.355 (0.374)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.05 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  26/  26]	Loss 0.400 (0.373)	test_acc   0.83 (  0.85)	test_minacc   0.07 (  0.04)	test_majacc   1.00 (  0.99)	Loss_d 0.400 (0.373)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.07 (  0.04)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.40it/s]
Test: [  0/  1]	Loss 1.689 (1.689)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.689 (1.689)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.689 (1.689)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.689 (1.689)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0440 (0.0525)	validation_time 0.0004 (0.0026)	train_time 0.0436 (0.0490)
record: (train_acc, test_acc) (0.8492000278830528, 0.13600000739097595)
last accs (train_acc, test_acc) (0.8492000278830528, 0.13600000739097595)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.96it/s] 23%|##3       | 6/26 [00:00<00:00, 26.51it/s] 38%|###8      | 10/26 [00:00<00:00, 28.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.26it/s] 69%|######9   | 18/26 [00:00<00:00, 32.64it/s] 85%|########4 | 22/26 [00:00<00:00, 33.73it/s]100%|##########| 26/26 [00:00<00:00, 34.24it/s]100%|##########| 26/26 [00:00<00:00, 29.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.399 (0.366)	train_nll   0.40 (  0.37)	train_penalty   0.05 (  0.04)	weight_norm  22.24 ( 22.22)	train_acc   0.82 (  0.85)	train_minacc   0.04 (  0.10)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 7.3201 (7.3132)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 23%|##3       | 6/26 [00:00<00:00, 28.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.57it/s] 42%|####2     | 11/26 [00:00<00:00, 36.09it/s] 62%|######1   | 16/26 [00:00<00:00, 39.96it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.96it/s] 81%|########  | 21/26 [00:00<00:00, 38.79it/s]100%|##########| 26/26 [00:00<00:00, 41.81it/s]100%|##########| 26/26 [00:00<00:00, 34.54it/s]
Test: [   0/  26]	Loss 0.386 (0.386)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.386 (0.386)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.341 (0.363)	test_acc   0.86 (  0.85)	test_minacc   0.04 (  0.06)	test_majacc   1.00 (  0.99)	Loss_d 0.341 (0.363)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.04 (  0.06)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  20/  26]	Loss 0.352 (0.364)	test_acc   0.86 (  0.85)	test_minacc   0.11 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.352 (0.364)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.11 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  26/  26]	Loss 0.383 (0.361)	test_acc   0.82 (  0.85)	test_minacc   0.04 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.383 (0.361)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.04 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 51.46it/s]
Test: [  0/  1]	Loss 1.714 (1.714)	test_acc   0.14 (  0.14)	test_minacc   0.05 (  0.05)	test_majacc   1.00 (  1.00)	Loss_d 1.714 (1.714)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.05 (  0.05)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.91)
Test: [  1/  1]	Loss 1.714 (1.714)	test_acc   0.14 (  0.14)	test_minacc   0.05 (  0.05)	test_majacc   1.00 (  1.00)	Loss_d 1.714 (1.714)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.05 (  0.05)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.91)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0414 (0.0497)	validation_time 0.0007 (0.0021)	train_time 0.0407 (0.0470)
record: (train_acc, test_acc) (0.8500000274181366, 0.1420000046491623)
last accs (train_acc, test_acc) (0.8500000274181366, 0.1420000046491623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 19%|#9        | 5/26 [00:00<00:00, 21.64it/s] 35%|###4      | 9/26 [00:00<00:00, 27.42it/s] 50%|#####     | 13/26 [00:00<00:00, 29.95it/s] 65%|######5   | 17/26 [00:00<00:00, 32.02it/s] 81%|########  | 21/26 [00:00<00:00, 33.48it/s] 96%|#########6| 25/26 [00:00<00:00, 33.70it/s]100%|##########| 26/26 [00:00<00:00, 28.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.375 (0.351)	train_nll   0.37 (  0.35)	train_penalty   0.03 (  0.03)	weight_norm  22.28 ( 22.26)	train_acc   0.84 (  0.85)	train_minacc   0.18 (  0.16)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 7.4449 (7.3487)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.56it/s] 12%|#1        | 3/26 [00:00<00:01, 14.07it/s] 27%|##6       | 7/26 [00:00<00:00, 24.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.11it/s] 46%|####6     | 12/26 [00:00<00:00, 29.63it/s] 65%|######5   | 17/26 [00:00<00:00, 34.99it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.99it/s] 85%|########4 | 22/26 [00:00<00:00, 39.35it/s]100%|##########| 26/26 [00:00<00:00, 30.66it/s]
Test: [   0/  26]	Loss 0.370 (0.370)	test_acc   0.87 (  0.87)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.370 (0.370)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.325 (0.343)	test_acc   0.88 (  0.86)	test_minacc   0.20 (  0.16)	test_majacc   0.99 (  0.98)	Loss_d 0.325 (0.343)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.20 (  0.16)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  20/  26]	Loss 0.309 (0.340)	test_acc   0.87 (  0.86)	test_minacc   0.20 (  0.16)	test_majacc   0.99 (  0.98)	Loss_d 0.309 (0.340)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.20 (  0.16)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.359 (0.337)	test_acc   0.83 (  0.86)	test_minacc   0.13 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 0.359 (0.337)	test_acc_d   0.83 (  0.86)	test_minacc_d   0.13 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.21it/s]
Test: [  0/  1]	Loss 1.636 (1.636)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   1.00 (  1.00)	Loss_d 1.636 (1.636)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.81)
Test: [  1/  1]	Loss 1.636 (1.636)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   1.00 (  1.00)	Loss_d 1.636 (1.636)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.81)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0449 (0.0487)	validation_time 0.0004 (0.0018)	train_time 0.0445 (0.0465)
record: (train_acc, test_acc) (0.8582000203728676, 0.19600000977516174)
last accs (train_acc, test_acc) (0.8582000203728676, 0.19600000977516174)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.57it/s] 12%|#1        | 3/26 [00:00<00:01, 12.12it/s] 23%|##3       | 6/26 [00:00<00:01, 17.08it/s] 38%|###8      | 10/26 [00:00<00:00, 23.46it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.90it/s] 69%|######9   | 18/26 [00:00<00:00, 30.65it/s] 85%|########4 | 22/26 [00:00<00:00, 32.62it/s]100%|##########| 26/26 [00:00<00:00, 33.32it/s]100%|##########| 26/26 [00:01<00:00, 25.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.348 (0.335)	train_nll   0.35 (  0.33)	train_penalty   0.03 (  0.03)	weight_norm  22.33 ( 22.31)	train_acc   0.85 (  0.86)	train_minacc   0.27 (  0.24)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 7.3979 (7.4143)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.60it/s] 23%|##3       | 6/26 [00:00<00:00, 31.25it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.25it/s] 42%|####2     | 11/26 [00:00<00:00, 36.72it/s] 62%|######1   | 16/26 [00:00<00:00, 41.43it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.43it/s] 81%|########  | 21/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 36.24it/s]
Test: [   0/  26]	Loss 0.345 (0.345)	test_acc   0.86 (  0.86)	test_minacc   0.24 (  0.24)	test_majacc   0.97 (  0.97)	Loss_d 0.345 (0.345)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.319 (0.325)	test_acc   0.88 (  0.86)	test_minacc   0.22 (  0.19)	test_majacc   0.99 (  0.98)	Loss_d 0.319 (0.325)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.22 (  0.19)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  20/  26]	Loss 0.289 (0.321)	test_acc   0.88 (  0.86)	test_minacc   0.21 (  0.20)	test_majacc   0.99 (  0.98)	Loss_d 0.289 (0.321)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.21 (  0.20)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.334 (0.318)	test_acc   0.86 (  0.87)	test_minacc   0.29 (  0.21)	test_majacc   0.99 (  0.98)	Loss_d 0.334 (0.318)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.29 (  0.21)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.90 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.56it/s]
Test: [  0/  1]	Loss 1.570 (1.570)	test_acc   0.24 (  0.24)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 1.570 (1.570)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.78)
Test: [  1/  1]	Loss 1.570 (1.570)	test_acc   0.24 (  0.24)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 1.570 (1.570)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.78)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0401 (0.0473)	validation_time 0.0004 (0.0016)	train_time 0.0396 (0.0453)
record: (train_acc, test_acc) (0.8651000244617462, 0.23600001633167267)
last accs (train_acc, test_acc) (0.8651000244617462, 0.23600001633167267)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.53it/s] 23%|##3       | 6/26 [00:00<00:00, 28.82it/s] 38%|###8      | 10/26 [00:00<00:00, 31.69it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.95it/s] 69%|######9   | 18/26 [00:00<00:00, 33.78it/s] 85%|########4 | 22/26 [00:00<00:00, 34.35it/s]100%|##########| 26/26 [00:00<00:00, 34.53it/s]100%|##########| 26/26 [00:00<00:00, 30.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.320 (0.316)	train_nll   0.32 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.40 ( 22.37)	train_acc   0.84 (  0.86)	train_minacc   0.22 (  0.31)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.4503 (7.4725)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.46it/s] 27%|##6       | 7/26 [00:00<00:00, 25.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.32it/s] 50%|#####     | 13/26 [00:00<00:00, 34.97it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.97it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.97it/s] 92%|#########2| 24/26 [00:00<00:00, 43.00it/s]100%|##########| 26/26 [00:00<00:00, 33.90it/s]
Test: [   0/  26]	Loss 0.338 (0.338)	test_acc   0.87 (  0.87)	test_minacc   0.36 (  0.36)	test_majacc   0.96 (  0.96)	Loss_d 0.338 (0.338)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.299 (0.314)	test_acc   0.88 (  0.86)	test_minacc   0.25 (  0.25)	test_majacc   0.99 (  0.97)	Loss_d 0.299 (0.314)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.92 (  0.91)
Test: [  20/  26]	Loss 0.271 (0.306)	test_acc   0.88 (  0.87)	test_minacc   0.25 (  0.28)	test_majacc   0.99 (  0.97)	Loss_d 0.271 (0.306)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.25 (  0.28)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.92 (  0.91)
Test: [  26/  26]	Loss 0.303 (0.302)	test_acc   0.86 (  0.87)	test_minacc   0.33 (  0.28)	test_majacc   0.98 (  0.98)	Loss_d 0.303 (0.302)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.33 (  0.28)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.32it/s]
Test: [  0/  1]	Loss 1.615 (1.615)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.99 (  0.99)	Loss_d 1.615 (1.615)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 1.615 (1.615)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.99 (  0.99)	Loss_d 1.615 (1.615)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0382 (0.0460)	validation_time 0.0003 (0.0014)	train_time 0.0379 (0.0443)
record: (train_acc, test_acc) (0.8702000220417976, 0.281000018119812)
last accs (train_acc, test_acc) (0.8702000220417976, 0.281000018119812)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.45it/s] 19%|#9        | 5/26 [00:00<00:00, 21.14it/s] 35%|###4      | 9/26 [00:00<00:00, 27.78it/s] 50%|#####     | 13/26 [00:00<00:00, 30.20it/s] 65%|######5   | 17/26 [00:00<00:00, 32.13it/s] 81%|########  | 21/26 [00:00<00:00, 33.52it/s] 96%|#########6| 25/26 [00:00<00:00, 34.00it/s]100%|##########| 26/26 [00:00<00:00, 28.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.289 (0.299)	train_nll   0.29 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.48 ( 22.44)	train_acc   0.89 (  0.87)	train_minacc   0.53 (  0.39)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.4796 (7.4997)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.27it/s] 23%|##3       | 6/26 [00:00<00:00, 24.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.08it/s] 42%|####2     | 11/26 [00:00<00:00, 32.78it/s] 62%|######1   | 16/26 [00:00<00:00, 34.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.58it/s] 81%|########  | 21/26 [00:00<00:00, 38.22it/s]100%|##########| 26/26 [00:00<00:00, 41.67it/s]100%|##########| 26/26 [00:00<00:00, 32.13it/s]
Test: [   0/  26]	Loss 0.331 (0.331)	test_acc   0.87 (  0.87)	test_minacc   0.41 (  0.41)	test_majacc   0.95 (  0.95)	Loss_d 0.331 (0.331)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.286 (0.300)	test_acc   0.89 (  0.87)	test_minacc   0.38 (  0.37)	test_majacc   0.98 (  0.96)	Loss_d 0.286 (0.300)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.38 (  0.37)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.88 (  0.87)
Test: [  20/  26]	Loss 0.262 (0.289)	test_acc   0.90 (  0.88)	test_minacc   0.39 (  0.40)	test_majacc   0.99 (  0.96)	Loss_d 0.262 (0.289)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.39 (  0.40)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.89 (  0.87)
Test: [  26/  26]	Loss 0.281 (0.286)	test_acc   0.90 (  0.88)	test_minacc   0.56 (  0.41)	test_majacc   0.97 (  0.96)	Loss_d 0.281 (0.286)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.56 (  0.41)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.83 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.92it/s]
Test: [  0/  1]	Loss 1.577 (1.577)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.98 (  0.98)	Loss_d 1.577 (1.577)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.63 (  0.63)
Test: [  1/  1]	Loss 1.577 (1.577)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.98 (  0.98)	Loss_d 1.577 (1.577)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.63 (  0.63)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0405 (0.0453)	validation_time 0.0004 (0.0013)	train_time 0.0401 (0.0437)
record: (train_acc, test_acc) (0.8809000297188759, 0.3410000205039978)
last accs (train_acc, test_acc) (0.8809000297188759, 0.3410000205039978)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.95it/s] 27%|##6       | 7/26 [00:00<00:00, 28.86it/s] 42%|####2     | 11/26 [00:00<00:00, 31.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.33it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.68it/s] 88%|########8 | 23/26 [00:00<00:00, 34.77it/s]100%|##########| 26/26 [00:00<00:00, 30.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.273 (0.286)	train_nll   0.27 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.59 ( 22.53)	train_acc   0.89 (  0.88)	train_minacc   0.49 (  0.43)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.7739 (7.6244)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.19it/s] 19%|#9        | 5/26 [00:00<00:00, 23.80it/s] 38%|###8      | 10/26 [00:00<00:00, 34.10it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.10it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.59it/s] 77%|#######6  | 20/26 [00:00<00:00, 42.45it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 42.45it/s] 96%|#########6| 25/26 [00:00<00:00, 41.40it/s]100%|##########| 26/26 [00:00<00:00, 34.89it/s]
Test: [   0/  26]	Loss 0.313 (0.313)	test_acc   0.86 (  0.86)	test_minacc   0.45 (  0.45)	test_majacc   0.93 (  0.93)	Loss_d 0.313 (0.313)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.286 (0.299)	test_acc   0.88 (  0.87)	test_minacc   0.53 (  0.48)	test_majacc   0.94 (  0.94)	Loss_d 0.286 (0.299)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.53 (  0.48)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.84)
Test: [  20/  26]	Loss 0.232 (0.282)	test_acc   0.91 (  0.88)	test_minacc   0.55 (  0.51)	test_majacc   0.97 (  0.94)	Loss_d 0.232 (0.282)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.86 (  0.84)
Test: [  26/  26]	Loss 0.256 (0.275)	test_acc   0.92 (  0.89)	test_minacc   0.71 (  0.54)	test_majacc   0.97 (  0.95)	Loss_d 0.256 (0.275)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.71 (  0.54)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.80 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.32it/s]
Test: [  0/  1]	Loss 1.653 (1.653)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.96 (  0.96)	Loss_d 1.653 (1.653)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 1.653 (1.653)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.96 (  0.96)	Loss_d 1.653 (1.653)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.51 (  0.51)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0458 (0.0454)	validation_time 0.0003 (0.0012)	train_time 0.0454 (0.0439)
record: (train_acc, test_acc) (0.8851000245809555, 0.41100001335144043)
last accs (train_acc, test_acc) (0.8851000245809555, 0.41100001335144043)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.94it/s] 19%|#9        | 5/26 [00:00<00:01, 19.84it/s] 35%|###4      | 9/26 [00:00<00:00, 25.62it/s] 50%|#####     | 13/26 [00:00<00:00, 28.90it/s] 65%|######5   | 17/26 [00:00<00:00, 31.06it/s] 81%|########  | 21/26 [00:00<00:00, 32.42it/s] 96%|#########6| 25/26 [00:00<00:00, 33.47it/s]100%|##########| 26/26 [00:00<00:00, 27.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.240 (0.285)	train_nll   0.24 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.74 ( 22.67)	train_acc   0.91 (  0.88)	train_minacc   0.67 (  0.42)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 8.1950 (7.5303)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.32it/s] 23%|##3       | 6/26 [00:00<00:00, 28.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.49it/s] 42%|####2     | 11/26 [00:00<00:00, 34.84it/s] 62%|######1   | 16/26 [00:00<00:00, 38.44it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.44it/s] 81%|########  | 21/26 [00:00<00:00, 40.84it/s]100%|##########| 26/26 [00:00<00:00, 42.92it/s]100%|##########| 26/26 [00:00<00:00, 35.29it/s]
Test: [   0/  26]	Loss 0.312 (0.312)	test_acc   0.87 (  0.87)	test_minacc   0.57 (  0.57)	test_majacc   0.92 (  0.92)	Loss_d 0.312 (0.312)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.284 (0.300)	test_acc   0.87 (  0.87)	test_minacc   0.64 (  0.60)	test_majacc   0.91 (  0.92)	Loss_d 0.284 (0.300)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.64 (  0.60)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.78 (  0.78)
Test: [  20/  26]	Loss 0.218 (0.279)	test_acc   0.92 (  0.88)	test_minacc   0.64 (  0.62)	test_majacc   0.96 (  0.93)	Loss_d 0.218 (0.279)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.64 (  0.62)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.81 (  0.78)
Test: [  26/  26]	Loss 0.209 (0.265)	test_acc   0.93 (  0.89)	test_minacc   0.78 (  0.65)	test_majacc   0.96 (  0.93)	Loss_d 0.209 (0.265)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.78 (  0.65)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.75 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.62it/s]
Test: [  0/  1]	Loss 1.806 (1.806)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.91 (  0.91)	Loss_d 1.806 (1.806)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.806 (1.806)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.91 (  0.91)	Loss_d 1.806 (1.806)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.32 (  0.32)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0420 (0.0450)	validation_time 0.0005 (0.0011)	train_time 0.0414 (0.0437)
record: (train_acc, test_acc) (0.8906000258326531, 0.492000013589859)
last accs (train_acc, test_acc) (0.8906000258326531, 0.492000013589859)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.06it/s]  8%|7         | 2/26 [00:00<00:04,  5.69it/s] 23%|##3       | 6/26 [00:00<00:01, 15.88it/s] 38%|###8      | 10/26 [00:00<00:00, 22.14it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.23it/s] 69%|######9   | 18/26 [00:00<00:00, 28.84it/s] 85%|########4 | 22/26 [00:00<00:00, 31.54it/s]100%|##########| 26/26 [00:01<00:00, 23.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.188 (0.271)	train_nll   0.19 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  22.91 ( 22.82)	train_acc   0.93 (  0.88)	train_minacc   0.80 (  0.47)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 8.3921 (7.7466)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.41it/s] 23%|##3       | 6/26 [00:00<00:00, 28.59it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.59it/s] 42%|####2     | 11/26 [00:00<00:00, 36.04it/s] 62%|######1   | 16/26 [00:00<00:00, 39.34it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.34it/s] 81%|########  | 21/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 43.48it/s]100%|##########| 26/26 [00:00<00:00, 35.66it/s]
Test: [   0/  26]	Loss 0.257 (0.257)	test_acc   0.90 (  0.90)	test_minacc   0.71 (  0.71)	test_majacc   0.94 (  0.94)	Loss_d 0.257 (0.257)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.273 (0.266)	test_acc   0.88 (  0.89)	test_minacc   0.67 (  0.68)	test_majacc   0.92 (  0.92)	Loss_d 0.273 (0.266)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.67 (  0.68)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.74 (  0.76)
Test: [  20/  26]	Loss 0.191 (0.252)	test_acc   0.92 (  0.89)	test_minacc   0.73 (  0.69)	test_majacc   0.95 (  0.93)	Loss_d 0.191 (0.252)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.73 (  0.69)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.79 (  0.76)
Test: [  26/  26]	Loss 0.166 (0.239)	test_acc   0.94 (  0.90)	test_minacc   0.91 (  0.71)	test_majacc   0.95 (  0.93)	Loss_d 0.166 (0.239)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.91 (  0.71)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.70 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.44it/s]
Test: [  0/  1]	Loss 1.838 (1.838)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.91 (  0.91)	Loss_d 1.838 (1.838)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 1.838 (1.838)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.91 (  0.91)	Loss_d 1.838 (1.838)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.28 (  0.28)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0425 (0.0448)	validation_time 0.0004 (0.0010)	train_time 0.0421 (0.0435)
record: (train_acc, test_acc) (0.9006000260710716, 0.5049999952316284)
last accs (train_acc, test_acc) (0.9006000260710716, 0.5049999952316284)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.85it/s] 19%|#9        | 5/26 [00:00<00:01, 18.21it/s] 35%|###4      | 9/26 [00:00<00:00, 24.57it/s] 50%|#####     | 13/26 [00:00<00:00, 28.38it/s] 65%|######5   | 17/26 [00:00<00:00, 30.86it/s] 81%|########  | 21/26 [00:00<00:00, 32.58it/s] 96%|#########6| 25/26 [00:00<00:00, 33.76it/s]100%|##########| 26/26 [00:00<00:00, 26.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.237 (0.276)	train_nll   0.24 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  23.13 ( 23.02)	train_acc   0.89 (  0.88)	train_minacc   0.58 (  0.48)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 8.1093 (7.6238)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.40it/s] 23%|##3       | 6/26 [00:00<00:00, 21.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.51it/s] 42%|####2     | 11/26 [00:00<00:00, 30.59it/s] 62%|######1   | 16/26 [00:00<00:00, 36.30it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.30it/s] 81%|########  | 21/26 [00:00<00:00, 36.64it/s]100%|##########| 26/26 [00:00<00:00, 39.92it/s]100%|##########| 26/26 [00:00<00:00, 30.64it/s]
Test: [   0/  26]	Loss 0.292 (0.292)	test_acc   0.87 (  0.87)	test_minacc   0.52 (  0.52)	test_majacc   0.93 (  0.93)	Loss_d 0.292 (0.292)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.260 (0.262)	test_acc   0.89 (  0.89)	test_minacc   0.56 (  0.54)	test_majacc   0.94 (  0.94)	Loss_d 0.260 (0.262)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.85)
Test: [  20/  26]	Loss 0.200 (0.249)	test_acc   0.91 (  0.89)	test_minacc   0.57 (  0.55)	test_majacc   0.97 (  0.95)	Loss_d 0.200 (0.249)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.57 (  0.55)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.86 (  0.84)
Test: [  26/  26]	Loss 0.190 (0.239)	test_acc   0.93 (  0.90)	test_minacc   0.76 (  0.57)	test_majacc   0.97 (  0.96)	Loss_d 0.190 (0.239)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.76 (  0.57)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.80 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.35it/s]
Test: [  0/  1]	Loss 1.914 (1.914)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 1.914 (1.914)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 1.914 (1.914)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 1.914 (1.914)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.52 (  0.52)
Overall Timing[ 11/  1]	epoch_time 0.0412 (0.0445)	validation_time 0.0004 (0.0010)	train_time 0.0408 (0.0433)
record: (train_acc, test_acc) (0.9006000260710716, 0.5049999952316284)
last accs (train_acc, test_acc) (0.8979000242352486, 0.4000000059604645)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 12%|#1        | 3/26 [00:00<00:01, 12.69it/s] 27%|##6       | 7/26 [00:00<00:00, 22.58it/s] 42%|####2     | 11/26 [00:00<00:00, 27.37it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.73it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.74it/s] 88%|########8 | 23/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:00<00:00, 27.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.222 (0.259)	train_nll   0.22 (  0.26)	train_penalty   0.01 (  0.01)	weight_norm  23.36 ( 23.24)	train_acc   0.91 (  0.89)	train_minacc   0.60 (  0.54)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.6302 (8.0761)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 23%|##3       | 6/26 [00:00<00:00, 23.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.91it/s] 42%|####2     | 11/26 [00:00<00:00, 32.77it/s] 62%|######1   | 16/26 [00:00<00:00, 38.37it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.37it/s] 81%|########  | 21/26 [00:00<00:00, 37.64it/s]100%|##########| 26/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 32.06it/s]
Test: [   0/  26]	Loss 0.275 (0.275)	test_acc   0.88 (  0.88)	test_minacc   0.47 (  0.47)	test_majacc   0.95 (  0.95)	Loss_d 0.275 (0.275)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.240 (0.255)	test_acc   0.91 (  0.89)	test_minacc   0.53 (  0.46)	test_majacc   0.97 (  0.96)	Loss_d 0.240 (0.255)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.53 (  0.46)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.87 (  0.88)
Test: [  20/  26]	Loss 0.229 (0.248)	test_acc   0.90 (  0.90)	test_minacc   0.39 (  0.48)	test_majacc   0.99 (  0.97)	Loss_d 0.229 (0.248)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.39 (  0.48)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.90 (  0.88)
Test: [  26/  26]	Loss 0.203 (0.242)	test_acc   0.92 (  0.90)	test_minacc   0.64 (  0.49)	test_majacc   0.98 (  0.97)	Loss_d 0.203 (0.242)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.64 (  0.49)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.84 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.51it/s]
Test: [  0/  1]	Loss 1.777 (1.777)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 1.777 (1.777)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 1.777 (1.777)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 1.777 (1.777)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.60 (  0.60)
Overall Timing[ 12/  1]	epoch_time 0.0407 (0.0442)	validation_time 0.0003 (0.0009)	train_time 0.0404 (0.0431)
record: (train_acc, test_acc) (0.9006000260710716, 0.5049999952316284)
last accs (train_acc, test_acc) (0.8998000225424767, 0.39000001549720764)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.53it/s] 19%|#9        | 5/26 [00:00<00:01, 19.14it/s] 35%|###4      | 9/26 [00:00<00:00, 25.92it/s] 50%|#####     | 13/26 [00:00<00:00, 28.65it/s] 65%|######5   | 17/26 [00:00<00:00, 29.55it/s] 81%|########  | 21/26 [00:00<00:00, 31.20it/s] 96%|#########6| 25/26 [00:00<00:00, 32.75it/s]100%|##########| 26/26 [00:00<00:00, 26.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.221 (0.231)	train_nll   0.22 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.59 ( 23.47)	train_acc   0.92 (  0.90)	train_minacc   0.78 (  0.62)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.9227 (8.3911)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.09it/s] 19%|#9        | 5/26 [00:00<00:01, 20.96it/s] 38%|###8      | 10/26 [00:00<00:00, 31.28it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.28it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.10it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.93it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.93it/s] 96%|#########6| 25/26 [00:00<00:00, 40.02it/s]100%|##########| 26/26 [00:00<00:00, 32.17it/s]
Test: [   0/  26]	Loss 0.254 (0.254)	test_acc   0.88 (  0.88)	test_minacc   0.62 (  0.62)	test_majacc   0.92 (  0.92)	Loss_d 0.254 (0.254)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.225 (0.236)	test_acc   0.92 (  0.90)	test_minacc   0.71 (  0.64)	test_majacc   0.95 (  0.94)	Loss_d 0.225 (0.236)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.71 (  0.64)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.81 (  0.82)
Test: [  20/  26]	Loss 0.193 (0.225)	test_acc   0.94 (  0.91)	test_minacc   0.77 (  0.68)	test_majacc   0.97 (  0.95)	Loss_d 0.193 (0.225)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.77 (  0.68)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.84 (  0.81)
Test: [  26/  26]	Loss 0.190 (0.219)	test_acc   0.95 (  0.91)	test_minacc   0.87 (  0.69)	test_majacc   0.97 (  0.95)	Loss_d 0.190 (0.219)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.87 (  0.69)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.76 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.27it/s]
Test: [  0/  1]	Loss 1.632 (1.632)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.92 (  0.92)	Loss_d 1.632 (1.632)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 1.632 (1.632)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.92 (  0.92)	Loss_d 1.632 (1.632)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.41 (  0.41)
Overall Timing[ 13/  1]	epoch_time 0.0432 (0.0441)	validation_time 0.0004 (0.0009)	train_time 0.0428 (0.0431)
record: (train_acc, test_acc) (0.9006000260710716, 0.5049999952316284)
last accs (train_acc, test_acc) (0.9116000244617463, 0.4780000150203705)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.36it/s] 23%|##3       | 6/26 [00:00<00:00, 25.94it/s] 38%|###8      | 10/26 [00:00<00:00, 30.09it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.66it/s] 69%|######9   | 18/26 [00:00<00:00, 34.08it/s] 85%|########4 | 22/26 [00:00<00:00, 35.56it/s]100%|##########| 26/26 [00:00<00:00, 35.87it/s]100%|##########| 26/26 [00:00<00:00, 30.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.192 (0.216)	train_nll   0.19 (  0.22)	train_penalty   0.00 (  0.01)	weight_norm  23.87 ( 23.73)	train_acc   0.92 (  0.91)	train_minacc   0.62 (  0.65)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.7130 (8.4809)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.30it/s] 23%|##3       | 6/26 [00:00<00:00, 24.26it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.26it/s] 46%|####6     | 12/26 [00:00<00:00, 34.44it/s] 65%|######5   | 17/26 [00:00<00:00, 38.20it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.20it/s] 85%|########4 | 22/26 [00:00<00:00, 40.75it/s]100%|##########| 26/26 [00:00<00:00, 33.11it/s]
Test: [   0/  26]	Loss 0.223 (0.223)	test_acc   0.91 (  0.91)	test_minacc   0.69 (  0.69)	test_majacc   0.95 (  0.95)	Loss_d 0.223 (0.223)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.197 (0.219)	test_acc   0.92 (  0.91)	test_minacc   0.75 (  0.67)	test_majacc   0.95 (  0.95)	Loss_d 0.197 (0.219)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.75 (  0.67)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.79 (  0.79)
Test: [  20/  26]	Loss 0.155 (0.197)	test_acc   0.96 (  0.92)	test_minacc   0.80 (  0.72)	test_majacc   0.99 (  0.96)	Loss_d 0.155 (0.197)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.80 (  0.72)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.83 (  0.79)
Test: [  26/  26]	Loss 0.158 (0.190)	test_acc   0.95 (  0.92)	test_minacc   0.84 (  0.74)	test_majacc   0.98 (  0.96)	Loss_d 0.158 (0.190)	test_acc_d   0.95 (  0.92)	test_minacc_d   0.84 (  0.74)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.75 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.89it/s]
Test: [  0/  1]	Loss 1.950 (1.950)	test_acc   0.52 (  0.52)	test_minacc   0.47 (  0.47)	test_majacc   0.91 (  0.91)	Loss_d 1.950 (1.950)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 1.950 (1.950)	test_acc   0.52 (  0.52)	test_minacc   0.47 (  0.47)	test_majacc   0.91 (  0.91)	Loss_d 1.950 (1.950)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.27 (  0.27)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0409 (0.0439)	validation_time 0.0004 (0.0009)	train_time 0.0404 (0.0429)
record: (train_acc, test_acc) (0.9247000223994255, 0.51500004529953)
last accs (train_acc, test_acc) (0.9247000223994255, 0.51500004529953)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 15%|#5        | 4/26 [00:00<00:01, 17.36it/s] 31%|###       | 8/26 [00:00<00:00, 24.29it/s] 46%|####6     | 12/26 [00:00<00:00, 27.77it/s] 62%|######1   | 16/26 [00:00<00:00, 30.04it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.06it/s] 92%|#########2| 24/26 [00:00<00:00, 33.43it/s]100%|##########| 26/26 [00:00<00:00, 27.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.001 (0.086)	train_nll   0.34 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  24.12 ( 24.01)	train_acc   0.84 (  0.89)	train_minacc   0.91 (  0.68)	train_majacc   0.82 (  0.93)	train_corr   0.00 (  0.00)	l1 7.3746 (8.2630)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.02it/s] 23%|##3       | 6/26 [00:00<00:00, 26.05it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.05it/s] 42%|####2     | 11/26 [00:00<00:00, 34.58it/s] 62%|######1   | 16/26 [00:00<00:00, 39.69it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.69it/s] 81%|########  | 21/26 [00:00<00:00, 40.72it/s]100%|##########| 26/26 [00:00<00:00, 34.40it/s]
Test: [   0/  26]	Loss 0.370 (0.370)	test_acc   0.84 (  0.84)	test_minacc   0.81 (  0.81)	test_majacc   0.85 (  0.85)	Loss_d 0.370 (0.370)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.360 (0.332)	test_acc   0.84 (  0.85)	test_minacc   0.85 (  0.84)	test_majacc   0.83 (  0.86)	Loss_d 0.360 (0.332)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.85 (  0.84)	test_majacc_d   0.83 (  0.86)	test_corr_d   0.60 (  0.61)
Test: [  20/  26]	Loss 0.313 (0.326)	test_acc   0.85 (  0.86)	test_minacc   0.84 (  0.85)	test_majacc   0.86 (  0.86)	Loss_d 0.313 (0.326)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.84 (  0.85)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.64 (  0.61)
Test: [  26/  26]	Loss 0.343 (0.328)	test_acc   0.86 (  0.85)	test_minacc   0.91 (  0.84)	test_majacc   0.84 (  0.85)	Loss_d 0.343 (0.328)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.91 (  0.84)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.50 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.08it/s]
Test: [  0/  1]	Loss 1.046 (1.046)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.78 (  0.78)	Loss_d 1.046 (1.046)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.78 (  0.78)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 1.046 (1.046)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.78 (  0.78)	Loss_d 1.046 (1.046)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.78 (  0.78)	test_corr_d  -0.03 ( -0.03)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0418 (0.0438)	validation_time 0.0003 (0.0008)	train_time 0.0415 (0.0428)
record: (train_acc, test_acc) (0.8534000241160393, 0.6310000419616699)
last accs (train_acc, test_acc) (0.8534000241160393, 0.6310000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.24it/s] 19%|#9        | 5/26 [00:00<00:01, 14.37it/s] 35%|###4      | 9/26 [00:00<00:00, 21.50it/s] 50%|#####     | 13/26 [00:00<00:00, 26.19it/s] 65%|######5   | 17/26 [00:00<00:00, 29.34it/s] 81%|########  | 21/26 [00:00<00:00, 31.66it/s] 96%|#########6| 25/26 [00:00<00:00, 33.11it/s]100%|##########| 26/26 [00:01<00:00, 24.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.002 (0.002)	train_nll   0.46 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  24.18 ( 24.16)	train_acc   0.74 (  0.80)	train_minacc   0.82 (  0.82)	train_majacc   0.72 (  0.79)	train_corr   0.00 (  0.00)	l1 6.6912 (6.7948)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.04it/s] 19%|#9        | 5/26 [00:00<00:00, 22.90it/s] 38%|###8      | 10/26 [00:00<00:00, 33.97it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.97it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.99it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.89it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.89it/s] 96%|#########6| 25/26 [00:00<00:00, 41.03it/s]100%|##########| 26/26 [00:00<00:00, 33.58it/s]
Test: [   0/  26]	Loss 0.491 (0.491)	test_acc   0.74 (  0.74)	test_minacc   0.84 (  0.84)	test_majacc   0.72 (  0.72)	Loss_d 0.491 (0.491)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.409 (0.474)	test_acc   0.79 (  0.74)	test_minacc   0.80 (  0.78)	test_majacc   0.79 (  0.73)	Loss_d 0.409 (0.474)	test_acc_d   0.79 (  0.74)	test_minacc_d   0.80 (  0.78)	test_majacc_d   0.79 (  0.73)	test_corr_d   0.56 (  0.49)
Test: [  20/  26]	Loss 0.454 (0.470)	test_acc   0.74 (  0.74)	test_minacc   0.79 (  0.78)	test_majacc   0.73 (  0.73)	Loss_d 0.454 (0.470)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.79 (  0.78)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.52 (  0.49)
Test: [  26/  26]	Loss 0.447 (0.465)	test_acc   0.75 (  0.74)	test_minacc   0.82 (  0.77)	test_majacc   0.74 (  0.74)	Loss_d 0.447 (0.465)	test_acc_d   0.75 (  0.74)	test_minacc_d   0.82 (  0.77)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.42 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.66it/s]
Test: [  0/  1]	Loss 0.972 (0.972)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.70 (  0.70)	Loss_d 0.972 (0.972)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.70 (  0.70)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.972 (0.972)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.70 (  0.70)	Loss_d 0.972 (0.972)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.70 (  0.70)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 16/  1]	epoch_time 0.0427 (0.0437)	validation_time 0.0004 (0.0008)	train_time 0.0423 (0.0428)
record: (train_acc, test_acc) (0.8534000241160393, 0.6310000419616699)
last accs (train_acc, test_acc) (0.7426000297665596, 0.6290000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.91it/s] 19%|#9        | 5/26 [00:00<00:01, 13.18it/s] 35%|###4      | 9/26 [00:00<00:00, 20.19it/s] 50%|#####     | 13/26 [00:00<00:00, 24.89it/s] 65%|######5   | 17/26 [00:00<00:00, 28.41it/s] 81%|########  | 21/26 [00:00<00:00, 30.84it/s] 96%|#########6| 25/26 [00:01<00:00, 32.58it/s]100%|##########| 26/26 [00:01<00:00, 23.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.002)	train_nll   0.40 (  0.45)	train_penalty   0.00 (  0.00)	weight_norm  24.18 ( 24.18)	train_acc   0.81 (  0.79)	train_minacc   0.91 (  0.67)	train_majacc   0.79 (  0.81)	train_corr   0.00 (  0.00)	l1 6.5452 (6.3205)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 25.19it/s] 35%|###4      | 9/26 [00:00<00:00, 35.59it/s]                                               35%|###4      | 9/26 [00:00<00:00, 35.59it/s] 58%|#####7    | 15/26 [00:00<00:00, 42.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 43.90it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 43.90it/s] 96%|#########6| 25/26 [00:00<00:00, 44.92it/s]100%|##########| 26/26 [00:00<00:00, 38.22it/s]
Test: [   0/  26]	Loss 0.439 (0.439)	test_acc   0.76 (  0.76)	test_minacc   0.83 (  0.83)	test_majacc   0.75 (  0.75)	Loss_d 0.439 (0.439)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.413 (0.444)	test_acc   0.81 (  0.77)	test_minacc   0.84 (  0.83)	test_majacc   0.81 (  0.76)	Loss_d 0.413 (0.444)	test_acc_d   0.81 (  0.77)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.81 (  0.76)	test_corr_d   0.55 (  0.50)
Test: [  20/  26]	Loss 0.400 (0.436)	test_acc   0.80 (  0.78)	test_minacc   0.84 (  0.83)	test_majacc   0.79 (  0.77)	Loss_d 0.400 (0.436)	test_acc_d   0.80 (  0.78)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.79 (  0.77)	test_corr_d   0.54 (  0.50)
Test: [  26/  26]	Loss 0.409 (0.431)	test_acc   0.80 (  0.78)	test_minacc   0.91 (  0.83)	test_majacc   0.78 (  0.77)	Loss_d 0.409 (0.431)	test_acc_d   0.80 (  0.78)	test_minacc_d   0.91 (  0.83)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.43 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.87it/s]
Test: [  0/  1]	Loss 1.021 (1.021)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 1.021 (1.021)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 1.021 (1.021)	test_acc   0.70 (  0.70)	test_minacc   0.69 (  0.69)	test_majacc   0.78 (  0.78)	Loss_d 1.021 (1.021)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.78 (  0.78)	test_corr_d  -0.17 ( -0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/154/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0486 (0.0440)	validation_time 0.0004 (0.0008)	train_time 0.0481 (0.0431)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.28it/s] 12%|#1        | 3/26 [00:00<00:02, 10.68it/s] 27%|##6       | 7/26 [00:00<00:00, 19.42it/s] 42%|####2     | 11/26 [00:00<00:00, 24.61it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.26it/s] 69%|######9   | 18/26 [00:00<00:00, 27.92it/s] 85%|########4 | 22/26 [00:00<00:00, 30.47it/s]100%|##########| 26/26 [00:00<00:00, 32.51it/s]100%|##########| 26/26 [00:01<00:00, 25.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.002)	train_nll   0.42 (  0.42)	train_penalty   0.00 (  0.00)	weight_norm  24.19 ( 24.19)	train_acc   0.84 (  0.80)	train_minacc   0.93 (  0.83)	train_majacc   0.82 (  0.80)	train_corr   0.00 (  0.00)	l1 6.2911 (6.4340)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.30it/s] 27%|##6       | 7/26 [00:00<00:00, 27.05it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.05it/s] 46%|####6     | 12/26 [00:00<00:00, 33.98it/s] 65%|######5   | 17/26 [00:00<00:00, 38.15it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.15it/s] 85%|########4 | 22/26 [00:00<00:00, 40.78it/s]100%|##########| 26/26 [00:00<00:00, 33.51it/s]
Test: [   0/  26]	Loss 0.411 (0.411)	test_acc   0.79 (  0.79)	test_minacc   0.81 (  0.81)	test_majacc   0.79 (  0.79)	Loss_d 0.411 (0.411)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.454 (0.421)	test_acc   0.80 (  0.80)	test_minacc   0.78 (  0.82)	test_majacc   0.80 (  0.80)	Loss_d 0.454 (0.421)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.59 (  0.56)
Test: [  20/  26]	Loss 0.391 (0.420)	test_acc   0.82 (  0.81)	test_minacc   0.84 (  0.83)	test_majacc   0.81 (  0.80)	Loss_d 0.391 (0.420)	test_acc_d   0.82 (  0.81)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.81 (  0.80)	test_corr_d   0.59 (  0.55)
Test: [  26/  26]	Loss 0.414 (0.418)	test_acc   0.84 (  0.81)	test_minacc   0.93 (  0.83)	test_majacc   0.82 (  0.80)	Loss_d 0.414 (0.418)	test_acc_d   0.84 (  0.81)	test_minacc_d   0.93 (  0.83)	test_majacc_d   0.82 (  0.80)	test_corr_d   0.48 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.25it/s]
Test: [  0/  1]	Loss 1.040 (1.040)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.76 (  0.76)	Loss_d 1.040 (1.040)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 1.040 (1.040)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.76 (  0.76)	Loss_d 1.040 (1.040)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 18/  1]	epoch_time 0.0430 (0.0439)	validation_time 0.0005 (0.0008)	train_time 0.0425 (0.0430)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.8084000226855278, 0.6710000038146973)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.25it/s] 19%|#9        | 5/26 [00:00<00:00, 22.68it/s] 35%|###4      | 9/26 [00:00<00:00, 26.60it/s] 50%|#####     | 13/26 [00:00<00:00, 28.79it/s] 65%|######5   | 17/26 [00:00<00:00, 29.57it/s] 81%|########  | 21/26 [00:00<00:00, 31.00it/s] 96%|#########6| 25/26 [00:00<00:00, 31.64it/s]100%|##########| 26/26 [00:00<00:00, 27.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.44 (  0.42)	train_penalty   0.00 (  0.00)	weight_norm  24.20 ( 24.20)	train_acc   0.80 (  0.80)	train_minacc   0.91 (  0.85)	train_majacc   0.78 (  0.79)	train_corr   0.00 (  0.00)	l1 6.3517 (6.2204)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.11it/s] 15%|#5        | 4/26 [00:00<00:01, 13.25it/s] 35%|###4      | 9/26 [00:00<00:00, 24.96it/s]                                               35%|###4      | 9/26 [00:00<00:00, 24.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.58it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.58it/s] 92%|#########2| 24/26 [00:00<00:00, 37.49it/s]100%|##########| 26/26 [00:00<00:00, 28.97it/s]
Test: [   0/  26]	Loss 0.428 (0.428)	test_acc   0.79 (  0.79)	test_minacc   0.88 (  0.88)	test_majacc   0.78 (  0.78)	Loss_d 0.428 (0.428)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.440 (0.438)	test_acc   0.79 (  0.78)	test_minacc   0.84 (  0.84)	test_majacc   0.79 (  0.77)	Loss_d 0.440 (0.438)	test_acc_d   0.79 (  0.78)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.79 (  0.77)	test_corr_d   0.55 (  0.50)
Test: [  20/  26]	Loss 0.422 (0.442)	test_acc   0.78 (  0.78)	test_minacc   0.86 (  0.85)	test_majacc   0.77 (  0.77)	Loss_d 0.422 (0.442)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.86 (  0.85)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.52 (  0.49)
Test: [  26/  26]	Loss 0.439 (0.439)	test_acc   0.80 (  0.78)	test_minacc   0.91 (  0.85)	test_majacc   0.78 (  0.77)	Loss_d 0.439 (0.439)	test_acc_d   0.80 (  0.78)	test_minacc_d   0.91 (  0.85)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.42 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.09it/s]
Test: [  0/  1]	Loss 0.959 (0.959)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.77 (  0.77)	Loss_d 0.959 (0.959)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.77 (  0.77)	test_corr_d  -0.16 ( -0.16)
Test: [  1/  1]	Loss 0.959 (0.959)	test_acc   0.69 (  0.69)	test_minacc   0.69 (  0.69)	test_majacc   0.77 (  0.77)	Loss_d 0.959 (0.959)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.77 (  0.77)	test_corr_d  -0.16 ( -0.16)
Overall Timing[ 19/  1]	epoch_time 0.0459 (0.0440)	validation_time 0.0004 (0.0007)	train_time 0.0455 (0.0432)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.783000029206276, 0.6940000057220459)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 19%|#9        | 5/26 [00:00<00:01, 20.56it/s] 35%|###4      | 9/26 [00:00<00:00, 25.83it/s] 50%|#####     | 13/26 [00:00<00:00, 29.21it/s] 65%|######5   | 17/26 [00:00<00:00, 31.26it/s] 81%|########  | 21/26 [00:00<00:00, 32.31it/s] 96%|#########6| 25/26 [00:00<00:00, 33.02it/s]100%|##########| 26/26 [00:00<00:00, 27.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.41 (  0.43)	train_penalty   0.00 (  0.00)	weight_norm  24.20 ( 24.20)	train_acc   0.81 (  0.79)	train_minacc   0.91 (  0.84)	train_majacc   0.79 (  0.78)	train_corr   0.00 (  0.00)	l1 6.2899 (6.2456)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.30it/s] 27%|##6       | 7/26 [00:00<00:00, 28.84it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.84it/s] 42%|####2     | 11/26 [00:00<00:00, 32.69it/s] 65%|######5   | 17/26 [00:00<00:00, 40.70it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.70it/s] 85%|########4 | 22/26 [00:00<00:00, 39.50it/s]100%|##########| 26/26 [00:00<00:00, 34.99it/s]
Test: [   0/  26]	Loss 0.418 (0.418)	test_acc   0.78 (  0.78)	test_minacc   0.84 (  0.84)	test_majacc   0.77 (  0.77)	Loss_d 0.418 (0.418)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.442 (0.423)	test_acc   0.81 (  0.79)	test_minacc   0.82 (  0.82)	test_majacc   0.81 (  0.79)	Loss_d 0.442 (0.423)	test_acc_d   0.81 (  0.79)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.81 (  0.79)	test_corr_d   0.57 (  0.53)
Test: [  20/  26]	Loss 0.421 (0.432)	test_acc   0.79 (  0.79)	test_minacc   0.86 (  0.84)	test_majacc   0.78 (  0.79)	Loss_d 0.421 (0.432)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.86 (  0.84)	test_majacc_d   0.78 (  0.79)	test_corr_d   0.54 (  0.52)
Test: [  26/  26]	Loss 0.413 (0.430)	test_acc   0.81 (  0.79)	test_minacc   0.91 (  0.84)	test_majacc   0.79 (  0.78)	Loss_d 0.413 (0.430)	test_acc_d   0.81 (  0.79)	test_minacc_d   0.91 (  0.84)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.46 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.55it/s]
Test: [  0/  1]	Loss 0.995 (0.995)	test_acc   0.68 (  0.68)	test_minacc   0.67 (  0.67)	test_majacc   0.78 (  0.78)	Loss_d 0.995 (0.995)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.78 (  0.78)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.995 (0.995)	test_acc   0.68 (  0.68)	test_minacc   0.67 (  0.67)	test_majacc   0.78 (  0.78)	Loss_d 0.995 (0.995)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.78 (  0.78)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 20/  1]	epoch_time 0.0451 (0.0441)	validation_time 0.0004 (0.0007)	train_time 0.0447 (0.0432)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.7934000243544579, 0.6770000457763672)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.32it/s] 19%|#9        | 5/26 [00:00<00:01, 16.68it/s] 35%|###4      | 9/26 [00:00<00:00, 23.17it/s] 50%|#####     | 13/26 [00:00<00:00, 26.96it/s] 65%|######5   | 17/26 [00:00<00:00, 29.03it/s] 81%|########  | 21/26 [00:00<00:00, 30.46it/s] 96%|#########6| 25/26 [00:00<00:00, 31.82it/s]100%|##########| 26/26 [00:01<00:00, 25.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.000)	train_nll   0.41 (  0.43)	train_penalty   0.00 (  0.00)	weight_norm  24.20 ( 24.20)	train_acc   0.80 (  0.79)	train_minacc   0.89 (  0.84)	train_majacc   0.78 (  0.78)	train_corr   0.00 (  0.00)	l1 6.2370 (6.2678)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.30it/s] 23%|##3       | 6/26 [00:00<00:00, 25.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.50it/s] 42%|####2     | 11/26 [00:00<00:00, 33.69it/s] 62%|######1   | 16/26 [00:00<00:00, 38.74it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.74it/s] 81%|########  | 21/26 [00:00<00:00, 40.97it/s]100%|##########| 26/26 [00:00<00:00, 42.93it/s]100%|##########| 26/26 [00:00<00:00, 34.09it/s]
Test: [   0/  26]	Loss 0.415 (0.415)	test_acc   0.80 (  0.80)	test_minacc   0.88 (  0.88)	test_majacc   0.78 (  0.78)	Loss_d 0.415 (0.415)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.405 (0.417)	test_acc   0.82 (  0.79)	test_minacc   0.78 (  0.83)	test_majacc   0.83 (  0.78)	Loss_d 0.405 (0.417)	test_acc_d   0.82 (  0.79)	test_minacc_d   0.78 (  0.83)	test_majacc_d   0.83 (  0.78)	test_corr_d   0.59 (  0.54)
Test: [  20/  26]	Loss 0.446 (0.429)	test_acc   0.77 (  0.78)	test_minacc   0.86 (  0.82)	test_majacc   0.76 (  0.78)	Loss_d 0.446 (0.429)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.86 (  0.82)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.52 (  0.52)
Test: [  26/  26]	Loss 0.416 (0.429)	test_acc   0.80 (  0.78)	test_minacc   0.89 (  0.82)	test_majacc   0.78 (  0.77)	Loss_d 0.416 (0.429)	test_acc_d   0.80 (  0.78)	test_minacc_d   0.89 (  0.82)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.44 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.95it/s]
Test: [  0/  1]	Loss 1.039 (1.039)	test_acc   0.68 (  0.68)	test_minacc   0.67 (  0.67)	test_majacc   0.75 (  0.75)	Loss_d 1.039 (1.039)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.75 (  0.75)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 1.039 (1.039)	test_acc   0.68 (  0.68)	test_minacc   0.67 (  0.67)	test_majacc   0.75 (  0.75)	Loss_d 1.039 (1.039)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.75 (  0.75)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 21/  1]	epoch_time 0.0429 (0.0440)	validation_time 0.0003 (0.0007)	train_time 0.0426 (0.0432)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.7822000316977501, 0.6790000200271606)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.57it/s] 19%|#9        | 5/26 [00:00<00:00, 23.39it/s] 35%|###4      | 9/26 [00:00<00:00, 28.74it/s] 50%|#####     | 13/26 [00:00<00:00, 31.04it/s] 65%|######5   | 17/26 [00:00<00:00, 32.37it/s] 81%|########  | 21/26 [00:00<00:00, 33.15it/s] 96%|#########6| 25/26 [00:00<00:00, 34.01it/s]100%|##########| 26/26 [00:00<00:00, 28.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.42 (  0.43)	train_penalty   0.00 (  0.00)	weight_norm  24.20 ( 24.20)	train_acc   0.81 (  0.79)	train_minacc   0.84 (  0.83)	train_majacc   0.80 (  0.78)	train_corr   0.00 (  0.00)	l1 6.1102 (6.3566)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.87it/s] 15%|#5        | 4/26 [00:00<00:01, 15.89it/s] 35%|###4      | 9/26 [00:00<00:00, 28.06it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.06it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.36it/s] 69%|######9   | 18/26 [00:00<00:00, 35.76it/s]                                                69%|######9   | 18/26 [00:00<00:00, 35.76it/s] 92%|#########2| 24/26 [00:00<00:00, 38.84it/s]100%|##########| 26/26 [00:00<00:00, 32.02it/s]
Test: [   0/  26]	Loss 0.402 (0.402)	test_acc   0.80 (  0.80)	test_minacc   0.83 (  0.83)	test_majacc   0.80 (  0.80)	Loss_d 0.402 (0.402)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.404 (0.390)	test_acc   0.84 (  0.82)	test_minacc   0.82 (  0.83)	test_majacc   0.84 (  0.82)	Loss_d 0.404 (0.390)	test_acc_d   0.84 (  0.82)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.84 (  0.82)	test_corr_d   0.62 (  0.58)
Test: [  20/  26]	Loss 0.420 (0.401)	test_acc   0.81 (  0.82)	test_minacc   0.86 (  0.84)	test_majacc   0.80 (  0.82)	Loss_d 0.420 (0.401)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.86 (  0.84)	test_majacc_d   0.80 (  0.82)	test_corr_d   0.56 (  0.56)
Test: [  26/  26]	Loss 0.421 (0.404)	test_acc   0.81 (  0.82)	test_minacc   0.84 (  0.83)	test_majacc   0.80 (  0.81)	Loss_d 0.421 (0.404)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.80 (  0.81)	test_corr_d   0.47 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.14it/s]
Test: [  0/  1]	Loss 1.034 (1.034)	test_acc   0.67 (  0.67)	test_minacc   0.65 (  0.65)	test_majacc   0.80 (  0.80)	Loss_d 1.034 (1.034)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.80 (  0.80)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 1.034 (1.034)	test_acc   0.67 (  0.67)	test_minacc   0.65 (  0.65)	test_majacc   0.80 (  0.80)	Loss_d 1.034 (1.034)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.80 (  0.80)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 22/  1]	epoch_time 0.0421 (0.0440)	validation_time 0.0004 (0.0007)	train_time 0.0416 (0.0431)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.8153000172376633, 0.6650000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.33it/s] 19%|#9        | 5/26 [00:00<00:00, 24.66it/s] 31%|###       | 8/26 [00:00<00:00, 25.38it/s] 46%|####6     | 12/26 [00:00<00:00, 29.42it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.57it/s] 88%|########8 | 23/26 [00:00<00:00, 29.93it/s]100%|##########| 26/26 [00:00<00:00, 26.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.212708473205566
set z to 6.150581388473511
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 367 tensor(-0.0094, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 273 tensor(-0.0205, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 188 tensor(-0.0050, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 165 tensor(-0.0039, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 159 tensor(-0.0013, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.002 (0.215)	train_nll   0.58 (  0.63)	train_penalty   0.00 (  0.21)	weight_norm  30.25 ( 25.89)	train_acc   0.74 (  0.71)	train_minacc   0.62 (  0.60)	train_majacc   0.77 (  0.73)	train_corr   0.00 (  0.00)	l1 7.4483 (7.4761)	zero_count 0.0000 (40.9890)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.65it/s] 23%|##3       | 6/26 [00:00<00:00, 25.09it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.09it/s] 42%|####2     | 11/26 [00:00<00:00, 33.26it/s] 62%|######1   | 16/26 [00:00<00:00, 37.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.50it/s] 81%|########  | 21/26 [00:00<00:00, 37.54it/s]100%|##########| 26/26 [00:00<00:00, 40.74it/s]100%|##########| 26/26 [00:00<00:00, 32.05it/s]
Test: [   0/  26]	Loss 0.613 (0.613)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.613 (0.613)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.647 (0.616)	test_acc   0.46 (  0.50)	test_minacc   0.45 (  0.48)	test_majacc   0.47 (  0.51)	Loss_d 0.647 (0.616)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.45 (  0.47)
Test: [  20/  26]	Loss 0.600 (0.612)	test_acc   0.54 (  0.50)	test_minacc   0.48 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.600 (0.612)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.48 (  0.48)
Test: [  26/  26]	Loss 0.621 (0.611)	test_acc   0.46 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.621 (0.611)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.51 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.53it/s]
Test: [  0/  1]	Loss 0.839 (0.839)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.839 (0.839)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.839 (0.839)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.839 (0.839)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 23/  1]	epoch_time 0.0488 (0.0442)	validation_time 0.0004 (0.0007)	train_time 0.0484 (0.0433)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5017000107169152, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.93it/s] 23%|##3       | 6/26 [00:00<00:00, 28.83it/s] 38%|###8      | 10/26 [00:00<00:00, 30.15it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.70it/s] 69%|######9   | 18/26 [00:00<00:00, 30.60it/s] 85%|########4 | 22/26 [00:00<00:00, 30.71it/s]100%|##########| 26/26 [00:00<00:00, 31.44it/s]100%|##########| 26/26 [00:00<00:00, 28.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 157 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 155 tensor(-0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 151 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 150 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 148 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 148 tensor(-0.0001, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.001)	train_nll   0.67 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  33.90 ( 32.81)	train_acc   0.50 (  0.57)	train_minacc   0.53 (  0.55)	train_majacc   0.49 (  0.58)	train_corr   0.00 (  0.00)	l1 6.3089 (6.5067)	zero_count 0.0000 (83.6940)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.92it/s] 27%|##6       | 7/26 [00:00<00:00, 29.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.19it/s] 46%|####6     | 12/26 [00:00<00:00, 36.51it/s] 65%|######5   | 17/26 [00:00<00:00, 40.43it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.43it/s] 85%|########4 | 22/26 [00:00<00:00, 39.23it/s]100%|##########| 26/26 [00:00<00:00, 35.16it/s]
Test: [   0/  26]	Loss 0.677 (0.677)	test_acc   0.53 (  0.53)	test_minacc   0.43 (  0.43)	test_majacc   0.55 (  0.55)	Loss_d 0.677 (0.677)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.683 (0.674)	test_acc   0.54 (  0.54)	test_minacc   0.42 (  0.46)	test_majacc   0.56 (  0.55)	Loss_d 0.683 (0.674)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.42 (  0.46)	test_majacc_d   0.56 (  0.55)	test_corr_d   0.20 (  0.20)
Test: [  20/  26]	Loss 0.665 (0.671)	test_acc   0.56 (  0.54)	test_minacc   0.45 (  0.47)	test_majacc   0.58 (  0.55)	Loss_d 0.665 (0.671)	test_acc_d   0.56 (  0.54)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.58 (  0.55)	test_corr_d   0.22 (  0.21)
Test: [  26/  26]	Loss 0.669 (0.670)	test_acc   0.50 (  0.54)	test_minacc   0.49 (  0.47)	test_majacc   0.50 (  0.55)	Loss_d 0.669 (0.670)	test_acc_d   0.50 (  0.54)	test_minacc_d   0.49 (  0.47)	test_majacc_d   0.50 (  0.55)	test_corr_d   0.26 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.32it/s]
Test: [  0/  1]	Loss 0.720 (0.720)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.55 (  0.55)	Loss_d 0.720 (0.720)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.720 (0.720)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.55 (  0.55)	Loss_d 0.720 (0.720)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 24/  1]	epoch_time 0.0428 (0.0441)	validation_time 0.0003 (0.0007)	train_time 0.0424 (0.0433)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5386000121831894, 0.48500001430511475)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.46it/s] 15%|#5        | 4/26 [00:00<00:01, 20.54it/s] 27%|##6       | 7/26 [00:00<00:00, 24.38it/s] 42%|####2     | 11/26 [00:00<00:00, 27.23it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.41it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.95it/s] 88%|########8 | 23/26 [00:00<00:00, 30.30it/s]100%|##########| 26/26 [00:00<00:00, 26.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 148 tensor(-2.5557e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 148 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 148 tensor(-5.8456e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 149 tensor(-3.2317e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 150 tensor(-2.4404e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 153 tensor(-2.0798e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  34.18 ( 34.10)	train_acc   0.47 (  0.53)	train_minacc   0.51 (  0.49)	train_majacc   0.46 (  0.54)	train_corr   0.00 (  0.00)	l1 6.1775 (6.1840)	zero_count 0.0000 (84.8250)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.49it/s] 27%|##6       | 7/26 [00:00<00:00, 20.08it/s]                                               27%|##6       | 7/26 [00:00<00:00, 20.08it/s] 46%|####6     | 12/26 [00:00<00:00, 28.33it/s] 65%|######5   | 17/26 [00:00<00:00, 33.97it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.97it/s] 85%|########4 | 22/26 [00:00<00:00, 37.99it/s]100%|##########| 26/26 [00:00<00:00, 29.30it/s]
Test: [   0/  26]	Loss 0.682 (0.682)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.50 (  0.50)	Loss_d 0.682 (0.682)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.684 (0.681)	test_acc   0.48 (  0.51)	test_minacc   0.45 (  0.48)	test_majacc   0.49 (  0.51)	Loss_d 0.684 (0.681)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.17 (  0.14)
Test: [  20/  26]	Loss 0.677 (0.680)	test_acc   0.55 (  0.51)	test_minacc   0.48 (  0.49)	test_majacc   0.56 (  0.51)	Loss_d 0.677 (0.680)	test_acc_d   0.55 (  0.51)	test_minacc_d   0.48 (  0.49)	test_majacc_d   0.56 (  0.51)	test_corr_d   0.14 (  0.15)
Test: [  26/  26]	Loss 0.682 (0.679)	test_acc   0.47 (  0.51)	test_minacc   0.49 (  0.50)	test_majacc   0.47 (  0.51)	Loss_d 0.682 (0.679)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.49 (  0.50)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.19 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.34it/s]
Test: [  0/  1]	Loss 0.696 (0.696)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.51 (  0.51)	Loss_d 0.696 (0.696)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 0.696 (0.696)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.51 (  0.51)	Loss_d 0.696 (0.696)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.09 ( -0.09)
Overall Timing[ 25/  1]	epoch_time 0.0416 (0.0440)	validation_time 0.0004 (0.0007)	train_time 0.0412 (0.0432)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5085000142157078, 0.5110000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.05it/s] 19%|#9        | 5/26 [00:00<00:00, 22.67it/s] 35%|###4      | 9/26 [00:00<00:00, 28.88it/s] 50%|#####     | 13/26 [00:00<00:00, 29.81it/s] 65%|######5   | 17/26 [00:00<00:00, 30.64it/s] 81%|########  | 21/26 [00:00<00:00, 30.76it/s] 96%|#########6| 25/26 [00:00<00:00, 30.66it/s]100%|##########| 26/26 [00:00<00:00, 27.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 184 tensor(-1.9128e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 194 tensor(-1.1065e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 209 tensor(-7.5363e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 239 tensor(-5.8015e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 247 tensor(-4.2723e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 302 tensor(-1.3739e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.20 ( 34.20)	train_acc   0.46 (  0.51)	train_minacc   0.49 (  0.50)	train_majacc   0.46 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1506 (6.1582)	zero_count 264.0000 (68.0640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.04it/s] 23%|##3       | 6/26 [00:00<00:00, 29.46it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.46it/s] 42%|####2     | 11/26 [00:00<00:00, 35.78it/s] 62%|######1   | 16/26 [00:00<00:00, 38.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.41it/s] 81%|########  | 21/26 [00:00<00:00, 40.44it/s]100%|##########| 26/26 [00:00<00:00, 42.91it/s]100%|##########| 26/26 [00:00<00:00, 34.77it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.686 (0.686)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.09 (  0.09)
Test: [  10/  26]	Loss 0.687 (0.685)	test_acc   0.48 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.48 (  0.51)	Loss_d 0.687 (0.685)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.14 (  0.10)
Test: [  20/  26]	Loss 0.682 (0.685)	test_acc   0.54 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.55 (  0.51)	Loss_d 0.682 (0.685)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.09 (  0.11)
Test: [  26/  26]	Loss 0.688 (0.684)	test_acc   0.46 (  0.50)	test_minacc   0.49 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.688 (0.684)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.49 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.14 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.48it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.690 (0.690)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.690 (0.690)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.11 ( -0.11)
Overall Timing[ 26/  1]	epoch_time 0.0402 (0.0439)	validation_time 0.0004 (0.0007)	train_time 0.0398 (0.0431)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5035000059604645, 0.5110000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.03it/s] 15%|#5        | 4/26 [00:00<00:01, 19.11it/s] 31%|###       | 8/26 [00:00<00:00, 26.02it/s] 42%|####2     | 11/26 [00:00<00:00, 25.69it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.66it/s] 69%|######9   | 18/26 [00:00<00:00, 29.34it/s] 81%|########  | 21/26 [00:00<00:00, 28.81it/s] 92%|#########2| 24/26 [00:00<00:00, 28.78it/s]100%|##########| 26/26 [00:01<00:00, 25.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 310 tensor(-4.4771e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 297 tensor(-7.1606e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 281 tensor(-3.5070e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 282 tensor(-1.7827e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 278 tensor(-2.4098e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 301 tensor(-1.4542e-06, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.20 ( 34.20)	train_acc   0.47 (  0.50)	train_minacc   0.51 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1520 (6.1544)	zero_count 0.0000 (51.3240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.09it/s] 23%|##3       | 6/26 [00:00<00:00, 23.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.75it/s] 42%|####2     | 11/26 [00:00<00:00, 32.04it/s] 65%|######5   | 17/26 [00:00<00:00, 36.32it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.32it/s] 85%|########4 | 22/26 [00:00<00:00, 39.62it/s]100%|##########| 26/26 [00:00<00:00, 32.24it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.48 (  0.48)	test_minacc   0.48 (  0.48)	test_majacc   0.48 (  0.48)	Loss_d 0.688 (0.688)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.688 (0.687)	test_acc   0.47 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.47 (  0.51)	Loss_d 0.688 (0.687)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.13 (  0.08)
Test: [  20/  26]	Loss 0.685 (0.686)	test_acc   0.54 (  0.50)	test_minacc   0.52 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.685 (0.686)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.52 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.07 (  0.10)
Test: [  26/  26]	Loss 0.690 (0.686)	test_acc   0.46 (  0.50)	test_minacc   0.49 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.690 (0.686)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.49 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.11 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.29it/s]
Test: [  0/  1]	Loss 0.688 (0.688)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.688 (0.688)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 27/  1]	epoch_time 0.0399 (0.0437)	validation_time 0.0006 (0.0007)	train_time 0.0393 (0.0430)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.502000007212162, 0.5120000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.74it/s] 15%|#5        | 4/26 [00:00<00:01, 12.53it/s] 31%|###       | 8/26 [00:00<00:00, 19.58it/s] 46%|####6     | 12/26 [00:00<00:00, 23.70it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.82it/s] 69%|######9   | 18/26 [00:00<00:00, 26.01it/s] 85%|########4 | 22/26 [00:00<00:00, 28.62it/s] 96%|#########6| 25/26 [00:01<00:00, 28.41it/s]100%|##########| 26/26 [00:01<00:00, 22.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 325 tensor(-1.6558e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 305 tensor(-5.4384e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 296 tensor(-3.6349e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 289 tensor(-1.0079e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 282 tensor(-1.7860e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 297 tensor(-1.6865e-06, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  34.20 ( 34.20)	train_acc   0.47 (  0.50)	train_minacc   0.51 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1529 (6.1534)	zero_count 0.0000 (49.4520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.37it/s] 27%|##6       | 7/26 [00:00<00:00, 37.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.70it/s] 46%|####6     | 12/26 [00:00<00:00, 41.13it/s] 65%|######5   | 17/26 [00:00<00:00, 43.27it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.27it/s] 85%|########4 | 22/26 [00:00<00:00, 41.38it/s]100%|##########| 26/26 [00:00<00:00, 38.24it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.48 (  0.48)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.689 (0.689)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.06 (  0.06)
Test: [  10/  26]	Loss 0.689 (0.688)	test_acc   0.48 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.48 (  0.51)	Loss_d 0.689 (0.688)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.12 (  0.07)
Test: [  20/  26]	Loss 0.686 (0.688)	test_acc   0.54 (  0.50)	test_minacc   0.52 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.686 (0.688)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.52 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.05 (  0.08)
Test: [  26/  26]	Loss 0.692 (0.687)	test_acc   0.46 (  0.50)	test_minacc   0.49 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.692 (0.687)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.49 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.10 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.16it/s]
Test: [  0/  1]	Loss 0.687 (0.687)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.687 (0.687)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.687 (0.687)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.687 (0.687)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 28/  1]	epoch_time 0.0433 (0.0437)	validation_time 0.0003 (0.0006)	train_time 0.0429 (0.0430)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.501900008380413, 0.5130000114440918)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.55it/s] 23%|##3       | 6/26 [00:00<00:00, 25.72it/s] 35%|###4      | 9/26 [00:00<00:00, 26.74it/s] 46%|####6     | 12/26 [00:00<00:00, 26.68it/s] 62%|######1   | 16/26 [00:00<00:00, 30.23it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.98it/s] 92%|#########2| 24/26 [00:00<00:00, 30.21it/s]100%|##########| 26/26 [00:00<00:00, 27.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 327 tensor(-8.2138e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 308 tensor(-4.0739e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 297 tensor(-4.2131e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 290 tensor(-1.3437e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 285 tensor(-9.7035e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 292 tensor(-1.9171e-06, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.20)	train_acc   0.46 (  0.50)	train_minacc   0.51 (  0.50)	train_majacc   0.45 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1539 (6.1532)	zero_count 0.0000 (49.2180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.54it/s] 23%|##3       | 6/26 [00:00<00:00, 32.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.10it/s] 42%|####2     | 11/26 [00:00<00:00, 37.90it/s] 62%|######1   | 16/26 [00:00<00:00, 41.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.62it/s] 81%|########  | 21/26 [00:00<00:00, 42.83it/s]100%|##########| 26/26 [00:00<00:00, 44.62it/s]100%|##########| 26/26 [00:00<00:00, 36.88it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.690 (0.690)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.05 (  0.05)
Test: [  10/  26]	Loss 0.690 (0.689)	test_acc   0.48 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.48 (  0.51)	Loss_d 0.690 (0.689)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.11 (  0.06)
Test: [  20/  26]	Loss 0.688 (0.689)	test_acc   0.54 (  0.50)	test_minacc   0.52 (  0.51)	test_majacc   0.54 (  0.50)	Loss_d 0.688 (0.689)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.04 (  0.08)
Test: [  26/  26]	Loss 0.692 (0.688)	test_acc   0.46 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.45 (  0.50)	Loss_d 0.692 (0.688)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.09 (  0.08)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.01it/s]
Test: [  0/  1]	Loss 0.687 (0.687)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.687 (0.687)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.687 (0.687)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.687 (0.687)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 29/  1]	epoch_time 0.0432 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0427 (0.0430)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5026000083386898, 0.5120000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s] 19%|#9        | 5/26 [00:00<00:01, 20.35it/s] 31%|###       | 8/26 [00:00<00:00, 23.15it/s] 42%|####2     | 11/26 [00:00<00:00, 24.62it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.21it/s] 69%|######9   | 18/26 [00:00<00:00, 27.91it/s] 81%|########  | 21/26 [00:00<00:00, 28.05it/s] 96%|#########6| 25/26 [00:00<00:00, 29.72it/s]100%|##########| 26/26 [00:01<00:00, 24.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 314 tensor(-5.3587e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 315 tensor(-2.4340e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 300 tensor(-4.5070e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 293 tensor(-1.7971e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 288 tensor(-7.9528e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 280 tensor(-1.7258e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.20)	train_acc   0.46 (  0.50)	train_minacc   0.53 (  0.51)	train_majacc   0.45 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1546 (6.1531)	zero_count 0.0000 (49.2960)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.19it/s] 27%|##6       | 7/26 [00:00<00:00, 33.98it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.98it/s] 46%|####6     | 12/26 [00:00<00:00, 39.87it/s] 65%|######5   | 17/26 [00:00<00:00, 42.27it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.27it/s] 85%|########4 | 22/26 [00:00<00:00, 40.39it/s]100%|##########| 26/26 [00:00<00:00, 37.42it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.48 (  0.48)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.690 (0.690)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.690 (0.690)	test_acc   0.48 (  0.51)	test_minacc   0.47 (  0.50)	test_majacc   0.48 (  0.51)	Loss_d 0.690 (0.690)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.11 (  0.06)
Test: [  20/  26]	Loss 0.689 (0.689)	test_acc   0.54 (  0.50)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.03 (  0.07)
Test: [  26/  26]	Loss 0.693 (0.689)	test_acc   0.47 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.45 (  0.50)	Loss_d 0.693 (0.689)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.08 (  0.07)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.43it/s]
Test: [  0/  1]	Loss 0.688 (0.688)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.688 (0.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.688 (0.688)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.688 (0.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 30/  1]	epoch_time 0.0420 (0.0436)	validation_time 0.0003 (0.0006)	train_time 0.0416 (0.0429)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5029000073671341, 0.5100000500679016)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.34it/s] 19%|#9        | 5/26 [00:00<00:01, 19.22it/s] 35%|###4      | 9/26 [00:00<00:00, 24.29it/s] 46%|####6     | 12/26 [00:00<00:00, 24.78it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.79it/s] 85%|########4 | 22/26 [00:00<00:00, 27.73it/s] 96%|#########6| 25/26 [00:00<00:00, 27.57it/s]100%|##########| 26/26 [00:01<00:00, 23.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 321 tensor(-1.1847e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 305 tensor(-4.6873e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 300 tensor(-2.2226e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 287 tensor(-5.5631e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 283 tensor(-9.2681e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 313 tensor(-5.6795e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.47 (  0.50)	train_minacc   0.53 (  0.51)	train_majacc   0.45 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1506 (6.1529)	zero_count 228.0000 (47.1180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.90it/s] 35%|###4      | 9/26 [00:00<00:00, 39.35it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.35it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.35it/s] 92%|#########2| 24/26 [00:00<00:00, 44.98it/s]100%|##########| 26/26 [00:00<00:00, 37.69it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.49 (  0.49)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.691 (0.691)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.691 (0.690)	test_acc   0.48 (  0.51)	test_minacc   0.47 (  0.50)	test_majacc   0.48 (  0.51)	Loss_d 0.691 (0.690)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.10 (  0.05)
Test: [  20/  26]	Loss 0.690 (0.690)	test_acc   0.54 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.50)	Loss_d 0.690 (0.690)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.01 (  0.06)
Test: [  26/  26]	Loss 0.694 (0.690)	test_acc   0.47 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.45 (  0.50)	Loss_d 0.694 (0.690)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.07 (  0.07)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.09it/s]
Test: [  0/  1]	Loss 0.688 (0.688)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.688 (0.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.688 (0.688)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.688 (0.688)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.11 ( -0.11)
Overall Timing[ 31/  1]	epoch_time 0.0437 (0.0436)	validation_time 0.0007 (0.0006)	train_time 0.0430 (0.0429)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5034000108242035, 0.5120000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.28it/s] 15%|#5        | 4/26 [00:00<00:01, 18.37it/s] 31%|###       | 8/26 [00:00<00:00, 26.11it/s] 42%|####2     | 11/26 [00:00<00:00, 26.56it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.04it/s] 69%|######9   | 18/26 [00:00<00:00, 29.81it/s] 81%|########  | 21/26 [00:00<00:00, 29.35it/s] 92%|#########2| 24/26 [00:00<00:00, 28.89it/s]100%|##########| 26/26 [00:01<00:00, 25.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 322 tensor(-1.8749e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 308 tensor(-4.2097e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 306 tensor(-3.0024e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 294 tensor(-6.5464e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 288 tensor(-7.0618e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 304 tensor(-8.5674e-07, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.50)	train_minacc   0.53 (  0.51)	train_majacc   0.45 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1514 (6.1526)	zero_count 0.0000 (48.1260)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.25it/s] 23%|##3       | 6/26 [00:00<00:00, 25.78it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.78it/s] 46%|####6     | 12/26 [00:00<00:00, 37.23it/s] 65%|######5   | 17/26 [00:00<00:00, 39.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.69it/s] 85%|########4 | 22/26 [00:00<00:00, 38.74it/s]100%|##########| 26/26 [00:00<00:00, 34.13it/s]
Test: [   0/  26]	Loss 0.691 (0.691)	test_acc   0.49 (  0.49)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.691 (0.691)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.03 (  0.03)
Test: [  10/  26]	Loss 0.691 (0.691)	test_acc   0.48 (  0.51)	test_minacc   0.47 (  0.50)	test_majacc   0.48 (  0.51)	Loss_d 0.691 (0.691)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.09 (  0.04)
Test: [  20/  26]	Loss 0.690 (0.690)	test_acc   0.53 (  0.51)	test_minacc   0.48 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.690 (0.690)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.48 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.01 (  0.06)
Test: [  26/  26]	Loss 0.694 (0.690)	test_acc   0.46 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.45 (  0.50)	Loss_d 0.694 (0.690)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.06 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.33it/s]
Test: [  0/  1]	Loss 0.688 (0.688)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.688 (0.688)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.688 (0.688)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.688 (0.688)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.11 ( -0.11)
Overall Timing[ 32/  1]	epoch_time 0.0426 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0422 (0.0429)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5034000094532967, 0.51500004529953)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.75it/s] 15%|#5        | 4/26 [00:00<00:01, 19.21it/s] 31%|###       | 8/26 [00:00<00:00, 23.16it/s] 46%|####6     | 12/26 [00:00<00:00, 26.92it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.89it/s] 69%|######9   | 18/26 [00:00<00:00, 27.12it/s] 85%|########4 | 22/26 [00:00<00:00, 29.98it/s]100%|##########| 26/26 [00:00<00:00, 30.26it/s]100%|##########| 26/26 [00:01<00:00, 25.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 326 tensor(-9.9159e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 313 tensor(-2.7289e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 306 tensor(-3.6982e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 300 tensor(-1.0867e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 292 tensor(-4.1011e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 287 tensor(-9.6195e-07, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.51)	train_minacc   0.53 (  0.51)	train_majacc   0.45 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1522 (6.1525)	zero_count 0.0000 (47.7750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.08it/s] 23%|##3       | 6/26 [00:00<00:00, 23.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.71it/s] 42%|####2     | 11/26 [00:00<00:00, 32.01it/s] 62%|######1   | 16/26 [00:00<00:00, 37.18it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.18it/s] 81%|########  | 21/26 [00:00<00:00, 40.32it/s]100%|##########| 26/26 [00:00<00:00, 42.75it/s]100%|##########| 26/26 [00:00<00:00, 33.30it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.49 (  0.49)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.692 (0.692)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.03 (  0.03)
Test: [  10/  26]	Loss 0.692 (0.691)	test_acc   0.48 (  0.51)	test_minacc   0.47 (  0.50)	test_majacc   0.48 (  0.51)	Loss_d 0.692 (0.691)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.09 (  0.04)
Test: [  20/  26]	Loss 0.691 (0.691)	test_acc   0.53 (  0.50)	test_minacc   0.48 (  0.51)	test_majacc   0.54 (  0.50)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.48 (  0.51)	test_majacc_d   0.54 (  0.50)	test_corr_d  -0.00 (  0.05)
Test: [  26/  26]	Loss 0.694 (0.691)	test_acc   0.47 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.45 (  0.50)	Loss_d 0.694 (0.691)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.06 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.34it/s]
Test: [  0/  1]	Loss 0.689 (0.689)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.689 (0.689)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.689 (0.689)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.689 (0.689)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 33/  1]	epoch_time 0.0491 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0486 (0.0431)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5031000096797943, 0.5110000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.08it/s] 15%|#5        | 4/26 [00:00<00:01, 16.23it/s] 27%|##6       | 7/26 [00:00<00:00, 20.40it/s] 42%|####2     | 11/26 [00:00<00:00, 25.99it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.81it/s] 65%|######5   | 17/26 [00:00<00:00, 27.25it/s] 81%|########  | 21/26 [00:00<00:00, 29.99it/s] 96%|#########6| 25/26 [00:00<00:00, 29.90it/s]100%|##########| 26/26 [00:01<00:00, 24.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 329 tensor(-3.2078e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 315 tensor(-1.6885e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 299 tensor(-3.5922e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 300 tensor(-1.6317e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 293 tensor(-3.0978e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 285 tensor(-9.5534e-07, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.51)	train_minacc   0.51 (  0.50)	train_majacc   0.45 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1531 (6.1526)	zero_count 0.0000 (48.4770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.59it/s] 27%|##6       | 7/26 [00:00<00:00, 30.04it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.04it/s] 46%|####6     | 12/26 [00:00<00:00, 36.37it/s] 65%|######5   | 17/26 [00:00<00:00, 39.84it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.84it/s] 85%|########4 | 22/26 [00:00<00:00, 42.15it/s]100%|##########| 26/26 [00:00<00:00, 35.28it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.692 (0.692)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.02 (  0.02)
Test: [  10/  26]	Loss 0.692 (0.691)	test_acc   0.48 (  0.51)	test_minacc   0.45 (  0.50)	test_majacc   0.48 (  0.51)	Loss_d 0.692 (0.691)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.45 (  0.50)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.08 (  0.04)
Test: [  20/  26]	Loss 0.691 (0.691)	test_acc   0.54 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.54 (  0.51)	Loss_d 0.691 (0.691)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.54 (  0.51)	test_corr_d  -0.01 (  0.05)
Test: [  26/  26]	Loss 0.694 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.45 (  0.50)	Loss_d 0.694 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.06 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.57it/s]
Test: [  0/  1]	Loss 0.689 (0.689)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.689 (0.689)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.689 (0.689)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.689 (0.689)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 34/  1]	epoch_time 0.0456 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0451 (0.0431)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5041000080406666, 0.5139999985694885)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.38it/s] 19%|#9        | 5/26 [00:00<00:01, 14.62it/s] 31%|###       | 8/26 [00:00<00:00, 19.13it/s] 42%|####2     | 11/26 [00:00<00:00, 22.25it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.04it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.59it/s] 88%|########8 | 23/26 [00:00<00:00, 29.27it/s]100%|##########| 26/26 [00:01<00:00, 22.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 315 tensor(-3.8328e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 319 tensor(-6.1691e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 300 tensor(-3.4345e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 299 tensor(-2.0011e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 291 tensor(-7.5935e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 283 tensor(-7.4212e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.51)	train_minacc   0.51 (  0.51)	train_majacc   0.45 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1539 (6.1526)	zero_count 0.0000 (49.0230)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.27it/s] 31%|###       | 8/26 [00:00<00:00, 36.05it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.05it/s] 50%|#####     | 13/26 [00:00<00:00, 40.82it/s] 69%|######9   | 18/26 [00:00<00:00, 41.90it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.90it/s] 88%|########8 | 23/26 [00:00<00:00, 41.20it/s]100%|##########| 26/26 [00:00<00:00, 37.20it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.692 (0.692)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.02 (  0.02)
Test: [  10/  26]	Loss 0.692 (0.691)	test_acc   0.48 (  0.51)	test_minacc   0.45 (  0.50)	test_majacc   0.48 (  0.51)	Loss_d 0.692 (0.691)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.45 (  0.50)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.08 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.691)	test_acc   0.53 (  0.51)	test_minacc   0.46 (  0.50)	test_majacc   0.54 (  0.51)	Loss_d 0.692 (0.691)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.54 (  0.51)	test_corr_d  -0.01 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.45 (  0.50)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.06 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.50it/s]
Test: [  0/  1]	Loss 0.689 (0.689)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.689 (0.689)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 0.689 (0.689)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.689 (0.689)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.09 ( -0.09)
Overall Timing[ 35/  1]	epoch_time 0.0465 (0.0439)	validation_time 0.0003 (0.0006)	train_time 0.0461 (0.0432)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5048000045120716, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.52it/s] 23%|##3       | 6/26 [00:00<00:00, 25.52it/s] 38%|###8      | 10/26 [00:00<00:00, 27.85it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.92it/s] 69%|######9   | 18/26 [00:00<00:00, 30.95it/s] 85%|########4 | 22/26 [00:00<00:00, 31.50it/s]100%|##########| 26/26 [00:00<00:00, 31.96it/s]100%|##########| 26/26 [00:00<00:00, 28.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 317 tensor(-2.7890e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 301 tensor(-3.1026e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 303 tensor(-2.2932e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 298 tensor(-9.5367e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 291 tensor(-3.4456e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 309 tensor(-4.0300e-07, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.51)	train_minacc   0.51 (  0.50)	train_majacc   0.45 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1506 (6.1525)	zero_count 220.0000 (46.5670)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.99it/s] 31%|###       | 8/26 [00:00<00:00, 39.74it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.74it/s] 50%|#####     | 13/26 [00:00<00:00, 41.69it/s] 69%|######9   | 18/26 [00:00<00:00, 40.46it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.46it/s] 88%|########8 | 23/26 [00:00<00:00, 42.45it/s]100%|##########| 26/26 [00:00<00:00, 38.27it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.49 (  0.49)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.692 (0.692)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.02 (  0.02)
Test: [  10/  26]	Loss 0.692 (0.691)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.692 (0.691)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.08 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.691)	test_acc   0.53 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.54 (  0.51)	Loss_d 0.692 (0.691)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.54 (  0.51)	test_corr_d  -0.02 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.51)	test_minacc   0.51 (  0.50)	test_majacc   0.45 (  0.51)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.45 (  0.51)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.92it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.690 (0.690)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.690 (0.690)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.09 ( -0.09)
Overall Timing[ 36/  1]	epoch_time 0.0399 (0.0438)	validation_time 0.0005 (0.0006)	train_time 0.0394 (0.0431)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5061000125706195, 0.5250000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.94it/s] 19%|#9        | 5/26 [00:00<00:01, 19.24it/s] 35%|###4      | 9/26 [00:00<00:00, 23.61it/s] 50%|#####     | 13/26 [00:00<00:00, 28.03it/s] 62%|######1   | 16/26 [00:00<00:00, 27.78it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.62it/s] 88%|########8 | 23/26 [00:00<00:00, 29.98it/s]100%|##########| 26/26 [00:01<00:00, 25.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 317 tensor(-2.9990e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 304 tensor(-2.4639e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 300 tensor(-2.5854e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 298 tensor(-1.1435e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 289 tensor(-4.3902e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 285 tensor(-5.2019e-07, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.51)	train_minacc   0.51 (  0.50)	train_majacc   0.45 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1513 (6.1523)	zero_count 0.0000 (48.7110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.77it/s] 27%|##6       | 7/26 [00:00<00:00, 34.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.89it/s] 46%|####6     | 12/26 [00:00<00:00, 40.05it/s] 65%|######5   | 17/26 [00:00<00:00, 42.28it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.28it/s] 85%|########4 | 22/26 [00:00<00:00, 40.13it/s]100%|##########| 26/26 [00:00<00:00, 37.35it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.49 (  0.49)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.692 (0.692)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.02 (  0.02)
Test: [  10/  26]	Loss 0.692 (0.691)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.692 (0.691)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.08 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.692)	test_acc   0.53 (  0.51)	test_minacc   0.45 (  0.50)	test_majacc   0.54 (  0.51)	Loss_d 0.692 (0.692)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.45 (  0.50)	test_majacc_d   0.54 (  0.51)	test_corr_d  -0.02 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.51)	test_minacc   0.51 (  0.50)	test_majacc   0.45 (  0.51)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.45 (  0.51)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.66it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.690 (0.690)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.690 (0.690)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.09 ( -0.09)
Overall Timing[ 37/  1]	epoch_time 0.0472 (0.0439)	validation_time 0.0006 (0.0006)	train_time 0.0466 (0.0432)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.506000008136034, 0.527999997138977)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.90it/s] 19%|#9        | 5/26 [00:00<00:00, 23.19it/s] 31%|###       | 8/26 [00:00<00:00, 25.76it/s] 46%|####6     | 12/26 [00:00<00:00, 29.87it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.96it/s] 69%|######9   | 18/26 [00:00<00:00, 28.66it/s] 85%|########4 | 22/26 [00:00<00:00, 30.82it/s]100%|##########| 26/26 [00:00<00:00, 30.83it/s]100%|##########| 26/26 [00:00<00:00, 27.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 326 tensor(-1.0353e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 308 tensor(-1.5524e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 301 tensor(-2.7868e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 296 tensor(-1.4064e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 288 tensor(-4.8179e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 283 tensor(-5.3728e-07, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.51)	train_minacc   0.51 (  0.50)	train_majacc   0.45 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1520 (6.1522)	zero_count 0.0000 (49.2180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.81it/s] 23%|##3       | 6/26 [00:00<00:00, 27.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.47it/s] 42%|####2     | 11/26 [00:00<00:00, 35.27it/s] 62%|######1   | 16/26 [00:00<00:00, 39.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.76it/s] 81%|########  | 21/26 [00:00<00:00, 38.35it/s]100%|##########| 26/26 [00:00<00:00, 33.65it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.49 (  0.49)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.692 (0.692)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.01 (  0.01)
Test: [  10/  26]	Loss 0.692 (0.692)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.692 (0.692)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.08 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.692)	test_acc   0.53 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.54 (  0.51)	Loss_d 0.692 (0.692)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.54 (  0.51)	test_corr_d  -0.02 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.51)	test_minacc   0.51 (  0.50)	test_majacc   0.45 (  0.51)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.45 (  0.51)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.69it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.690 (0.690)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.690 (0.690)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 38/  1]	epoch_time 0.0429 (0.0439)	validation_time 0.0003 (0.0006)	train_time 0.0426 (0.0432)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5061000104546547, 0.5270000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 15%|#5        | 4/26 [00:00<00:01, 17.52it/s] 27%|##6       | 7/26 [00:00<00:00, 20.74it/s] 42%|####2     | 11/26 [00:00<00:00, 25.56it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.03it/s] 65%|######5   | 17/26 [00:00<00:00, 26.50it/s] 81%|########  | 21/26 [00:00<00:00, 29.10it/s] 92%|#########2| 24/26 [00:00<00:00, 29.07it/s]100%|##########| 26/26 [00:01<00:00, 24.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 327 tensor(-2.6168e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 304 tensor(-1.1632e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 292 tensor(-2.3891e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 291 tensor(-1.5612e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 287 tensor(-6.8711e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 282 tensor(-5.8636e-07, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.51)	train_minacc   0.51 (  0.49)	train_majacc   0.45 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1528 (6.1523)	zero_count 0.0000 (49.9980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.19it/s] 23%|##3       | 6/26 [00:00<00:00, 26.85it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.85it/s] 42%|####2     | 11/26 [00:00<00:00, 34.46it/s] 62%|######1   | 16/26 [00:00<00:00, 39.17it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.17it/s] 81%|########  | 21/26 [00:00<00:00, 39.32it/s]100%|##########| 26/26 [00:00<00:00, 42.06it/s]100%|##########| 26/26 [00:00<00:00, 33.75it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.49 (  0.49)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.693 (0.693)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.01 (  0.01)
Test: [  10/  26]	Loss 0.692 (0.692)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.692 (0.692)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.08 (  0.04)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.53 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.54 (  0.51)	Loss_d 0.693 (0.692)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.54 (  0.51)	test_corr_d  -0.02 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.45 (  0.51)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.45 (  0.51)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.56it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 39/  1]	epoch_time 0.0453 (0.0439)	validation_time 0.0005 (0.0006)	train_time 0.0448 (0.0432)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5071000113487244, 0.527999997138977)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.63it/s] 15%|#5        | 4/26 [00:00<00:01, 13.02it/s] 27%|##6       | 7/26 [00:00<00:01, 17.86it/s] 42%|####2     | 11/26 [00:00<00:00, 22.63it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.31it/s] 69%|######9   | 18/26 [00:00<00:00, 28.01it/s] 85%|########4 | 22/26 [00:00<00:00, 29.44it/s]100%|##########| 26/26 [00:01<00:00, 29.97it/s]100%|##########| 26/26 [00:01<00:00, 23.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 310 tensor(-2.7138e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 309 tensor(-5.5990e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 293 tensor(-2.2885e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 293 tensor(-1.6511e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 290 tensor(-1.0225e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 281 tensor(-5.7998e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.70 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.51)	train_minacc   0.51 (  0.49)	train_majacc   0.45 (  0.52)	train_corr   0.00 (  0.00)	l1 6.1535 (6.1523)	zero_count 0.0000 (50.2710)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.35it/s] 15%|#5        | 4/26 [00:00<00:01, 18.76it/s] 35%|###4      | 9/26 [00:00<00:00, 31.21it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.33it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.47it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.47it/s] 92%|#########2| 24/26 [00:00<00:00, 43.16it/s]100%|##########| 26/26 [00:00<00:00, 34.69it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.49 (  0.49)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.693 (0.693)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.01 (  0.01)
Test: [  10/  26]	Loss 0.692 (0.692)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.48)	test_majacc   0.50 (  0.52)	Loss_d 0.692 (0.692)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.48)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.08 (  0.04)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.53 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.54 (  0.51)	Loss_d 0.693 (0.692)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.54 (  0.51)	test_corr_d  -0.03 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.46 (  0.51)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.46 (  0.51)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.99it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.691 (0.691)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.691 (0.691)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 40/  1]	epoch_time 0.0437 (0.0439)	validation_time 0.0005 (0.0006)	train_time 0.0432 (0.0432)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5087000114619732, 0.5230000019073486)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.45it/s] 19%|#9        | 5/26 [00:00<00:00, 21.63it/s] 35%|###4      | 9/26 [00:00<00:00, 25.70it/s] 46%|####6     | 12/26 [00:00<00:00, 25.21it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.27it/s] 85%|########4 | 22/26 [00:00<00:00, 28.58it/s] 96%|#########6| 25/26 [00:00<00:00, 28.92it/s]100%|##########| 26/26 [00:01<00:00, 25.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 312 tensor(-2.5899e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 296 tensor(-2.1963e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 293 tensor(-1.7646e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 289 tensor(-1.0721e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 287 tensor(-4.1558e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 300 tensor(-2.8832e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.51)	train_minacc   0.49 (  0.49)	train_majacc   0.46 (  0.52)	train_corr   0.00 (  0.00)	l1 6.1506 (6.1522)	zero_count 224.0000 (47.8760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.83it/s] 27%|##6       | 7/26 [00:00<00:00, 34.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.60it/s] 46%|####6     | 12/26 [00:00<00:00, 37.31it/s] 65%|######5   | 17/26 [00:00<00:00, 40.49it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.49it/s] 85%|########4 | 22/26 [00:00<00:00, 42.71it/s]100%|##########| 26/26 [00:00<00:00, 35.48it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Test: [  10/  26]	Loss 0.693 (0.692)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.50 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.07 (  0.04)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.53 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.54 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.54 (  0.52)	test_corr_d  -0.03 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.46 (  0.51)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.46 (  0.51)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.32it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 41/  1]	epoch_time 0.0455 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0451 (0.0433)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5105000113546848, 0.5300000309944153)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.99it/s] 15%|#5        | 4/26 [00:00<00:01, 19.11it/s] 31%|###       | 8/26 [00:00<00:00, 25.34it/s] 42%|####2     | 11/26 [00:00<00:00, 25.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.42it/s] 69%|######9   | 18/26 [00:00<00:00, 28.02it/s] 81%|########  | 21/26 [00:00<00:00, 27.66it/s] 92%|#########2| 24/26 [00:00<00:00, 27.91it/s]100%|##########| 26/26 [00:01<00:00, 25.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 319 tensor(-3.4273e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 299 tensor(-1.8279e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 296 tensor(-1.9523e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 293 tensor(-1.1451e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 283 tensor(-5.3728e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 284 tensor(-3.8482e-07, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.52)	train_minacc   0.49 (  0.49)	train_majacc   0.46 (  0.52)	train_corr   0.00 (  0.00)	l1 6.1512 (6.1520)	zero_count 0.0000 (49.7640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.23it/s] 23%|##3       | 6/26 [00:00<00:00, 26.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.39it/s] 42%|####2     | 11/26 [00:00<00:00, 34.71it/s] 62%|######1   | 16/26 [00:00<00:00, 39.43it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.43it/s] 81%|########  | 21/26 [00:00<00:00, 37.95it/s]100%|##########| 26/26 [00:00<00:00, 40.85it/s]100%|##########| 26/26 [00:00<00:00, 33.30it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Test: [  10/  26]	Loss 0.693 (0.692)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.49 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.49 (  0.52)	test_corr_d   0.07 (  0.03)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.53 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.54 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.54 (  0.52)	test_corr_d  -0.03 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.46 (  0.52)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.46 (  0.52)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.14it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 42/  1]	epoch_time 0.0477 (0.0440)	validation_time 0.0004 (0.0006)	train_time 0.0472 (0.0434)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5122000100910664, 0.5290000438690186)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.22it/s] 15%|#5        | 4/26 [00:00<00:01, 19.07it/s] 31%|###       | 8/26 [00:00<00:00, 23.52it/s] 46%|####6     | 12/26 [00:00<00:00, 27.55it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.04it/s] 69%|######9   | 18/26 [00:00<00:00, 26.89it/s] 85%|########4 | 22/26 [00:00<00:00, 29.74it/s] 96%|#########6| 25/26 [00:00<00:00, 28.93it/s]100%|##########| 26/26 [00:01<00:00, 25.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 326 tensor(-3.7914e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 301 tensor(-1.2537e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 296 tensor(-2.0856e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 293 tensor(-1.2359e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 284 tensor(-6.0065e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 282 tensor(-4.4145e-07, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.52)	train_minacc   0.49 (  0.49)	train_majacc   0.46 (  0.52)	train_corr   0.00 (  0.00)	l1 6.1518 (6.1520)	zero_count 0.0000 (49.9980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.21it/s] 23%|##3       | 6/26 [00:00<00:00, 28.67it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.67it/s] 42%|####2     | 11/26 [00:00<00:00, 35.91it/s] 62%|######1   | 16/26 [00:00<00:00, 40.23it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.23it/s] 81%|########  | 21/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 43.41it/s]100%|##########| 26/26 [00:00<00:00, 35.33it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Test: [  10/  26]	Loss 0.693 (0.692)	test_acc   0.50 (  0.52)	test_minacc   0.45 (  0.49)	test_majacc   0.50 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.07 (  0.03)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.52 (  0.51)	test_minacc   0.45 (  0.49)	test_majacc   0.54 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.54 (  0.52)	test_corr_d  -0.03 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.46 (  0.52)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.46 (  0.52)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.47it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.44 (  0.44)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.44 (  0.44)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.44 (  0.44)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.44 (  0.44)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 43/  1]	epoch_time 0.0439 (0.0440)	validation_time 0.0003 (0.0006)	train_time 0.0435 (0.0434)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5142000076472759, 0.5300000309944153)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.75it/s] 15%|#5        | 4/26 [00:00<00:01, 16.13it/s] 27%|##6       | 7/26 [00:00<00:00, 20.14it/s] 42%|####2     | 11/26 [00:00<00:00, 25.32it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.86it/s] 65%|######5   | 17/26 [00:00<00:00, 26.13it/s] 81%|########  | 21/26 [00:00<00:00, 29.01it/s] 92%|#########2| 24/26 [00:00<00:00, 28.35it/s]100%|##########| 26/26 [00:01<00:00, 24.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 326 tensor(-1.1957e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 301 tensor(-9.6946e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 293 tensor(-1.8603e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 293 tensor(-1.2764e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 285 tensor(-7.4360e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 280 tensor(-5.0738e-07, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.52)	train_minacc   0.49 (  0.49)	train_majacc   0.46 (  0.52)	train_corr   0.00 (  0.00)	l1 6.1525 (6.1520)	zero_count 0.0000 (50.1540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.81it/s] 27%|##6       | 7/26 [00:00<00:00, 34.85it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.85it/s] 46%|####6     | 12/26 [00:00<00:00, 40.65it/s] 65%|######5   | 17/26 [00:00<00:00, 39.67it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.67it/s] 85%|########4 | 22/26 [00:00<00:00, 42.83it/s]100%|##########| 26/26 [00:00<00:00, 37.08it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.49 (  0.49)	Loss_d 0.693 (0.693)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.01 (  0.01)
Test: [  10/  26]	Loss 0.693 (0.692)	test_acc   0.50 (  0.52)	test_minacc   0.45 (  0.49)	test_majacc   0.51 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.07 (  0.03)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.52 (  0.52)	test_minacc   0.45 (  0.49)	test_majacc   0.54 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.54 (  0.52)	test_corr_d  -0.03 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.46 (  0.52)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.46 (  0.52)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.88it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.44 (  0.44)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.44 (  0.44)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.44 (  0.44)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.44 (  0.44)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 44/  1]	epoch_time 0.0437 (0.0440)	validation_time 0.0005 (0.0006)	train_time 0.0432 (0.0434)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5151000145673752, 0.5320000052452087)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.49it/s] 19%|#9        | 5/26 [00:00<00:00, 23.08it/s] 31%|###       | 8/26 [00:00<00:00, 24.55it/s] 42%|####2     | 11/26 [00:00<00:00, 25.38it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.47it/s] 69%|######9   | 18/26 [00:00<00:00, 28.34it/s] 81%|########  | 21/26 [00:00<00:00, 28.39it/s] 96%|#########6| 25/26 [00:00<00:00, 30.71it/s]100%|##########| 26/26 [00:01<00:00, 25.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 310 tensor(-1.8706e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 310 tensor(-4.5077e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 293 tensor(-1.7646e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 290 tensor(-1.3076e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 285 tensor(-9.4867e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 279 tensor(-5.5177e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.46 (  0.52)	train_minacc   0.51 (  0.48)	train_majacc   0.45 (  0.53)	train_corr   0.00 (  0.00)	l1 6.1531 (6.1521)	zero_count 0.0000 (50.6220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.09it/s] 23%|##3       | 6/26 [00:00<00:00, 25.44it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.44it/s] 42%|####2     | 11/26 [00:00<00:00, 34.57it/s] 62%|######1   | 16/26 [00:00<00:00, 38.82it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.82it/s] 81%|########  | 21/26 [00:00<00:00, 37.59it/s]100%|##########| 26/26 [00:00<00:00, 41.05it/s]100%|##########| 26/26 [00:00<00:00, 32.55it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Test: [  10/  26]	Loss 0.693 (0.692)	test_acc   0.50 (  0.52)	test_minacc   0.45 (  0.49)	test_majacc   0.51 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.07 (  0.03)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.53 (  0.52)	test_minacc   0.45 (  0.48)	test_majacc   0.54 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.53 (  0.52)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.54 (  0.52)	test_corr_d  -0.03 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.46 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.46 (  0.52)	Loss_d 0.695 (0.692)	test_acc_d   0.46 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.46 (  0.52)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.60it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.43 (  0.43)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.43 (  0.43)	Loss_d 0.691 (0.691)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 45/  1]	epoch_time 0.0464 (0.0441)	validation_time 0.0004 (0.0006)	train_time 0.0459 (0.0434)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.517000015616417, 0.531000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.12it/s] 15%|#5        | 4/26 [00:00<00:01, 13.18it/s] 27%|##6       | 7/26 [00:00<00:01, 18.34it/s] 38%|###8      | 10/26 [00:00<00:00, 21.95it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.44it/s] 65%|######5   | 17/26 [00:00<00:00, 27.04it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.55it/s] 92%|#########2| 24/26 [00:00<00:00, 29.88it/s]100%|##########| 26/26 [00:01<00:00, 23.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 313 tensor(3.0372e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 300 tensor(-1.8836e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 293 tensor(-1.4240e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 287 tensor(-9.5699e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 283 tensor(-4.5333e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 301 tensor(-2.1158e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.47 (  0.52)	train_minacc   0.49 (  0.48)	train_majacc   0.46 (  0.53)	train_corr   0.00 (  0.00)	l1 6.1506 (6.1520)	zero_count 228.0000 (47.9370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.83it/s] 27%|##6       | 7/26 [00:00<00:00, 31.67it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.67it/s] 46%|####6     | 12/26 [00:00<00:00, 38.51it/s] 65%|######5   | 17/26 [00:00<00:00, 41.31it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.31it/s] 85%|########4 | 22/26 [00:00<00:00, 43.48it/s]100%|##########| 26/26 [00:00<00:00, 36.91it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.00 (  0.00)
Test: [  10/  26]	Loss 0.693 (0.692)	test_acc   0.50 (  0.52)	test_minacc   0.47 (  0.49)	test_majacc   0.50 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.07 (  0.03)
Test: [  20/  26]	Loss 0.693 (0.692)	test_acc   0.53 (  0.52)	test_minacc   0.43 (  0.48)	test_majacc   0.54 (  0.53)	Loss_d 0.693 (0.692)	test_acc_d   0.53 (  0.52)	test_minacc_d   0.43 (  0.48)	test_majacc_d   0.54 (  0.53)	test_corr_d  -0.04 (  0.05)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.47 (  0.52)	test_minacc   0.49 (  0.48)	test_majacc   0.46 (  0.52)	Loss_d 0.695 (0.692)	test_acc_d   0.47 (  0.52)	test_minacc_d   0.49 (  0.48)	test_majacc_d   0.46 (  0.52)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.14it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.43 (  0.43)	Loss_d 0.692 (0.692)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.43 (  0.43)	Loss_d 0.692 (0.692)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 46/  1]	epoch_time 0.0510 (0.0442)	validation_time 0.0004 (0.0006)	train_time 0.0506 (0.0436)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5185000122487545, 0.5330000519752502)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.28it/s] 19%|#9        | 5/26 [00:00<00:01, 20.06it/s] 35%|###4      | 9/26 [00:00<00:00, 24.08it/s] 50%|#####     | 13/26 [00:00<00:00, 27.66it/s] 62%|######1   | 16/26 [00:00<00:00, 27.57it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.18it/s] 88%|########8 | 23/26 [00:00<00:00, 29.84it/s]100%|##########| 26/26 [00:01<00:00, 25.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 320 tensor(2.6293e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 302 tensor(-1.5895e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 295 tensor(-1.6158e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 291 tensor(-1.0108e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 282 tensor(-5.3918e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 286 tensor(-3.3063e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.47 (  0.52)	train_minacc   0.51 (  0.48)	train_majacc   0.46 (  0.53)	train_corr   0.00 (  0.00)	l1 6.1511 (6.1518)	zero_count 0.0000 (49.7250)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.95it/s] 27%|##6       | 7/26 [00:00<00:00, 30.21it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.21it/s] 46%|####6     | 12/26 [00:00<00:00, 37.35it/s] 65%|######5   | 17/26 [00:00<00:00, 40.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.37it/s] 85%|########4 | 22/26 [00:00<00:00, 42.22it/s]100%|##########| 26/26 [00:00<00:00, 35.83it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.693 (0.693)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.00 (  0.00)
Test: [  10/  26]	Loss 0.693 (0.692)	test_acc   0.49 (  0.52)	test_minacc   0.47 (  0.49)	test_majacc   0.50 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.49 (  0.52)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.07 (  0.03)
Test: [  20/  26]	Loss 0.694 (0.692)	test_acc   0.53 (  0.52)	test_minacc   0.45 (  0.48)	test_majacc   0.55 (  0.53)	Loss_d 0.694 (0.692)	test_acc_d   0.53 (  0.52)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.55 (  0.53)	test_corr_d  -0.04 (  0.04)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.48 (  0.52)	test_minacc   0.51 (  0.49)	test_majacc   0.47 (  0.52)	Loss_d 0.695 (0.692)	test_acc_d   0.48 (  0.52)	test_minacc_d   0.51 (  0.49)	test_majacc_d   0.47 (  0.52)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.16it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.43 (  0.43)	Loss_d 0.692 (0.692)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.43 (  0.43)	Loss_d 0.692 (0.692)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 47/  1]	epoch_time 0.0440 (0.0442)	validation_time 0.0004 (0.0006)	train_time 0.0436 (0.0436)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5195000118613243, 0.5320000052452087)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.99it/s] 15%|#5        | 4/26 [00:00<00:01, 12.93it/s] 31%|###       | 8/26 [00:00<00:00, 19.25it/s] 46%|####6     | 12/26 [00:00<00:00, 24.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.87it/s] 69%|######9   | 18/26 [00:00<00:00, 25.64it/s] 85%|########4 | 22/26 [00:00<00:00, 28.30it/s] 96%|#########6| 25/26 [00:01<00:00, 27.53it/s]100%|##########| 26/26 [00:01<00:00, 22.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 327 tensor(2.5150e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 310 tensor(-1.0487e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 297 tensor(-1.7825e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 294 tensor(-1.0717e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 286 tensor(-5.7154e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 282 tensor(-4.0270e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.47 (  0.52)	train_minacc   0.51 (  0.48)	train_majacc   0.46 (  0.53)	train_corr   0.00 (  0.00)	l1 6.1517 (6.1518)	zero_count 0.0000 (49.3740)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.21it/s] 19%|#9        | 5/26 [00:00<00:01, 20.82it/s] 38%|###8      | 10/26 [00:00<00:00, 28.29it/s]                                                38%|###8      | 10/26 [00:00<00:00, 28.29it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.10it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.10it/s] 96%|#########6| 25/26 [00:00<00:00, 40.89it/s]100%|##########| 26/26 [00:00<00:00, 31.51it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.693 (0.693)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.00 (  0.00)
Test: [  10/  26]	Loss 0.693 (0.692)	test_acc   0.49 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.49 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.49 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.49 (  0.52)	test_corr_d   0.06 (  0.03)
Test: [  20/  26]	Loss 0.694 (0.692)	test_acc   0.53 (  0.52)	test_minacc   0.45 (  0.48)	test_majacc   0.55 (  0.53)	Loss_d 0.694 (0.692)	test_acc_d   0.53 (  0.52)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.55 (  0.53)	test_corr_d  -0.04 (  0.04)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.47 (  0.52)	test_minacc   0.51 (  0.49)	test_majacc   0.46 (  0.52)	Loss_d 0.695 (0.692)	test_acc_d   0.47 (  0.52)	test_minacc_d   0.51 (  0.49)	test_majacc_d   0.46 (  0.52)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.24it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.53 (  0.53)	test_minacc   0.55 (  0.55)	test_majacc   0.43 (  0.43)	Loss_d 0.692 (0.692)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.53 (  0.53)	test_minacc   0.55 (  0.55)	test_majacc   0.43 (  0.43)	Loss_d 0.692 (0.692)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 48/  1]	epoch_time 0.0442 (0.0442)	validation_time 0.0004 (0.0006)	train_time 0.0438 (0.0436)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5192000182271004, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.19it/s] 15%|#5        | 4/26 [00:00<00:01, 15.81it/s] 27%|##6       | 7/26 [00:00<00:00, 19.58it/s] 42%|####2     | 11/26 [00:00<00:00, 25.20it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.59it/s] 65%|######5   | 17/26 [00:00<00:00, 26.03it/s] 81%|########  | 21/26 [00:00<00:00, 28.35it/s] 92%|#########2| 24/26 [00:00<00:00, 28.35it/s]100%|##########| 26/26 [00:01<00:00, 23.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 324 tensor(1.2911e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 312 tensor(-7.8914e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 296 tensor(-1.5991e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 290 tensor(-1.0815e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 286 tensor(-6.6458e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 281 tensor(-4.7007e-07, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.21)	train_acc   0.48 (  0.52)	train_minacc   0.53 (  0.48)	train_majacc   0.47 (  0.53)	train_corr   0.00 (  0.00)	l1 6.1522 (6.1518)	zero_count 0.0000 (49.7640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.54it/s] 23%|##3       | 6/26 [00:00<00:00, 30.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.75it/s] 42%|####2     | 11/26 [00:00<00:00, 37.63it/s] 62%|######1   | 16/26 [00:00<00:00, 41.26it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.26it/s] 81%|########  | 21/26 [00:00<00:00, 39.82it/s]100%|##########| 26/26 [00:00<00:00, 42.59it/s]100%|##########| 26/26 [00:00<00:00, 35.31it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.49 (  0.49)	Loss_d 0.693 (0.693)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.00 ( -0.00)
Test: [  10/  26]	Loss 0.693 (0.692)	test_acc   0.50 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.52)	Loss_d 0.693 (0.692)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.06 (  0.03)
Test: [  20/  26]	Loss 0.694 (0.692)	test_acc   0.53 (  0.52)	test_minacc   0.45 (  0.48)	test_majacc   0.55 (  0.53)	Loss_d 0.694 (0.692)	test_acc_d   0.53 (  0.52)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.55 (  0.53)	test_corr_d  -0.04 (  0.04)
Test: [  26/  26]	Loss 0.695 (0.692)	test_acc   0.48 (  0.52)	test_minacc   0.51 (  0.48)	test_majacc   0.47 (  0.53)	Loss_d 0.695 (0.692)	test_acc_d   0.48 (  0.52)	test_minacc_d   0.51 (  0.48)	test_majacc_d   0.47 (  0.53)	test_corr_d   0.05 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.89it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.43 (  0.43)	Loss_d 0.692 (0.692)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.43 (  0.43)	Loss_d 0.692 (0.692)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 49/  1]	epoch_time 0.0472 (0.0443)	validation_time 0.0004 (0.0006)	train_time 0.0467 (0.0436)
record: (train_acc, test_acc) (0.7830000282526016, 0.6990000605583191)
last accs (train_acc, test_acc) (0.5203000129759312, 0.5390000343322754)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.161 MB of 0.161 MB uploadedwandb: \ 0.161 MB of 0.161 MB uploadedwandb: | 0.161 MB of 0.161 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmpe9emmwii'
wandb: ERROR Internal wandb error: file data was not synced
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_203712-3dx0n1vf
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/3dx0n1vf
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1192
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6016, 3, 32, 32) (5984, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:36,  1.45s/it] 19%|#9        | 5/26 [00:01<00:05,  4.15it/s] 35%|###4      | 9/26 [00:01<00:02,  8.01it/s] 50%|#####     | 13/26 [00:01<00:01, 11.89it/s] 65%|######5   | 17/26 [00:01<00:00, 15.93it/s] 81%|########  | 21/26 [00:02<00:00, 19.84it/s] 96%|#########6| 25/26 [00:02<00:00, 23.19it/s]100%|##########| 26/26 [00:02<00:00, 10.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.408 (0.562)	train_nll   0.41 (  0.56)	train_penalty   0.05 (  0.22)	weight_norm  20.94 ( 18.15)	train_acc   0.84 (  0.78)	train_minacc   0.03 (  0.11)	train_majacc   0.99 (  0.90)	train_corr   0.00 (  0.00)	l1 8.2586 (8.0269)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.30it/s] 27%|##6       | 7/26 [00:00<00:00, 32.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.82it/s] 46%|####6     | 12/26 [00:00<00:00, 37.96it/s] 65%|######5   | 17/26 [00:00<00:00, 41.23it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.23it/s] 85%|########4 | 22/26 [00:00<00:00, 39.39it/s]100%|##########| 26/26 [00:00<00:00, 35.93it/s]
Test: [   0/  26]	Loss 0.400 (0.400)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.400 (0.400)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.373 (0.407)	test_acc   0.87 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  1.00)	Loss_d 0.373 (0.407)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.373 (0.414)	test_acc   0.87 (  0.85)	test_minacc   0.04 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.373 (0.414)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.04 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.406 (0.412)	test_acc   0.84 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.406 (0.412)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.55it/s]100%|##########| 1/1 [00:00<00:00,  2.55it/s]
Test: [  0/  1]	Loss 1.804 (1.804)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.804 (1.804)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.804 (1.804)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.804 (1.804)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/156/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0803 (0.0803)	validation_time 0.0067 (0.0067)	train_time 0.0700 (0.0700)
record: (train_acc, test_acc) (0.8474000203609466, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8474000203609466, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.52it/s] 19%|#9        | 5/26 [00:00<00:00, 22.37it/s] 35%|###4      | 9/26 [00:00<00:00, 27.71it/s] 50%|#####     | 13/26 [00:00<00:00, 29.99it/s] 65%|######5   | 17/26 [00:00<00:00, 31.38it/s] 81%|########  | 21/26 [00:00<00:00, 33.04it/s] 96%|#########6| 25/26 [00:00<00:00, 34.89it/s]100%|##########| 26/26 [00:00<00:00, 29.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.396 (0.411)	train_nll   0.40 (  0.41)	train_penalty   0.05 (  0.06)	weight_norm  22.07 ( 21.72)	train_acc   0.85 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 8.8453 (8.6676)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 23%|##3       | 6/26 [00:00<00:00, 27.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.57it/s] 42%|####2     | 11/26 [00:00<00:00, 34.91it/s] 62%|######1   | 16/26 [00:00<00:00, 39.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.47it/s] 81%|########  | 21/26 [00:00<00:00, 37.55it/s]100%|##########| 26/26 [00:00<00:00, 41.09it/s]100%|##########| 26/26 [00:00<00:00, 33.30it/s]
Test: [   0/  26]	Loss 0.392 (0.392)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.392 (0.392)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.360 (0.401)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.360 (0.401)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.355 (0.406)	test_acc   0.87 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.355 (0.406)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.392 (0.402)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.392 (0.402)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.13it/s]
Test: [  0/  1]	Loss 1.882 (1.882)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.882 (1.882)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.882 (1.882)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.882 (1.882)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0444 (0.0624)	validation_time 0.0005 (0.0036)	train_time 0.0439 (0.0570)
record: (train_acc, test_acc) (0.8474000203609466, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8476000193953515, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.02it/s]  8%|7         | 2/26 [00:00<00:02,  8.48it/s] 23%|##3       | 6/26 [00:00<00:00, 20.67it/s] 38%|###8      | 10/26 [00:00<00:00, 26.85it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.35it/s] 69%|######9   | 18/26 [00:00<00:00, 30.82it/s] 85%|########4 | 22/26 [00:00<00:00, 31.83it/s]100%|##########| 26/26 [00:00<00:00, 33.33it/s]100%|##########| 26/26 [00:00<00:00, 26.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.379 (0.396)	train_nll   0.38 (  0.40)	train_penalty   0.04 (  0.05)	weight_norm  22.19 ( 22.15)	train_acc   0.85 (  0.85)	train_minacc   0.05 (  0.05)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 8.8056 (8.8038)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.58it/s] 31%|###       | 8/26 [00:00<00:00, 34.48it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.48it/s] 50%|#####     | 13/26 [00:00<00:00, 38.59it/s] 69%|######9   | 18/26 [00:00<00:00, 41.84it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.84it/s] 88%|########8 | 23/26 [00:00<00:00, 39.76it/s]100%|##########| 26/26 [00:00<00:00, 36.33it/s]
Test: [   0/  26]	Loss 0.367 (0.367)	test_acc   0.85 (  0.85)	test_minacc   0.16 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 0.367 (0.367)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.328 (0.377)	test_acc   0.88 (  0.85)	test_minacc   0.18 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 0.328 (0.377)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.18 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.322 (0.376)	test_acc   0.88 (  0.85)	test_minacc   0.16 (  0.14)	test_majacc   0.99 (  0.98)	Loss_d 0.322 (0.376)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.16 (  0.14)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.93)
Test: [  26/  26]	Loss 0.367 (0.371)	test_acc   0.85 (  0.85)	test_minacc   0.14 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 0.367 (0.371)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.22it/s]
Test: [  0/  1]	Loss 1.653 (1.653)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.97 (  0.97)	Loss_d 1.653 (1.653)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  1/  1]	Loss 1.653 (1.653)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.97 (  0.97)	Loss_d 1.653 (1.653)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/156/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0461 (0.0569)	validation_time 0.0003 (0.0025)	train_time 0.0457 (0.0532)
record: (train_acc, test_acc) (0.8514000275135041, 0.18200001120567322)
last accs (train_acc, test_acc) (0.8514000275135041, 0.18200001120567322)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.48it/s] 19%|#9        | 5/26 [00:00<00:00, 24.09it/s] 35%|###4      | 9/26 [00:00<00:00, 29.56it/s] 50%|#####     | 13/26 [00:00<00:00, 31.09it/s] 65%|######5   | 17/26 [00:00<00:00, 32.15it/s] 81%|########  | 21/26 [00:00<00:00, 33.00it/s] 96%|#########6| 25/26 [00:00<00:00, 33.94it/s]100%|##########| 26/26 [00:00<00:00, 29.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.356 (0.373)	train_nll   0.36 (  0.37)	train_penalty   0.03 (  0.04)	weight_norm  22.24 ( 22.22)	train_acc   0.86 (  0.85)	train_minacc   0.11 (  0.12)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 8.6172 (8.7381)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.08it/s] 27%|##6       | 7/26 [00:00<00:00, 35.61it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.61it/s] 46%|####6     | 12/26 [00:00<00:00, 41.07it/s] 65%|######5   | 17/26 [00:00<00:00, 43.07it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.07it/s] 85%|########4 | 22/26 [00:00<00:00, 44.48it/s]100%|##########| 26/26 [00:00<00:00, 37.98it/s]
Test: [   0/  26]	Loss 0.342 (0.342)	test_acc   0.85 (  0.85)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 0.342 (0.342)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.299 (0.354)	test_acc   0.88 (  0.85)	test_minacc   0.24 (  0.16)	test_majacc   0.98 (  0.97)	Loss_d 0.299 (0.354)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.24 (  0.16)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.303 (0.354)	test_acc   0.88 (  0.85)	test_minacc   0.22 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 0.303 (0.354)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.22 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.347 (0.350)	test_acc   0.86 (  0.85)	test_minacc   0.16 (  0.17)	test_majacc   0.99 (  0.98)	Loss_d 0.347 (0.350)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.16 (  0.17)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.35it/s]
Test: [  0/  1]	Loss 1.538 (1.538)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.97 (  0.97)	Loss_d 1.538 (1.538)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.81 (  0.81)
Test: [  1/  1]	Loss 1.538 (1.538)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.97 (  0.97)	Loss_d 1.538 (1.538)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.81 (  0.81)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/156/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0410 (0.0529)	validation_time 0.0005 (0.0020)	train_time 0.0405 (0.0500)
record: (train_acc, test_acc) (0.8542000229954719, 0.21400001645088196)
last accs (train_acc, test_acc) (0.8542000229954719, 0.21400001645088196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.04it/s] 19%|#9        | 5/26 [00:00<00:01, 16.19it/s] 35%|###4      | 9/26 [00:00<00:00, 22.88it/s] 50%|#####     | 13/26 [00:00<00:00, 25.52it/s] 65%|######5   | 17/26 [00:00<00:00, 27.92it/s] 81%|########  | 21/26 [00:00<00:00, 29.47it/s] 96%|#########6| 25/26 [00:00<00:00, 31.13it/s]100%|##########| 26/26 [00:01<00:00, 24.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.331 (0.347)	train_nll   0.33 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.30 ( 22.28)	train_acc   0.86 (  0.85)	train_minacc   0.14 (  0.20)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 8.5715 (8.7106)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.77it/s] 23%|##3       | 6/26 [00:00<00:00, 25.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.57it/s] 42%|####2     | 11/26 [00:00<00:00, 32.95it/s] 62%|######1   | 16/26 [00:00<00:00, 36.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.62it/s] 81%|########  | 21/26 [00:00<00:00, 38.21it/s]100%|##########| 26/26 [00:00<00:00, 40.91it/s]100%|##########| 26/26 [00:00<00:00, 32.35it/s]
Test: [   0/  26]	Loss 0.317 (0.317)	test_acc   0.87 (  0.87)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 0.317 (0.317)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.281 (0.331)	test_acc   0.87 (  0.86)	test_minacc   0.27 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 0.281 (0.331)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.27 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.89)
Test: [  20/  26]	Loss 0.282 (0.331)	test_acc   0.89 (  0.86)	test_minacc   0.38 (  0.27)	test_majacc   0.97 (  0.96)	Loss_d 0.282 (0.331)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.38 (  0.27)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.90 (  0.89)
Test: [  26/  26]	Loss 0.316 (0.326)	test_acc   0.87 (  0.86)	test_minacc   0.19 (  0.27)	test_majacc   0.99 (  0.97)	Loss_d 0.316 (0.326)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.19 (  0.27)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.92 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.24it/s]
Test: [  0/  1]	Loss 1.494 (1.494)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.94 (  0.94)	Loss_d 1.494 (1.494)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.494 (1.494)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.94 (  0.94)	Loss_d 1.494 (1.494)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.71 (  0.71)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/156/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0418 (0.0507)	validation_time 0.0003 (0.0017)	train_time 0.0414 (0.0483)
record: (train_acc, test_acc) (0.860700022816658, 0.2970000207424164)
last accs (train_acc, test_acc) (0.860700022816658, 0.2970000207424164)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  9.11it/s] 23%|##3       | 6/26 [00:00<00:01, 19.83it/s] 38%|###8      | 10/26 [00:00<00:00, 25.72it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.85it/s] 69%|######9   | 18/26 [00:00<00:00, 30.46it/s] 85%|########4 | 22/26 [00:00<00:00, 32.09it/s]100%|##########| 26/26 [00:00<00:00, 33.54it/s]100%|##########| 26/26 [00:00<00:00, 26.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.314 (0.336)	train_nll   0.31 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.38 ( 22.34)	train_acc   0.86 (  0.86)	train_minacc   0.11 (  0.25)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 8.6380 (8.7575)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.01it/s] 27%|##6       | 7/26 [00:00<00:00, 34.21it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.21it/s] 46%|####6     | 12/26 [00:00<00:00, 39.56it/s] 65%|######5   | 17/26 [00:00<00:00, 40.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.98it/s] 85%|########4 | 22/26 [00:00<00:00, 40.20it/s]100%|##########| 26/26 [00:00<00:00, 36.90it/s]
Test: [   0/  26]	Loss 0.309 (0.309)	test_acc   0.86 (  0.86)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 0.309 (0.309)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.292 (0.334)	test_acc   0.88 (  0.86)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 0.292 (0.334)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.282 (0.331)	test_acc   0.88 (  0.86)	test_minacc   0.20 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 0.282 (0.331)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.20 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  26/  26]	Loss 0.300 (0.326)	test_acc   0.86 (  0.86)	test_minacc   0.14 (  0.18)	test_majacc   0.99 (  0.98)	Loss_d 0.300 (0.326)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.14 (  0.18)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.02it/s]
Test: [  0/  1]	Loss 1.743 (1.743)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.96 (  0.96)	Loss_d 1.743 (1.743)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 1.743 (1.743)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.96 (  0.96)	Loss_d 1.743 (1.743)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Overall Timing[  5/  1]	epoch_time 0.0459 (0.0499)	validation_time 0.0004 (0.0015)	train_time 0.0455 (0.0478)
record: (train_acc, test_acc) (0.860700022816658, 0.2970000207424164)
last accs (train_acc, test_acc) (0.8584000227451325, 0.23400001227855682)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.58it/s] 19%|#9        | 5/26 [00:00<00:01, 19.10it/s] 35%|###4      | 9/26 [00:00<00:00, 25.47it/s] 50%|#####     | 13/26 [00:00<00:00, 29.10it/s] 65%|######5   | 17/26 [00:00<00:00, 31.17it/s] 81%|########  | 21/26 [00:00<00:00, 32.81it/s] 96%|#########6| 25/26 [00:00<00:00, 34.05it/s]100%|##########| 26/26 [00:00<00:00, 27.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.300 (0.326)	train_nll   0.30 (  0.33)	train_penalty   0.01 (  0.02)	weight_norm  22.48 ( 22.43)	train_acc   0.88 (  0.86)	train_minacc   0.43 (  0.31)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 8.4615 (8.6996)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 30.09it/s] 38%|###8      | 10/26 [00:00<00:00, 42.43it/s]                                                38%|###8      | 10/26 [00:00<00:00, 42.43it/s] 58%|#####7    | 15/26 [00:00<00:00, 42.37it/s] 77%|#######6  | 20/26 [00:00<00:00, 42.33it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 42.33it/s] 96%|#########6| 25/26 [00:00<00:00, 43.36it/s]100%|##########| 26/26 [00:00<00:00, 38.44it/s]
Test: [   0/  26]	Loss 0.299 (0.299)	test_acc   0.88 (  0.88)	test_minacc   0.51 (  0.51)	test_majacc   0.94 (  0.94)	Loss_d 0.299 (0.299)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.261 (0.305)	test_acc   0.89 (  0.87)	test_minacc   0.49 (  0.47)	test_majacc   0.95 (  0.93)	Loss_d 0.261 (0.305)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.49 (  0.47)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.85 (  0.83)
Test: [  20/  26]	Loss 0.277 (0.308)	test_acc   0.90 (  0.86)	test_minacc   0.54 (  0.48)	test_majacc   0.96 (  0.93)	Loss_d 0.277 (0.308)	test_acc_d   0.90 (  0.86)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.85 (  0.83)
Test: [  26/  26]	Loss 0.279 (0.305)	test_acc   0.88 (  0.87)	test_minacc   0.43 (  0.48)	test_majacc   0.96 (  0.93)	Loss_d 0.279 (0.305)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.43 (  0.48)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.87 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.87it/s]
Test: [  0/  1]	Loss 1.355 (1.355)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.92 (  0.92)	Loss_d 1.355 (1.355)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 1.355 (1.355)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.92 (  0.92)	Loss_d 1.355 (1.355)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.53 (  0.53)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/156/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0440 (0.0491)	validation_time 0.0004 (0.0013)	train_time 0.0436 (0.0472)
record: (train_acc, test_acc) (0.8672000197768212, 0.4100000262260437)
last accs (train_acc, test_acc) (0.8672000197768212, 0.4100000262260437)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.83it/s] 15%|#5        | 4/26 [00:00<00:01, 15.05it/s] 31%|###       | 8/26 [00:00<00:00, 23.30it/s] 46%|####6     | 12/26 [00:00<00:00, 27.83it/s] 62%|######1   | 16/26 [00:00<00:00, 30.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.55it/s] 92%|#########2| 24/26 [00:00<00:00, 33.64it/s]100%|##########| 26/26 [00:00<00:00, 27.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.269 (0.297)	train_nll   0.27 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.57 ( 22.52)	train_acc   0.90 (  0.88)	train_minacc   0.46 (  0.41)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.4019 (8.5967)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.35it/s] 23%|##3       | 6/26 [00:00<00:00, 25.45it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.45it/s] 42%|####2     | 11/26 [00:00<00:00, 31.98it/s] 62%|######1   | 16/26 [00:00<00:00, 37.77it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.77it/s] 81%|########  | 21/26 [00:00<00:00, 39.80it/s]100%|##########| 26/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 33.67it/s]
Test: [   0/  26]	Loss 0.281 (0.281)	test_acc   0.88 (  0.88)	test_minacc   0.44 (  0.44)	test_majacc   0.96 (  0.96)	Loss_d 0.281 (0.281)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.225 (0.288)	test_acc   0.89 (  0.87)	test_minacc   0.39 (  0.42)	test_majacc   0.96 (  0.95)	Loss_d 0.225 (0.288)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.39 (  0.42)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  20/  26]	Loss 0.262 (0.290)	test_acc   0.90 (  0.87)	test_minacc   0.48 (  0.43)	test_majacc   0.96 (  0.95)	Loss_d 0.262 (0.290)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.48 (  0.43)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  26/  26]	Loss 0.251 (0.285)	test_acc   0.90 (  0.88)	test_minacc   0.43 (  0.44)	test_majacc   0.98 (  0.95)	Loss_d 0.251 (0.285)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.43 (  0.44)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.88 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.07it/s]
Test: [  0/  1]	Loss 1.583 (1.583)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 1.583 (1.583)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 1.583 (1.583)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 1.583 (1.583)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.61 (  0.61)
Overall Timing[  7/  1]	epoch_time 0.0409 (0.0480)	validation_time 0.0004 (0.0012)	train_time 0.0405 (0.0464)
record: (train_acc, test_acc) (0.8672000197768212, 0.4100000262260437)
last accs (train_acc, test_acc) (0.8771000173687935, 0.3530000150203705)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.52it/s] 23%|##3       | 6/26 [00:00<00:00, 27.85it/s] 38%|###8      | 10/26 [00:00<00:00, 31.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.97it/s] 69%|######9   | 18/26 [00:00<00:00, 34.92it/s] 85%|########4 | 22/26 [00:00<00:00, 35.01it/s]100%|##########| 26/26 [00:00<00:00, 34.66it/s]100%|##########| 26/26 [00:00<00:00, 30.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.264 (0.290)	train_nll   0.26 (  0.29)	train_penalty   0.01 (  0.02)	weight_norm  22.71 ( 22.64)	train_acc   0.90 (  0.88)	train_minacc   0.49 (  0.44)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 8.3061 (8.5971)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.99it/s] 15%|#5        | 4/26 [00:00<00:01, 21.28it/s] 35%|###4      | 9/26 [00:00<00:00, 32.80it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.80it/s] 50%|#####     | 13/26 [00:00<00:00, 31.72it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.43it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.43it/s] 92%|#########2| 24/26 [00:00<00:00, 41.89it/s]100%|##########| 26/26 [00:00<00:00, 34.08it/s]
Test: [   0/  26]	Loss 0.296 (0.296)	test_acc   0.87 (  0.87)	test_minacc   0.42 (  0.42)	test_majacc   0.94 (  0.94)	Loss_d 0.296 (0.296)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.241 (0.290)	test_acc   0.88 (  0.87)	test_minacc   0.39 (  0.43)	test_majacc   0.96 (  0.95)	Loss_d 0.241 (0.290)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.39 (  0.43)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.86 (  0.84)
Test: [  20/  26]	Loss 0.249 (0.287)	test_acc   0.90 (  0.88)	test_minacc   0.52 (  0.45)	test_majacc   0.95 (  0.95)	Loss_d 0.249 (0.287)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.52 (  0.45)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.84)
Test: [  26/  26]	Loss 0.240 (0.279)	test_acc   0.92 (  0.88)	test_minacc   0.54 (  0.46)	test_majacc   0.98 (  0.95)	Loss_d 0.240 (0.279)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.54 (  0.46)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.87 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.22it/s]
Test: [  0/  1]	Loss 1.563 (1.563)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 1.563 (1.563)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 1.563 (1.563)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 1.563 (1.563)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.55 (  0.55)
Overall Timing[  8/  1]	epoch_time 0.0416 (0.0473)	validation_time 0.0005 (0.0011)	train_time 0.0410 (0.0458)
record: (train_acc, test_acc) (0.8672000197768212, 0.4100000262260437)
last accs (train_acc, test_acc) (0.8800000215172767, 0.37400001287460327)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.52it/s] 27%|##6       | 7/26 [00:00<00:00, 31.71it/s] 42%|####2     | 11/26 [00:00<00:00, 33.99it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.64it/s] 88%|########8 | 23/26 [00:00<00:00, 33.01it/s]100%|##########| 26/26 [00:00<00:00, 30.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.250 (0.281)	train_nll   0.25 (  0.28)	train_penalty   0.00 (  0.01)	weight_norm  22.89 ( 22.81)	train_acc   0.90 (  0.88)	train_minacc   0.76 (  0.47)	train_majacc   0.92 (  0.95)	train_corr   0.00 (  0.00)	l1 8.4488 (8.5387)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.34it/s] 31%|###       | 8/26 [00:00<00:00, 36.03it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.03it/s] 50%|#####     | 13/26 [00:00<00:00, 40.52it/s] 69%|######9   | 18/26 [00:00<00:00, 41.42it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.42it/s] 88%|########8 | 23/26 [00:00<00:00, 40.58it/s]100%|##########| 26/26 [00:00<00:00, 37.09it/s]
Test: [   0/  26]	Loss 0.258 (0.258)	test_acc   0.89 (  0.89)	test_minacc   0.60 (  0.60)	test_majacc   0.94 (  0.94)	Loss_d 0.258 (0.258)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.223 (0.266)	test_acc   0.91 (  0.89)	test_minacc   0.59 (  0.66)	test_majacc   0.95 (  0.93)	Loss_d 0.223 (0.266)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.59 (  0.66)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.82 (  0.78)
Test: [  20/  26]	Loss 0.226 (0.259)	test_acc   0.91 (  0.89)	test_minacc   0.68 (  0.68)	test_majacc   0.94 (  0.93)	Loss_d 0.226 (0.259)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.79 (  0.78)
Test: [  26/  26]	Loss 0.202 (0.252)	test_acc   0.92 (  0.90)	test_minacc   0.68 (  0.69)	test_majacc   0.96 (  0.93)	Loss_d 0.202 (0.252)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.68 (  0.69)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.83 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.69it/s]
Test: [  0/  1]	Loss 1.476 (1.476)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.94 (  0.94)	Loss_d 1.476 (1.476)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 1.476 (1.476)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.94 (  0.94)	Loss_d 1.476 (1.476)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.41 (  0.41)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/156/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0469 (0.0473)	validation_time 0.0004 (0.0010)	train_time 0.0464 (0.0459)
record: (train_acc, test_acc) (0.8970000227093696, 0.45900002121925354)
last accs (train_acc, test_acc) (0.8970000227093696, 0.45900002121925354)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.91it/s] 19%|#9        | 5/26 [00:00<00:00, 23.87it/s] 35%|###4      | 9/26 [00:00<00:00, 29.20it/s] 50%|#####     | 13/26 [00:00<00:00, 30.86it/s] 65%|######5   | 17/26 [00:00<00:00, 31.63it/s] 81%|########  | 21/26 [00:00<00:00, 32.43it/s] 96%|#########6| 25/26 [00:00<00:00, 32.97it/s]100%|##########| 26/26 [00:00<00:00, 28.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.220 (0.253)	train_nll   0.22 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.10 ( 22.99)	train_acc   0.92 (  0.89)	train_minacc   0.76 (  0.53)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 8.4391 (8.5645)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.69it/s] 31%|###       | 8/26 [00:00<00:00, 37.48it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.48it/s] 50%|#####     | 13/26 [00:00<00:00, 40.33it/s] 69%|######9   | 18/26 [00:00<00:00, 43.56it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.56it/s] 88%|########8 | 23/26 [00:00<00:00, 40.59it/s]100%|##########| 26/26 [00:00<00:00, 37.72it/s]
Test: [   0/  26]	Loss 0.257 (0.257)	test_acc   0.89 (  0.89)	test_minacc   0.75 (  0.75)	test_majacc   0.91 (  0.91)	Loss_d 0.257 (0.257)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.224 (0.265)	test_acc   0.91 (  0.88)	test_minacc   0.65 (  0.73)	test_majacc   0.95 (  0.91)	Loss_d 0.224 (0.265)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.65 (  0.73)	test_majacc_d   0.95 (  0.91)	test_corr_d   0.80 (  0.73)
Test: [  20/  26]	Loss 0.229 (0.261)	test_acc   0.90 (  0.88)	test_minacc   0.84 (  0.75)	test_majacc   0.91 (  0.91)	Loss_d 0.229 (0.261)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.84 (  0.75)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.72 (  0.72)
Test: [  26/  26]	Loss 0.168 (0.251)	test_acc   0.94 (  0.89)	test_minacc   0.92 (  0.76)	test_majacc   0.95 (  0.91)	Loss_d 0.168 (0.251)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.92 (  0.76)	test_majacc_d   0.95 (  0.91)	test_corr_d   0.78 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.96it/s]
Test: [  0/  1]	Loss 1.536 (1.536)	test_acc   0.49 (  0.49)	test_minacc   0.44 (  0.44)	test_majacc   0.90 (  0.90)	Loss_d 1.536 (1.536)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.536 (1.536)	test_acc   0.49 (  0.49)	test_minacc   0.44 (  0.44)	test_majacc   0.90 (  0.90)	Loss_d 1.536 (1.536)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.34 (  0.34)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/156/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0450 (0.0471)	validation_time 0.0004 (0.0010)	train_time 0.0446 (0.0457)
record: (train_acc, test_acc) (0.8895000185966492, 0.48900002241134644)
last accs (train_acc, test_acc) (0.8895000185966492, 0.48900002241134644)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.73it/s] 19%|#9        | 5/26 [00:00<00:00, 23.48it/s] 35%|###4      | 9/26 [00:00<00:00, 28.39it/s] 50%|#####     | 13/26 [00:00<00:00, 30.30it/s] 65%|######5   | 17/26 [00:00<00:00, 31.59it/s] 81%|########  | 21/26 [00:00<00:00, 32.46it/s] 96%|#########6| 25/26 [00:00<00:00, 33.11it/s]100%|##########| 26/26 [00:00<00:00, 28.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.230 (0.243)	train_nll   0.23 (  0.24)	train_penalty   0.01 (  0.01)	weight_norm  23.36 ( 23.23)	train_acc   0.90 (  0.90)	train_minacc   0.62 (  0.56)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 8.6810 (8.6959)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.70it/s] 27%|##6       | 7/26 [00:00<00:00, 34.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.12it/s] 46%|####6     | 12/26 [00:00<00:00, 37.82it/s] 69%|######9   | 18/26 [00:00<00:00, 40.47it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.47it/s] 88%|########8 | 23/26 [00:00<00:00, 41.52it/s]100%|##########| 26/26 [00:00<00:00, 37.11it/s]
Test: [   0/  26]	Loss 0.256 (0.256)	test_acc   0.90 (  0.90)	test_minacc   0.68 (  0.68)	test_majacc   0.94 (  0.94)	Loss_d 0.256 (0.256)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.202 (0.266)	test_acc   0.92 (  0.89)	test_minacc   0.67 (  0.63)	test_majacc   0.96 (  0.93)	Loss_d 0.202 (0.266)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.67 (  0.63)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.81 (  0.77)
Test: [  20/  26]	Loss 0.247 (0.265)	test_acc   0.90 (  0.89)	test_minacc   0.80 (  0.64)	test_majacc   0.92 (  0.93)	Loss_d 0.247 (0.265)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.80 (  0.64)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.74 (  0.76)
Test: [  26/  26]	Loss 0.160 (0.249)	test_acc   0.94 (  0.89)	test_minacc   0.78 (  0.67)	test_majacc   0.97 (  0.93)	Loss_d 0.160 (0.249)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.78 (  0.67)	test_majacc_d   0.97 (  0.93)	test_corr_d   0.80 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.89it/s]
Test: [  0/  1]	Loss 1.898 (1.898)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 1.898 (1.898)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.898 (1.898)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 1.898 (1.898)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.36 (  0.36)
Overall Timing[ 11/  1]	epoch_time 0.0438 (0.0468)	validation_time 0.0004 (0.0009)	train_time 0.0434 (0.0455)
record: (train_acc, test_acc) (0.8895000185966492, 0.48900002241134644)
last accs (train_acc, test_acc) (0.8947000206112862, 0.44600000977516174)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.48it/s] 19%|#9        | 5/26 [00:00<00:00, 23.78it/s] 35%|###4      | 9/26 [00:00<00:00, 28.93it/s] 50%|#####     | 13/26 [00:00<00:00, 31.26it/s] 65%|######5   | 17/26 [00:00<00:00, 32.19it/s] 81%|########  | 21/26 [00:00<00:00, 33.34it/s] 96%|#########6| 25/26 [00:00<00:00, 33.61it/s]100%|##########| 26/26 [00:00<00:00, 29.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.191 (0.239)	train_nll   0.19 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  23.67 ( 23.52)	train_acc   0.92 (  0.90)	train_minacc   0.73 (  0.59)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 8.7909 (8.6870)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 23%|##3       | 6/26 [00:00<00:00, 24.36it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.36it/s] 42%|####2     | 11/26 [00:00<00:00, 32.44it/s] 62%|######1   | 16/26 [00:00<00:00, 37.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.62it/s] 81%|########  | 21/26 [00:00<00:00, 40.00it/s]100%|##########| 26/26 [00:00<00:00, 41.92it/s]100%|##########| 26/26 [00:00<00:00, 33.02it/s]
Test: [   0/  26]	Loss 0.218 (0.218)	test_acc   0.92 (  0.92)	test_minacc   0.67 (  0.67)	test_majacc   0.96 (  0.96)	Loss_d 0.218 (0.218)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.224 (0.265)	test_acc   0.90 (  0.89)	test_minacc   0.73 (  0.70)	test_majacc   0.93 (  0.93)	Loss_d 0.224 (0.265)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.73 (  0.70)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.77 (  0.73)
Test: [  20/  26]	Loss 0.214 (0.249)	test_acc   0.90 (  0.90)	test_minacc   0.78 (  0.71)	test_majacc   0.92 (  0.93)	Loss_d 0.214 (0.249)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.78 (  0.71)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.73 (  0.73)
Test: [  26/  26]	Loss 0.130 (0.233)	test_acc   0.96 (  0.90)	test_minacc   0.89 (  0.74)	test_majacc   0.97 (  0.93)	Loss_d 0.130 (0.233)	test_acc_d   0.96 (  0.90)	test_minacc_d   0.89 (  0.74)	test_majacc_d   0.97 (  0.93)	test_corr_d   0.77 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.24it/s]
Test: [  0/  1]	Loss 1.850 (1.850)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.90 (  0.90)	Loss_d 1.850 (1.850)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.850 (1.850)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.90 (  0.90)	Loss_d 1.850 (1.850)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.29 (  0.29)
Overall Timing[ 12/  1]	epoch_time 0.0434 (0.0465)	validation_time 0.0005 (0.0009)	train_time 0.0429 (0.0453)
record: (train_acc, test_acc) (0.8895000185966492, 0.48900002241134644)
last accs (train_acc, test_acc) (0.9049000216722488, 0.4790000319480896)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.28it/s] 19%|#9        | 5/26 [00:00<00:01, 19.02it/s] 35%|###4      | 9/26 [00:00<00:00, 25.08it/s] 50%|#####     | 13/26 [00:00<00:00, 28.94it/s] 65%|######5   | 17/26 [00:00<00:00, 30.92it/s] 81%|########  | 21/26 [00:00<00:00, 32.83it/s] 96%|#########6| 25/26 [00:00<00:00, 33.72it/s]100%|##########| 26/26 [00:00<00:00, 27.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.145 (0.232)	train_nll   0.14 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  24.01 ( 23.85)	train_acc   0.95 (  0.90)	train_minacc   0.73 (  0.61)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 9.0104 (8.9446)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 19%|#9        | 5/26 [00:00<00:00, 21.60it/s] 38%|###8      | 10/26 [00:00<00:00, 32.23it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.23it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.22it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.82it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.82it/s] 96%|#########6| 25/26 [00:00<00:00, 39.24it/s]100%|##########| 26/26 [00:00<00:00, 32.12it/s]
Test: [   0/  26]	Loss 0.189 (0.189)	test_acc   0.92 (  0.92)	test_minacc   0.74 (  0.74)	test_majacc   0.95 (  0.95)	Loss_d 0.189 (0.189)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.172 (0.219)	test_acc   0.93 (  0.91)	test_minacc   0.76 (  0.70)	test_majacc   0.95 (  0.94)	Loss_d 0.172 (0.219)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.76 (  0.70)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.78 (  0.76)
Test: [  20/  26]	Loss 0.202 (0.221)	test_acc   0.91 (  0.91)	test_minacc   0.64 (  0.69)	test_majacc   0.94 (  0.95)	Loss_d 0.202 (0.221)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.64 (  0.69)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.78 (  0.76)
Test: [  26/  26]	Loss 0.114 (0.208)	test_acc   0.97 (  0.91)	test_minacc   0.81 (  0.72)	test_majacc   1.00 (  0.95)	Loss_d 0.114 (0.208)	test_acc_d   0.97 (  0.91)	test_minacc_d   0.81 (  0.72)	test_majacc_d   1.00 (  0.95)	test_corr_d   0.80 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.52it/s]
Test: [  0/  1]	Loss 2.063 (2.063)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.88 (  0.88)	Loss_d 2.063 (2.063)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.063 (2.063)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.88 (  0.88)	Loss_d 2.063 (2.063)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.37 (  0.37)
Overall Timing[ 13/  1]	epoch_time 0.0449 (0.0464)	validation_time 0.0005 (0.0009)	train_time 0.0445 (0.0453)
record: (train_acc, test_acc) (0.8895000185966492, 0.48900002241134644)
last accs (train_acc, test_acc) (0.9136000180840492, 0.4320000112056732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.65it/s] 19%|#9        | 5/26 [00:00<00:01, 15.04it/s] 35%|###4      | 9/26 [00:00<00:00, 21.89it/s] 50%|#####     | 13/26 [00:00<00:00, 25.95it/s] 65%|######5   | 17/26 [00:00<00:00, 28.67it/s] 81%|########  | 21/26 [00:00<00:00, 30.93it/s] 96%|#########6| 25/26 [00:00<00:00, 33.00it/s]100%|##########| 26/26 [00:01<00:00, 24.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.166 (0.212)	train_nll   0.17 (  0.21)	train_penalty   0.00 (  0.01)	weight_norm  24.37 ( 24.19)	train_acc   0.94 (  0.92)	train_minacc   0.68 (  0.64)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 9.1657 (8.9057)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.76it/s] 23%|##3       | 6/26 [00:00<00:00, 31.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.13it/s] 42%|####2     | 11/26 [00:00<00:00, 37.54it/s] 62%|######1   | 16/26 [00:00<00:00, 40.98it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.98it/s] 81%|########  | 21/26 [00:00<00:00, 38.72it/s]100%|##########| 26/26 [00:00<00:00, 41.89it/s]100%|##########| 26/26 [00:00<00:00, 35.07it/s]
Test: [   0/  26]	Loss 0.155 (0.155)	test_acc   0.94 (  0.94)	test_minacc   0.81 (  0.81)	test_majacc   0.96 (  0.96)	Loss_d 0.155 (0.155)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.150 (0.190)	test_acc   0.94 (  0.92)	test_minacc   0.75 (  0.78)	test_majacc   0.97 (  0.95)	Loss_d 0.150 (0.190)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.75 (  0.78)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.79 (  0.74)
Test: [  20/  26]	Loss 0.138 (0.178)	test_acc   0.95 (  0.93)	test_minacc   0.90 (  0.78)	test_majacc   0.96 (  0.96)	Loss_d 0.138 (0.178)	test_acc_d   0.95 (  0.93)	test_minacc_d   0.90 (  0.78)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.75 (  0.75)
Test: [  26/  26]	Loss 0.113 (0.166)	test_acc   0.97 (  0.94)	test_minacc   0.84 (  0.80)	test_majacc   1.00 (  0.96)	Loss_d 0.113 (0.166)	test_acc_d   0.97 (  0.94)	test_minacc_d   0.84 (  0.80)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.80 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.03it/s]
Test: [  0/  1]	Loss 2.152 (2.152)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.88 (  0.88)	Loss_d 2.152 (2.152)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 2.152 (2.152)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.88 (  0.88)	Loss_d 2.152 (2.152)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.27 (  0.27)
Overall Timing[ 14/  1]	epoch_time 0.0449 (0.0463)	validation_time 0.0003 (0.0008)	train_time 0.0445 (0.0452)
record: (train_acc, test_acc) (0.8895000185966492, 0.48900002241134644)
last accs (train_acc, test_acc) (0.9377000215053558, 0.47700002789497375)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.30it/s] 23%|##3       | 6/26 [00:00<00:00, 28.93it/s] 38%|###8      | 10/26 [00:00<00:00, 31.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.18it/s] 69%|######9   | 18/26 [00:00<00:00, 33.20it/s] 85%|########4 | 22/26 [00:00<00:00, 33.64it/s]100%|##########| 26/26 [00:00<00:00, 34.24it/s]100%|##########| 26/26 [00:00<00:00, 30.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.001 (0.070)	train_nll   0.44 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm  24.70 ( 24.54)	train_acc   0.77 (  0.89)	train_minacc   0.92 (  0.76)	train_majacc   0.75 (  0.91)	train_corr   0.00 (  0.00)	l1 8.2568 (9.1892)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.36it/s] 19%|#9        | 5/26 [00:00<00:00, 23.94it/s] 38%|###8      | 10/26 [00:00<00:00, 34.00it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.00it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.43it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.56it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.56it/s] 96%|#########6| 25/26 [00:00<00:00, 40.25it/s]100%|##########| 26/26 [00:00<00:00, 33.47it/s]
Test: [   0/  26]	Loss 0.521 (0.521)	test_acc   0.72 (  0.72)	test_minacc   0.91 (  0.91)	test_majacc   0.69 (  0.69)	Loss_d 0.521 (0.521)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.549 (0.563)	test_acc   0.69 (  0.70)	test_minacc   0.88 (  0.89)	test_majacc   0.67 (  0.66)	Loss_d 0.549 (0.563)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.67 (  0.66)	test_corr_d   0.32 (  0.26)
Test: [  20/  26]	Loss 0.587 (0.559)	test_acc   0.70 (  0.70)	test_minacc   0.92 (  0.90)	test_majacc   0.67 (  0.67)	Loss_d 0.587 (0.559)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.27 (  0.25)
Test: [  26/  26]	Loss 0.497 (0.553)	test_acc   0.73 (  0.71)	test_minacc   0.92 (  0.90)	test_majacc   0.69 (  0.67)	Loss_d 0.497 (0.553)	test_acc_d   0.73 (  0.71)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.69 (  0.67)	test_corr_d   0.34 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.01it/s]
Test: [  0/  1]	Loss 0.743 (0.743)	test_acc   0.71 (  0.71)	test_minacc   0.72 (  0.72)	test_majacc   0.65 (  0.65)	Loss_d 0.743 (0.743)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.38 ( -0.38)
Test: [  1/  1]	Loss 0.743 (0.743)	test_acc   0.71 (  0.71)	test_minacc   0.72 (  0.72)	test_majacc   0.65 (  0.65)	Loss_d 0.743 (0.743)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.38 ( -0.38)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/156/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0444 (0.0462)	validation_time 0.0004 (0.0008)	train_time 0.0440 (0.0452)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 15%|#5        | 4/26 [00:00<00:01, 15.39it/s] 31%|###       | 8/26 [00:00<00:00, 22.91it/s] 46%|####6     | 12/26 [00:00<00:00, 26.87it/s] 62%|######1   | 16/26 [00:00<00:00, 30.06it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.34it/s] 92%|#########2| 24/26 [00:00<00:00, 33.89it/s]100%|##########| 26/26 [00:00<00:00, 26.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.003 (0.003)	train_nll   0.43 (  0.45)	train_penalty   0.00 (  0.00)	weight_norm  24.78 ( 24.75)	train_acc   0.78 (  0.78)	train_minacc   0.68 (  0.80)	train_majacc   0.80 (  0.78)	train_corr   0.00 (  0.00)	l1 7.5887 (7.7442)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.66it/s] 31%|###       | 8/26 [00:00<00:00, 38.43it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.43it/s] 50%|#####     | 13/26 [00:00<00:00, 42.14it/s] 69%|######9   | 18/26 [00:00<00:00, 41.60it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.60it/s] 88%|########8 | 23/26 [00:00<00:00, 42.86it/s]100%|##########| 26/26 [00:00<00:00, 38.10it/s]
Test: [   0/  26]	Loss 0.404 (0.404)	test_acc   0.82 (  0.82)	test_minacc   0.72 (  0.72)	test_majacc   0.84 (  0.84)	Loss_d 0.404 (0.404)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.427 (0.459)	test_acc   0.79 (  0.79)	test_minacc   0.71 (  0.68)	test_majacc   0.80 (  0.81)	Loss_d 0.427 (0.459)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.71 (  0.68)	test_majacc_d   0.80 (  0.81)	test_corr_d   0.59 (  0.55)
Test: [  20/  26]	Loss 0.448 (0.446)	test_acc   0.79 (  0.80)	test_minacc   0.66 (  0.70)	test_majacc   0.81 (  0.81)	Loss_d 0.448 (0.446)	test_acc_d   0.79 (  0.80)	test_minacc_d   0.66 (  0.70)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.58 (  0.56)
Test: [  26/  26]	Loss 0.420 (0.442)	test_acc   0.79 (  0.80)	test_minacc   0.70 (  0.70)	test_majacc   0.81 (  0.82)	Loss_d 0.420 (0.442)	test_acc_d   0.79 (  0.80)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.60 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.85it/s]
Test: [  0/  1]	Loss 0.954 (0.954)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.76 (  0.76)	Loss_d 0.954 (0.954)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.954 (0.954)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.76 (  0.76)	Loss_d 0.954 (0.954)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 16/  1]	epoch_time 0.0441 (0.0461)	validation_time 0.0005 (0.0008)	train_time 0.0436 (0.0451)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.7981000328660012, 0.5879999995231628)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.20it/s]  8%|7         | 2/26 [00:00<00:03,  6.25it/s] 23%|##3       | 6/26 [00:00<00:01, 16.59it/s] 38%|###8      | 10/26 [00:00<00:00, 22.78it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.73it/s] 69%|######9   | 18/26 [00:00<00:00, 30.02it/s] 85%|########4 | 22/26 [00:00<00:00, 32.51it/s]100%|##########| 26/26 [00:01<00:00, 34.30it/s]100%|##########| 26/26 [00:01<00:00, 24.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.001 (0.003)	train_nll   0.43 (  0.44)	train_penalty   0.00 (  0.00)	weight_norm  24.79 ( 24.79)	train_acc   0.80 (  0.80)	train_minacc   0.73 (  0.75)	train_majacc   0.81 (  0.80)	train_corr   0.00 (  0.00)	l1 7.0795 (7.3312)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.62it/s] 15%|#5        | 4/26 [00:00<00:01, 16.09it/s] 35%|###4      | 9/26 [00:00<00:00, 28.33it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.33it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.03it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.03it/s] 92%|#########2| 24/26 [00:00<00:00, 37.18it/s]100%|##########| 26/26 [00:00<00:00, 31.75it/s]
Test: [   0/  26]	Loss 0.465 (0.465)	test_acc   0.75 (  0.75)	test_minacc   0.81 (  0.81)	test_majacc   0.74 (  0.74)	Loss_d 0.465 (0.465)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.479 (0.486)	test_acc   0.77 (  0.75)	test_minacc   0.76 (  0.77)	test_majacc   0.77 (  0.75)	Loss_d 0.479 (0.486)	test_acc_d   0.77 (  0.75)	test_minacc_d   0.76 (  0.77)	test_majacc_d   0.77 (  0.75)	test_corr_d   0.50 (  0.46)
Test: [  20/  26]	Loss 0.497 (0.489)	test_acc   0.74 (  0.76)	test_minacc   0.78 (  0.76)	test_majacc   0.74 (  0.76)	Loss_d 0.497 (0.489)	test_acc_d   0.74 (  0.76)	test_minacc_d   0.78 (  0.76)	test_majacc_d   0.74 (  0.76)	test_corr_d   0.47 (  0.46)
Test: [  26/  26]	Loss 0.447 (0.487)	test_acc   0.79 (  0.76)	test_minacc   0.73 (  0.76)	test_majacc   0.80 (  0.76)	Loss_d 0.447 (0.487)	test_acc_d   0.79 (  0.76)	test_minacc_d   0.73 (  0.76)	test_majacc_d   0.80 (  0.76)	test_corr_d   0.53 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.04it/s]
Test: [  0/  1]	Loss 0.810 (0.810)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.73 (  0.73)	Loss_d 0.810 (0.810)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.73 (  0.73)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.810 (0.810)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.73 (  0.73)	Loss_d 0.810 (0.810)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.73 (  0.73)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 17/  1]	epoch_time 0.0444 (0.0460)	validation_time 0.0004 (0.0008)	train_time 0.0441 (0.0450)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.7578000294566154, 0.6200000047683716)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 12%|#1        | 3/26 [00:00<00:01, 15.01it/s] 27%|##6       | 7/26 [00:00<00:00, 24.09it/s] 42%|####2     | 11/26 [00:00<00:00, 28.24it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.87it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.60it/s] 88%|########8 | 23/26 [00:00<00:00, 33.68it/s]100%|##########| 26/26 [00:00<00:00, 27.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.008 (0.003)	train_nll   0.36 (  0.44)	train_penalty   0.01 (  0.00)	weight_norm  24.80 ( 24.80)	train_acc   0.84 (  0.79)	train_minacc   0.81 (  0.78)	train_majacc   0.85 (  0.79)	train_corr   0.00 (  0.00)	l1 6.9431 (7.1502)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.14it/s] 27%|##6       | 7/26 [00:00<00:00, 34.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.55it/s] 46%|####6     | 12/26 [00:00<00:00, 39.90it/s] 65%|######5   | 17/26 [00:00<00:00, 41.15it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.15it/s] 85%|########4 | 22/26 [00:00<00:00, 40.77it/s]100%|##########| 26/26 [00:00<00:00, 37.06it/s]
Test: [   0/  26]	Loss 0.367 (0.367)	test_acc   0.83 (  0.83)	test_minacc   0.82 (  0.82)	test_majacc   0.83 (  0.83)	Loss_d 0.367 (0.367)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.405 (0.399)	test_acc   0.81 (  0.82)	test_minacc   0.75 (  0.79)	test_majacc   0.81 (  0.83)	Loss_d 0.405 (0.399)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.75 (  0.79)	test_majacc_d   0.81 (  0.83)	test_corr_d   0.60 (  0.57)
Test: [  20/  26]	Loss 0.396 (0.393)	test_acc   0.83 (  0.83)	test_minacc   0.86 (  0.79)	test_majacc   0.82 (  0.83)	Loss_d 0.396 (0.393)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.86 (  0.79)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.58 (  0.57)
Test: [  26/  26]	Loss 0.367 (0.392)	test_acc   0.84 (  0.83)	test_minacc   0.81 (  0.78)	test_majacc   0.85 (  0.83)	Loss_d 0.367 (0.392)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.81 (  0.78)	test_majacc_d   0.85 (  0.83)	test_corr_d   0.61 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.65it/s]
Test: [  0/  1]	Loss 0.955 (0.955)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.78 (  0.78)	Loss_d 0.955 (0.955)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.78 (  0.78)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.955 (0.955)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.78 (  0.78)	Loss_d 0.955 (0.955)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.78 (  0.78)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 18/  1]	epoch_time 0.0421 (0.0458)	validation_time 0.0004 (0.0007)	train_time 0.0417 (0.0448)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.825000022649765, 0.6040000319480896)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.31it/s] 19%|#9        | 5/26 [00:00<00:00, 21.98it/s] 35%|###4      | 9/26 [00:00<00:00, 27.57it/s] 50%|#####     | 13/26 [00:00<00:00, 30.27it/s] 65%|######5   | 17/26 [00:00<00:00, 31.63it/s] 81%|########  | 21/26 [00:00<00:00, 32.82it/s] 96%|#########6| 25/26 [00:00<00:00, 33.86it/s]100%|##########| 26/26 [00:00<00:00, 28.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.001 (0.003)	train_nll   0.41 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  24.81 ( 24.81)	train_acc   0.80 (  0.81)	train_minacc   0.76 (  0.78)	train_majacc   0.81 (  0.81)	train_corr   0.00 (  0.00)	l1 6.9496 (7.0011)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.12it/s] 23%|##3       | 6/26 [00:00<00:00, 30.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.06it/s] 42%|####2     | 11/26 [00:00<00:00, 36.80it/s] 62%|######1   | 16/26 [00:00<00:00, 40.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.11it/s] 81%|########  | 21/26 [00:00<00:00, 38.08it/s]100%|##########| 26/26 [00:00<00:00, 41.17it/s]100%|##########| 26/26 [00:00<00:00, 34.30it/s]
Test: [   0/  26]	Loss 0.386 (0.386)	test_acc   0.82 (  0.82)	test_minacc   0.81 (  0.81)	test_majacc   0.82 (  0.82)	Loss_d 0.386 (0.386)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.397 (0.394)	test_acc   0.82 (  0.82)	test_minacc   0.82 (  0.81)	test_majacc   0.82 (  0.82)	Loss_d 0.397 (0.394)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.82 (  0.81)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.59 (  0.56)
Test: [  20/  26]	Loss 0.391 (0.393)	test_acc   0.83 (  0.82)	test_minacc   0.84 (  0.80)	test_majacc   0.83 (  0.82)	Loss_d 0.391 (0.393)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.83 (  0.82)	test_corr_d   0.57 (  0.56)
Test: [  26/  26]	Loss 0.406 (0.392)	test_acc   0.80 (  0.82)	test_minacc   0.76 (  0.79)	test_majacc   0.80 (  0.82)	Loss_d 0.406 (0.392)	test_acc_d   0.80 (  0.82)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.80 (  0.82)	test_corr_d   0.56 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.09it/s]
Test: [  0/  1]	Loss 0.977 (0.977)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 0.977 (0.977)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.977 (0.977)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 0.977 (0.977)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 19/  1]	epoch_time 0.0426 (0.0456)	validation_time 0.0005 (0.0007)	train_time 0.0420 (0.0447)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.8182000249028206, 0.6180000305175781)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.82it/s] 19%|#9        | 5/26 [00:00<00:01, 15.06it/s] 35%|###4      | 9/26 [00:00<00:00, 21.26it/s] 50%|#####     | 13/26 [00:00<00:00, 25.60it/s] 65%|######5   | 17/26 [00:00<00:00, 28.45it/s] 81%|########  | 21/26 [00:00<00:00, 30.92it/s] 96%|#########6| 25/26 [00:00<00:00, 32.01it/s]100%|##########| 26/26 [00:01<00:00, 24.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.002 (0.001)	train_nll   0.46 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  24.82 ( 24.82)	train_acc   0.77 (  0.80)	train_minacc   0.84 (  0.80)	train_majacc   0.76 (  0.80)	train_corr   0.00 (  0.00)	l1 7.1139 (7.0155)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.96it/s] 19%|#9        | 5/26 [00:00<00:00, 21.41it/s] 38%|###8      | 10/26 [00:00<00:00, 31.47it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.47it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.90it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.62it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.62it/s] 96%|#########6| 25/26 [00:00<00:00, 39.52it/s]100%|##########| 26/26 [00:00<00:00, 31.74it/s]
Test: [   0/  26]	Loss 0.431 (0.431)	test_acc   0.77 (  0.77)	test_minacc   0.74 (  0.74)	test_majacc   0.78 (  0.78)	Loss_d 0.431 (0.431)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.434 (0.446)	test_acc   0.80 (  0.78)	test_minacc   0.82 (  0.79)	test_majacc   0.80 (  0.78)	Loss_d 0.434 (0.446)	test_acc_d   0.80 (  0.78)	test_minacc_d   0.82 (  0.79)	test_majacc_d   0.80 (  0.78)	test_corr_d   0.55 (  0.51)
Test: [  20/  26]	Loss 0.427 (0.434)	test_acc   0.79 (  0.78)	test_minacc   0.80 (  0.80)	test_majacc   0.79 (  0.78)	Loss_d 0.427 (0.434)	test_acc_d   0.79 (  0.78)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.54 (  0.51)
Test: [  26/  26]	Loss 0.447 (0.431)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.80)	test_majacc   0.78 (  0.79)	Loss_d 0.447 (0.431)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.78 (  0.79)	test_corr_d   0.51 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.15it/s]
Test: [  0/  1]	Loss 1.053 (1.053)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.77 (  0.77)	Loss_d 1.053 (1.053)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.77 (  0.77)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 1.053 (1.053)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.77 (  0.77)	Loss_d 1.053 (1.053)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.77 (  0.77)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 20/  1]	epoch_time 0.0445 (0.0456)	validation_time 0.0003 (0.0007)	train_time 0.0441 (0.0447)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.7898000238537788, 0.659000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.33it/s] 19%|#9        | 5/26 [00:00<00:00, 21.27it/s] 35%|###4      | 9/26 [00:00<00:00, 27.51it/s] 50%|#####     | 13/26 [00:00<00:00, 30.87it/s] 65%|######5   | 17/26 [00:00<00:00, 32.84it/s] 81%|########  | 21/26 [00:00<00:00, 34.12it/s] 96%|#########6| 25/26 [00:00<00:00, 35.09it/s]100%|##########| 26/26 [00:00<00:00, 29.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.001)	train_nll   0.42 (  0.43)	train_penalty   0.00 (  0.00)	weight_norm  24.82 ( 24.82)	train_acc   0.78 (  0.79)	train_minacc   0.84 (  0.82)	train_majacc   0.77 (  0.78)	train_corr   0.00 (  0.00)	l1 7.0586 (6.9943)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.93it/s] 27%|##6       | 7/26 [00:00<00:00, 30.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.11it/s] 46%|####6     | 12/26 [00:00<00:00, 36.73it/s] 65%|######5   | 17/26 [00:00<00:00, 40.06it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.06it/s] 85%|########4 | 22/26 [00:00<00:00, 38.92it/s]100%|##########| 26/26 [00:00<00:00, 35.29it/s]
Test: [   0/  26]	Loss 0.430 (0.430)	test_acc   0.79 (  0.79)	test_minacc   0.79 (  0.79)	test_majacc   0.80 (  0.80)	Loss_d 0.430 (0.430)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.456 (0.449)	test_acc   0.77 (  0.78)	test_minacc   0.78 (  0.79)	test_majacc   0.77 (  0.78)	Loss_d 0.456 (0.449)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.53 (  0.50)
Test: [  20/  26]	Loss 0.426 (0.438)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.80)	test_majacc   0.79 (  0.78)	Loss_d 0.426 (0.438)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.52 (  0.50)
Test: [  26/  26]	Loss 0.414 (0.434)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.80)	test_majacc   0.78 (  0.79)	Loss_d 0.414 (0.434)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.78 (  0.79)	test_corr_d   0.54 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 55.74it/s]
Test: [  0/  1]	Loss 1.026 (1.026)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.74 (  0.74)	Loss_d 1.026 (1.026)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.74 (  0.74)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 1.026 (1.026)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.74 (  0.74)	Loss_d 1.026 (1.026)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.74 (  0.74)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 21/  1]	epoch_time 0.0403 (0.0453)	validation_time 0.0004 (0.0007)	train_time 0.0398 (0.0444)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.7898000238537788, 0.6420000195503235)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.41it/s] 19%|#9        | 5/26 [00:00<00:01, 19.44it/s] 35%|###4      | 9/26 [00:00<00:00, 25.99it/s] 50%|#####     | 13/26 [00:00<00:00, 29.90it/s] 65%|######5   | 17/26 [00:00<00:00, 32.30it/s] 81%|########  | 21/26 [00:00<00:00, 33.82it/s] 96%|#########6| 25/26 [00:00<00:00, 34.66it/s]100%|##########| 26/26 [00:00<00:00, 27.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.001 (0.000)	train_nll   0.43 (  0.42)	train_penalty   0.00 (  0.00)	weight_norm  24.82 ( 24.82)	train_acc   0.78 (  0.80)	train_minacc   0.81 (  0.80)	train_majacc   0.77 (  0.80)	train_corr   0.00 (  0.00)	l1 7.1372 (6.9709)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.01it/s] 15%|#5        | 4/26 [00:00<00:01, 13.25it/s] 35%|###4      | 9/26 [00:00<00:00, 24.91it/s]                                               35%|###4      | 9/26 [00:00<00:00, 24.91it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.26it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.26it/s] 92%|#########2| 24/26 [00:00<00:00, 36.49it/s]100%|##########| 26/26 [00:00<00:00, 28.95it/s]
Test: [   0/  26]	Loss 0.433 (0.433)	test_acc   0.80 (  0.80)	test_minacc   0.82 (  0.82)	test_majacc   0.80 (  0.80)	Loss_d 0.433 (0.433)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.459 (0.452)	test_acc   0.78 (  0.78)	test_minacc   0.84 (  0.82)	test_majacc   0.77 (  0.77)	Loss_d 0.459 (0.452)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.428 (0.444)	test_acc   0.81 (  0.78)	test_minacc   0.84 (  0.82)	test_majacc   0.80 (  0.78)	Loss_d 0.428 (0.444)	test_acc_d   0.81 (  0.78)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.80 (  0.78)	test_corr_d   0.51 (  0.48)
Test: [  26/  26]	Loss 0.427 (0.439)	test_acc   0.78 (  0.79)	test_minacc   0.81 (  0.81)	test_majacc   0.77 (  0.78)	Loss_d 0.427 (0.439)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.51 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.00it/s]
Test: [  0/  1]	Loss 1.001 (1.001)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.77 (  0.77)	Loss_d 1.001 (1.001)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.77 (  0.77)	test_corr_d  -0.16 ( -0.16)
Test: [  1/  1]	Loss 1.001 (1.001)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.77 (  0.77)	Loss_d 1.001 (1.001)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.77 (  0.77)	test_corr_d  -0.16 ( -0.16)
Overall Timing[ 22/  1]	epoch_time 0.0493 (0.0455)	validation_time 0.0003 (0.0007)	train_time 0.0490 (0.0446)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.7891000292897224, 0.6610000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.37it/s] 19%|#9        | 5/26 [00:00<00:00, 23.02it/s] 35%|###4      | 9/26 [00:00<00:00, 28.24it/s] 50%|#####     | 13/26 [00:00<00:00, 30.72it/s] 65%|######5   | 17/26 [00:00<00:00, 32.22it/s] 81%|########  | 21/26 [00:00<00:00, 29.81it/s] 96%|#########6| 25/26 [00:00<00:00, 29.69it/s]100%|##########| 26/26 [00:00<00:00, 27.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 7.019617080688477
set z to 6.949420909881591
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 396 tensor(-0.0076, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 330 tensor(-0.0062, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 277 tensor(0.0171, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.208 (0.085)	train_nll   0.85 (  0.53)	train_penalty   0.21 (  0.09)	weight_norm  25.66 ( 24.91)	train_acc   0.48 (  0.74)	train_minacc   0.57 (  0.73)	train_majacc   0.47 (  0.74)	train_corr   0.00 (  0.00)	l1 11.5604 (7.1067)	zero_count 0.0000 (11.5440)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.69it/s] 23%|##3       | 6/26 [00:00<00:00, 32.30it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.30it/s] 42%|####2     | 11/26 [00:00<00:00, 38.07it/s] 62%|######1   | 16/26 [00:00<00:00, 41.17it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.17it/s] 81%|########  | 21/26 [00:00<00:00, 38.90it/s]100%|##########| 26/26 [00:00<00:00, 41.66it/s]100%|##########| 26/26 [00:00<00:00, 34.43it/s]
Test: [   0/  26]	Loss 0.539 (0.539)	test_acc   0.66 (  0.66)	test_minacc   0.51 (  0.51)	test_majacc   0.68 (  0.68)	Loss_d 0.539 (0.539)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.608 (0.689)	test_acc   0.62 (  0.62)	test_minacc   0.43 (  0.46)	test_majacc   0.65 (  0.65)	Loss_d 0.608 (0.689)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.43 (  0.46)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.54 (  0.53)
Test: [  20/  26]	Loss 0.626 (0.674)	test_acc   0.69 (  0.64)	test_minacc   0.46 (  0.47)	test_majacc   0.72 (  0.66)	Loss_d 0.626 (0.674)	test_acc_d   0.69 (  0.64)	test_minacc_d   0.46 (  0.47)	test_majacc_d   0.72 (  0.66)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.580 (0.667)	test_acc   0.68 (  0.64)	test_minacc   0.54 (  0.47)	test_majacc   0.70 (  0.67)	Loss_d 0.580 (0.667)	test_acc_d   0.68 (  0.64)	test_minacc_d   0.54 (  0.47)	test_majacc_d   0.70 (  0.67)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.20it/s]
Test: [  0/  1]	Loss 2.825 (2.825)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.67 (  0.67)	Loss_d 2.825 (2.825)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 2.825 (2.825)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.67 (  0.67)	Loss_d 2.825 (2.825)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.07 (  0.07)
Overall Timing[ 23/  1]	epoch_time 0.0476 (0.0456)	validation_time 0.0004 (0.0007)	train_time 0.0472 (0.0447)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.6411000154018403, 0.4750000238418579)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.37it/s] 15%|#5        | 4/26 [00:00<00:01, 11.20it/s] 27%|##6       | 7/26 [00:00<00:01, 16.54it/s] 42%|####2     | 11/26 [00:00<00:00, 22.48it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.73it/s] 65%|######5   | 17/26 [00:00<00:00, 24.38it/s] 81%|########  | 21/26 [00:00<00:00, 27.27it/s] 92%|#########2| 24/26 [00:01<00:00, 27.37it/s]100%|##########| 26/26 [00:01<00:00, 21.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 266 tensor(0.0075, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 253 tensor(0.0072, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 286 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 290 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 297 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 310 tensor(-0.0006, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.002 (0.058)	train_nll   0.59 (  0.67)	train_penalty   0.00 (  0.06)	weight_norm  30.98 ( 28.84)	train_acc   0.80 (  0.77)	train_minacc   0.14 (  0.30)	train_majacc   0.92 (  0.86)	train_corr   0.00 (  0.00)	l1 7.0932 (7.5725)	zero_count 0.0000 (54.4830)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.37it/s] 31%|###       | 8/26 [00:00<00:00, 39.02it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.02it/s] 50%|#####     | 13/26 [00:00<00:00, 42.00it/s] 69%|######9   | 18/26 [00:00<00:00, 44.36it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.36it/s] 88%|########8 | 23/26 [00:00<00:00, 40.84it/s]100%|##########| 26/26 [00:00<00:00, 38.20it/s]
Test: [   0/  26]	Loss 0.598 (0.598)	test_acc   0.82 (  0.82)	test_minacc   0.05 (  0.05)	test_majacc   0.95 (  0.95)	Loss_d 0.598 (0.598)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.600 (0.606)	test_acc   0.85 (  0.83)	test_minacc   0.08 (  0.09)	test_majacc   0.96 (  0.96)	Loss_d 0.600 (0.606)	test_acc_d   0.85 (  0.83)	test_minacc_d   0.08 (  0.09)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.607 (0.606)	test_acc   0.84 (  0.82)	test_minacc   0.04 (  0.08)	test_majacc   0.95 (  0.96)	Loss_d 0.607 (0.606)	test_acc_d   0.84 (  0.82)	test_minacc_d   0.04 (  0.08)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.45 (  0.47)
Test: [  26/  26]	Loss 0.595 (0.605)	test_acc   0.83 (  0.82)	test_minacc   0.03 (  0.08)	test_majacc   0.97 (  0.95)	Loss_d 0.595 (0.605)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.03 (  0.08)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.54 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.47it/s]
Test: [  0/  1]	Loss 1.062 (1.062)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.062 (1.062)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 1.062 (1.062)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.062 (1.062)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.44 (  0.44)
Overall Timing[ 24/  1]	epoch_time 0.0476 (0.0457)	validation_time 0.0005 (0.0007)	train_time 0.0471 (0.0448)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.8229000189900398, 0.15400001406669617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.16it/s] 19%|#9        | 5/26 [00:00<00:01, 18.70it/s] 31%|###       | 8/26 [00:00<00:00, 21.47it/s] 42%|####2     | 11/26 [00:00<00:00, 22.70it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.06it/s] 69%|######9   | 18/26 [00:00<00:00, 25.99it/s] 81%|########  | 21/26 [00:00<00:00, 26.49it/s] 96%|#########6| 25/26 [00:01<00:00, 29.53it/s]100%|##########| 26/26 [00:01<00:00, 23.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 315 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 323 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 334 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 339 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 342 tensor(-5.9132e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 346 tensor(-2.4249e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.001)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.78 ( 31.55)	train_acc   0.51 (  0.65)	train_minacc   0.59 (  0.44)	train_majacc   0.50 (  0.68)	train_corr   0.00 (  0.00)	l1 6.9708 (6.9744)	zero_count 0.0000 (43.0170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.02it/s] 23%|##3       | 6/26 [00:00<00:00, 29.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.82it/s] 42%|####2     | 11/26 [00:00<00:00, 34.29it/s] 62%|######1   | 16/26 [00:00<00:00, 36.97it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.97it/s] 81%|########  | 21/26 [00:00<00:00, 39.52it/s]100%|##########| 26/26 [00:00<00:00, 41.88it/s]100%|##########| 26/26 [00:00<00:00, 34.22it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.45 (  0.45)	test_minacc   0.68 (  0.68)	test_majacc   0.41 (  0.41)	Loss_d 0.648 (0.648)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.660 (0.658)	test_acc   0.47 (  0.45)	test_minacc   0.82 (  0.67)	test_majacc   0.42 (  0.42)	Loss_d 0.660 (0.658)	test_acc_d   0.47 (  0.45)	test_minacc_d   0.82 (  0.67)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.23 (  0.25)
Test: [  20/  26]	Loss 0.655 (0.656)	test_acc   0.41 (  0.45)	test_minacc   0.70 (  0.68)	test_majacc   0.37 (  0.40)	Loss_d 0.655 (0.656)	test_acc_d   0.41 (  0.45)	test_minacc_d   0.70 (  0.68)	test_majacc_d   0.37 (  0.40)	test_corr_d   0.23 (  0.25)
Test: [  26/  26]	Loss 0.649 (0.655)	test_acc   0.48 (  0.45)	test_minacc   0.68 (  0.69)	test_majacc   0.45 (  0.40)	Loss_d 0.649 (0.655)	test_acc_d   0.48 (  0.45)	test_minacc_d   0.68 (  0.69)	test_majacc_d   0.45 (  0.40)	test_corr_d   0.28 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.25it/s]
Test: [  0/  1]	Loss 0.868 (0.868)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.53 (  0.53)	Loss_d 0.868 (0.868)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.868 (0.868)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.53 (  0.53)	Loss_d 0.868 (0.868)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.16 (  0.16)
Overall Timing[ 25/  1]	epoch_time 0.0434 (0.0456)	validation_time 0.0006 (0.0007)	train_time 0.0428 (0.0448)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.44500000488758085, 0.5630000233650208)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.92it/s] 15%|#5        | 4/26 [00:00<00:01, 17.73it/s] 27%|##6       | 7/26 [00:00<00:00, 21.10it/s] 42%|####2     | 11/26 [00:00<00:00, 25.71it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.06it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.20it/s] 88%|########8 | 23/26 [00:00<00:00, 31.53it/s]100%|##########| 26/26 [00:00<00:00, 26.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 344 tensor(-2.2037e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.82)	train_acc   0.50 (  0.47)	train_minacc   0.49 (  0.66)	train_majacc   0.50 (  0.43)	train_corr   0.00 (  0.00)	l1 6.9387 (6.9442)	zero_count 0.0000 (12.9480)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.98it/s] 12%|#1        | 3/26 [00:00<00:01, 13.46it/s] 31%|###       | 8/26 [00:00<00:00, 28.34it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.34it/s] 50%|#####     | 13/26 [00:00<00:00, 35.89it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.21it/s] 96%|#########6| 25/26 [00:00<00:00, 43.37it/s]100%|##########| 26/26 [00:00<00:00, 33.72it/s]
Test: [   0/  26]	Loss 0.653 (0.653)	test_acc   0.52 (  0.52)	test_minacc   0.67 (  0.67)	test_majacc   0.49 (  0.49)	Loss_d 0.653 (0.653)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.657 (0.654)	test_acc   0.52 (  0.53)	test_minacc   0.73 (  0.64)	test_majacc   0.49 (  0.51)	Loss_d 0.657 (0.654)	test_acc_d   0.52 (  0.53)	test_minacc_d   0.73 (  0.64)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.22 (  0.24)
Test: [  20/  26]	Loss 0.660 (0.654)	test_acc   0.47 (  0.51)	test_minacc   0.60 (  0.63)	test_majacc   0.45 (  0.49)	Loss_d 0.660 (0.654)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.60 (  0.63)	test_majacc_d   0.45 (  0.49)	test_corr_d   0.21 (  0.24)
Test: [  26/  26]	Loss 0.653 (0.654)	test_acc   0.48 (  0.51)	test_minacc   0.49 (  0.63)	test_majacc   0.48 (  0.48)	Loss_d 0.653 (0.654)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.49 (  0.63)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.26 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.98it/s]
Test: [  0/  1]	Loss 0.838 (0.838)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.54 (  0.54)	Loss_d 0.838 (0.838)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 0.838 (0.838)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.54 (  0.54)	Loss_d 0.838 (0.838)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.19 (  0.19)
Overall Timing[ 26/  1]	epoch_time 0.0434 (0.0455)	validation_time 0.0005 (0.0007)	train_time 0.0429 (0.0447)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.5051000119745731, 0.5060000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 19%|#9        | 5/26 [00:00<00:00, 21.42it/s] 35%|###4      | 9/26 [00:00<00:00, 24.32it/s] 50%|#####     | 13/26 [00:00<00:00, 27.98it/s] 62%|######1   | 16/26 [00:00<00:00, 27.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.70it/s] 88%|########8 | 23/26 [00:00<00:00, 28.88it/s]100%|##########| 26/26 [00:01<00:00, 25.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 365 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 387 tensor(2.7996e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 396 tensor(2.3349e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 437 tensor(-8.1432e-07, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.42 (  0.41)	train_minacc   0.73 (  0.75)	train_majacc   0.37 (  0.34)	train_corr   0.00 (  0.00)	l1 6.9492 (6.9491)	zero_count 0.0000 (15.0150)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.28it/s] 27%|##6       | 7/26 [00:00<00:00, 34.63it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.63it/s] 50%|#####     | 13/26 [00:00<00:00, 40.89it/s] 69%|######9   | 18/26 [00:00<00:00, 42.17it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.17it/s] 88%|########8 | 23/26 [00:00<00:00, 43.72it/s]100%|##########| 26/26 [00:00<00:00, 36.58it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.35 (  0.35)	test_minacc   0.72 (  0.72)	test_majacc   0.29 (  0.29)	Loss_d 0.656 (0.656)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.659 (0.657)	test_acc   0.36 (  0.38)	test_minacc   0.82 (  0.77)	test_majacc   0.29 (  0.32)	Loss_d 0.659 (0.657)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.82 (  0.77)	test_majacc_d   0.29 (  0.32)	test_corr_d   0.20 (  0.22)
Test: [  20/  26]	Loss 0.664 (0.657)	test_acc   0.34 (  0.38)	test_minacc   0.74 (  0.78)	test_majacc   0.28 (  0.30)	Loss_d 0.664 (0.657)	test_acc_d   0.34 (  0.38)	test_minacc_d   0.74 (  0.78)	test_majacc_d   0.28 (  0.30)	test_corr_d   0.19 (  0.22)
Test: [  26/  26]	Loss 0.657 (0.658)	test_acc   0.42 (  0.38)	test_minacc   0.73 (  0.78)	test_majacc   0.37 (  0.30)	Loss_d 0.657 (0.658)	test_acc_d   0.42 (  0.38)	test_minacc_d   0.73 (  0.78)	test_majacc_d   0.37 (  0.30)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.06it/s]
Test: [  0/  1]	Loss 0.835 (0.835)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.44 (  0.44)	Loss_d 0.835 (0.835)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.835 (0.835)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.44 (  0.44)	Loss_d 0.835 (0.835)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.17 (  0.17)
Overall Timing[ 27/  1]	epoch_time 0.0425 (0.0454)	validation_time 0.0003 (0.0006)	train_time 0.0421 (0.0446)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.37620000767707823, 0.597000002861023)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.76it/s] 12%|#1        | 3/26 [00:00<00:01, 12.53it/s] 27%|##6       | 7/26 [00:00<00:00, 21.69it/s] 38%|###8      | 10/26 [00:00<00:00, 23.15it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.08it/s] 69%|######9   | 18/26 [00:00<00:00, 29.43it/s] 85%|########4 | 22/26 [00:00<00:00, 31.03it/s]100%|##########| 26/26 [00:00<00:00, 32.65it/s]100%|##########| 26/26 [00:01<00:00, 25.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 420 tensor(1.8031e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 405 tensor(4.7543e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.44 (  0.38)	train_minacc   0.70 (  0.78)	train_majacc   0.39 (  0.30)	train_corr   0.00 (  0.00)	l1 6.9488 (6.9492)	zero_count 0.0000 (10.5690)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.70it/s] 15%|#5        | 4/26 [00:00<00:01, 18.19it/s] 35%|###4      | 9/26 [00:00<00:00, 30.44it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.44it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.52it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.65it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.65it/s] 92%|#########2| 24/26 [00:00<00:00, 40.83it/s]100%|##########| 26/26 [00:00<00:00, 33.30it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.37 (  0.37)	test_minacc   0.72 (  0.72)	test_majacc   0.31 (  0.31)	Loss_d 0.655 (0.655)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.658 (0.656)	test_acc   0.39 (  0.39)	test_minacc   0.80 (  0.75)	test_majacc   0.32 (  0.33)	Loss_d 0.658 (0.656)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.80 (  0.75)	test_majacc_d   0.32 (  0.33)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.663 (0.656)	test_acc   0.35 (  0.39)	test_minacc   0.70 (  0.76)	test_majacc   0.30 (  0.32)	Loss_d 0.663 (0.656)	test_acc_d   0.35 (  0.39)	test_minacc_d   0.70 (  0.76)	test_majacc_d   0.30 (  0.32)	test_corr_d   0.19 (  0.22)
Test: [  26/  26]	Loss 0.656 (0.657)	test_acc   0.43 (  0.39)	test_minacc   0.70 (  0.77)	test_majacc   0.38 (  0.32)	Loss_d 0.656 (0.657)	test_acc_d   0.43 (  0.39)	test_minacc_d   0.70 (  0.77)	test_majacc_d   0.38 (  0.32)	test_corr_d   0.25 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.68it/s]
Test: [  0/  1]	Loss 0.836 (0.836)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 0.836 (0.836)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.836 (0.836)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 0.836 (0.836)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.17 (  0.17)
Overall Timing[ 28/  1]	epoch_time 0.0415 (0.0453)	validation_time 0.0004 (0.0006)	train_time 0.0411 (0.0445)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.38670000693202017, 0.5850000381469727)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.13it/s] 12%|#1        | 3/26 [00:00<00:02,  8.27it/s] 27%|##6       | 7/26 [00:00<00:01, 15.48it/s] 42%|####2     | 11/26 [00:00<00:00, 20.94it/s] 54%|#####3    | 14/26 [00:00<00:00, 22.28it/s] 69%|######9   | 18/26 [00:00<00:00, 25.89it/s] 85%|########4 | 22/26 [00:01<00:00, 26.31it/s]100%|##########| 26/26 [00:01<00:00, 28.69it/s]100%|##########| 26/26 [00:01<00:00, 20.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 461 tensor(-1.0734e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 429 tensor(5.6045e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 421 tensor(1.7819e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 483 tensor(1.2808e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 457 tensor(1.0245e-06, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.42 (  0.37)	train_minacc   0.70 (  0.78)	train_majacc   0.38 (  0.30)	train_corr   0.00 (  0.00)	l1 6.9497 (6.9498)	zero_count 0.0000 (9.7500)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.83it/s] 23%|##3       | 6/26 [00:00<00:00, 24.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.90it/s] 42%|####2     | 11/26 [00:00<00:00, 33.01it/s] 62%|######1   | 16/26 [00:00<00:00, 38.04it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.04it/s] 81%|########  | 21/26 [00:00<00:00, 37.25it/s]100%|##########| 26/26 [00:00<00:00, 40.67it/s]100%|##########| 26/26 [00:00<00:00, 32.43it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.36 (  0.36)	test_minacc   0.72 (  0.72)	test_majacc   0.30 (  0.30)	Loss_d 0.656 (0.656)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.658 (0.656)	test_acc   0.38 (  0.38)	test_minacc   0.82 (  0.76)	test_majacc   0.31 (  0.32)	Loss_d 0.658 (0.656)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.82 (  0.76)	test_majacc_d   0.31 (  0.32)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.663 (0.657)	test_acc   0.35 (  0.38)	test_minacc   0.72 (  0.77)	test_majacc   0.30 (  0.31)	Loss_d 0.663 (0.657)	test_acc_d   0.35 (  0.38)	test_minacc_d   0.72 (  0.77)	test_majacc_d   0.30 (  0.31)	test_corr_d   0.19 (  0.22)
Test: [  26/  26]	Loss 0.657 (0.657)	test_acc   0.42 (  0.38)	test_minacc   0.70 (  0.78)	test_majacc   0.37 (  0.31)	Loss_d 0.657 (0.657)	test_acc_d   0.42 (  0.38)	test_minacc_d   0.70 (  0.78)	test_majacc_d   0.37 (  0.31)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.99it/s]
Test: [  0/  1]	Loss 0.836 (0.836)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.43 (  0.43)	Loss_d 0.836 (0.836)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.836 (0.836)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.43 (  0.43)	Loss_d 0.836 (0.836)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.17 (  0.17)
Overall Timing[ 29/  1]	epoch_time 0.0458 (0.0453)	validation_time 0.0004 (0.0006)	train_time 0.0453 (0.0445)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.3786000075340271, 0.5980000495910645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 19%|#9        | 5/26 [00:00<00:01, 18.62it/s] 31%|###       | 8/26 [00:00<00:00, 20.44it/s] 42%|####2     | 11/26 [00:00<00:00, 22.12it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.79it/s] 88%|########8 | 23/26 [00:00<00:00, 31.38it/s]100%|##########| 26/26 [00:01<00:00, 24.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 447 tensor(1.0112e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 420 tensor(5.0289e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 414 tensor(2.7990e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 476 tensor(-9.9966e-10, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.42 (  0.37)	train_minacc   0.70 (  0.79)	train_majacc   0.38 (  0.30)	train_corr   0.00 (  0.00)	l1 6.9494 (6.9496)	zero_count 0.0000 (11.8950)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.38it/s] 19%|#9        | 5/26 [00:00<00:00, 26.87it/s] 38%|###8      | 10/26 [00:00<00:00, 35.69it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.69it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.63it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.64it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.64it/s] 96%|#########6| 25/26 [00:00<00:00, 41.27it/s]100%|##########| 26/26 [00:00<00:00, 34.98it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.36 (  0.36)	test_minacc   0.72 (  0.72)	test_majacc   0.30 (  0.30)	Loss_d 0.655 (0.655)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.658 (0.656)	test_acc   0.37 (  0.38)	test_minacc   0.82 (  0.77)	test_majacc   0.31 (  0.31)	Loss_d 0.658 (0.656)	test_acc_d   0.37 (  0.38)	test_minacc_d   0.82 (  0.77)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.662 (0.656)	test_acc   0.35 (  0.37)	test_minacc   0.72 (  0.78)	test_majacc   0.30 (  0.30)	Loss_d 0.662 (0.656)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.19 (  0.22)
Test: [  26/  26]	Loss 0.657 (0.657)	test_acc   0.42 (  0.38)	test_minacc   0.70 (  0.78)	test_majacc   0.38 (  0.30)	Loss_d 0.657 (0.657)	test_acc_d   0.42 (  0.38)	test_minacc_d   0.70 (  0.78)	test_majacc_d   0.38 (  0.30)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.99it/s]
Test: [  0/  1]	Loss 0.836 (0.836)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.43 (  0.43)	Loss_d 0.836 (0.836)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.836 (0.836)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.43 (  0.43)	Loss_d 0.836 (0.836)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.16 (  0.16)
Overall Timing[ 30/  1]	epoch_time 0.0430 (0.0452)	validation_time 0.0003 (0.0006)	train_time 0.0426 (0.0444)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.37510000795125964, 0.6050000190734863)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.57it/s] 15%|#5        | 4/26 [00:00<00:01, 19.84it/s] 27%|##6       | 7/26 [00:00<00:00, 22.21it/s] 38%|###8      | 10/26 [00:00<00:00, 24.03it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.11it/s] 69%|######9   | 18/26 [00:00<00:00, 30.63it/s] 85%|########4 | 22/26 [00:00<00:00, 32.26it/s]100%|##########| 26/26 [00:00<00:00, 33.04it/s]100%|##########| 26/26 [00:00<00:00, 26.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 428 tensor(4.4371e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 410 tensor(4.2405e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 478 tensor(-2.6679e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.42 (  0.37)	train_minacc   0.73 (  0.79)	train_majacc   0.37 (  0.29)	train_corr   0.00 (  0.00)	l1 6.9493 (6.9495)	zero_count 0.0000 (8.5410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.34it/s] 31%|###       | 8/26 [00:00<00:00, 37.11it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.11it/s] 50%|#####     | 13/26 [00:00<00:00, 42.50it/s] 69%|######9   | 18/26 [00:00<00:00, 41.23it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.23it/s] 88%|########8 | 23/26 [00:00<00:00, 43.60it/s]100%|##########| 26/26 [00:00<00:00, 39.39it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.35 (  0.35)	test_minacc   0.72 (  0.72)	test_majacc   0.29 (  0.29)	Loss_d 0.655 (0.655)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.657 (0.656)	test_acc   0.37 (  0.38)	test_minacc   0.82 (  0.77)	test_majacc   0.30 (  0.31)	Loss_d 0.657 (0.656)	test_acc_d   0.37 (  0.38)	test_minacc_d   0.82 (  0.77)	test_majacc_d   0.30 (  0.31)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.662 (0.656)	test_acc   0.35 (  0.37)	test_minacc   0.72 (  0.78)	test_majacc   0.30 (  0.30)	Loss_d 0.662 (0.656)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.20 (  0.22)
Test: [  26/  26]	Loss 0.657 (0.657)	test_acc   0.42 (  0.37)	test_minacc   0.73 (  0.78)	test_majacc   0.37 (  0.30)	Loss_d 0.657 (0.657)	test_acc_d   0.42 (  0.37)	test_minacc_d   0.73 (  0.78)	test_majacc_d   0.37 (  0.30)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.39it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.43 (  0.43)	Loss_d 0.837 (0.837)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.43 (  0.43)	Loss_d 0.837 (0.837)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.16 (  0.16)
Overall Timing[ 31/  1]	epoch_time 0.0403 (0.0451)	validation_time 0.0005 (0.0006)	train_time 0.0398 (0.0443)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.37170000794529917, 0.6100000143051147)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.68it/s] 15%|#5        | 4/26 [00:00<00:01, 16.92it/s] 31%|###       | 8/26 [00:00<00:00, 25.14it/s] 42%|####2     | 11/26 [00:00<00:00, 25.54it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.67it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.93it/s] 92%|#########2| 24/26 [00:00<00:00, 34.52it/s]100%|##########| 26/26 [00:00<00:00, 27.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 439 tensor(3.0084e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 405 tensor(5.1231e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 478 tensor(-4.6788e-07, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.42 (  0.36)	train_minacc   0.73 (  0.79)	train_majacc   0.36 (  0.29)	train_corr   0.00 (  0.00)	l1 6.9492 (6.9495)	zero_count 0.0000 (8.2290)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.25it/s] 15%|#5        | 4/26 [00:00<00:01, 17.97it/s] 35%|###4      | 9/26 [00:00<00:00, 29.94it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.94it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.39it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.39it/s] 92%|#########2| 24/26 [00:00<00:00, 38.37it/s]100%|##########| 26/26 [00:00<00:00, 32.51it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.34 (  0.34)	test_minacc   0.72 (  0.72)	test_majacc   0.28 (  0.28)	Loss_d 0.655 (0.655)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.657 (0.656)	test_acc   0.36 (  0.37)	test_minacc   0.82 (  0.77)	test_majacc   0.29 (  0.30)	Loss_d 0.657 (0.656)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.82 (  0.77)	test_majacc_d   0.29 (  0.30)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.662 (0.656)	test_acc   0.35 (  0.37)	test_minacc   0.72 (  0.78)	test_majacc   0.30 (  0.30)	Loss_d 0.662 (0.656)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.20 (  0.22)
Test: [  26/  26]	Loss 0.657 (0.657)	test_acc   0.41 (  0.37)	test_minacc   0.73 (  0.78)	test_majacc   0.36 (  0.30)	Loss_d 0.657 (0.657)	test_acc_d   0.41 (  0.37)	test_minacc_d   0.73 (  0.78)	test_majacc_d   0.36 (  0.30)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.86it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.42 (  0.42)	Loss_d 0.837 (0.837)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.42 (  0.42)	Loss_d 0.837 (0.837)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.16 (  0.16)
Overall Timing[ 32/  1]	epoch_time 0.0396 (0.0449)	validation_time 0.0003 (0.0006)	train_time 0.0392 (0.0441)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.36880000844597816, 0.6130000352859497)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 15%|#5        | 4/26 [00:00<00:01, 17.99it/s] 31%|###       | 8/26 [00:00<00:00, 22.16it/s] 46%|####6     | 12/26 [00:00<00:00, 26.53it/s] 62%|######1   | 16/26 [00:00<00:00, 28.28it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.19it/s] 92%|#########2| 24/26 [00:00<00:00, 31.56it/s]100%|##########| 26/26 [00:00<00:00, 26.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 445 tensor(2.3617e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 408 tensor(4.7159e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 472 tensor(-2.3187e-07, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.41 (  0.36)	train_minacc   0.73 (  0.79)	train_majacc   0.36 (  0.28)	train_corr   0.00 (  0.00)	l1 6.9493 (6.9495)	zero_count 0.0000 (7.8780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.66it/s] 19%|#9        | 5/26 [00:00<00:00, 23.86it/s] 38%|###8      | 10/26 [00:00<00:00, 34.44it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.34it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.28it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.28it/s] 96%|#########6| 25/26 [00:00<00:00, 40.39it/s]100%|##########| 26/26 [00:00<00:00, 34.17it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.34 (  0.34)	test_minacc   0.72 (  0.72)	test_majacc   0.27 (  0.27)	Loss_d 0.655 (0.655)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.657 (0.656)	test_acc   0.36 (  0.37)	test_minacc   0.84 (  0.77)	test_majacc   0.29 (  0.30)	Loss_d 0.657 (0.656)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.84 (  0.77)	test_majacc_d   0.29 (  0.30)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.662 (0.656)	test_acc   0.35 (  0.37)	test_minacc   0.72 (  0.78)	test_majacc   0.30 (  0.29)	Loss_d 0.662 (0.656)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.30 (  0.29)	test_corr_d   0.20 (  0.22)
Test: [  26/  26]	Loss 0.657 (0.657)	test_acc   0.41 (  0.37)	test_minacc   0.73 (  0.79)	test_majacc   0.35 (  0.29)	Loss_d 0.657 (0.657)	test_acc_d   0.41 (  0.37)	test_minacc_d   0.73 (  0.79)	test_majacc_d   0.35 (  0.29)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.25it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.42 (  0.42)	Loss_d 0.837 (0.837)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.42 (  0.42)	Loss_d 0.837 (0.837)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.16 (  0.16)
Overall Timing[ 33/  1]	epoch_time 0.0480 (0.0450)	validation_time 0.0005 (0.0006)	train_time 0.0475 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.3660000084042549, 0.6160000562667847)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.58it/s] 15%|#5        | 4/26 [00:00<00:01, 18.60it/s] 27%|##6       | 7/26 [00:00<00:00, 21.56it/s] 42%|####2     | 11/26 [00:00<00:00, 26.09it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.01it/s] 69%|######9   | 18/26 [00:00<00:00, 28.35it/s] 85%|########4 | 22/26 [00:00<00:00, 30.53it/s]100%|##########| 26/26 [00:00<00:00, 31.70it/s]100%|##########| 26/26 [00:01<00:00, 25.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 455 tensor(1.6470e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 409 tensor(4.3160e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 414 tensor(6.5149e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 479 tensor(-1.9670e-07, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.41 (  0.36)	train_minacc   0.73 (  0.79)	train_majacc   0.35 (  0.28)	train_corr   0.00 (  0.00)	l1 6.9493 (6.9496)	zero_count 0.0000 (11.4660)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.00it/s] 23%|##3       | 6/26 [00:00<00:00, 27.88it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.88it/s] 42%|####2     | 11/26 [00:00<00:00, 35.17it/s] 62%|######1   | 16/26 [00:00<00:00, 39.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.71it/s] 81%|########  | 21/26 [00:00<00:00, 38.17it/s]100%|##########| 26/26 [00:00<00:00, 41.40it/s]100%|##########| 26/26 [00:00<00:00, 33.69it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.34 (  0.34)	test_minacc   0.72 (  0.72)	test_majacc   0.27 (  0.27)	Loss_d 0.655 (0.655)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.657 (0.656)	test_acc   0.36 (  0.37)	test_minacc   0.84 (  0.78)	test_majacc   0.29 (  0.30)	Loss_d 0.657 (0.656)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.29 (  0.30)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.662 (0.656)	test_acc   0.35 (  0.36)	test_minacc   0.72 (  0.78)	test_majacc   0.30 (  0.29)	Loss_d 0.662 (0.656)	test_acc_d   0.35 (  0.36)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.30 (  0.29)	test_corr_d   0.20 (  0.22)
Test: [  26/  26]	Loss 0.657 (0.657)	test_acc   0.41 (  0.36)	test_minacc   0.73 (  0.79)	test_majacc   0.35 (  0.29)	Loss_d 0.657 (0.657)	test_acc_d   0.41 (  0.36)	test_minacc_d   0.73 (  0.79)	test_majacc_d   0.35 (  0.29)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.52it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.42 (  0.42)	Loss_d 0.837 (0.837)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.42 (  0.42)	Loss_d 0.837 (0.837)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.16 (  0.16)
Overall Timing[ 34/  1]	epoch_time 0.0446 (0.0450)	validation_time 0.0005 (0.0006)	train_time 0.0441 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.36390000852942467, 0.6180000305175781)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.72it/s] 19%|#9        | 5/26 [00:00<00:01, 14.65it/s] 31%|###       | 8/26 [00:00<00:00, 18.30it/s] 42%|####2     | 11/26 [00:00<00:00, 20.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.65it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.64it/s] 88%|########8 | 23/26 [00:00<00:00, 30.34it/s]100%|##########| 26/26 [00:01<00:00, 22.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 467 tensor(9.0477e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 411 tensor(4.0670e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 405 tensor(2.0412e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.41 (  0.36)	train_minacc   0.73 (  0.79)	train_majacc   0.35 (  0.28)	train_corr   0.00 (  0.00)	l1 6.9490 (6.9494)	zero_count 0.0000 (10.9980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 17.45it/s] 31%|###       | 8/26 [00:00<00:00, 31.21it/s]                                               31%|###       | 8/26 [00:00<00:00, 31.21it/s] 50%|#####     | 13/26 [00:00<00:00, 36.99it/s] 69%|######9   | 18/26 [00:00<00:00, 40.51it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.51it/s] 88%|########8 | 23/26 [00:00<00:00, 38.81it/s]100%|##########| 26/26 [00:00<00:00, 34.79it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.34 (  0.34)	test_minacc   0.74 (  0.74)	test_majacc   0.27 (  0.27)	Loss_d 0.655 (0.655)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.657 (0.656)	test_acc   0.36 (  0.37)	test_minacc   0.84 (  0.78)	test_majacc   0.29 (  0.30)	Loss_d 0.657 (0.656)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.29 (  0.30)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.662 (0.656)	test_acc   0.35 (  0.36)	test_minacc   0.72 (  0.78)	test_majacc   0.30 (  0.29)	Loss_d 0.662 (0.656)	test_acc_d   0.35 (  0.36)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.30 (  0.29)	test_corr_d   0.20 (  0.22)
Test: [  26/  26]	Loss 0.658 (0.657)	test_acc   0.41 (  0.36)	test_minacc   0.76 (  0.79)	test_majacc   0.35 (  0.29)	Loss_d 0.658 (0.657)	test_acc_d   0.41 (  0.36)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.35 (  0.29)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.07it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.42 (  0.42)	Loss_d 0.837 (0.837)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.42 (  0.42)	Loss_d 0.837 (0.837)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.15 (  0.15)
Overall Timing[ 35/  1]	epoch_time 0.0425 (0.0449)	validation_time 0.0004 (0.0006)	train_time 0.0421 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.36260000881552695, 0.6190000176429749)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.39it/s] 19%|#9        | 5/26 [00:00<00:01, 18.92it/s] 35%|###4      | 9/26 [00:00<00:00, 24.79it/s] 46%|####6     | 12/26 [00:00<00:00, 25.27it/s] 62%|######1   | 16/26 [00:00<00:00, 28.64it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.75it/s] 92%|#########2| 24/26 [00:00<00:00, 32.34it/s]100%|##########| 26/26 [00:00<00:00, 26.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 423 tensor(2.5214e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 404 tensor(3.0447e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.41 (  0.36)	train_minacc   0.76 (  0.80)	train_majacc   0.35 (  0.28)	train_corr   0.00 (  0.00)	l1 6.9490 (6.9493)	zero_count 0.0000 (7.6050)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.87it/s] 27%|##6       | 7/26 [00:00<00:00, 34.51it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.51it/s] 46%|####6     | 12/26 [00:00<00:00, 39.54it/s] 65%|######5   | 17/26 [00:00<00:00, 37.85it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.85it/s] 85%|########4 | 22/26 [00:00<00:00, 40.53it/s]100%|##########| 26/26 [00:00<00:00, 35.80it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.34 (  0.34)	test_minacc   0.74 (  0.74)	test_majacc   0.27 (  0.27)	Loss_d 0.656 (0.656)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.656 (0.656)	test_acc   0.36 (  0.37)	test_minacc   0.84 (  0.78)	test_majacc   0.29 (  0.30)	Loss_d 0.656 (0.656)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.29 (  0.30)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.662 (0.656)	test_acc   0.35 (  0.36)	test_minacc   0.72 (  0.78)	test_majacc   0.29 (  0.28)	Loss_d 0.662 (0.656)	test_acc_d   0.35 (  0.36)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.29 (  0.28)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.658 (0.657)	test_acc   0.40 (  0.36)	test_minacc   0.76 (  0.79)	test_majacc   0.34 (  0.28)	Loss_d 0.658 (0.657)	test_acc_d   0.40 (  0.36)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.34 (  0.28)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.29it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.41 (  0.41)	Loss_d 0.837 (0.837)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.41 (  0.41)	Loss_d 0.837 (0.837)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.15 (  0.15)
Overall Timing[ 36/  1]	epoch_time 0.0468 (0.0450)	validation_time 0.0007 (0.0006)	train_time 0.0460 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.3605000085234642, 0.6210000514984131)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 15%|#5        | 4/26 [00:00<00:01, 17.68it/s] 31%|###       | 8/26 [00:00<00:00, 25.24it/s] 42%|####2     | 11/26 [00:00<00:00, 25.62it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.30it/s] 69%|######9   | 18/26 [00:00<00:00, 28.78it/s] 85%|########4 | 22/26 [00:00<00:00, 31.23it/s]100%|##########| 26/26 [00:00<00:00, 33.12it/s]100%|##########| 26/26 [00:00<00:00, 26.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 441 tensor(1.1921e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 403 tensor(3.6872e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.35)	train_minacc   0.76 (  0.80)	train_majacc   0.34 (  0.27)	train_corr   0.00 (  0.00)	l1 6.9489 (6.9493)	zero_count 0.0000 (6.9420)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.22it/s] 31%|###       | 8/26 [00:00<00:00, 37.47it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.47it/s] 50%|#####     | 13/26 [00:00<00:00, 40.79it/s] 69%|######9   | 18/26 [00:00<00:00, 42.85it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.85it/s] 88%|########8 | 23/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 38.35it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.34 (  0.34)	test_minacc   0.74 (  0.74)	test_majacc   0.27 (  0.27)	Loss_d 0.656 (0.656)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.656 (0.656)	test_acc   0.36 (  0.37)	test_minacc   0.84 (  0.78)	test_majacc   0.28 (  0.29)	Loss_d 0.656 (0.656)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.28 (  0.29)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.662 (0.656)	test_acc   0.34 (  0.36)	test_minacc   0.72 (  0.78)	test_majacc   0.29 (  0.28)	Loss_d 0.662 (0.656)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.29 (  0.28)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.658 (0.657)	test_acc   0.41 (  0.36)	test_minacc   0.76 (  0.79)	test_majacc   0.35 (  0.28)	Loss_d 0.658 (0.657)	test_acc_d   0.41 (  0.36)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.35 (  0.28)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.95it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.62 (  0.62)	test_minacc   0.65 (  0.65)	test_majacc   0.41 (  0.41)	Loss_d 0.837 (0.837)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.62 (  0.62)	test_minacc   0.65 (  0.65)	test_majacc   0.41 (  0.41)	Loss_d 0.837 (0.837)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.15 (  0.15)
Overall Timing[ 37/  1]	epoch_time 0.0444 (0.0449)	validation_time 0.0004 (0.0006)	train_time 0.0440 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.3583000088632107, 0.625)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.77it/s] 15%|#5        | 4/26 [00:00<00:01, 14.93it/s] 31%|###       | 8/26 [00:00<00:00, 20.60it/s] 46%|####6     | 12/26 [00:00<00:00, 25.39it/s] 62%|######1   | 16/26 [00:00<00:00, 28.21it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.09it/s] 92%|#########2| 24/26 [00:00<00:00, 31.56it/s]100%|##########| 26/26 [00:01<00:00, 25.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 455 tensor(4.6847e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 411 tensor(3.4142e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.41 (  0.35)	train_minacc   0.76 (  0.80)	train_majacc   0.35 (  0.27)	train_corr   0.00 (  0.00)	l1 6.9489 (6.9493)	zero_count 0.0000 (6.0840)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.08it/s] 27%|##6       | 7/26 [00:00<00:00, 35.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.18it/s] 46%|####6     | 12/26 [00:00<00:00, 40.37it/s] 65%|######5   | 17/26 [00:00<00:00, 42.53it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.53it/s] 85%|########4 | 22/26 [00:00<00:00, 39.42it/s]100%|##########| 26/26 [00:00<00:00, 37.42it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.34 (  0.34)	test_minacc   0.75 (  0.75)	test_majacc   0.27 (  0.27)	Loss_d 0.656 (0.656)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.656 (0.656)	test_acc   0.35 (  0.36)	test_minacc   0.84 (  0.78)	test_majacc   0.28 (  0.29)	Loss_d 0.656 (0.656)	test_acc_d   0.35 (  0.36)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.28 (  0.29)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.34 (  0.36)	test_minacc   0.70 (  0.78)	test_majacc   0.29 (  0.28)	Loss_d 0.661 (0.656)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.70 (  0.78)	test_majacc_d   0.29 (  0.28)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.658 (0.657)	test_acc   0.41 (  0.36)	test_minacc   0.76 (  0.79)	test_majacc   0.35 (  0.28)	Loss_d 0.658 (0.657)	test_acc_d   0.41 (  0.36)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.35 (  0.28)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.91it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.41 (  0.41)	Loss_d 0.837 (0.837)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.41 (  0.41)	Loss_d 0.837 (0.837)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.15 (  0.15)
Overall Timing[ 38/  1]	epoch_time 0.0436 (0.0449)	validation_time 0.0003 (0.0006)	train_time 0.0432 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.35650000897049905, 0.628000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.69it/s] 12%|#1        | 3/26 [00:00<00:02, 10.58it/s] 27%|##6       | 7/26 [00:00<00:01, 18.16it/s] 42%|####2     | 11/26 [00:00<00:00, 23.04it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.19it/s] 69%|######9   | 18/26 [00:00<00:00, 27.37it/s] 85%|########4 | 22/26 [00:00<00:00, 29.73it/s]100%|##########| 26/26 [00:01<00:00, 31.51it/s]100%|##########| 26/26 [00:01<00:00, 23.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 459 tensor(1.1403e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 416 tensor(3.1572e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 431 tensor(2.5939e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.35)	train_minacc   0.76 (  0.80)	train_majacc   0.34 (  0.27)	train_corr   0.00 (  0.00)	l1 6.9490 (6.9494)	zero_count 0.0000 (8.8530)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.35it/s] 19%|#9        | 5/26 [00:00<00:00, 24.31it/s] 38%|###8      | 10/26 [00:00<00:00, 32.83it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.83it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.88it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.96it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.96it/s] 96%|#########6| 25/26 [00:00<00:00, 40.16it/s]100%|##########| 26/26 [00:00<00:00, 33.34it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.34 (  0.34)	test_minacc   0.75 (  0.75)	test_majacc   0.27 (  0.27)	Loss_d 0.656 (0.656)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.656 (0.656)	test_acc   0.35 (  0.36)	test_minacc   0.84 (  0.78)	test_majacc   0.28 (  0.29)	Loss_d 0.656 (0.656)	test_acc_d   0.35 (  0.36)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.28 (  0.29)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.34 (  0.35)	test_minacc   0.70 (  0.78)	test_majacc   0.29 (  0.28)	Loss_d 0.661 (0.656)	test_acc_d   0.34 (  0.35)	test_minacc_d   0.70 (  0.78)	test_majacc_d   0.29 (  0.28)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.658 (0.657)	test_acc   0.40 (  0.35)	test_minacc   0.76 (  0.79)	test_majacc   0.34 (  0.28)	Loss_d 0.658 (0.657)	test_acc_d   0.40 (  0.35)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.34 (  0.28)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.10it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.63 (  0.63)	test_minacc   0.66 (  0.66)	test_majacc   0.40 (  0.40)	Loss_d 0.837 (0.837)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.63 (  0.63)	test_minacc   0.66 (  0.66)	test_majacc   0.40 (  0.40)	Loss_d 0.837 (0.837)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.15 (  0.15)
Overall Timing[ 39/  1]	epoch_time 0.0445 (0.0449)	validation_time 0.0004 (0.0006)	train_time 0.0441 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.35490000864863397, 0.6310000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 19%|#9        | 5/26 [00:00<00:01, 20.94it/s] 31%|###       | 8/26 [00:00<00:00, 23.44it/s] 42%|####2     | 11/26 [00:00<00:00, 24.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.91it/s] 88%|########8 | 23/26 [00:00<00:00, 32.34it/s]100%|##########| 26/26 [00:00<00:00, 26.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 470 tensor(-2.3488e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 419 tensor(3.0938e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 410 tensor(1.4061e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.35)	train_minacc   0.76 (  0.80)	train_majacc   0.34 (  0.27)	train_corr   0.00 (  0.00)	l1 6.9487 (6.9493)	zero_count 0.0000 (9.1260)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.40it/s] 27%|##6       | 7/26 [00:00<00:00, 33.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.92it/s] 46%|####6     | 12/26 [00:00<00:00, 39.09it/s] 65%|######5   | 17/26 [00:00<00:00, 41.04it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.04it/s] 85%|########4 | 22/26 [00:00<00:00, 39.55it/s]100%|##########| 26/26 [00:00<00:00, 36.62it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.33 (  0.33)	test_minacc   0.75 (  0.75)	test_majacc   0.26 (  0.26)	Loss_d 0.656 (0.656)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.656 (0.656)	test_acc   0.35 (  0.36)	test_minacc   0.84 (  0.78)	test_majacc   0.28 (  0.29)	Loss_d 0.656 (0.656)	test_acc_d   0.35 (  0.36)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.28 (  0.29)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.33 (  0.35)	test_minacc   0.70 (  0.78)	test_majacc   0.28 (  0.27)	Loss_d 0.661 (0.656)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.70 (  0.78)	test_majacc_d   0.28 (  0.27)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.658 (0.657)	test_acc   0.40 (  0.35)	test_minacc   0.76 (  0.79)	test_majacc   0.34 (  0.28)	Loss_d 0.658 (0.657)	test_acc_d   0.40 (  0.35)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.34 (  0.28)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.54it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.63 (  0.63)	test_minacc   0.66 (  0.66)	test_majacc   0.40 (  0.40)	Loss_d 0.837 (0.837)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.63 (  0.63)	test_minacc   0.66 (  0.66)	test_majacc   0.40 (  0.40)	Loss_d 0.837 (0.837)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.15 (  0.15)
Overall Timing[ 40/  1]	epoch_time 0.0438 (0.0449)	validation_time 0.0004 (0.0006)	train_time 0.0434 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.3529000087678432, 0.6340000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.65it/s] 23%|##3       | 6/26 [00:00<00:00, 24.44it/s] 38%|###8      | 10/26 [00:00<00:00, 26.94it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.46it/s] 69%|######9   | 18/26 [00:00<00:00, 30.92it/s] 85%|########4 | 22/26 [00:00<00:00, 32.19it/s]100%|##########| 26/26 [00:00<00:00, 33.50it/s]100%|##########| 26/26 [00:00<00:00, 28.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 442 tensor(1.1614e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 413 tensor(2.1711e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.35)	train_minacc   0.76 (  0.80)	train_majacc   0.34 (  0.27)	train_corr   0.00 (  0.00)	l1 6.9487 (6.9492)	zero_count 0.0000 (6.5130)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.79it/s] 19%|#9        | 5/26 [00:00<00:01, 20.73it/s] 38%|###8      | 10/26 [00:00<00:00, 31.85it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.85it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.31it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.31it/s] 92%|#########2| 24/26 [00:00<00:00, 39.16it/s]100%|##########| 26/26 [00:00<00:00, 31.62it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.33 (  0.33)	test_minacc   0.75 (  0.75)	test_majacc   0.26 (  0.26)	Loss_d 0.656 (0.656)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.656 (0.656)	test_acc   0.35 (  0.36)	test_minacc   0.84 (  0.79)	test_majacc   0.28 (  0.28)	Loss_d 0.656 (0.656)	test_acc_d   0.35 (  0.36)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.33 (  0.35)	test_minacc   0.70 (  0.79)	test_majacc   0.28 (  0.27)	Loss_d 0.661 (0.656)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.70 (  0.79)	test_majacc_d   0.28 (  0.27)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.659 (0.657)	test_acc   0.40 (  0.35)	test_minacc   0.76 (  0.79)	test_majacc   0.34 (  0.27)	Loss_d 0.659 (0.657)	test_acc_d   0.40 (  0.35)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.34 (  0.27)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.64it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.40 (  0.40)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.40 (  0.40)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.15 (  0.15)
Overall Timing[ 41/  1]	epoch_time 0.0450 (0.0449)	validation_time 0.0005 (0.0006)	train_time 0.0445 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.350800008893013, 0.6360000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.98it/s] 19%|#9        | 5/26 [00:00<00:01, 20.06it/s] 35%|###4      | 9/26 [00:00<00:00, 24.02it/s] 50%|#####     | 13/26 [00:00<00:00, 28.07it/s] 65%|######5   | 17/26 [00:00<00:00, 30.79it/s] 81%|########  | 21/26 [00:00<00:00, 32.39it/s] 96%|#########6| 25/26 [00:00<00:00, 33.21it/s]100%|##########| 26/26 [00:00<00:00, 27.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 455 tensor(1.8300e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 413 tensor(2.6307e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.35)	train_minacc   0.76 (  0.80)	train_majacc   0.34 (  0.27)	train_corr   0.00 (  0.00)	l1 6.9486 (6.9491)	zero_count 0.0000 (6.0060)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.23it/s] 35%|###4      | 9/26 [00:00<00:00, 42.45it/s]                                               35%|###4      | 9/26 [00:00<00:00, 42.45it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.99it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.99it/s] 92%|#########2| 24/26 [00:00<00:00, 43.20it/s]100%|##########| 26/26 [00:00<00:00, 39.20it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.33 (  0.33)	test_minacc   0.77 (  0.77)	test_majacc   0.26 (  0.26)	Loss_d 0.656 (0.656)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.656 (0.656)	test_acc   0.35 (  0.36)	test_minacc   0.84 (  0.79)	test_majacc   0.28 (  0.28)	Loss_d 0.656 (0.656)	test_acc_d   0.35 (  0.36)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.33 (  0.35)	test_minacc   0.70 (  0.79)	test_majacc   0.28 (  0.27)	Loss_d 0.661 (0.656)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.70 (  0.79)	test_majacc_d   0.28 (  0.27)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.659 (0.657)	test_acc   0.40 (  0.35)	test_minacc   0.76 (  0.79)	test_majacc   0.34 (  0.27)	Loss_d 0.659 (0.657)	test_acc_d   0.40 (  0.35)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.34 (  0.27)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.31it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.39 (  0.39)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.39 (  0.39)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.15 (  0.15)
Overall Timing[ 42/  1]	epoch_time 0.0400 (0.0448)	validation_time 0.0004 (0.0006)	train_time 0.0396 (0.0441)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.3503000089228153, 0.6370000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.16it/s] 15%|#5        | 4/26 [00:00<00:01, 17.34it/s] 31%|###       | 8/26 [00:00<00:00, 22.38it/s] 46%|####6     | 12/26 [00:00<00:00, 27.06it/s] 62%|######1   | 16/26 [00:00<00:00, 30.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.03it/s] 92%|#########2| 24/26 [00:00<00:00, 33.49it/s]100%|##########| 26/26 [00:00<00:00, 27.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 465 tensor(-4.1749e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 423 tensor(2.4697e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.35)	train_minacc   0.76 (  0.80)	train_majacc   0.34 (  0.27)	train_corr   0.00 (  0.00)	l1 6.9487 (6.9491)	zero_count 0.0000 (5.2260)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.83it/s] 23%|##3       | 6/26 [00:00<00:00, 27.12it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.12it/s] 42%|####2     | 11/26 [00:00<00:00, 34.17it/s] 62%|######1   | 16/26 [00:00<00:00, 37.83it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.83it/s] 81%|########  | 21/26 [00:00<00:00, 38.18it/s]100%|##########| 26/26 [00:00<00:00, 41.34it/s]100%|##########| 26/26 [00:00<00:00, 32.81it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.33 (  0.33)	test_minacc   0.77 (  0.77)	test_majacc   0.26 (  0.26)	Loss_d 0.656 (0.656)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.655 (0.656)	test_acc   0.35 (  0.36)	test_minacc   0.84 (  0.79)	test_majacc   0.27 (  0.28)	Loss_d 0.655 (0.656)	test_acc_d   0.35 (  0.36)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.27 (  0.28)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.33 (  0.35)	test_minacc   0.70 (  0.79)	test_majacc   0.28 (  0.27)	Loss_d 0.661 (0.656)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.70 (  0.79)	test_majacc_d   0.28 (  0.27)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.659 (0.657)	test_acc   0.40 (  0.35)	test_minacc   0.76 (  0.79)	test_majacc   0.34 (  0.27)	Loss_d 0.659 (0.657)	test_acc_d   0.40 (  0.35)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.34 (  0.27)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.39 (  0.39)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.39 (  0.39)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.15 (  0.15)
Overall Timing[ 43/  1]	epoch_time 0.0408 (0.0447)	validation_time 0.0004 (0.0006)	train_time 0.0404 (0.0440)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.3506000089049339, 0.6370000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.44it/s] 19%|#9        | 5/26 [00:00<00:01, 20.04it/s] 31%|###       | 8/26 [00:00<00:00, 21.91it/s] 46%|####6     | 12/26 [00:00<00:00, 23.36it/s] 62%|######1   | 16/26 [00:00<00:00, 26.64it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.65it/s] 92%|#########2| 24/26 [00:00<00:00, 30.70it/s]100%|##########| 26/26 [00:01<00:00, 25.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 432 tensor(1.3325e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 454 tensor(-4.9256e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.35)	train_minacc   0.76 (  0.80)	train_majacc   0.34 (  0.27)	train_corr   0.00 (  0.00)	l1 6.9490 (6.9493)	zero_count 0.0000 (5.3040)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.30it/s] 23%|##3       | 6/26 [00:00<00:00, 32.04it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.04it/s] 42%|####2     | 11/26 [00:00<00:00, 37.40it/s] 62%|######1   | 16/26 [00:00<00:00, 38.61it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.61it/s] 81%|########  | 21/26 [00:00<00:00, 40.33it/s]100%|##########| 26/26 [00:00<00:00, 43.08it/s]100%|##########| 26/26 [00:00<00:00, 35.16it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.33 (  0.33)	test_minacc   0.79 (  0.79)	test_majacc   0.25 (  0.25)	Loss_d 0.656 (0.656)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.25 (  0.25)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.655 (0.656)	test_acc   0.34 (  0.36)	test_minacc   0.84 (  0.79)	test_majacc   0.27 (  0.28)	Loss_d 0.655 (0.656)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.27 (  0.28)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.33 (  0.35)	test_minacc   0.68 (  0.79)	test_majacc   0.28 (  0.27)	Loss_d 0.661 (0.656)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.68 (  0.79)	test_majacc_d   0.28 (  0.27)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.659 (0.657)	test_acc   0.40 (  0.35)	test_minacc   0.76 (  0.79)	test_majacc   0.33 (  0.27)	Loss_d 0.659 (0.657)	test_acc_d   0.40 (  0.35)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.33 (  0.27)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.92it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.39 (  0.39)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.39 (  0.39)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.15 (  0.15)
Overall Timing[ 44/  1]	epoch_time 0.0416 (0.0446)	validation_time 0.0004 (0.0006)	train_time 0.0411 (0.0439)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.34930000951886175, 0.6390000581741333)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.28it/s] 19%|#9        | 5/26 [00:00<00:00, 23.93it/s] 31%|###       | 8/26 [00:00<00:00, 24.26it/s] 42%|####2     | 11/26 [00:00<00:00, 24.54it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.54it/s] 88%|########8 | 23/26 [00:00<00:00, 32.12it/s]100%|##########| 26/26 [00:00<00:00, 27.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 470 tensor(-5.5277e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 436 tensor(2.3089e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 428 tensor(7.7361e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.35)	train_minacc   0.76 (  0.80)	train_majacc   0.33 (  0.26)	train_corr   0.00 (  0.00)	l1 6.9486 (6.9492)	zero_count 0.0000 (7.7610)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 33.64it/s] 35%|###4      | 9/26 [00:00<00:00, 40.93it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 46.21it/s] 77%|#######6  | 20/26 [00:00<00:00, 45.72it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 45.72it/s] 96%|#########6| 25/26 [00:00<00:00, 41.10it/s]100%|##########| 26/26 [00:00<00:00, 38.46it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.33 (  0.33)	test_minacc   0.79 (  0.79)	test_majacc   0.25 (  0.25)	Loss_d 0.656 (0.656)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.25 (  0.25)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.655 (0.656)	test_acc   0.34 (  0.36)	test_minacc   0.84 (  0.79)	test_majacc   0.27 (  0.28)	Loss_d 0.655 (0.656)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.27 (  0.28)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.33 (  0.35)	test_minacc   0.68 (  0.79)	test_majacc   0.28 (  0.27)	Loss_d 0.661 (0.656)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.68 (  0.79)	test_majacc_d   0.28 (  0.27)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.659 (0.657)	test_acc   0.40 (  0.35)	test_minacc   0.76 (  0.80)	test_majacc   0.33 (  0.27)	Loss_d 0.659 (0.657)	test_acc_d   0.40 (  0.35)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.33 (  0.27)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.57it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.38 (  0.38)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.38 (  0.38)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.14 (  0.14)
Overall Timing[ 45/  1]	epoch_time 0.0413 (0.0445)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0439)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.34930000951886175, 0.6370000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.18it/s] 19%|#9        | 5/26 [00:00<00:01, 16.17it/s] 35%|###4      | 9/26 [00:00<00:00, 22.66it/s] 46%|####6     | 12/26 [00:00<00:00, 24.13it/s] 62%|######1   | 16/26 [00:00<00:00, 27.57it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.93it/s] 92%|#########2| 24/26 [00:00<00:00, 31.17it/s]100%|##########| 26/26 [00:01<00:00, 24.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 455 tensor(3.5345e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 429 tensor(1.4305e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.34)	train_minacc   0.76 (  0.80)	train_majacc   0.33 (  0.26)	train_corr   0.00 (  0.00)	l1 6.9486 (6.9491)	zero_count 0.0000 (5.3820)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.11it/s] 23%|##3       | 6/26 [00:00<00:01, 17.08it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.08it/s] 42%|####2     | 11/26 [00:00<00:00, 25.58it/s] 62%|######1   | 16/26 [00:00<00:00, 32.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.08it/s] 81%|########  | 21/26 [00:00<00:00, 33.31it/s]100%|##########| 26/26 [00:00<00:00, 37.26it/s]100%|##########| 26/26 [00:00<00:00, 26.82it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.33 (  0.33)	test_minacc   0.79 (  0.79)	test_majacc   0.25 (  0.25)	Loss_d 0.656 (0.656)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.25 (  0.25)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.655 (0.656)	test_acc   0.34 (  0.36)	test_minacc   0.84 (  0.79)	test_majacc   0.27 (  0.28)	Loss_d 0.655 (0.656)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.27 (  0.28)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.33 (  0.35)	test_minacc   0.68 (  0.79)	test_majacc   0.28 (  0.27)	Loss_d 0.661 (0.656)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.68 (  0.79)	test_majacc_d   0.28 (  0.27)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.659 (0.657)	test_acc   0.39 (  0.35)	test_minacc   0.76 (  0.80)	test_majacc   0.33 (  0.27)	Loss_d 0.659 (0.657)	test_acc_d   0.39 (  0.35)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.33 (  0.27)	test_corr_d   0.24 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.70it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.37 (  0.37)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.37 (  0.37)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.14 (  0.14)
Overall Timing[ 46/  1]	epoch_time 0.0448 (0.0445)	validation_time 0.0007 (0.0006)	train_time 0.0441 (0.0439)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.34800000938773157, 0.6360000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.68it/s] 15%|#5        | 4/26 [00:00<00:01, 17.62it/s] 31%|###       | 8/26 [00:00<00:00, 25.05it/s] 42%|####2     | 11/26 [00:00<00:00, 24.89it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.28it/s] 88%|########8 | 23/26 [00:00<00:00, 30.52it/s]100%|##########| 26/26 [00:01<00:00, 25.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 466 tensor(-3.4104e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 432 tensor(1.7807e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.34)	train_minacc   0.76 (  0.80)	train_majacc   0.33 (  0.26)	train_corr   0.00 (  0.00)	l1 6.9486 (6.9490)	zero_count 0.0000 (4.8360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:04,  5.13it/s] 27%|##6       | 7/26 [00:00<00:01, 15.97it/s]                                               27%|##6       | 7/26 [00:00<00:01, 15.97it/s] 46%|####6     | 12/26 [00:00<00:00, 24.73it/s] 65%|######5   | 17/26 [00:00<00:00, 31.22it/s]                                                65%|######5   | 17/26 [00:00<00:00, 31.22it/s] 85%|########4 | 22/26 [00:00<00:00, 34.77it/s]100%|##########| 26/26 [00:00<00:00, 26.37it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.33 (  0.33)	test_minacc   0.79 (  0.79)	test_majacc   0.25 (  0.25)	Loss_d 0.656 (0.656)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.25 (  0.25)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.655 (0.656)	test_acc   0.34 (  0.35)	test_minacc   0.84 (  0.79)	test_majacc   0.26 (  0.28)	Loss_d 0.655 (0.656)	test_acc_d   0.34 (  0.35)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.33 (  0.35)	test_minacc   0.68 (  0.79)	test_majacc   0.28 (  0.27)	Loss_d 0.661 (0.656)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.68 (  0.79)	test_majacc_d   0.28 (  0.27)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.659 (0.657)	test_acc   0.39 (  0.35)	test_minacc   0.76 (  0.79)	test_majacc   0.33 (  0.27)	Loss_d 0.659 (0.657)	test_acc_d   0.39 (  0.35)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.33 (  0.27)	test_corr_d   0.23 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.55it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.36 (  0.36)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.36 (  0.36)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.14 (  0.14)
Overall Timing[ 47/  1]	epoch_time 0.0555 (0.0448)	validation_time 0.0005 (0.0006)	train_time 0.0550 (0.0441)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.34710000944137576, 0.6350000500679016)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.16it/s] 12%|#1        | 3/26 [00:00<00:02,  9.72it/s] 27%|##6       | 7/26 [00:00<00:00, 19.22it/s] 38%|###8      | 10/26 [00:00<00:00, 21.81it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.47it/s] 69%|######9   | 18/26 [00:00<00:00, 29.27it/s] 85%|########4 | 22/26 [00:00<00:00, 31.04it/s]100%|##########| 26/26 [00:01<00:00, 32.18it/s]100%|##########| 26/26 [00:01<00:00, 24.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 442 tensor(9.0524e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.40 (  0.34)	train_minacc   0.76 (  0.80)	train_majacc   0.33 (  0.26)	train_corr   0.00 (  0.00)	l1 6.9487 (6.9491)	zero_count 0.0000 (2.6910)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.90it/s] 27%|##6       | 7/26 [00:00<00:00, 33.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.39it/s] 46%|####6     | 12/26 [00:00<00:00, 38.69it/s] 65%|######5   | 17/26 [00:00<00:00, 42.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.14it/s] 85%|########4 | 22/26 [00:00<00:00, 40.48it/s]100%|##########| 26/26 [00:00<00:00, 36.85it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.33 (  0.33)	test_minacc   0.79 (  0.79)	test_majacc   0.25 (  0.25)	Loss_d 0.656 (0.656)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.25 (  0.25)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.655 (0.656)	test_acc   0.34 (  0.35)	test_minacc   0.84 (  0.79)	test_majacc   0.26 (  0.28)	Loss_d 0.655 (0.656)	test_acc_d   0.34 (  0.35)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.33 (  0.35)	test_minacc   0.68 (  0.78)	test_majacc   0.27 (  0.27)	Loss_d 0.661 (0.656)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.68 (  0.78)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.659 (0.657)	test_acc   0.39 (  0.35)	test_minacc   0.76 (  0.79)	test_majacc   0.33 (  0.27)	Loss_d 0.659 (0.657)	test_acc_d   0.39 (  0.35)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.33 (  0.27)	test_corr_d   0.23 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.67it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.36 (  0.36)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.36 (  0.36)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.14 (  0.14)
Overall Timing[ 48/  1]	epoch_time 0.0511 (0.0449)	validation_time 0.0004 (0.0006)	train_time 0.0507 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.34640000948309896, 0.6360000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.32it/s] 23%|##3       | 6/26 [00:00<00:00, 25.70it/s] 35%|###4      | 9/26 [00:00<00:00, 25.29it/s] 50%|#####     | 13/26 [00:00<00:00, 28.88it/s] 65%|######5   | 17/26 [00:00<00:00, 30.86it/s] 81%|########  | 21/26 [00:00<00:00, 32.53it/s] 96%|#########6| 25/26 [00:00<00:00, 33.18it/s]100%|##########| 26/26 [00:00<00:00, 28.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 443 tensor(5.4557e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  31.84 ( 31.84)	train_acc   0.39 (  0.34)	train_minacc   0.76 (  0.80)	train_majacc   0.33 (  0.26)	train_corr   0.00 (  0.00)	l1 6.9488 (6.9492)	zero_count 0.0000 (2.6520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.02it/s] 23%|##3       | 6/26 [00:00<00:00, 23.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.10it/s] 42%|####2     | 11/26 [00:00<00:00, 30.36it/s] 62%|######1   | 16/26 [00:00<00:00, 35.72it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.72it/s] 81%|########  | 21/26 [00:00<00:00, 36.07it/s]100%|##########| 26/26 [00:00<00:00, 39.58it/s]100%|##########| 26/26 [00:00<00:00, 30.99it/s]
Test: [   0/  26]	Loss 0.656 (0.656)	test_acc   0.33 (  0.33)	test_minacc   0.79 (  0.79)	test_majacc   0.25 (  0.25)	Loss_d 0.656 (0.656)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.25 (  0.25)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.655 (0.656)	test_acc   0.34 (  0.35)	test_minacc   0.84 (  0.78)	test_majacc   0.27 (  0.28)	Loss_d 0.655 (0.656)	test_acc_d   0.34 (  0.35)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.27 (  0.28)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.656)	test_acc   0.33 (  0.34)	test_minacc   0.68 (  0.78)	test_majacc   0.27 (  0.27)	Loss_d 0.661 (0.656)	test_acc_d   0.33 (  0.34)	test_minacc_d   0.68 (  0.78)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.660 (0.657)	test_acc   0.38 (  0.35)	test_minacc   0.76 (  0.79)	test_majacc   0.32 (  0.27)	Loss_d 0.660 (0.657)	test_acc_d   0.38 (  0.35)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.32 (  0.27)	test_corr_d   0.23 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.51it/s]
Test: [  0/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.36 (  0.36)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.837 (0.837)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.36 (  0.36)	Loss_d 0.837 (0.837)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.14 (  0.14)
Overall Timing[ 49/  1]	epoch_time 0.0443 (0.0449)	validation_time 0.0007 (0.0006)	train_time 0.0436 (0.0442)
record: (train_acc, test_acc) (0.7069000309705734, 0.7120000123977661)
last accs (train_acc, test_acc) (0.34570000910758975, 0.6380000114440918)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.159 MB of 0.159 MB uploadedwandb: \ 0.159 MB of 0.159 MB uploadedwandb: | 0.159 MB of 0.159 MB uploadedThread SenderThread:
Traceback (most recent call last):
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 48, in run
    self._run()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal_util.py", line 99, in _run
    self._process(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/internal.py", line 327, in _process
    self._sm.send(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 398, in send
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 420, in send_request
    send_handler(record)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 654, in send_request_defer
    self._flush_job()
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/sender.py", line 1706, in _flush_job
    artifact = self._job_builder.build(api=self._api)
  File "/home/zd16/scratch/mypython3/wandb/sdk/internal/job_builder.py", line 552, in build
    artifact.add_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1196, in add_file
    return self._add_local_file(
  File "/home/zd16/scratch/mypython3/wandb/sdk/artifacts/artifact.py", line 1459, in _add_local_file
    with tempfile.NamedTemporaryFile(dir=get_staging_dir(), delete=False) as f:
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 545, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)
  File "/usr/local/python/3.9.16/lib/python3.9/tempfile.py", line 255, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)
OSError: [Errno 122] Disk quota exceeded: '/home/zd16/.local/share/wandb/artifacts/staging/tmp7mkcejcv'
wandb: ERROR Internal wandb error: file data was not synced
