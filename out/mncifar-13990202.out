hello
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_185923-xkiw1f3k
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/xkiw1f3k
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1215
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5941, 3, 32, 32) (6059, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:39,  1.60s/it] 23%|##3       | 6/26 [00:01<00:04,  4.60it/s] 42%|####2     | 11/26 [00:01<00:01,  9.13it/s] 58%|#####7    | 15/26 [00:01<00:00, 12.77it/s] 73%|#######3  | 19/26 [00:02<00:00, 16.77it/s] 88%|########8 | 23/26 [00:02<00:00, 20.23it/s]100%|##########| 26/26 [00:02<00:00,  9.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.435 (0.569)	train_nll   0.43 (  0.57)	train_penalty   0.04 (  0.31)	weight_norm  20.85 ( 18.13)	train_acc   0.84 (  0.80)	train_minacc   0.10 (  0.08)	train_majacc   0.98 (  0.93)	train_corr   0.00 (  0.00)	l1 7.7827 (9.0312)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 23%|##3       | 6/26 [00:00<00:00, 24.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.03it/s] 42%|####2     | 11/26 [00:00<00:00, 32.68it/s] 62%|######1   | 16/26 [00:00<00:00, 37.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.90it/s] 81%|########  | 21/26 [00:00<00:00, 40.33it/s]100%|##########| 26/26 [00:00<00:00, 42.67it/s]100%|##########| 26/26 [00:00<00:00, 34.35it/s]
Test: [   0/  26]	Loss 0.375 (0.375)	test_acc   0.87 (  0.87)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.375 (0.375)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.400 (0.404)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.400 (0.404)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.396 (0.404)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.396 (0.404)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.423 (0.405)	test_acc   0.85 (  0.85)	test_minacc   0.08 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.423 (0.405)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.08 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]
Test: [  0/  1]	Loss 1.681 (1.681)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.681 (1.681)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.681 (1.681)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.681 (1.681)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0752 (0.0752)	validation_time 0.0068 (0.0068)	train_time 0.0665 (0.0665)
record: (train_acc, test_acc) (0.8470000264048576, 0.11700000613927841)
last accs (train_acc, test_acc) (0.8470000264048576, 0.11700000613927841)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 19%|#9        | 5/26 [00:00<00:01, 20.48it/s] 35%|###4      | 9/26 [00:00<00:00, 26.47it/s] 50%|#####     | 13/26 [00:00<00:00, 29.89it/s] 65%|######5   | 17/26 [00:00<00:00, 31.30it/s] 81%|########  | 21/26 [00:00<00:00, 32.73it/s] 96%|#########6| 25/26 [00:00<00:00, 33.61it/s]100%|##########| 26/26 [00:00<00:00, 28.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.419 (0.401)	train_nll   0.42 (  0.40)	train_penalty   0.03 (  0.05)	weight_norm  21.94 ( 21.60)	train_acc   0.83 (  0.85)	train_minacc   0.05 (  0.03)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 7.4524 (7.5840)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.35it/s] 27%|##6       | 7/26 [00:00<00:00, 31.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.82it/s] 46%|####6     | 12/26 [00:00<00:00, 35.33it/s] 65%|######5   | 17/26 [00:00<00:00, 39.72it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.72it/s] 85%|########4 | 22/26 [00:00<00:00, 42.01it/s]100%|##########| 26/26 [00:00<00:00, 37.14it/s]
Test: [   0/  26]	Loss 0.376 (0.376)	test_acc   0.86 (  0.86)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.376 (0.376)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.384 (0.394)	test_acc   0.85 (  0.85)	test_minacc   0.04 (  0.03)	test_majacc   0.98 (  0.99)	Loss_d 0.384 (0.394)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.04 (  0.03)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.95)
Test: [  20/  26]	Loss 0.374 (0.390)	test_acc   0.86 (  0.85)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  0.99)	Loss_d 0.374 (0.390)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.413 (0.390)	test_acc   0.84 (  0.85)	test_minacc   0.05 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.413 (0.390)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.05 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.67it/s]
Test: [  0/  1]	Loss 1.717 (1.717)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.717 (1.717)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.717 (1.717)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.717 (1.717)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Overall Timing[  1/  1]	epoch_time 0.0395 (0.0573)	validation_time 0.0006 (0.0037)	train_time 0.0389 (0.0527)
record: (train_acc, test_acc) (0.8470000264048576, 0.11700000613927841)
last accs (train_acc, test_acc) (0.8476000269055366, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.63it/s] 23%|##3       | 6/26 [00:00<00:00, 25.22it/s] 38%|###8      | 10/26 [00:00<00:00, 29.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.28it/s] 69%|######9   | 18/26 [00:00<00:00, 31.66it/s] 85%|########4 | 22/26 [00:00<00:00, 32.35it/s]100%|##########| 26/26 [00:00<00:00, 33.09it/s]100%|##########| 26/26 [00:00<00:00, 29.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.379 (0.384)	train_nll   0.38 (  0.38)	train_penalty   0.02 (  0.04)	weight_norm  22.08 ( 22.03)	train_acc   0.84 (  0.85)	train_minacc   0.17 (  0.06)	train_majacc   0.97 (  0.99)	train_corr   0.00 (  0.00)	l1 7.5357 (7.5388)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.79it/s] 23%|##3       | 6/26 [00:00<00:00, 27.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.32it/s] 42%|####2     | 11/26 [00:00<00:00, 35.93it/s] 62%|######1   | 16/26 [00:00<00:00, 39.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.95it/s] 81%|########  | 21/26 [00:00<00:00, 37.52it/s]100%|##########| 26/26 [00:00<00:00, 40.84it/s]100%|##########| 26/26 [00:00<00:00, 34.01it/s]
Test: [   0/  26]	Loss 0.341 (0.341)	test_acc   0.87 (  0.87)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.341 (0.341)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.346 (0.363)	test_acc   0.87 (  0.85)	test_minacc   0.10 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.346 (0.363)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.10 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.335 (0.361)	test_acc   0.86 (  0.85)	test_minacc   0.05 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.335 (0.361)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.05 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.360 (0.361)	test_acc   0.86 (  0.85)	test_minacc   0.17 (  0.08)	test_majacc   1.00 (  0.99)	Loss_d 0.360 (0.361)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.17 (  0.08)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.88it/s]
Test: [  0/  1]	Loss 1.866 (1.866)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 1.866 (1.866)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.866 (1.866)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 1.866 (1.866)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0421 (0.0523)	validation_time 0.0004 (0.0026)	train_time 0.0417 (0.0490)
record: (train_acc, test_acc) (0.8527000242471695, 0.125)
last accs (train_acc, test_acc) (0.8527000242471695, 0.125)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 12%|#1        | 3/26 [00:00<00:01, 13.97it/s] 27%|##6       | 7/26 [00:00<00:00, 23.15it/s] 42%|####2     | 11/26 [00:00<00:00, 28.12it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.48it/s] 88%|########8 | 23/26 [00:00<00:00, 35.13it/s]100%|##########| 26/26 [00:00<00:00, 28.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.340 (0.367)	train_nll   0.34 (  0.37)	train_penalty   0.01 (  0.04)	weight_norm  22.16 ( 22.12)	train_acc   0.86 (  0.85)	train_minacc   0.35 (  0.11)	train_majacc   0.96 (  0.99)	train_corr   0.00 (  0.00)	l1 7.5268 (7.5955)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.12it/s] 27%|##6       | 7/26 [00:00<00:00, 35.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.18it/s] 46%|####6     | 12/26 [00:00<00:00, 40.02it/s] 65%|######5   | 17/26 [00:00<00:00, 37.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.80it/s] 85%|########4 | 22/26 [00:00<00:00, 39.91it/s]100%|##########| 26/26 [00:00<00:00, 36.19it/s]
Test: [   0/  26]	Loss 0.329 (0.329)	test_acc   0.86 (  0.86)	test_minacc   0.20 (  0.20)	test_majacc   0.95 (  0.95)	Loss_d 0.329 (0.329)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.342 (0.344)	test_acc   0.86 (  0.86)	test_minacc   0.23 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 0.342 (0.344)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.23 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.322 (0.344)	test_acc   0.87 (  0.86)	test_minacc   0.36 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 0.322 (0.344)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.36 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.87)
Test: [  26/  26]	Loss 0.322 (0.342)	test_acc   0.87 (  0.86)	test_minacc   0.40 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 0.322 (0.342)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.40 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.04it/s]
Test: [  0/  1]	Loss 1.740 (1.740)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 1.740 (1.740)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 1.740 (1.740)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 1.740 (1.740)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0393 (0.0490)	validation_time 0.0004 (0.0020)	train_time 0.0388 (0.0465)
record: (train_acc, test_acc) (0.8598000240325928, 0.22700001299381256)
last accs (train_acc, test_acc) (0.8598000240325928, 0.22700001299381256)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.99it/s] 19%|#9        | 5/26 [00:00<00:00, 24.75it/s] 35%|###4      | 9/26 [00:00<00:00, 29.61it/s] 50%|#####     | 13/26 [00:00<00:00, 30.80it/s] 65%|######5   | 17/26 [00:00<00:00, 32.58it/s] 81%|########  | 21/26 [00:00<00:00, 33.85it/s] 96%|#########6| 25/26 [00:00<00:00, 34.31it/s]100%|##########| 26/26 [00:00<00:00, 30.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.333 (0.348)	train_nll   0.33 (  0.35)	train_penalty   0.01 (  0.03)	weight_norm  22.25 ( 22.21)	train_acc   0.85 (  0.85)	train_minacc   0.43 (  0.19)	train_majacc   0.93 (  0.97)	train_corr   0.00 (  0.00)	l1 7.4522 (7.5724)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.61it/s] 27%|##6       | 7/26 [00:00<00:00, 27.80it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.80it/s] 46%|####6     | 12/26 [00:00<00:00, 35.56it/s] 65%|######5   | 17/26 [00:00<00:00, 38.39it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.39it/s] 88%|########8 | 23/26 [00:00<00:00, 44.17it/s]100%|##########| 26/26 [00:00<00:00, 34.83it/s]
Test: [   0/  26]	Loss 0.307 (0.307)	test_acc   0.86 (  0.86)	test_minacc   0.26 (  0.26)	test_majacc   0.95 (  0.95)	Loss_d 0.307 (0.307)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.326 (0.334)	test_acc   0.85 (  0.86)	test_minacc   0.33 (  0.34)	test_majacc   0.93 (  0.95)	Loss_d 0.326 (0.334)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.33 (  0.34)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  20/  26]	Loss 0.319 (0.333)	test_acc   0.88 (  0.86)	test_minacc   0.41 (  0.36)	test_majacc   0.96 (  0.95)	Loss_d 0.319 (0.333)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.41 (  0.36)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  26/  26]	Loss 0.310 (0.331)	test_acc   0.87 (  0.86)	test_minacc   0.45 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 0.310 (0.331)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.45 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.39it/s]
Test: [  0/  1]	Loss 1.801 (1.801)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.99 (  0.99)	Loss_d 1.801 (1.801)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 1.801 (1.801)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.99 (  0.99)	Loss_d 1.801 (1.801)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0410 (0.0474)	validation_time 0.0004 (0.0017)	train_time 0.0406 (0.0453)
record: (train_acc, test_acc) (0.8642000237703323, 0.23900000751018524)
last accs (train_acc, test_acc) (0.8642000237703323, 0.23900000751018524)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s]  8%|7         | 2/26 [00:00<00:03,  7.75it/s] 23%|##3       | 6/26 [00:00<00:01, 18.42it/s] 38%|###8      | 10/26 [00:00<00:00, 24.20it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.10it/s] 69%|######9   | 18/26 [00:00<00:00, 30.41it/s] 85%|########4 | 22/26 [00:00<00:00, 32.25it/s]100%|##########| 26/26 [00:00<00:00, 33.68it/s]100%|##########| 26/26 [00:01<00:00, 25.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.297 (0.326)	train_nll   0.30 (  0.33)	train_penalty   0.01 (  0.02)	weight_norm  22.37 ( 22.31)	train_acc   0.87 (  0.86)	train_minacc   0.55 (  0.26)	train_majacc   0.93 (  0.97)	train_corr   0.00 (  0.00)	l1 7.3352 (7.5779)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.23it/s] 23%|##3       | 6/26 [00:00<00:00, 31.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.99it/s] 42%|####2     | 11/26 [00:00<00:00, 38.63it/s] 62%|######1   | 16/26 [00:00<00:00, 42.48it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.48it/s] 81%|########  | 21/26 [00:00<00:00, 41.43it/s]100%|##########| 26/26 [00:00<00:00, 37.80it/s]
Test: [   0/  26]	Loss 0.288 (0.288)	test_acc   0.87 (  0.87)	test_minacc   0.26 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 0.288 (0.288)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.305 (0.315)	test_acc   0.87 (  0.87)	test_minacc   0.27 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 0.305 (0.315)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.27 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  20/  26]	Loss 0.294 (0.311)	test_acc   0.88 (  0.87)	test_minacc   0.41 (  0.35)	test_majacc   0.96 (  0.96)	Loss_d 0.294 (0.311)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.41 (  0.35)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.274 (0.308)	test_acc   0.89 (  0.87)	test_minacc   0.45 (  0.35)	test_majacc   0.97 (  0.97)	Loss_d 0.274 (0.308)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.45 (  0.35)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.87it/s]
Test: [  0/  1]	Loss 1.861 (1.861)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.99 (  0.99)	Loss_d 1.861 (1.861)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 1.861 (1.861)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.99 (  0.99)	Loss_d 1.861 (1.861)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.76)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0398 (0.0462)	validation_time 0.0003 (0.0015)	train_time 0.0395 (0.0443)
record: (train_acc, test_acc) (0.8733000265955925, 0.25300002098083496)
last accs (train_acc, test_acc) (0.8733000265955925, 0.25300002098083496)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.29it/s] 19%|#9        | 5/26 [00:00<00:01, 14.43it/s] 35%|###4      | 9/26 [00:00<00:00, 21.28it/s] 50%|#####     | 13/26 [00:00<00:00, 25.44it/s] 65%|######5   | 17/26 [00:00<00:00, 28.36it/s] 81%|########  | 21/26 [00:00<00:00, 29.97it/s] 96%|#########6| 25/26 [00:00<00:00, 31.41it/s]100%|##########| 26/26 [00:01<00:00, 24.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.269 (0.314)	train_nll   0.27 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.50 ( 22.43)	train_acc   0.88 (  0.87)	train_minacc   0.57 (  0.34)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 7.2414 (7.4912)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.45it/s] 27%|##6       | 7/26 [00:00<00:00, 31.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.53it/s] 50%|#####     | 13/26 [00:00<00:00, 38.29it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.16it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.16it/s] 92%|#########2| 24/26 [00:00<00:00, 45.30it/s]100%|##########| 26/26 [00:00<00:00, 37.21it/s]
Test: [   0/  26]	Loss 0.278 (0.278)	test_acc   0.87 (  0.87)	test_minacc   0.34 (  0.34)	test_majacc   0.95 (  0.95)	Loss_d 0.278 (0.278)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.298 (0.300)	test_acc   0.87 (  0.87)	test_minacc   0.40 (  0.41)	test_majacc   0.95 (  0.95)	Loss_d 0.298 (0.300)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.40 (  0.41)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  20/  26]	Loss 0.294 (0.299)	test_acc   0.88 (  0.87)	test_minacc   0.45 (  0.42)	test_majacc   0.95 (  0.95)	Loss_d 0.294 (0.299)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.45 (  0.42)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  26/  26]	Loss 0.245 (0.296)	test_acc   0.90 (  0.87)	test_minacc   0.50 (  0.43)	test_majacc   0.97 (  0.95)	Loss_d 0.245 (0.296)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.50 (  0.43)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.86 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.50it/s]
Test: [  0/  1]	Loss 1.869 (1.869)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 1.869 (1.869)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.869 (1.869)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 1.869 (1.869)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0399 (0.0453)	validation_time 0.0004 (0.0013)	train_time 0.0394 (0.0436)
record: (train_acc, test_acc) (0.8732000243663788, 0.2800000011920929)
last accs (train_acc, test_acc) (0.8732000243663788, 0.2800000011920929)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.37it/s] 19%|#9        | 5/26 [00:00<00:01, 16.21it/s] 35%|###4      | 9/26 [00:00<00:00, 22.65it/s] 50%|#####     | 13/26 [00:00<00:00, 26.56it/s] 65%|######5   | 17/26 [00:00<00:00, 28.38it/s] 81%|########  | 21/26 [00:00<00:00, 30.27it/s] 96%|#########6| 25/26 [00:00<00:00, 31.83it/s]100%|##########| 26/26 [00:01<00:00, 25.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.280 (0.306)	train_nll   0.28 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.65 ( 22.58)	train_acc   0.90 (  0.87)	train_minacc   0.78 (  0.35)	train_majacc   0.92 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0214 (7.4129)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.64it/s] 19%|#9        | 5/26 [00:00<00:00, 25.68it/s] 38%|###8      | 10/26 [00:00<00:00, 35.49it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.56it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.70it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.70it/s] 92%|#########2| 24/26 [00:00<00:00, 38.09it/s]100%|##########| 26/26 [00:00<00:00, 34.47it/s]
Test: [   0/  26]	Loss 0.260 (0.260)	test_acc   0.89 (  0.89)	test_minacc   0.48 (  0.48)	test_majacc   0.95 (  0.95)	Loss_d 0.260 (0.260)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.287 (0.293)	test_acc   0.85 (  0.87)	test_minacc   0.48 (  0.52)	test_majacc   0.90 (  0.93)	Loss_d 0.287 (0.293)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.48 (  0.52)	test_majacc_d   0.90 (  0.93)	test_corr_d   0.81 (  0.81)
Test: [  20/  26]	Loss 0.284 (0.287)	test_acc   0.88 (  0.87)	test_minacc   0.54 (  0.55)	test_majacc   0.94 (  0.93)	Loss_d 0.284 (0.287)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.82 (  0.81)
Test: [  26/  26]	Loss 0.236 (0.283)	test_acc   0.92 (  0.88)	test_minacc   0.80 (  0.56)	test_majacc   0.95 (  0.94)	Loss_d 0.236 (0.283)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.80 (  0.56)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.78 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.72it/s]
Test: [  0/  1]	Loss 1.759 (1.759)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 1.759 (1.759)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 1.759 (1.759)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 1.759 (1.759)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.58 (  0.58)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0431 (0.0450)	validation_time 0.0007 (0.0012)	train_time 0.0424 (0.0435)
record: (train_acc, test_acc) (0.8791000216603279, 0.35500001907348633)
last accs (train_acc, test_acc) (0.8791000216603279, 0.35500001907348633)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.22it/s] 19%|#9        | 5/26 [00:00<00:01, 16.40it/s] 35%|###4      | 9/26 [00:00<00:00, 22.77it/s] 50%|#####     | 13/26 [00:00<00:00, 27.02it/s] 65%|######5   | 17/26 [00:00<00:00, 29.73it/s] 81%|########  | 21/26 [00:00<00:00, 31.26it/s] 96%|#########6| 25/26 [00:00<00:00, 32.01it/s]100%|##########| 26/26 [00:01<00:00, 25.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.243 (0.286)	train_nll   0.24 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.84 ( 22.75)	train_acc   0.91 (  0.88)	train_minacc   0.68 (  0.41)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0107 (7.4952)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.19it/s] 31%|###       | 8/26 [00:00<00:00, 31.62it/s]                                               31%|###       | 8/26 [00:00<00:00, 31.62it/s] 50%|#####     | 13/26 [00:00<00:00, 37.65it/s] 69%|######9   | 18/26 [00:00<00:00, 40.87it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.87it/s] 88%|########8 | 23/26 [00:00<00:00, 43.24it/s]100%|##########| 26/26 [00:00<00:00, 37.09it/s]
Test: [   0/  26]	Loss 0.256 (0.256)	test_acc   0.89 (  0.89)	test_minacc   0.54 (  0.54)	test_majacc   0.94 (  0.94)	Loss_d 0.256 (0.256)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.306 (0.292)	test_acc   0.85 (  0.87)	test_minacc   0.58 (  0.57)	test_majacc   0.90 (  0.92)	Loss_d 0.306 (0.292)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.90 (  0.92)	test_corr_d   0.78 (  0.79)
Test: [  20/  26]	Loss 0.285 (0.284)	test_acc   0.88 (  0.88)	test_minacc   0.57 (  0.60)	test_majacc   0.93 (  0.93)	Loss_d 0.285 (0.284)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.57 (  0.60)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.80 (  0.79)
Test: [  26/  26]	Loss 0.212 (0.278)	test_acc   0.94 (  0.88)	test_minacc   0.85 (  0.61)	test_majacc   0.96 (  0.93)	Loss_d 0.212 (0.278)	test_acc_d   0.94 (  0.88)	test_minacc_d   0.85 (  0.61)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.77 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.26it/s]
Test: [  0/  1]	Loss 1.764 (1.764)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 1.764 (1.764)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 1.764 (1.764)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 1.764 (1.764)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.45 (  0.45)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0403 (0.0445)	validation_time 0.0005 (0.0012)	train_time 0.0398 (0.0431)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.85it/s] 19%|#9        | 5/26 [00:00<00:00, 22.57it/s] 35%|###4      | 9/26 [00:00<00:00, 28.73it/s] 50%|#####     | 13/26 [00:00<00:00, 31.61it/s] 65%|######5   | 17/26 [00:00<00:00, 33.18it/s] 81%|########  | 21/26 [00:00<00:00, 34.24it/s] 96%|#########6| 25/26 [00:00<00:00, 34.76it/s]100%|##########| 26/26 [00:00<00:00, 29.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.245 (0.272)	train_nll   0.25 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.07 ( 22.96)	train_acc   0.90 (  0.89)	train_minacc   0.62 (  0.50)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7950 (7.6585)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.13it/s] 27%|##6       | 7/26 [00:00<00:00, 35.33it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.33it/s] 46%|####6     | 12/26 [00:00<00:00, 41.05it/s] 69%|######9   | 18/26 [00:00<00:00, 44.37it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.37it/s] 92%|#########2| 24/26 [00:00<00:00, 48.39it/s]100%|##########| 26/26 [00:00<00:00, 41.62it/s]
Test: [   0/  26]	Loss 0.266 (0.266)	test_acc   0.87 (  0.87)	test_minacc   0.50 (  0.50)	test_majacc   0.93 (  0.93)	Loss_d 0.266 (0.266)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.265 (0.289)	test_acc   0.88 (  0.87)	test_minacc   0.54 (  0.52)	test_majacc   0.93 (  0.93)	Loss_d 0.265 (0.289)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.272 (0.281)	test_acc   0.88 (  0.88)	test_minacc   0.55 (  0.56)	test_majacc   0.93 (  0.93)	Loss_d 0.272 (0.281)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.83 (  0.82)
Test: [  26/  26]	Loss 0.221 (0.276)	test_acc   0.93 (  0.88)	test_minacc   0.75 (  0.57)	test_majacc   0.97 (  0.93)	Loss_d 0.221 (0.276)	test_acc_d   0.93 (  0.88)	test_minacc_d   0.75 (  0.57)	test_majacc_d   0.97 (  0.93)	test_corr_d   0.81 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.87it/s]
Test: [  0/  1]	Loss 1.807 (1.807)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 1.807 (1.807)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 1.807 (1.807)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 1.807 (1.807)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.64 (  0.64)
Overall Timing[  9/  1]	epoch_time 0.0356 (0.0436)	validation_time 0.0003 (0.0011)	train_time 0.0352 (0.0423)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.8803000266551971, 0.3490000069141388)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.48it/s] 19%|#9        | 5/26 [00:00<00:00, 25.82it/s] 35%|###4      | 9/26 [00:00<00:00, 31.51it/s] 50%|#####     | 13/26 [00:00<00:00, 34.42it/s] 65%|######5   | 17/26 [00:00<00:00, 36.25it/s] 81%|########  | 21/26 [00:00<00:00, 37.31it/s] 96%|#########6| 25/26 [00:00<00:00, 37.91it/s]100%|##########| 26/26 [00:00<00:00, 32.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.266 (0.272)	train_nll   0.27 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  23.36 ( 23.21)	train_acc   0.88 (  0.89)	train_minacc   0.62 (  0.51)	train_majacc   0.92 (  0.95)	train_corr   0.00 (  0.00)	l1 6.8233 (7.4802)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.80it/s] 31%|###       | 8/26 [00:00<00:00, 39.83it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.83it/s] 50%|#####     | 13/26 [00:00<00:00, 41.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.27it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.27it/s] 96%|#########6| 25/26 [00:00<00:00, 47.81it/s]100%|##########| 26/26 [00:00<00:00, 42.27it/s]
Test: [   0/  26]	Loss 0.257 (0.257)	test_acc   0.91 (  0.91)	test_minacc   0.56 (  0.56)	test_majacc   0.96 (  0.96)	Loss_d 0.257 (0.257)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.264 (0.291)	test_acc   0.87 (  0.88)	test_minacc   0.54 (  0.52)	test_majacc   0.92 (  0.94)	Loss_d 0.264 (0.291)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.92 (  0.94)	test_corr_d   0.82 (  0.82)
Test: [  20/  26]	Loss 0.250 (0.279)	test_acc   0.91 (  0.88)	test_minacc   0.62 (  0.56)	test_majacc   0.95 (  0.94)	Loss_d 0.250 (0.279)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.81 (  0.82)
Test: [  26/  26]	Loss 0.232 (0.273)	test_acc   0.89 (  0.89)	test_minacc   0.68 (  0.57)	test_majacc   0.93 (  0.94)	Loss_d 0.232 (0.273)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.68 (  0.57)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.81 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.55it/s]
Test: [  0/  1]	Loss 1.926 (1.926)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.95 (  0.95)	Loss_d 1.926 (1.926)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 1.926 (1.926)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.95 (  0.95)	Loss_d 1.926 (1.926)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.57 (  0.57)
Overall Timing[ 10/  1]	epoch_time 0.0327 (0.0426)	validation_time 0.0003 (0.0010)	train_time 0.0323 (0.0414)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.8865000187158585, 0.36400002241134644)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.98it/s] 19%|#9        | 5/26 [00:00<00:01, 18.25it/s] 35%|###4      | 9/26 [00:00<00:00, 25.44it/s] 50%|#####     | 13/26 [00:00<00:00, 29.93it/s] 65%|######5   | 17/26 [00:00<00:00, 32.84it/s] 81%|########  | 21/26 [00:00<00:00, 34.39it/s] 96%|#########6| 25/26 [00:00<00:00, 35.20it/s]100%|##########| 26/26 [00:00<00:00, 28.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.176 (0.246)	train_nll   0.18 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.66 ( 23.51)	train_acc   0.92 (  0.90)	train_minacc   0.82 (  0.56)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 7.8246 (7.4900)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.60it/s] 27%|##6       | 7/26 [00:00<00:00, 32.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.36it/s] 46%|####6     | 12/26 [00:00<00:00, 39.27it/s] 65%|######5   | 17/26 [00:00<00:00, 39.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.98it/s] 88%|########8 | 23/26 [00:00<00:00, 44.95it/s]100%|##########| 26/26 [00:00<00:00, 37.85it/s]
Test: [   0/  26]	Loss 0.214 (0.214)	test_acc   0.92 (  0.92)	test_minacc   0.64 (  0.64)	test_majacc   0.96 (  0.96)	Loss_d 0.214 (0.214)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.225 (0.243)	test_acc   0.89 (  0.90)	test_minacc   0.65 (  0.66)	test_majacc   0.93 (  0.94)	Loss_d 0.225 (0.243)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.65 (  0.66)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.80 (  0.79)
Test: [  20/  26]	Loss 0.201 (0.230)	test_acc   0.93 (  0.90)	test_minacc   0.73 (  0.67)	test_majacc   0.96 (  0.94)	Loss_d 0.201 (0.230)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.73 (  0.67)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.78 (  0.79)
Test: [  26/  26]	Loss 0.149 (0.221)	test_acc   0.95 (  0.91)	test_minacc   0.82 (  0.69)	test_majacc   0.97 (  0.95)	Loss_d 0.149 (0.221)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.82 (  0.69)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.79 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.07it/s]
Test: [  0/  1]	Loss 2.218 (2.218)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 2.218 (2.218)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 2.218 (2.218)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 2.218 (2.218)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.47 (  0.47)
Overall Timing[ 11/  1]	epoch_time 0.0353 (0.0420)	validation_time 0.0004 (0.0010)	train_time 0.0348 (0.0408)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.9085000188350677, 0.4010000228881836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.58it/s] 19%|#9        | 5/26 [00:00<00:00, 24.39it/s] 35%|###4      | 9/26 [00:00<00:00, 30.55it/s] 50%|#####     | 13/26 [00:00<00:00, 32.51it/s] 65%|######5   | 17/26 [00:00<00:00, 34.54it/s] 81%|########  | 21/26 [00:00<00:00, 35.15it/s] 96%|#########6| 25/26 [00:00<00:00, 35.69it/s]100%|##########| 26/26 [00:00<00:00, 31.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.192 (0.230)	train_nll   0.19 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.98 ( 23.82)	train_acc   0.90 (  0.90)	train_minacc   0.75 (  0.60)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0109 (7.7904)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.85it/s] 27%|##6       | 7/26 [00:00<00:00, 32.77it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.77it/s] 50%|#####     | 13/26 [00:00<00:00, 39.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.41it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.41it/s] 96%|#########6| 25/26 [00:00<00:00, 46.43it/s]100%|##########| 26/26 [00:00<00:00, 39.71it/s]
Test: [   0/  26]	Loss 0.201 (0.201)	test_acc   0.92 (  0.92)	test_minacc   0.74 (  0.74)	test_majacc   0.94 (  0.94)	Loss_d 0.201 (0.201)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.197 (0.217)	test_acc   0.90 (  0.91)	test_minacc   0.79 (  0.76)	test_majacc   0.91 (  0.94)	Loss_d 0.197 (0.217)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.79 (  0.76)	test_majacc_d   0.91 (  0.94)	test_corr_d   0.76 (  0.76)
Test: [  20/  26]	Loss 0.189 (0.206)	test_acc   0.92 (  0.91)	test_minacc   0.73 (  0.77)	test_majacc   0.95 (  0.94)	Loss_d 0.189 (0.206)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.73 (  0.77)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.75 (  0.76)
Test: [  26/  26]	Loss 0.120 (0.196)	test_acc   0.97 (  0.92)	test_minacc   0.98 (  0.79)	test_majacc   0.97 (  0.94)	Loss_d 0.120 (0.196)	test_acc_d   0.97 (  0.92)	test_minacc_d   0.98 (  0.79)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.74 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.70it/s]
Test: [  0/  1]	Loss 2.293 (2.293)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.94 (  0.94)	Loss_d 2.293 (2.293)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 2.293 (2.293)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.94 (  0.94)	Loss_d 2.293 (2.293)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.44 (  0.44)
Overall Timing[ 12/  1]	epoch_time 0.0331 (0.0413)	validation_time 0.0005 (0.0009)	train_time 0.0327 (0.0402)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.9197000225782395, 0.4240000247955322)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.45it/s] 19%|#9        | 5/26 [00:00<00:00, 23.74it/s] 35%|###4      | 9/26 [00:00<00:00, 29.47it/s] 50%|#####     | 13/26 [00:00<00:00, 32.36it/s] 65%|######5   | 17/26 [00:00<00:00, 34.13it/s] 81%|########  | 21/26 [00:00<00:00, 35.83it/s] 96%|#########6| 25/26 [00:00<00:00, 36.95it/s]100%|##########| 26/26 [00:00<00:00, 31.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.139 (0.205)	train_nll   0.14 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm  24.36 ( 24.17)	train_acc   0.95 (  0.92)	train_minacc   0.90 (  0.66)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0171 (8.1650)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 27%|##6       | 7/26 [00:00<00:00, 31.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.70it/s] 50%|#####     | 13/26 [00:00<00:00, 37.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.94it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.94it/s] 96%|#########6| 25/26 [00:00<00:00, 45.38it/s]100%|##########| 26/26 [00:00<00:00, 39.27it/s]
Test: [   0/  26]	Loss 0.210 (0.210)	test_acc   0.92 (  0.92)	test_minacc   0.74 (  0.74)	test_majacc   0.95 (  0.95)	Loss_d 0.210 (0.210)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.215 (0.235)	test_acc   0.91 (  0.90)	test_minacc   0.85 (  0.73)	test_majacc   0.91 (  0.92)	Loss_d 0.215 (0.235)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.85 (  0.73)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.71 (  0.72)
Test: [  20/  26]	Loss 0.153 (0.207)	test_acc   0.94 (  0.91)	test_minacc   0.86 (  0.78)	test_majacc   0.96 (  0.93)	Loss_d 0.153 (0.207)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.86 (  0.78)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.098 (0.193)	test_acc   0.98 (  0.92)	test_minacc   0.98 (  0.80)	test_majacc   0.98 (  0.94)	Loss_d 0.098 (0.193)	test_acc_d   0.98 (  0.92)	test_minacc_d   0.98 (  0.80)	test_majacc_d   0.98 (  0.94)	test_corr_d   0.72 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.50it/s]
Test: [  0/  1]	Loss 2.404 (2.404)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 2.404 (2.404)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 2.404 (2.404)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 2.404 (2.404)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.40 (  0.40)
Overall Timing[ 13/  1]	epoch_time 0.0352 (0.0409)	validation_time 0.0003 (0.0009)	train_time 0.0349 (0.0398)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.9191000216603279, 0.42000001668930054)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 19%|#9        | 5/26 [00:00<00:00, 21.86it/s] 35%|###4      | 9/26 [00:00<00:00, 28.86it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.20it/s] 88%|########8 | 23/26 [00:00<00:00, 37.29it/s]100%|##########| 26/26 [00:00<00:00, 31.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.135 (0.198)	train_nll   0.14 (  0.20)	train_penalty   0.00 (  0.01)	weight_norm  24.76 ( 24.56)	train_acc   0.96 (  0.92)	train_minacc   0.85 (  0.67)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0668 (8.1920)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.41it/s] 23%|##3       | 6/26 [00:00<00:00, 30.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.95it/s] 42%|####2     | 11/26 [00:00<00:00, 37.18it/s] 65%|######5   | 17/26 [00:00<00:00, 41.65it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.65it/s] 88%|########8 | 23/26 [00:00<00:00, 46.08it/s]100%|##########| 26/26 [00:00<00:00, 38.67it/s]
Test: [   0/  26]	Loss 0.172 (0.172)	test_acc   0.93 (  0.93)	test_minacc   0.74 (  0.74)	test_majacc   0.96 (  0.96)	Loss_d 0.172 (0.172)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.227 (0.241)	test_acc   0.91 (  0.90)	test_minacc   0.87 (  0.73)	test_majacc   0.91 (  0.92)	Loss_d 0.227 (0.241)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.87 (  0.73)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.71 (  0.73)
Test: [  20/  26]	Loss 0.130 (0.220)	test_acc   0.95 (  0.91)	test_minacc   0.89 (  0.75)	test_majacc   0.96 (  0.93)	Loss_d 0.130 (0.220)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.89 (  0.75)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.73 (  0.73)
Test: [  26/  26]	Loss 0.073 (0.204)	test_acc   0.99 (  0.92)	test_minacc   0.98 (  0.78)	test_majacc   0.99 (  0.94)	Loss_d 0.073 (0.204)	test_acc_d   0.99 (  0.92)	test_minacc_d   0.98 (  0.78)	test_majacc_d   0.99 (  0.94)	test_corr_d   0.74 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.74it/s]
Test: [  0/  1]	Loss 2.581 (2.581)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.89 (  0.89)	Loss_d 2.581 (2.581)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 2.581 (2.581)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.89 (  0.89)	Loss_d 2.581 (2.581)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.49 (  0.49)
Overall Timing[ 14/  1]	epoch_time 0.0340 (0.0404)	validation_time 0.0005 (0.0009)	train_time 0.0335 (0.0394)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.9150000233650207, 0.3750000298023224)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 19%|#9        | 5/26 [00:00<00:00, 23.28it/s] 35%|###4      | 9/26 [00:00<00:00, 28.44it/s] 50%|#####     | 13/26 [00:00<00:00, 31.28it/s] 65%|######5   | 17/26 [00:00<00:00, 32.86it/s] 81%|########  | 21/26 [00:00<00:00, 33.96it/s] 96%|#########6| 25/26 [00:00<00:00, 34.57it/s]100%|##########| 26/26 [00:00<00:00, 29.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.007 (0.083)	train_nll   0.26 (  0.25)	train_penalty   0.01 (  0.00)	weight_norm  25.13 ( 24.98)	train_acc   0.87 (  0.90)	train_minacc   0.75 (  0.69)	train_majacc   0.90 (  0.93)	train_corr   0.00 (  0.00)	l1 6.3317 (7.6855)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.00it/s] 23%|##3       | 6/26 [00:00<00:00, 25.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.73it/s] 42%|####2     | 11/26 [00:00<00:00, 33.73it/s] 65%|######5   | 17/26 [00:00<00:00, 41.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.33it/s] 85%|########4 | 22/26 [00:00<00:00, 41.08it/s]100%|##########| 26/26 [00:00<00:00, 36.37it/s]
Test: [   0/  26]	Loss 0.290 (0.290)	test_acc   0.88 (  0.88)	test_minacc   0.82 (  0.82)	test_majacc   0.89 (  0.89)	Loss_d 0.290 (0.290)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.293 (0.275)	test_acc   0.89 (  0.89)	test_minacc   0.85 (  0.86)	test_majacc   0.89 (  0.89)	Loss_d 0.293 (0.275)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.85 (  0.86)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.70 (  0.67)
Test: [  20/  26]	Loss 0.310 (0.277)	test_acc   0.86 (  0.88)	test_minacc   0.75 (  0.85)	test_majacc   0.88 (  0.89)	Loss_d 0.310 (0.277)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.75 (  0.85)	test_majacc_d   0.88 (  0.89)	test_corr_d   0.67 (  0.67)
Test: [  26/  26]	Loss 0.279 (0.282)	test_acc   0.87 (  0.88)	test_minacc   0.75 (  0.83)	test_majacc   0.89 (  0.89)	Loss_d 0.279 (0.282)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.75 (  0.83)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.68 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.99it/s]
Test: [  0/  1]	Loss 1.531 (1.531)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.93 (  0.93)	Loss_d 1.531 (1.531)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.531 (1.531)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.93 (  0.93)	Loss_d 1.531 (1.531)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.36 (  0.36)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0434 (0.0406)	validation_time 0.0004 (0.0008)	train_time 0.0429 (0.0396)
record: (train_acc, test_acc) (0.8798000228404999, 0.47200003266334534)
last accs (train_acc, test_acc) (0.8798000228404999, 0.47200003266334534)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.20it/s] 19%|#9        | 5/26 [00:00<00:00, 24.20it/s] 35%|###4      | 9/26 [00:00<00:00, 30.17it/s] 50%|#####     | 13/26 [00:00<00:00, 33.79it/s] 69%|######9   | 18/26 [00:00<00:00, 36.65it/s] 88%|########8 | 23/26 [00:00<00:00, 38.13it/s]100%|##########| 26/26 [00:00<00:00, 32.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.004 (0.002)	train_nll   0.41 (  0.38)	train_penalty   0.00 (  0.00)	weight_norm  25.21 ( 25.18)	train_acc   0.79 (  0.81)	train_minacc   0.65 (  0.79)	train_majacc   0.82 (  0.81)	train_corr   0.00 (  0.00)	l1 5.6261 (5.9287)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.62it/s] 31%|###       | 8/26 [00:00<00:00, 40.60it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.60it/s] 50%|#####     | 13/26 [00:00<00:00, 43.20it/s] 69%|######9   | 18/26 [00:00<00:00, 44.27it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.27it/s] 96%|#########6| 25/26 [00:00<00:00, 49.79it/s]100%|##########| 26/26 [00:00<00:00, 42.64it/s]
Test: [   0/  26]	Loss 0.390 (0.390)	test_acc   0.80 (  0.80)	test_minacc   0.72 (  0.72)	test_majacc   0.81 (  0.81)	Loss_d 0.390 (0.390)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.376 (0.364)	test_acc   0.82 (  0.82)	test_minacc   0.75 (  0.77)	test_majacc   0.83 (  0.82)	Loss_d 0.376 (0.364)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.75 (  0.77)	test_majacc_d   0.83 (  0.82)	test_corr_d   0.67 (  0.63)
Test: [  20/  26]	Loss 0.375 (0.369)	test_acc   0.81 (  0.82)	test_minacc   0.71 (  0.76)	test_majacc   0.83 (  0.83)	Loss_d 0.375 (0.369)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.71 (  0.76)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.63 (  0.63)
Test: [  26/  26]	Loss 0.406 (0.372)	test_acc   0.79 (  0.81)	test_minacc   0.65 (  0.75)	test_majacc   0.81 (  0.83)	Loss_d 0.406 (0.372)	test_acc_d   0.79 (  0.81)	test_minacc_d   0.65 (  0.75)	test_majacc_d   0.81 (  0.83)	test_corr_d   0.64 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.61it/s]
Test: [  0/  1]	Loss 1.436 (1.436)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.86 (  0.86)	Loss_d 1.436 (1.436)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 1.436 (1.436)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.86 (  0.86)	Loss_d 1.436 (1.436)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.45 (  0.45)
Overall Timing[ 16/  1]	epoch_time 0.0347 (0.0402)	validation_time 0.0003 (0.0008)	train_time 0.0344 (0.0393)
record: (train_acc, test_acc) (0.8798000228404999, 0.47200003266334534)
last accs (train_acc, test_acc) (0.8144000270366669, 0.4350000321865082)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.17it/s] 27%|##6       | 7/26 [00:00<00:00, 28.63it/s] 42%|####2     | 11/26 [00:00<00:00, 31.86it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.96it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.37it/s] 88%|########8 | 23/26 [00:00<00:00, 33.77it/s]100%|##########| 26/26 [00:00<00:00, 31.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.002 (0.002)	train_nll   0.42 (  0.39)	train_penalty   0.00 (  0.00)	weight_norm  25.23 ( 25.22)	train_acc   0.77 (  0.79)	train_minacc   0.75 (  0.81)	train_majacc   0.78 (  0.79)	train_corr   0.00 (  0.00)	l1 6.0055 (5.6965)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.23it/s] 27%|##6       | 7/26 [00:00<00:00, 33.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.39it/s] 46%|####6     | 12/26 [00:00<00:00, 39.66it/s] 65%|######5   | 17/26 [00:00<00:00, 42.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.35it/s] 85%|########4 | 22/26 [00:00<00:00, 40.67it/s]100%|##########| 26/26 [00:00<00:00, 38.20it/s]
Test: [   0/  26]	Loss 0.428 (0.428)	test_acc   0.78 (  0.78)	test_minacc   0.78 (  0.78)	test_majacc   0.78 (  0.78)	Loss_d 0.428 (0.428)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.361 (0.388)	test_acc   0.83 (  0.80)	test_minacc   0.75 (  0.79)	test_majacc   0.84 (  0.80)	Loss_d 0.361 (0.388)	test_acc_d   0.83 (  0.80)	test_minacc_d   0.75 (  0.79)	test_majacc_d   0.84 (  0.80)	test_corr_d   0.65 (  0.60)
Test: [  20/  26]	Loss 0.395 (0.400)	test_acc   0.78 (  0.79)	test_minacc   0.77 (  0.79)	test_majacc   0.78 (  0.80)	Loss_d 0.395 (0.400)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.77 (  0.79)	test_majacc_d   0.78 (  0.80)	test_corr_d   0.59 (  0.59)
Test: [  26/  26]	Loss 0.411 (0.401)	test_acc   0.78 (  0.79)	test_minacc   0.75 (  0.78)	test_majacc   0.78 (  0.80)	Loss_d 0.411 (0.401)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.75 (  0.78)	test_majacc_d   0.78 (  0.80)	test_corr_d   0.58 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.52it/s]
Test: [  0/  1]	Loss 1.432 (1.432)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.83 (  0.83)	Loss_d 1.432 (1.432)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.432 (1.432)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.83 (  0.83)	Loss_d 1.432 (1.432)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.30 (  0.30)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0351 (0.0400)	validation_time 0.0004 (0.0008)	train_time 0.0347 (0.0391)
record: (train_acc, test_acc) (0.7936000264883042, 0.5010000467300415)
last accs (train_acc, test_acc) (0.7936000264883042, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.58it/s] 23%|##3       | 6/26 [00:00<00:00, 26.40it/s] 38%|###8      | 10/26 [00:00<00:00, 31.09it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.00it/s] 69%|######9   | 18/26 [00:00<00:00, 35.42it/s] 85%|########4 | 22/26 [00:00<00:00, 36.32it/s]100%|##########| 26/26 [00:00<00:00, 36.92it/s]100%|##########| 26/26 [00:00<00:00, 32.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.001 (0.002)	train_nll   0.36 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  25.24 ( 25.23)	train_acc   0.80 (  0.81)	train_minacc   0.82 (  0.80)	train_majacc   0.80 (  0.81)	train_corr   0.00 (  0.00)	l1 5.9382 (5.8684)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.19it/s] 27%|##6       | 7/26 [00:00<00:00, 35.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.93it/s] 46%|####6     | 12/26 [00:00<00:00, 40.69it/s] 65%|######5   | 17/26 [00:00<00:00, 43.95it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.95it/s] 88%|########8 | 23/26 [00:00<00:00, 46.07it/s]100%|##########| 26/26 [00:00<00:00, 41.33it/s]
Test: [   0/  26]	Loss 0.375 (0.375)	test_acc   0.81 (  0.81)	test_minacc   0.88 (  0.88)	test_majacc   0.79 (  0.79)	Loss_d 0.375 (0.375)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.370 (0.365)	test_acc   0.81 (  0.80)	test_minacc   0.81 (  0.88)	test_majacc   0.81 (  0.79)	Loss_d 0.370 (0.365)	test_acc_d   0.81 (  0.80)	test_minacc_d   0.81 (  0.88)	test_majacc_d   0.81 (  0.79)	test_corr_d   0.60 (  0.55)
Test: [  20/  26]	Loss 0.377 (0.370)	test_acc   0.78 (  0.80)	test_minacc   0.79 (  0.87)	test_majacc   0.78 (  0.79)	Loss_d 0.377 (0.370)	test_acc_d   0.78 (  0.80)	test_minacc_d   0.79 (  0.87)	test_majacc_d   0.78 (  0.79)	test_corr_d   0.57 (  0.55)
Test: [  26/  26]	Loss 0.369 (0.371)	test_acc   0.80 (  0.80)	test_minacc   0.82 (  0.87)	test_majacc   0.80 (  0.79)	Loss_d 0.369 (0.371)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.82 (  0.87)	test_majacc_d   0.80 (  0.79)	test_corr_d   0.55 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.07it/s]
Test: [  0/  1]	Loss 1.318 (1.318)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.81 (  0.81)	Loss_d 1.318 (1.318)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.318 (1.318)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.81 (  0.81)	Loss_d 1.318 (1.318)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.13 (  0.13)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0403 (0.0400)	validation_time 0.0004 (0.0008)	train_time 0.0399 (0.0391)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 19%|#9        | 5/26 [00:00<00:01, 19.54it/s] 35%|###4      | 9/26 [00:00<00:00, 25.84it/s] 50%|#####     | 13/26 [00:00<00:00, 29.64it/s] 65%|######5   | 17/26 [00:00<00:00, 31.89it/s] 81%|########  | 21/26 [00:00<00:00, 33.45it/s] 96%|#########6| 25/26 [00:00<00:00, 34.22it/s]100%|##########| 26/26 [00:00<00:00, 28.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.001 (0.001)	train_nll   0.35 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  25.24 ( 25.24)	train_acc   0.82 (  0.80)	train_minacc   0.78 (  0.85)	train_majacc   0.83 (  0.79)	train_corr   0.00 (  0.00)	l1 6.0181 (6.1509)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.26it/s] 31%|###       | 8/26 [00:00<00:00, 40.10it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.10it/s] 50%|#####     | 13/26 [00:00<00:00, 39.88it/s] 69%|######9   | 18/26 [00:00<00:00, 43.04it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.04it/s] 88%|########8 | 23/26 [00:00<00:00, 45.35it/s]100%|##########| 26/26 [00:00<00:00, 40.02it/s]
Test: [   0/  26]	Loss 0.341 (0.341)	test_acc   0.82 (  0.82)	test_minacc   0.80 (  0.80)	test_majacc   0.83 (  0.83)	Loss_d 0.341 (0.341)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.334 (0.328)	test_acc   0.85 (  0.84)	test_minacc   0.77 (  0.84)	test_majacc   0.86 (  0.84)	Loss_d 0.334 (0.328)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.77 (  0.84)	test_majacc_d   0.86 (  0.84)	test_corr_d   0.69 (  0.65)
Test: [  20/  26]	Loss 0.349 (0.334)	test_acc   0.82 (  0.83)	test_minacc   0.77 (  0.83)	test_majacc   0.83 (  0.83)	Loss_d 0.349 (0.334)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.77 (  0.83)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.66 (  0.64)
Test: [  26/  26]	Loss 0.353 (0.338)	test_acc   0.82 (  0.83)	test_minacc   0.78 (  0.82)	test_majacc   0.83 (  0.83)	Loss_d 0.353 (0.338)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.65 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.14it/s]
Test: [  0/  1]	Loss 1.477 (1.477)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.83 (  0.83)	Loss_d 1.477 (1.477)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.477 (1.477)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.83 (  0.83)	Loss_d 1.477 (1.477)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.29 (  0.29)
Overall Timing[ 19/  1]	epoch_time 0.0362 (0.0398)	validation_time 0.0004 (0.0007)	train_time 0.0358 (0.0389)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.8263000206947326, 0.5430000424385071)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.45it/s] 19%|#9        | 5/26 [00:00<00:00, 23.85it/s] 35%|###4      | 9/26 [00:00<00:00, 30.54it/s] 50%|#####     | 13/26 [00:00<00:00, 33.93it/s] 69%|######9   | 18/26 [00:00<00:00, 36.44it/s] 88%|########8 | 23/26 [00:00<00:00, 37.62it/s]100%|##########| 26/26 [00:00<00:00, 32.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.001)	train_nll   0.35 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  25.25 ( 25.24)	train_acc   0.83 (  0.81)	train_minacc   0.80 (  0.84)	train_majacc   0.83 (  0.81)	train_corr   0.00 (  0.00)	l1 6.1250 (6.2876)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.94it/s] 31%|###       | 8/26 [00:00<00:00, 41.92it/s]                                               31%|###       | 8/26 [00:00<00:00, 41.92it/s] 50%|#####     | 13/26 [00:00<00:00, 43.11it/s] 73%|#######3  | 19/26 [00:00<00:00, 49.05it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 49.05it/s] 96%|#########6| 25/26 [00:00<00:00, 48.75it/s]100%|##########| 26/26 [00:00<00:00, 42.97it/s]
Test: [   0/  26]	Loss 0.340 (0.340)	test_acc   0.82 (  0.82)	test_minacc   0.78 (  0.78)	test_majacc   0.83 (  0.83)	Loss_d 0.340 (0.340)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.313 (0.323)	test_acc   0.85 (  0.83)	test_minacc   0.81 (  0.83)	test_majacc   0.86 (  0.83)	Loss_d 0.313 (0.323)	test_acc_d   0.85 (  0.83)	test_minacc_d   0.81 (  0.83)	test_majacc_d   0.86 (  0.83)	test_corr_d   0.70 (  0.65)
Test: [  20/  26]	Loss 0.339 (0.324)	test_acc   0.82 (  0.83)	test_minacc   0.79 (  0.83)	test_majacc   0.83 (  0.83)	Loss_d 0.339 (0.324)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.79 (  0.83)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.65 (  0.65)
Test: [  26/  26]	Loss 0.352 (0.328)	test_acc   0.82 (  0.83)	test_minacc   0.80 (  0.82)	test_majacc   0.83 (  0.83)	Loss_d 0.352 (0.328)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.80 (  0.82)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.64 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.75it/s]
Test: [  0/  1]	Loss 1.535 (1.535)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.85 (  0.85)	Loss_d 1.535 (1.535)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.535 (1.535)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.85 (  0.85)	Loss_d 1.535 (1.535)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.33 (  0.33)
Overall Timing[ 20/  1]	epoch_time 0.0438 (0.0400)	validation_time 0.0003 (0.0007)	train_time 0.0434 (0.0392)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.8300000323057175, 0.5220000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.30it/s] 23%|##3       | 6/26 [00:00<00:00, 28.75it/s] 38%|###8      | 10/26 [00:00<00:00, 33.50it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.61it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.30it/s] 88%|########8 | 23/26 [00:00<00:00, 37.13it/s]100%|##########| 26/26 [00:00<00:00, 33.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.34 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  25.25 ( 25.25)	train_acc   0.82 (  0.81)	train_minacc   0.80 (  0.83)	train_majacc   0.83 (  0.81)	train_corr   0.00 (  0.00)	l1 6.1590 (6.4434)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.55it/s] 31%|###       | 8/26 [00:00<00:00, 39.36it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.36it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 47.99it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 47.99it/s]100%|##########| 26/26 [00:00<00:00, 50.90it/s]100%|##########| 26/26 [00:00<00:00, 43.12it/s]
Test: [   0/  26]	Loss 0.330 (0.330)	test_acc   0.84 (  0.84)	test_minacc   0.84 (  0.84)	test_majacc   0.84 (  0.84)	Loss_d 0.330 (0.330)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.305 (0.314)	test_acc   0.85 (  0.84)	test_minacc   0.77 (  0.83)	test_majacc   0.86 (  0.84)	Loss_d 0.305 (0.314)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.77 (  0.83)	test_majacc_d   0.86 (  0.84)	test_corr_d   0.71 (  0.67)
Test: [  20/  26]	Loss 0.326 (0.311)	test_acc   0.83 (  0.84)	test_minacc   0.77 (  0.83)	test_majacc   0.84 (  0.84)	Loss_d 0.326 (0.311)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.77 (  0.83)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.67 (  0.67)
Test: [  26/  26]	Loss 0.343 (0.315)	test_acc   0.82 (  0.84)	test_minacc   0.80 (  0.82)	test_majacc   0.83 (  0.84)	Loss_d 0.343 (0.315)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.80 (  0.82)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.66 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.53it/s]
Test: [  0/  1]	Loss 1.567 (1.567)	test_acc   0.52 (  0.52)	test_minacc   0.48 (  0.48)	test_majacc   0.85 (  0.85)	Loss_d 1.567 (1.567)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.567 (1.567)	test_acc   0.52 (  0.52)	test_minacc   0.48 (  0.48)	test_majacc   0.85 (  0.85)	Loss_d 1.567 (1.567)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Overall Timing[ 21/  1]	epoch_time 0.0401 (0.0400)	validation_time 0.0004 (0.0007)	train_time 0.0396 (0.0392)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.8379000260233879, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.17it/s] 23%|##3       | 6/26 [00:00<00:00, 25.76it/s] 38%|###8      | 10/26 [00:00<00:00, 30.00it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.13it/s] 69%|######9   | 18/26 [00:00<00:00, 33.20it/s] 85%|########4 | 22/26 [00:00<00:00, 33.75it/s]100%|##########| 26/26 [00:00<00:00, 34.46it/s]100%|##########| 26/26 [00:00<00:00, 30.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.001)	train_nll   0.35 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  25.26 ( 25.26)	train_acc   0.80 (  0.82)	train_minacc   0.73 (  0.83)	train_majacc   0.82 (  0.82)	train_corr   0.00 (  0.00)	l1 6.3670 (6.5983)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:03,  7.54it/s] 31%|###       | 8/26 [00:00<00:00, 25.22it/s]                                               31%|###       | 8/26 [00:00<00:00, 25.22it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.94it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.80it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 45.25it/s]100%|##########| 26/26 [00:00<00:00, 34.03it/s]
Test: [   0/  26]	Loss 0.327 (0.327)	test_acc   0.82 (  0.82)	test_minacc   0.78 (  0.78)	test_majacc   0.83 (  0.83)	Loss_d 0.327 (0.327)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.298 (0.313)	test_acc   0.86 (  0.84)	test_minacc   0.81 (  0.82)	test_majacc   0.87 (  0.84)	Loss_d 0.298 (0.313)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.87 (  0.84)	test_corr_d   0.73 (  0.69)
Test: [  20/  26]	Loss 0.309 (0.303)	test_acc   0.84 (  0.85)	test_minacc   0.75 (  0.82)	test_majacc   0.85 (  0.85)	Loss_d 0.309 (0.303)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.75 (  0.82)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.69 (  0.69)
Test: [  26/  26]	Loss 0.341 (0.307)	test_acc   0.81 (  0.84)	test_minacc   0.73 (  0.81)	test_majacc   0.83 (  0.85)	Loss_d 0.341 (0.307)	test_acc_d   0.81 (  0.84)	test_minacc_d   0.73 (  0.81)	test_majacc_d   0.83 (  0.85)	test_corr_d   0.68 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.14it/s]
Test: [  0/  1]	Loss 1.667 (1.667)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.87 (  0.87)	Loss_d 1.667 (1.667)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 1.667 (1.667)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.87 (  0.87)	Loss_d 1.667 (1.667)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.41 (  0.41)
Overall Timing[ 22/  1]	epoch_time 0.0433 (0.0401)	validation_time 0.0004 (0.0007)	train_time 0.0429 (0.0393)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.8441000215411186, 0.5060000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.63it/s] 23%|##3       | 6/26 [00:00<00:00, 27.02it/s] 35%|###4      | 9/26 [00:00<00:00, 26.89it/s] 50%|#####     | 13/26 [00:00<00:00, 29.31it/s] 65%|######5   | 17/26 [00:00<00:00, 31.21it/s] 81%|########  | 21/26 [00:00<00:00, 31.21it/s] 96%|#########6| 25/26 [00:00<00:00, 31.39it/s]100%|##########| 26/26 [00:00<00:00, 28.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.227126121520996
set z to 6.164854860305786
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 382 tensor(-0.0090, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 221 tensor(-0.0140, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 159 tensor(0.0095, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 146 tensor(0.0038, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 144 tensor(0.0009, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.008 (0.089)	train_nll   0.44 (  0.47)	train_penalty   0.01 (  0.09)	weight_norm  28.25 ( 26.13)	train_acc   0.86 (  0.77)	train_minacc   0.68 (  0.64)	train_majacc   0.89 (  0.80)	train_corr   0.00 (  0.00)	l1 7.4038 (7.7473)	zero_count 0.0000 (44.3040)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.19it/s] 23%|##3       | 6/26 [00:00<00:00, 20.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.68it/s] 42%|####2     | 11/26 [00:00<00:00, 29.96it/s] 62%|######1   | 16/26 [00:00<00:00, 36.24it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.24it/s] 81%|########  | 21/26 [00:00<00:00, 37.09it/s]100%|##########| 26/26 [00:00<00:00, 40.49it/s]100%|##########| 26/26 [00:00<00:00, 30.97it/s]
Test: [   0/  26]	Loss 0.522 (0.522)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.522 (0.522)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.625 (0.570)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.625 (0.570)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.52 (  0.50)
Test: [  20/  26]	Loss 0.542 (0.555)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.542 (0.555)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.52 (  0.50)
Test: [  26/  26]	Loss 0.537 (0.552)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.537 (0.552)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.51 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.27it/s]
Test: [  0/  1]	Loss 1.913 (1.913)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.913 (1.913)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.913 (1.913)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.913 (1.913)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 23/  1]	epoch_time 0.0446 (0.0403)	validation_time 0.0003 (0.0007)	train_time 0.0442 (0.0395)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.43it/s] 15%|#5        | 4/26 [00:00<00:01, 18.92it/s] 27%|##6       | 7/26 [00:00<00:00, 23.48it/s] 42%|####2     | 11/26 [00:00<00:00, 28.62it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.88it/s] 88%|########8 | 23/26 [00:00<00:00, 32.32it/s]100%|##########| 26/26 [00:00<00:00, 28.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 142 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 140 tensor(0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 142 tensor(7.2656e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 141 tensor(-6.8168e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 143 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 152 tensor(-0.0002, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  30.07 ( 29.51)	train_acc   0.56 (  0.59)	train_minacc   0.82 (  0.71)	train_majacc   0.50 (  0.57)	train_corr   0.00 (  0.00)	l1 6.3063 (6.4725)	zero_count 0.0000 (86.2680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.73it/s] 23%|##3       | 6/26 [00:00<00:00, 22.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.95it/s] 42%|####2     | 11/26 [00:00<00:00, 30.54it/s] 62%|######1   | 16/26 [00:00<00:00, 36.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.52it/s] 81%|########  | 21/26 [00:00<00:00, 37.15it/s]100%|##########| 26/26 [00:00<00:00, 40.40it/s]100%|##########| 26/26 [00:00<00:00, 31.40it/s]
Test: [   0/  26]	Loss 0.565 (0.565)	test_acc   0.50 (  0.50)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 0.565 (0.565)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.586 (0.579)	test_acc   0.48 (  0.50)	test_minacc   0.50 (  0.53)	test_majacc   0.47 (  0.49)	Loss_d 0.586 (0.579)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.50 (  0.53)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.49 (  0.47)
Test: [  20/  26]	Loss 0.579 (0.578)	test_acc   0.49 (  0.50)	test_minacc   0.57 (  0.54)	test_majacc   0.48 (  0.50)	Loss_d 0.579 (0.578)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.57 (  0.54)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.45 (  0.46)
Test: [  26/  26]	Loss 0.586 (0.578)	test_acc   0.51 (  0.50)	test_minacc   0.45 (  0.54)	test_majacc   0.52 (  0.49)	Loss_d 0.586 (0.578)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.45 (  0.54)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.43 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.59it/s]
Test: [  0/  1]	Loss 1.705 (1.705)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.705 (1.705)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 1.705 (1.705)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.705 (1.705)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Overall Timing[ 24/  1]	epoch_time 0.0410 (0.0403)	validation_time 0.0004 (0.0007)	train_time 0.0406 (0.0396)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5010000108182431, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 19%|#9        | 5/26 [00:00<00:01, 17.89it/s] 31%|###       | 8/26 [00:00<00:00, 21.78it/s] 42%|####2     | 11/26 [00:00<00:00, 23.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.71it/s] 88%|########8 | 23/26 [00:00<00:00, 29.77it/s]100%|##########| 26/26 [00:01<00:00, 24.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 156 tensor(-3.9131e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 162 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 182 tensor(1.5045e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 181 tensor(-4.4272e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 205 tensor(-4.4378e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 187 tensor(2.5475e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 187 tensor(1.3696e-07, device='cuda:0')
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  30.22 ( 30.18)	train_acc   0.51 (  0.50)	train_minacc   0.43 (  0.57)	train_majacc   0.52 (  0.48)	train_corr   0.00 (  0.00)	l1 6.1918 (6.1920)	zero_count 0.0000 (79.0920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02, 10.00it/s] 23%|##3       | 6/26 [00:00<00:00, 32.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.43it/s] 42%|####2     | 11/26 [00:00<00:00, 38.75it/s] 62%|######1   | 16/26 [00:00<00:00, 41.57it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.57it/s] 81%|########  | 21/26 [00:00<00:00, 40.23it/s]100%|##########| 26/26 [00:00<00:00, 42.95it/s]100%|##########| 26/26 [00:00<00:00, 37.02it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.598 (0.598)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.598 (0.598)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.45 (  0.42)
Test: [  20/  26]	Loss 0.597 (0.597)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.597)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.41 (  0.42)
Test: [  26/  26]	Loss 0.597 (0.598)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.597 (0.598)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.41it/s]
Test: [  0/  1]	Loss 1.640 (1.640)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.640 (1.640)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 1.640 (1.640)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.640 (1.640)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Overall Timing[ 25/  1]	epoch_time 0.0395 (0.0403)	validation_time 0.0004 (0.0007)	train_time 0.0391 (0.0396)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4999000157415867, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.67it/s] 19%|#9        | 5/26 [00:00<00:01, 18.26it/s] 35%|###4      | 9/26 [00:00<00:00, 24.56it/s] 50%|#####     | 13/26 [00:00<00:00, 28.53it/s] 65%|######5   | 17/26 [00:00<00:00, 28.73it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.08it/s] 92%|#########2| 24/26 [00:00<00:00, 31.14it/s]100%|##########| 26/26 [00:01<00:00, 25.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 189 tensor(1.0089e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 338 tensor(-1.7582e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 268 tensor(1.5168e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 255 tensor(5.2154e-08, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1649 (6.1674)	zero_count 256.0000 (47.8180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.36it/s] 27%|##6       | 7/26 [00:00<00:00, 34.08it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.08it/s] 46%|####6     | 12/26 [00:00<00:00, 40.07it/s] 65%|######5   | 17/26 [00:00<00:00, 39.31it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.31it/s] 85%|########4 | 22/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 37.08it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.595 (0.595)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.602 (0.600)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.602 (0.600)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.43 (  0.41)
Test: [  20/  26]	Loss 0.598 (0.600)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.600)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.40 (  0.41)
Test: [  26/  26]	Loss 0.600 (0.601)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.600 (0.601)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.69it/s]
Test: [  0/  1]	Loss 1.612 (1.612)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.612 (1.612)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.612 (1.612)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.612 (1.612)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 26/  1]	epoch_time 0.0385 (0.0402)	validation_time 0.0004 (0.0006)	train_time 0.0380 (0.0395)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.74it/s] 15%|#5        | 4/26 [00:00<00:02, 10.19it/s] 31%|###       | 8/26 [00:00<00:01, 17.38it/s] 46%|####6     | 12/26 [00:00<00:00, 22.27it/s] 62%|######1   | 16/26 [00:00<00:00, 26.00it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.56it/s] 92%|#########2| 24/26 [00:01<00:00, 27.48it/s]100%|##########| 26/26 [00:01<00:00, 21.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 361 tensor(-4.9343e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 284 tensor(5.3774e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1645 (6.1639)	zero_count 0.0000 (14.7030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.55it/s] 23%|##3       | 6/26 [00:00<00:00, 24.98it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.98it/s] 42%|####2     | 11/26 [00:00<00:00, 33.01it/s] 62%|######1   | 16/26 [00:00<00:00, 38.22it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.22it/s] 81%|########  | 21/26 [00:00<00:00, 37.72it/s]100%|##########| 26/26 [00:00<00:00, 40.79it/s]100%|##########| 26/26 [00:00<00:00, 33.58it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.603 (0.602)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.603 (0.602)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.43 (  0.41)
Test: [  20/  26]	Loss 0.598 (0.601)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.601)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.39 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.602)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.601 (0.602)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.08it/s]
Test: [  0/  1]	Loss 1.593 (1.593)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.593 (1.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.593 (1.593)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.593 (1.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 27/  1]	epoch_time 0.0433 (0.0404)	validation_time 0.0005 (0.0006)	train_time 0.0428 (0.0396)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.94it/s] 27%|##6       | 7/26 [00:00<00:00, 32.87it/s] 42%|####2     | 11/26 [00:00<00:00, 35.53it/s] 62%|######1   | 16/26 [00:00<00:00, 37.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.85it/s] 92%|#########2| 24/26 [00:00<00:00, 32.88it/s]100%|##########| 26/26 [00:00<00:00, 32.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 442 tensor(-1.0856e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 397 tensor(4.1705e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1650 (6.1641)	zero_count 0.0000 (7.1370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 27%|##6       | 7/26 [00:00<00:00, 25.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.83it/s] 46%|####6     | 12/26 [00:00<00:00, 32.72it/s] 65%|######5   | 17/26 [00:00<00:00, 37.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.35it/s] 85%|########4 | 22/26 [00:00<00:00, 40.56it/s]100%|##########| 26/26 [00:00<00:00, 33.11it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.597 (0.597)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.604 (0.602)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.604 (0.602)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.39 (  0.40)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.09it/s]
Test: [  0/  1]	Loss 1.579 (1.579)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.579 (1.579)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.579 (1.579)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.579 (1.579)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 28/  1]	epoch_time 0.0408 (0.0404)	validation_time 0.0003 (0.0006)	train_time 0.0404 (0.0397)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 19%|#9        | 5/26 [00:00<00:01, 20.07it/s] 35%|###4      | 9/26 [00:00<00:00, 25.95it/s] 50%|#####     | 13/26 [00:00<00:00, 29.03it/s] 65%|######5   | 17/26 [00:00<00:00, 28.66it/s] 81%|########  | 21/26 [00:00<00:00, 30.59it/s] 96%|#########6| 25/26 [00:00<00:00, 29.49it/s]100%|##########| 26/26 [00:00<00:00, 26.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 444 tensor(-7.6294e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 400 tensor(5.7316e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 388 tensor(-8.8993e-07, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1659 (6.1644)	zero_count 0.0000 (6.9420)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.99it/s] 27%|##6       | 7/26 [00:00<00:00, 33.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.34it/s] 46%|####6     | 12/26 [00:00<00:00, 39.78it/s] 65%|######5   | 17/26 [00:00<00:00, 39.30it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.30it/s] 85%|########4 | 22/26 [00:00<00:00, 40.17it/s]100%|##########| 26/26 [00:00<00:00, 37.35it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.597 (0.597)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.603)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.605 (0.603)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.39 (  0.40)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.68it/s]
Test: [  0/  1]	Loss 1.575 (1.575)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.575 (1.575)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.575 (1.575)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.575 (1.575)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 29/  1]	epoch_time 0.0389 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0384 (0.0396)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.33it/s] 19%|#9        | 5/26 [00:00<00:01, 19.05it/s] 35%|###4      | 9/26 [00:00<00:00, 24.91it/s] 46%|####6     | 12/26 [00:00<00:00, 24.87it/s] 62%|######1   | 16/26 [00:00<00:00, 28.06it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.02it/s] 92%|#########2| 24/26 [00:00<00:00, 28.86it/s]100%|##########| 26/26 [00:01<00:00, 24.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 449 tensor(-6.7711e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 451 tensor(1.4284e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 390 tensor(1.3098e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 390 tensor(2.4391e-09, device='cuda:0')
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1671 (6.1647)	zero_count 0.0000 (9.5550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.86it/s] 15%|#5        | 4/26 [00:00<00:01, 17.92it/s] 35%|###4      | 9/26 [00:00<00:00, 31.12it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.12it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.23it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.23it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.23it/s] 92%|#########2| 24/26 [00:00<00:00, 40.49it/s]100%|##########| 26/26 [00:00<00:00, 34.88it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.597 (0.597)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.603)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.605 (0.603)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.600 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.600 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.79it/s]
Test: [  0/  1]	Loss 1.567 (1.567)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.567 (1.567)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.567 (1.567)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.567 (1.567)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 30/  1]	epoch_time 0.0450 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0445 (0.0398)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 19%|#9        | 5/26 [00:00<00:00, 21.25it/s] 35%|###4      | 9/26 [00:00<00:00, 27.30it/s] 50%|#####     | 13/26 [00:00<00:00, 30.23it/s] 65%|######5   | 17/26 [00:00<00:00, 28.91it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.89it/s] 92%|#########2| 24/26 [00:00<00:00, 30.17it/s]100%|##########| 26/26 [00:00<00:00, 26.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 453 tensor(-4.2422e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 471 tensor(3.9743e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 391 tensor(3.2527e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 396 tensor(-4.2279e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1649 (6.1648)	zero_count 120.0000 (11.5410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.47it/s] 23%|##3       | 6/26 [00:00<00:00, 30.36it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.36it/s] 42%|####2     | 11/26 [00:00<00:00, 37.39it/s] 62%|######1   | 16/26 [00:00<00:00, 41.00it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.00it/s] 81%|########  | 21/26 [00:00<00:00, 39.80it/s]100%|##########| 26/26 [00:00<00:00, 42.62it/s]100%|##########| 26/26 [00:00<00:00, 35.93it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.603)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.605 (0.603)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.36it/s]
Test: [  0/  1]	Loss 1.566 (1.566)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.566 (1.566)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.566 (1.566)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.566 (1.566)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 31/  1]	epoch_time 0.0398 (0.0404)	validation_time 0.0005 (0.0006)	train_time 0.0393 (0.0398)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 12%|#1        | 3/26 [00:00<00:02,  9.36it/s] 23%|##3       | 6/26 [00:00<00:01, 15.59it/s] 38%|###8      | 10/26 [00:00<00:00, 22.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.21it/s] 69%|######9   | 18/26 [00:00<00:00, 27.22it/s] 81%|########  | 21/26 [00:00<00:00, 26.72it/s] 92%|#########2| 24/26 [00:01<00:00, 26.65it/s]100%|##########| 26/26 [00:01<00:00, 22.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 408 tensor(-2.2361e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 455 tensor(-2.3727e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 481 tensor(1.5868e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 432 tensor(2.7432e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 405 tensor(-9.3958e-07, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1649 (6.1650)	zero_count 0.0000 (14.9370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.71it/s] 12%|#1        | 3/26 [00:00<00:01, 15.68it/s] 31%|###       | 8/26 [00:00<00:00, 30.54it/s]                                               31%|###       | 8/26 [00:00<00:00, 30.54it/s] 50%|#####     | 13/26 [00:00<00:00, 36.69it/s] 69%|######9   | 18/26 [00:00<00:00, 40.68it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.68it/s] 88%|########8 | 23/26 [00:00<00:00, 39.08it/s]100%|##########| 26/26 [00:00<00:00, 34.74it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.602)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.605 (0.602)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.25it/s]
Test: [  0/  1]	Loss 1.560 (1.560)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.560 (1.560)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.560 (1.560)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.560 (1.560)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 32/  1]	epoch_time 0.0418 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0414 (0.0398)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 15%|#5        | 4/26 [00:00<00:01, 18.50it/s] 31%|###       | 8/26 [00:00<00:00, 26.95it/s] 46%|####6     | 12/26 [00:00<00:00, 31.59it/s] 62%|######1   | 16/26 [00:00<00:00, 29.63it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.64it/s] 88%|########8 | 23/26 [00:00<00:00, 27.77it/s]100%|##########| 26/26 [00:00<00:00, 26.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 386 tensor(-6.5303e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 465 tensor(-5.0447e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 453 tensor(2.7770e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 458 tensor(2.5681e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 422 tensor(1.2851e-07, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1653 (6.1651)	zero_count 0.0000 (15.1320)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.24it/s] 23%|##3       | 6/26 [00:00<00:00, 21.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.16it/s] 46%|####6     | 12/26 [00:00<00:00, 31.78it/s] 65%|######5   | 17/26 [00:00<00:00, 36.05it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.05it/s] 85%|########4 | 22/26 [00:00<00:00, 39.32it/s]100%|##########| 26/26 [00:00<00:00, 31.44it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.595 (0.595)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.604 (0.602)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.604 (0.602)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.601)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.601)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.602)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.602)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.16it/s]
Test: [  0/  1]	Loss 1.561 (1.561)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.561 (1.561)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.561 (1.561)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.561 (1.561)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 33/  1]	epoch_time 0.0440 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0436 (0.0399)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 15%|#5        | 4/26 [00:00<00:01, 18.35it/s] 27%|##6       | 7/26 [00:00<00:00, 21.55it/s] 42%|####2     | 11/26 [00:00<00:00, 27.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.82it/s] 85%|########4 | 22/26 [00:00<00:00, 27.74it/s]100%|##########| 26/26 [00:00<00:00, 29.68it/s]100%|##########| 26/26 [00:01<00:00, 25.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 402 tensor(4.4962e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 381 tensor(5.5797e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 460 tensor(-6.0199e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 479 tensor(9.4970e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 480 tensor(-2.4784e-07, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1651 (6.1652)	zero_count 0.0000 (16.0290)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.85it/s] 27%|##6       | 7/26 [00:00<00:00, 33.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.39it/s] 46%|####6     | 12/26 [00:00<00:00, 38.78it/s] 65%|######5   | 17/26 [00:00<00:00, 41.19it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.19it/s] 85%|########4 | 22/26 [00:00<00:00, 39.39it/s]100%|##########| 26/26 [00:00<00:00, 37.28it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.594 (0.594)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.604 (0.601)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.604 (0.601)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.601)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.601)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.602)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.602)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.64it/s]
Test: [  0/  1]	Loss 1.557 (1.557)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.557 (1.557)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.557 (1.557)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.557 (1.557)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 34/  1]	epoch_time 0.0437 (0.0407)	validation_time 0.0006 (0.0006)	train_time 0.0431 (0.0400)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 19%|#9        | 5/26 [00:00<00:01, 20.00it/s] 31%|###       | 8/26 [00:00<00:00, 22.53it/s] 42%|####2     | 11/26 [00:00<00:00, 23.40it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.74it/s] 69%|######9   | 18/26 [00:00<00:00, 27.14it/s] 81%|########  | 21/26 [00:00<00:00, 26.52it/s] 96%|#########6| 25/26 [00:00<00:00, 29.21it/s]100%|##########| 26/26 [00:01<00:00, 23.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 470 tensor(-9.6177e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 380 tensor(1.9324e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 488 tensor(3.3154e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 459 tensor(1.4958e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 443 tensor(1.9632e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 471 tensor(-8.1830e-08, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1651 (6.1652)	zero_count 0.0000 (13.4940)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.11it/s] 23%|##3       | 6/26 [00:00<00:00, 23.89it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.89it/s] 42%|####2     | 11/26 [00:00<00:00, 32.50it/s] 62%|######1   | 16/26 [00:00<00:00, 38.09it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.09it/s] 81%|########  | 21/26 [00:00<00:00, 37.60it/s]100%|##########| 26/26 [00:00<00:00, 40.71it/s]100%|##########| 26/26 [00:00<00:00, 32.56it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.594 (0.594)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.603 (0.600)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.603 (0.600)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.598 (0.600)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.600)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.601)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.601)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.06it/s]
Test: [  0/  1]	Loss 1.558 (1.558)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.558 (1.558)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.558 (1.558)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.558 (1.558)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 35/  1]	epoch_time 0.0418 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0413 (0.0400)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.88it/s] 23%|##3       | 6/26 [00:00<00:00, 24.44it/s] 38%|###8      | 10/26 [00:00<00:00, 26.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.17it/s] 69%|######9   | 18/26 [00:00<00:00, 32.94it/s] 85%|########4 | 22/26 [00:00<00:00, 31.70it/s]100%|##########| 26/26 [00:00<00:00, 33.03it/s]100%|##########| 26/26 [00:00<00:00, 29.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 401 tensor(1.6239e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 391 tensor(2.5058e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 462 tensor(-1.0093e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1646 (6.1650)	zero_count 0.0000 (12.4410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.91it/s] 38%|###8      | 10/26 [00:00<00:00, 43.67it/s]                                                38%|###8      | 10/26 [00:00<00:00, 43.67it/s] 58%|#####7    | 15/26 [00:00<00:00, 44.07it/s] 77%|#######6  | 20/26 [00:00<00:00, 43.60it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 43.60it/s] 96%|#########6| 25/26 [00:00<00:00, 44.40it/s]100%|##########| 26/26 [00:00<00:00, 40.23it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.602 (0.600)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.602 (0.600)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.598 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.601)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.601)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.04it/s]
Test: [  0/  1]	Loss 1.556 (1.556)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.556 (1.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.556 (1.556)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.556 (1.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 36/  1]	epoch_time 0.0402 (0.0407)	validation_time 0.0003 (0.0006)	train_time 0.0398 (0.0400)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.500000013411045, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.87it/s] 15%|#5        | 4/26 [00:00<00:01, 16.20it/s] 31%|###       | 8/26 [00:00<00:00, 23.53it/s] 42%|####2     | 11/26 [00:00<00:00, 24.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.98it/s] 69%|######9   | 18/26 [00:00<00:00, 28.66it/s] 81%|########  | 21/26 [00:00<00:00, 27.70it/s] 92%|#########2| 24/26 [00:00<00:00, 27.44it/s]100%|##########| 26/26 [00:01<00:00, 24.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 375 tensor(1.8465e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 477 tensor(9.0280e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 457 tensor(6.3821e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 437 tensor(1.7528e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1646 (6.1651)	zero_count 0.0000 (11.6220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.00it/s]  8%|7         | 2/26 [00:00<00:03,  7.20it/s] 27%|##6       | 7/26 [00:00<00:00, 22.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.66it/s] 46%|####6     | 12/26 [00:00<00:00, 30.97it/s] 65%|######5   | 17/26 [00:00<00:00, 36.32it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.32it/s] 85%|########4 | 22/26 [00:00<00:00, 35.96it/s]100%|##########| 26/26 [00:00<00:00, 30.39it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.602 (0.599)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.602 (0.599)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.597 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.601 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.60it/s]
Test: [  0/  1]	Loss 1.558 (1.558)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.558 (1.558)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.558 (1.558)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.558 (1.558)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 37/  1]	epoch_time 0.0421 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0417 (0.0401)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.500000013411045, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.35it/s] 19%|#9        | 5/26 [00:00<00:01, 13.66it/s] 31%|###       | 8/26 [00:00<00:01, 17.81it/s] 46%|####6     | 12/26 [00:00<00:00, 23.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 23.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.12it/s] 88%|########8 | 23/26 [00:01<00:00, 29.45it/s]100%|##########| 26/26 [00:01<00:00, 23.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 394 tensor(4.8649e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 417 tensor(-3.2169e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1641 (6.1645)	zero_count 0.0000 (8.2290)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.65it/s] 23%|##3       | 6/26 [00:00<00:00, 30.81it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.81it/s] 42%|####2     | 11/26 [00:00<00:00, 36.15it/s] 62%|######1   | 16/26 [00:00<00:00, 40.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.99it/s] 81%|########  | 21/26 [00:00<00:00, 38.99it/s]100%|##########| 26/26 [00:00<00:00, 42.19it/s]100%|##########| 26/26 [00:00<00:00, 35.72it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.601 (0.599)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.601 (0.599)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.597 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.601 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.20it/s]
Test: [  0/  1]	Loss 1.556 (1.556)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.556 (1.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.556 (1.556)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.556 (1.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 38/  1]	epoch_time 0.0442 (0.0408)	validation_time 0.0004 (0.0006)	train_time 0.0437 (0.0402)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4999000145792961, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.51it/s] 19%|#9        | 5/26 [00:00<00:00, 23.09it/s] 35%|###4      | 9/26 [00:00<00:00, 27.52it/s] 46%|####6     | 12/26 [00:00<00:00, 26.91it/s] 62%|######1   | 16/26 [00:00<00:00, 29.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.33it/s] 88%|########8 | 23/26 [00:00<00:00, 29.46it/s]100%|##########| 26/26 [00:00<00:00, 27.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 387 tensor(-2.4432e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 488 tensor(6.4651e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1649 (6.1642)	zero_count 0.0000 (5.7330)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 27%|##6       | 7/26 [00:00<00:00, 29.43it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.43it/s] 50%|#####     | 13/26 [00:00<00:00, 37.66it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.14it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.14it/s] 92%|#########2| 24/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 35.95it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.601 (0.599)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.601 (0.599)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.597 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.601 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.36it/s]
Test: [  0/  1]	Loss 1.559 (1.559)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.559 (1.559)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.559 (1.559)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.559 (1.559)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 39/  1]	epoch_time 0.0413 (0.0408)	validation_time 0.0003 (0.0006)	train_time 0.0410 (0.0402)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4999000145792961, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.42it/s] 15%|#5        | 4/26 [00:00<00:01, 13.05it/s] 31%|###       | 8/26 [00:00<00:00, 20.12it/s] 46%|####6     | 12/26 [00:00<00:00, 24.89it/s] 62%|######1   | 16/26 [00:00<00:00, 26.10it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.74it/s] 92%|#########2| 24/26 [00:00<00:00, 30.73it/s]100%|##########| 26/26 [00:01<00:00, 24.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 383 tensor(-3.4968e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1642 (6.1641)	zero_count 0.0000 (4.9920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.69it/s] 15%|#5        | 4/26 [00:00<00:02,  7.55it/s] 31%|###       | 8/26 [00:00<00:01, 14.81it/s]                                               31%|###       | 8/26 [00:00<00:01, 14.81it/s] 50%|#####     | 13/26 [00:00<00:00, 22.74it/s] 69%|######9   | 18/26 [00:00<00:00, 28.90it/s]                                                69%|######9   | 18/26 [00:00<00:00, 28.90it/s] 88%|########8 | 23/26 [00:00<00:00, 34.06it/s]100%|##########| 26/26 [00:01<00:00, 24.27it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.602 (0.599)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.602 (0.599)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.597 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.19it/s]
Test: [  0/  1]	Loss 1.559 (1.559)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.559 (1.559)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.559 (1.559)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.559 (1.559)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 40/  1]	epoch_time 0.0484 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0480 (0.0404)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4999000145792961, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.61it/s] 19%|#9        | 5/26 [00:00<00:00, 22.57it/s] 35%|###4      | 9/26 [00:00<00:00, 27.10it/s] 50%|#####     | 13/26 [00:00<00:00, 29.97it/s] 65%|######5   | 17/26 [00:00<00:00, 29.05it/s] 81%|########  | 21/26 [00:00<00:00, 30.90it/s] 96%|#########6| 25/26 [00:00<00:00, 32.31it/s]100%|##########| 26/26 [00:00<00:00, 27.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 386 tensor(-4.2459e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1642 (6.1638)	zero_count 0.0000 (4.8750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.31it/s] 31%|###       | 8/26 [00:00<00:00, 32.23it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.23it/s] 50%|#####     | 13/26 [00:00<00:00, 37.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.04it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.04it/s] 96%|#########6| 25/26 [00:00<00:00, 44.05it/s]100%|##########| 26/26 [00:00<00:00, 36.59it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.602 (0.600)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.602 (0.600)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.597 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.51it/s]
Test: [  0/  1]	Loss 1.564 (1.564)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.564 (1.564)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.564 (1.564)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.564 (1.564)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 41/  1]	epoch_time 0.0384 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0380 (0.0403)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4999000145792961, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.15it/s] 19%|#9        | 5/26 [00:00<00:01, 19.29it/s] 35%|###4      | 9/26 [00:00<00:00, 25.02it/s] 50%|#####     | 13/26 [00:00<00:00, 28.14it/s] 65%|######5   | 17/26 [00:00<00:00, 30.08it/s] 81%|########  | 21/26 [00:00<00:00, 31.38it/s] 96%|#########6| 25/26 [00:00<00:00, 32.74it/s]100%|##########| 26/26 [00:00<00:00, 27.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1605 (6.1632)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.89it/s] 19%|#9        | 5/26 [00:00<00:00, 26.74it/s] 38%|###8      | 10/26 [00:00<00:00, 31.57it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.57it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.73it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.01it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.01it/s] 96%|#########6| 25/26 [00:00<00:00, 41.66it/s]100%|##########| 26/26 [00:00<00:00, 35.54it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.594 (0.594)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.603 (0.600)	test_acc   0.47 (  0.49)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.49)	Loss_d 0.603 (0.600)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.598 (0.600)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.600)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.601)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.601)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.46it/s]
Test: [  0/  1]	Loss 1.565 (1.565)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.565 (1.565)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.565 (1.565)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.565 (1.565)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 42/  1]	epoch_time 0.0393 (0.0409)	validation_time 0.0004 (0.0006)	train_time 0.0389 (0.0403)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.499500014603138, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.55it/s] 12%|#1        | 3/26 [00:00<00:01, 13.38it/s] 23%|##3       | 6/26 [00:00<00:00, 20.16it/s] 38%|###8      | 10/26 [00:00<00:00, 26.15it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.55it/s] 69%|######9   | 18/26 [00:00<00:00, 28.67it/s] 85%|########4 | 22/26 [00:00<00:00, 30.77it/s]100%|##########| 26/26 [00:00<00:00, 32.24it/s]100%|##########| 26/26 [00:00<00:00, 26.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 387 tensor(-1.1160e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1641 (6.1620)	zero_count 0.0000 (4.8360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.33it/s] 31%|###       | 8/26 [00:00<00:00, 37.68it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.68it/s] 50%|#####     | 13/26 [00:00<00:00, 40.64it/s] 69%|######9   | 18/26 [00:00<00:00, 43.35it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.35it/s] 88%|########8 | 23/26 [00:00<00:00, 40.60it/s]100%|##########| 26/26 [00:00<00:00, 38.42it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.595 (0.595)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.603 (0.601)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.603 (0.601)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.598 (0.601)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.601)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.603 (0.602)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.602)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 1.571 (1.571)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.571 (1.571)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.571 (1.571)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.571 (1.571)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 43/  1]	epoch_time 0.0398 (0.0409)	validation_time 0.0004 (0.0006)	train_time 0.0393 (0.0403)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4998000145852566, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 19%|#9        | 5/26 [00:00<00:00, 21.74it/s] 35%|###4      | 9/26 [00:00<00:00, 25.82it/s] 50%|#####     | 13/26 [00:00<00:00, 28.63it/s] 65%|######5   | 17/26 [00:00<00:00, 30.60it/s] 81%|########  | 21/26 [00:00<00:00, 31.79it/s] 96%|#########6| 25/26 [00:00<00:00, 30.33it/s]100%|##########| 26/26 [00:00<00:00, 27.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 375 tensor(-7.6091e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1645 (6.1637)	zero_count 0.0000 (5.3040)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s]  8%|7         | 2/26 [00:00<00:02,  8.18it/s] 27%|##6       | 7/26 [00:00<00:00, 24.33it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.33it/s] 46%|####6     | 12/26 [00:00<00:00, 32.86it/s] 65%|######5   | 17/26 [00:00<00:00, 38.08it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.08it/s] 85%|########4 | 22/26 [00:00<00:00, 39.76it/s]100%|##########| 26/26 [00:00<00:00, 32.86it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.602)	test_acc   0.47 (  0.49)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.49)	Loss_d 0.605 (0.602)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.604 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.604 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.80it/s]
Test: [  0/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 44/  1]	epoch_time 0.0448 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0444 (0.0404)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.49940001460909844, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.71it/s] 23%|##3       | 6/26 [00:00<00:00, 24.06it/s] 38%|###8      | 10/26 [00:00<00:00, 28.46it/s] 50%|#####     | 13/26 [00:00<00:00, 26.70it/s] 62%|######1   | 16/26 [00:00<00:00, 25.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.99it/s] 88%|########8 | 23/26 [00:00<00:00, 28.10it/s]100%|##########| 26/26 [00:00<00:00, 26.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 463 tensor(-5.9872e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 459 tensor(2.5915e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 500 tensor(3.0323e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 379 tensor(6.4749e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 376 tensor(1.8871e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 376 tensor(5.0593e-09, device='cuda:0')
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1671 (6.1654)	zero_count 0.0000 (9.4770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 15%|#5        | 4/26 [00:00<00:01, 18.12it/s] 35%|###4      | 9/26 [00:00<00:00, 30.17it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.17it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.97it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.97it/s] 92%|#########2| 24/26 [00:00<00:00, 40.39it/s]100%|##########| 26/26 [00:00<00:00, 33.63it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.602)	test_acc   0.47 (  0.49)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.49)	Loss_d 0.605 (0.602)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.49it/s]
Test: [  0/  1]	Loss 1.573 (1.573)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.573 (1.573)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.573 (1.573)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.573 (1.573)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 45/  1]	epoch_time 0.0439 (0.0410)	validation_time 0.0003 (0.0005)	train_time 0.0436 (0.0404)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4995000134408474, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.03it/s] 23%|##3       | 6/26 [00:00<00:00, 22.27it/s] 38%|###8      | 10/26 [00:00<00:00, 26.94it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.85it/s] 69%|######9   | 18/26 [00:00<00:00, 30.83it/s] 85%|########4 | 22/26 [00:00<00:00, 32.19it/s]100%|##########| 26/26 [00:00<00:00, 30.61it/s]100%|##########| 26/26 [00:00<00:00, 27.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 368 tensor(-4.8976e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 367 tensor(2.5397e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1649 (6.1620)	zero_count 143.0000 (8.8400)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.92it/s] 23%|##3       | 6/26 [00:00<00:00, 32.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.43it/s] 42%|####2     | 11/26 [00:00<00:00, 38.59it/s] 62%|######1   | 16/26 [00:00<00:00, 41.82it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.82it/s] 81%|########  | 21/26 [00:00<00:00, 39.29it/s]100%|##########| 26/26 [00:00<00:00, 42.05it/s]100%|##########| 26/26 [00:00<00:00, 36.03it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.603)	test_acc   0.47 (  0.49)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.49)	Loss_d 0.605 (0.603)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.41 (  0.39)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.604 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.604 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.59it/s]
Test: [  0/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 46/  1]	epoch_time 0.0427 (0.0411)	validation_time 0.0006 (0.0006)	train_time 0.0421 (0.0405)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4991000111401081, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.85it/s] 19%|#9        | 5/26 [00:00<00:01, 17.74it/s] 35%|###4      | 9/26 [00:00<00:00, 24.10it/s] 50%|#####     | 13/26 [00:00<00:00, 27.88it/s] 65%|######5   | 17/26 [00:00<00:00, 27.56it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.69it/s] 92%|#########2| 24/26 [00:00<00:00, 27.05it/s]100%|##########| 26/26 [00:01<00:00, 24.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 455 tensor(-4.3773e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 497 tensor(3.6873e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 442 tensor(8.5766e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 399 tensor(2.2364e-06, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1655 (6.1647)	zero_count 0.0000 (11.0370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.24it/s] 27%|##6       | 7/26 [00:00<00:00, 32.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.55it/s] 50%|#####     | 13/26 [00:00<00:00, 43.03it/s] 69%|######9   | 18/26 [00:00<00:00, 44.15it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.15it/s] 88%|########8 | 23/26 [00:00<00:00, 44.43it/s]100%|##########| 26/26 [00:00<00:00, 38.69it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.595 (0.595)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.602)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.605 (0.602)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.598 (0.601)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.601)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.603 (0.602)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.602)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.69it/s]
Test: [  0/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 47/  1]	epoch_time 0.0414 (0.0411)	validation_time 0.0004 (0.0005)	train_time 0.0410 (0.0405)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4996000134348869, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 15%|#5        | 4/26 [00:00<00:01, 14.45it/s] 31%|###       | 8/26 [00:00<00:00, 22.23it/s] 46%|####6     | 12/26 [00:00<00:00, 26.35it/s] 62%|######1   | 16/26 [00:00<00:00, 28.90it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.89it/s] 92%|#########2| 24/26 [00:00<00:00, 32.36it/s]100%|##########| 26/26 [00:00<00:00, 26.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 380 tensor(1.7159e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 479 tensor(-1.1384e-06, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1644 (6.1635)	zero_count 0.0000 (9.4770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.06it/s] 31%|###       | 8/26 [00:00<00:00, 27.32it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.32it/s] 50%|#####     | 13/26 [00:00<00:00, 31.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.25it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.25it/s] 92%|#########2| 24/26 [00:00<00:00, 41.32it/s]100%|##########| 26/26 [00:00<00:00, 32.41it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.604 (0.601)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.604 (0.601)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.598 (0.600)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.600)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.602 (0.601)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.601)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.07it/s]
Test: [  0/  1]	Loss 1.561 (1.561)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.561 (1.561)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.561 (1.561)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.561 (1.561)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 48/  1]	epoch_time 0.0405 (0.0411)	validation_time 0.0004 (0.0005)	train_time 0.0401 (0.0405)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4996000134348869, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  9.66it/s] 23%|##3       | 6/26 [00:00<00:01, 19.42it/s] 35%|###4      | 9/26 [00:00<00:00, 20.87it/s] 50%|#####     | 13/26 [00:00<00:00, 25.03it/s] 65%|######5   | 17/26 [00:00<00:00, 25.27it/s] 81%|########  | 21/26 [00:00<00:00, 28.06it/s] 92%|#########2| 24/26 [00:00<00:00, 27.29it/s]100%|##########| 26/26 [00:01<00:00, 24.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 436 tensor(2.9265e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 402 tensor(2.6409e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 461 tensor(1.1436e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 478 tensor(3.3667e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 469 tensor(5.3852e-06, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1669 (6.1656)	zero_count 0.0000 (11.6610)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.58it/s] 27%|##6       | 7/26 [00:00<00:00, 32.42it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.42it/s] 46%|####6     | 12/26 [00:00<00:00, 38.65it/s] 65%|######5   | 17/26 [00:00<00:00, 40.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.33it/s] 85%|########4 | 22/26 [00:00<00:00, 42.40it/s]100%|##########| 26/26 [00:00<00:00, 37.34it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.601 (0.598)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.601 (0.598)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.596 (0.598)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.596 (0.598)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.600 (0.599)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.600 (0.599)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.99it/s]
Test: [  0/  1]	Loss 1.565 (1.565)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.565 (1.565)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.565 (1.565)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.565 (1.565)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 49/  1]	epoch_time 0.0442 (0.0411)	validation_time 0.0004 (0.0005)	train_time 0.0438 (0.0405)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.49980001226067544, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.171 MB of 0.171 MB uploadedwandb: \ 0.171 MB of 0.171 MB uploadedwandb: | 0.193 MB of 0.202 MB uploaded (0.003 MB deduped)wandb: / 0.153 MB of 0.502 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/epoch_time_val █▂▃▂▂▂▃▂▁▁▁▁▃▁▁▂▃▂▃▃▂▂▃▂▃▂▃▃▂▂▃▃▄▂▂▂▃▃▂▃
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/train_time_val █▂▃▂▂▂▃▃▁▂▁▂▃▁▁▃▃▃▃▃▂▂▃▃▃▂▃▃▃▃▃▃▄▂▂▂▃▃▃▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_avg ▃▄▅▄▅▅▄▄▅▇▇█▂▂▂▁▂▃▃▅▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_d_avg ▃▄▅▄▅▅▄▄▅▇▇█▂▂▂▁▂▃▃▅▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_d_val ▃▄▅▄▅▅▄▄▅▇▇█▂▂▂▁▂▃▃▅▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_val ▃▄▅▄▅▅▄▄▅▇▇█▂▂▂▁▂▃▃▅▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_avg ▁▁▁▃▃▄▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_d_avg ▁▁▁▃▃▄▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_d_val ▁▁▁▃▃▄▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_val ▁▁▁▃▃▄▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_corr_d_avg ███▇▆▆▅▄▅▄▄▃▃▄▂▁▃▃▃▁▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_corr_d_val ███▇▆▆▅▄▅▄▄▃▃▄▂▁▃▃▃▁▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_avg ██████▇▇▇▇▇▆▇▆▆▅▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_d_avg ██████▇▇▇▇▇▆▇▆▆▅▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_d_val ██████▇▇▇▇▇▆▇▆▆▅▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_val ██████▇▇▇▇▇▆▇▆▆▅▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_avg ▁▁▁▃▃▃▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_d_avg ▁▁▁▃▃▃▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_d_val ▁▁▁▃▃▃▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_val ▁▁▁▃▃▃▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/Loss_val ██▇▆▆▅▆▅▅▄▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/l1_avg █▅▅▅▅▅▅▅▅▅▅▆▅▁▁▁▂▃▃▅▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/l1_val ▇▆▇▇▆▆▅▅▅▇██▃▁▂▂▂▃▃▆▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇█████▆▆▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_acc_val ▆▆▆▇▇▇▇▇▇█▇█▇▅▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_majacc_avg ▇███████▇███▇▅▅▅▅▅▆▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_majacc_val ████▇▇▇█▇▇▇█▇▆▅▅▆▆▆▇▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_minacc_avg ▁▁▁▂▃▄▄▄▅▆▆▆▇██████▆▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_minacc_val ▁▁▂▃▅▅▇▆▆▇▇█▇▆▇▇▇▇▇▆▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_nll_avg ▇▄▄▄▃▃▃▂▂▂▁▁▂▄▄▄▄▄▃▆████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_nll_val ▅▅▅▄▃▃▃▃▃▂▂▁▃▅▅▄▄▄▄▅████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_penalty_avg █▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_penalty_val █▇▄▃▃▂▂▃▂▂▁▁▂▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/weight_norm_avg ▁▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▅▆████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/weight_norm_val ▁▂▂▂▂▂▂▂▃▃▃▄▄▄▄▄▄▄▄▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▅█▅▂▂▂▂▂▂▂▂▂▂▁▁▁▁▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▅▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/epoch_time_val 0.04425
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/train_time_val 0.0438
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/validation_time_val 0.00042
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_avg 1.56482
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_d_avg 1.56482
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_d_val 1.56482
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_val 1.56482
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_corr_d_avg 0.3473
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_corr_d_val 0.3473
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/Loss_val 7e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/l1_avg 6.16555
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/l1_val 6.16687
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_acc_avg 0.4997
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_acc_val 0.512
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_majacc_avg 0.49962
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_majacc_val 0.53333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_minacc_avg 0.49878
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_minacc_val 0.4
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_nll_avg 0.59995
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_nll_val 0.59962
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_penalty_val 1e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/weight_norm_avg 30.23365
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/weight_norm_val 30.23349
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/zero_count_avg 11.661
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/xkiw1f3k
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_185923-xkiw1f3k/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_190204-x2v62s2r
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/x2v62s2r
