hello
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_185923-xkiw1f3k
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/xkiw1f3k
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1215
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5941, 3, 32, 32) (6059, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:39,  1.60s/it] 23%|##3       | 6/26 [00:01<00:04,  4.60it/s] 42%|####2     | 11/26 [00:01<00:01,  9.13it/s] 58%|#####7    | 15/26 [00:01<00:00, 12.77it/s] 73%|#######3  | 19/26 [00:02<00:00, 16.77it/s] 88%|########8 | 23/26 [00:02<00:00, 20.23it/s]100%|##########| 26/26 [00:02<00:00,  9.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.435 (0.569)	train_nll   0.43 (  0.57)	train_penalty   0.04 (  0.31)	weight_norm  20.85 ( 18.13)	train_acc   0.84 (  0.80)	train_minacc   0.10 (  0.08)	train_majacc   0.98 (  0.93)	train_corr   0.00 (  0.00)	l1 7.7827 (9.0312)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 23%|##3       | 6/26 [00:00<00:00, 24.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.03it/s] 42%|####2     | 11/26 [00:00<00:00, 32.68it/s] 62%|######1   | 16/26 [00:00<00:00, 37.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.90it/s] 81%|########  | 21/26 [00:00<00:00, 40.33it/s]100%|##########| 26/26 [00:00<00:00, 42.67it/s]100%|##########| 26/26 [00:00<00:00, 34.35it/s]
Test: [   0/  26]	Loss 0.375 (0.375)	test_acc   0.87 (  0.87)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.375 (0.375)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.400 (0.404)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.400 (0.404)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.396 (0.404)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.396 (0.404)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.423 (0.405)	test_acc   0.85 (  0.85)	test_minacc   0.08 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.423 (0.405)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.08 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]
Test: [  0/  1]	Loss 1.681 (1.681)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.681 (1.681)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.681 (1.681)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.681 (1.681)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0752 (0.0752)	validation_time 0.0068 (0.0068)	train_time 0.0665 (0.0665)
record: (train_acc, test_acc) (0.8470000264048576, 0.11700000613927841)
last accs (train_acc, test_acc) (0.8470000264048576, 0.11700000613927841)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 19%|#9        | 5/26 [00:00<00:01, 20.48it/s] 35%|###4      | 9/26 [00:00<00:00, 26.47it/s] 50%|#####     | 13/26 [00:00<00:00, 29.89it/s] 65%|######5   | 17/26 [00:00<00:00, 31.30it/s] 81%|########  | 21/26 [00:00<00:00, 32.73it/s] 96%|#########6| 25/26 [00:00<00:00, 33.61it/s]100%|##########| 26/26 [00:00<00:00, 28.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.419 (0.401)	train_nll   0.42 (  0.40)	train_penalty   0.03 (  0.05)	weight_norm  21.94 ( 21.60)	train_acc   0.83 (  0.85)	train_minacc   0.05 (  0.03)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 7.4524 (7.5840)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.35it/s] 27%|##6       | 7/26 [00:00<00:00, 31.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.82it/s] 46%|####6     | 12/26 [00:00<00:00, 35.33it/s] 65%|######5   | 17/26 [00:00<00:00, 39.72it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.72it/s] 85%|########4 | 22/26 [00:00<00:00, 42.01it/s]100%|##########| 26/26 [00:00<00:00, 37.14it/s]
Test: [   0/  26]	Loss 0.376 (0.376)	test_acc   0.86 (  0.86)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.376 (0.376)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.384 (0.394)	test_acc   0.85 (  0.85)	test_minacc   0.04 (  0.03)	test_majacc   0.98 (  0.99)	Loss_d 0.384 (0.394)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.04 (  0.03)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.95)
Test: [  20/  26]	Loss 0.374 (0.390)	test_acc   0.86 (  0.85)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  0.99)	Loss_d 0.374 (0.390)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.413 (0.390)	test_acc   0.84 (  0.85)	test_minacc   0.05 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.413 (0.390)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.05 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.67it/s]
Test: [  0/  1]	Loss 1.717 (1.717)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.717 (1.717)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.717 (1.717)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.717 (1.717)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Overall Timing[  1/  1]	epoch_time 0.0395 (0.0573)	validation_time 0.0006 (0.0037)	train_time 0.0389 (0.0527)
record: (train_acc, test_acc) (0.8470000264048576, 0.11700000613927841)
last accs (train_acc, test_acc) (0.8476000269055366, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.63it/s] 23%|##3       | 6/26 [00:00<00:00, 25.22it/s] 38%|###8      | 10/26 [00:00<00:00, 29.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.28it/s] 69%|######9   | 18/26 [00:00<00:00, 31.66it/s] 85%|########4 | 22/26 [00:00<00:00, 32.35it/s]100%|##########| 26/26 [00:00<00:00, 33.09it/s]100%|##########| 26/26 [00:00<00:00, 29.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.379 (0.384)	train_nll   0.38 (  0.38)	train_penalty   0.02 (  0.04)	weight_norm  22.08 ( 22.03)	train_acc   0.84 (  0.85)	train_minacc   0.17 (  0.06)	train_majacc   0.97 (  0.99)	train_corr   0.00 (  0.00)	l1 7.5357 (7.5388)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.79it/s] 23%|##3       | 6/26 [00:00<00:00, 27.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.32it/s] 42%|####2     | 11/26 [00:00<00:00, 35.93it/s] 62%|######1   | 16/26 [00:00<00:00, 39.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.95it/s] 81%|########  | 21/26 [00:00<00:00, 37.52it/s]100%|##########| 26/26 [00:00<00:00, 40.84it/s]100%|##########| 26/26 [00:00<00:00, 34.01it/s]
Test: [   0/  26]	Loss 0.341 (0.341)	test_acc   0.87 (  0.87)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.341 (0.341)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.346 (0.363)	test_acc   0.87 (  0.85)	test_minacc   0.10 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.346 (0.363)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.10 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.335 (0.361)	test_acc   0.86 (  0.85)	test_minacc   0.05 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.335 (0.361)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.05 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.360 (0.361)	test_acc   0.86 (  0.85)	test_minacc   0.17 (  0.08)	test_majacc   1.00 (  0.99)	Loss_d 0.360 (0.361)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.17 (  0.08)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.88it/s]
Test: [  0/  1]	Loss 1.866 (1.866)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 1.866 (1.866)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.866 (1.866)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 1.866 (1.866)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0421 (0.0523)	validation_time 0.0004 (0.0026)	train_time 0.0417 (0.0490)
record: (train_acc, test_acc) (0.8527000242471695, 0.125)
last accs (train_acc, test_acc) (0.8527000242471695, 0.125)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 12%|#1        | 3/26 [00:00<00:01, 13.97it/s] 27%|##6       | 7/26 [00:00<00:00, 23.15it/s] 42%|####2     | 11/26 [00:00<00:00, 28.12it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.48it/s] 88%|########8 | 23/26 [00:00<00:00, 35.13it/s]100%|##########| 26/26 [00:00<00:00, 28.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.340 (0.367)	train_nll   0.34 (  0.37)	train_penalty   0.01 (  0.04)	weight_norm  22.16 ( 22.12)	train_acc   0.86 (  0.85)	train_minacc   0.35 (  0.11)	train_majacc   0.96 (  0.99)	train_corr   0.00 (  0.00)	l1 7.5268 (7.5955)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.12it/s] 27%|##6       | 7/26 [00:00<00:00, 35.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.18it/s] 46%|####6     | 12/26 [00:00<00:00, 40.02it/s] 65%|######5   | 17/26 [00:00<00:00, 37.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.80it/s] 85%|########4 | 22/26 [00:00<00:00, 39.91it/s]100%|##########| 26/26 [00:00<00:00, 36.19it/s]
Test: [   0/  26]	Loss 0.329 (0.329)	test_acc   0.86 (  0.86)	test_minacc   0.20 (  0.20)	test_majacc   0.95 (  0.95)	Loss_d 0.329 (0.329)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.342 (0.344)	test_acc   0.86 (  0.86)	test_minacc   0.23 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 0.342 (0.344)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.23 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.322 (0.344)	test_acc   0.87 (  0.86)	test_minacc   0.36 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 0.322 (0.344)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.36 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.87)
Test: [  26/  26]	Loss 0.322 (0.342)	test_acc   0.87 (  0.86)	test_minacc   0.40 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 0.322 (0.342)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.40 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.04it/s]
Test: [  0/  1]	Loss 1.740 (1.740)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 1.740 (1.740)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 1.740 (1.740)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 1.740 (1.740)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0393 (0.0490)	validation_time 0.0004 (0.0020)	train_time 0.0388 (0.0465)
record: (train_acc, test_acc) (0.8598000240325928, 0.22700001299381256)
last accs (train_acc, test_acc) (0.8598000240325928, 0.22700001299381256)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.99it/s] 19%|#9        | 5/26 [00:00<00:00, 24.75it/s] 35%|###4      | 9/26 [00:00<00:00, 29.61it/s] 50%|#####     | 13/26 [00:00<00:00, 30.80it/s] 65%|######5   | 17/26 [00:00<00:00, 32.58it/s] 81%|########  | 21/26 [00:00<00:00, 33.85it/s] 96%|#########6| 25/26 [00:00<00:00, 34.31it/s]100%|##########| 26/26 [00:00<00:00, 30.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.333 (0.348)	train_nll   0.33 (  0.35)	train_penalty   0.01 (  0.03)	weight_norm  22.25 ( 22.21)	train_acc   0.85 (  0.85)	train_minacc   0.43 (  0.19)	train_majacc   0.93 (  0.97)	train_corr   0.00 (  0.00)	l1 7.4522 (7.5724)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.61it/s] 27%|##6       | 7/26 [00:00<00:00, 27.80it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.80it/s] 46%|####6     | 12/26 [00:00<00:00, 35.56it/s] 65%|######5   | 17/26 [00:00<00:00, 38.39it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.39it/s] 88%|########8 | 23/26 [00:00<00:00, 44.17it/s]100%|##########| 26/26 [00:00<00:00, 34.83it/s]
Test: [   0/  26]	Loss 0.307 (0.307)	test_acc   0.86 (  0.86)	test_minacc   0.26 (  0.26)	test_majacc   0.95 (  0.95)	Loss_d 0.307 (0.307)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.326 (0.334)	test_acc   0.85 (  0.86)	test_minacc   0.33 (  0.34)	test_majacc   0.93 (  0.95)	Loss_d 0.326 (0.334)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.33 (  0.34)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  20/  26]	Loss 0.319 (0.333)	test_acc   0.88 (  0.86)	test_minacc   0.41 (  0.36)	test_majacc   0.96 (  0.95)	Loss_d 0.319 (0.333)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.41 (  0.36)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  26/  26]	Loss 0.310 (0.331)	test_acc   0.87 (  0.86)	test_minacc   0.45 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 0.310 (0.331)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.45 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.39it/s]
Test: [  0/  1]	Loss 1.801 (1.801)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.99 (  0.99)	Loss_d 1.801 (1.801)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 1.801 (1.801)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.99 (  0.99)	Loss_d 1.801 (1.801)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0410 (0.0474)	validation_time 0.0004 (0.0017)	train_time 0.0406 (0.0453)
record: (train_acc, test_acc) (0.8642000237703323, 0.23900000751018524)
last accs (train_acc, test_acc) (0.8642000237703323, 0.23900000751018524)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s]  8%|7         | 2/26 [00:00<00:03,  7.75it/s] 23%|##3       | 6/26 [00:00<00:01, 18.42it/s] 38%|###8      | 10/26 [00:00<00:00, 24.20it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.10it/s] 69%|######9   | 18/26 [00:00<00:00, 30.41it/s] 85%|########4 | 22/26 [00:00<00:00, 32.25it/s]100%|##########| 26/26 [00:00<00:00, 33.68it/s]100%|##########| 26/26 [00:01<00:00, 25.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.297 (0.326)	train_nll   0.30 (  0.33)	train_penalty   0.01 (  0.02)	weight_norm  22.37 ( 22.31)	train_acc   0.87 (  0.86)	train_minacc   0.55 (  0.26)	train_majacc   0.93 (  0.97)	train_corr   0.00 (  0.00)	l1 7.3352 (7.5779)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.23it/s] 23%|##3       | 6/26 [00:00<00:00, 31.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.99it/s] 42%|####2     | 11/26 [00:00<00:00, 38.63it/s] 62%|######1   | 16/26 [00:00<00:00, 42.48it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.48it/s] 81%|########  | 21/26 [00:00<00:00, 41.43it/s]100%|##########| 26/26 [00:00<00:00, 37.80it/s]
Test: [   0/  26]	Loss 0.288 (0.288)	test_acc   0.87 (  0.87)	test_minacc   0.26 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 0.288 (0.288)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.305 (0.315)	test_acc   0.87 (  0.87)	test_minacc   0.27 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 0.305 (0.315)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.27 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  20/  26]	Loss 0.294 (0.311)	test_acc   0.88 (  0.87)	test_minacc   0.41 (  0.35)	test_majacc   0.96 (  0.96)	Loss_d 0.294 (0.311)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.41 (  0.35)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.274 (0.308)	test_acc   0.89 (  0.87)	test_minacc   0.45 (  0.35)	test_majacc   0.97 (  0.97)	Loss_d 0.274 (0.308)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.45 (  0.35)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.87it/s]
Test: [  0/  1]	Loss 1.861 (1.861)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.99 (  0.99)	Loss_d 1.861 (1.861)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 1.861 (1.861)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.99 (  0.99)	Loss_d 1.861 (1.861)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.76)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0398 (0.0462)	validation_time 0.0003 (0.0015)	train_time 0.0395 (0.0443)
record: (train_acc, test_acc) (0.8733000265955925, 0.25300002098083496)
last accs (train_acc, test_acc) (0.8733000265955925, 0.25300002098083496)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.29it/s] 19%|#9        | 5/26 [00:00<00:01, 14.43it/s] 35%|###4      | 9/26 [00:00<00:00, 21.28it/s] 50%|#####     | 13/26 [00:00<00:00, 25.44it/s] 65%|######5   | 17/26 [00:00<00:00, 28.36it/s] 81%|########  | 21/26 [00:00<00:00, 29.97it/s] 96%|#########6| 25/26 [00:00<00:00, 31.41it/s]100%|##########| 26/26 [00:01<00:00, 24.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.269 (0.314)	train_nll   0.27 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.50 ( 22.43)	train_acc   0.88 (  0.87)	train_minacc   0.57 (  0.34)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 7.2414 (7.4912)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.45it/s] 27%|##6       | 7/26 [00:00<00:00, 31.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.53it/s] 50%|#####     | 13/26 [00:00<00:00, 38.29it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.16it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.16it/s] 92%|#########2| 24/26 [00:00<00:00, 45.30it/s]100%|##########| 26/26 [00:00<00:00, 37.21it/s]
Test: [   0/  26]	Loss 0.278 (0.278)	test_acc   0.87 (  0.87)	test_minacc   0.34 (  0.34)	test_majacc   0.95 (  0.95)	Loss_d 0.278 (0.278)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.298 (0.300)	test_acc   0.87 (  0.87)	test_minacc   0.40 (  0.41)	test_majacc   0.95 (  0.95)	Loss_d 0.298 (0.300)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.40 (  0.41)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  20/  26]	Loss 0.294 (0.299)	test_acc   0.88 (  0.87)	test_minacc   0.45 (  0.42)	test_majacc   0.95 (  0.95)	Loss_d 0.294 (0.299)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.45 (  0.42)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  26/  26]	Loss 0.245 (0.296)	test_acc   0.90 (  0.87)	test_minacc   0.50 (  0.43)	test_majacc   0.97 (  0.95)	Loss_d 0.245 (0.296)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.50 (  0.43)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.86 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.50it/s]
Test: [  0/  1]	Loss 1.869 (1.869)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 1.869 (1.869)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.869 (1.869)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 1.869 (1.869)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0399 (0.0453)	validation_time 0.0004 (0.0013)	train_time 0.0394 (0.0436)
record: (train_acc, test_acc) (0.8732000243663788, 0.2800000011920929)
last accs (train_acc, test_acc) (0.8732000243663788, 0.2800000011920929)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.37it/s] 19%|#9        | 5/26 [00:00<00:01, 16.21it/s] 35%|###4      | 9/26 [00:00<00:00, 22.65it/s] 50%|#####     | 13/26 [00:00<00:00, 26.56it/s] 65%|######5   | 17/26 [00:00<00:00, 28.38it/s] 81%|########  | 21/26 [00:00<00:00, 30.27it/s] 96%|#########6| 25/26 [00:00<00:00, 31.83it/s]100%|##########| 26/26 [00:01<00:00, 25.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.280 (0.306)	train_nll   0.28 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.65 ( 22.58)	train_acc   0.90 (  0.87)	train_minacc   0.78 (  0.35)	train_majacc   0.92 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0214 (7.4129)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.64it/s] 19%|#9        | 5/26 [00:00<00:00, 25.68it/s] 38%|###8      | 10/26 [00:00<00:00, 35.49it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.56it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.70it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.70it/s] 92%|#########2| 24/26 [00:00<00:00, 38.09it/s]100%|##########| 26/26 [00:00<00:00, 34.47it/s]
Test: [   0/  26]	Loss 0.260 (0.260)	test_acc   0.89 (  0.89)	test_minacc   0.48 (  0.48)	test_majacc   0.95 (  0.95)	Loss_d 0.260 (0.260)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.287 (0.293)	test_acc   0.85 (  0.87)	test_minacc   0.48 (  0.52)	test_majacc   0.90 (  0.93)	Loss_d 0.287 (0.293)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.48 (  0.52)	test_majacc_d   0.90 (  0.93)	test_corr_d   0.81 (  0.81)
Test: [  20/  26]	Loss 0.284 (0.287)	test_acc   0.88 (  0.87)	test_minacc   0.54 (  0.55)	test_majacc   0.94 (  0.93)	Loss_d 0.284 (0.287)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.82 (  0.81)
Test: [  26/  26]	Loss 0.236 (0.283)	test_acc   0.92 (  0.88)	test_minacc   0.80 (  0.56)	test_majacc   0.95 (  0.94)	Loss_d 0.236 (0.283)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.80 (  0.56)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.78 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.72it/s]
Test: [  0/  1]	Loss 1.759 (1.759)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 1.759 (1.759)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 1.759 (1.759)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 1.759 (1.759)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.58 (  0.58)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0431 (0.0450)	validation_time 0.0007 (0.0012)	train_time 0.0424 (0.0435)
record: (train_acc, test_acc) (0.8791000216603279, 0.35500001907348633)
last accs (train_acc, test_acc) (0.8791000216603279, 0.35500001907348633)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.22it/s] 19%|#9        | 5/26 [00:00<00:01, 16.40it/s] 35%|###4      | 9/26 [00:00<00:00, 22.77it/s] 50%|#####     | 13/26 [00:00<00:00, 27.02it/s] 65%|######5   | 17/26 [00:00<00:00, 29.73it/s] 81%|########  | 21/26 [00:00<00:00, 31.26it/s] 96%|#########6| 25/26 [00:00<00:00, 32.01it/s]100%|##########| 26/26 [00:01<00:00, 25.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.243 (0.286)	train_nll   0.24 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.84 ( 22.75)	train_acc   0.91 (  0.88)	train_minacc   0.68 (  0.41)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0107 (7.4952)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.19it/s] 31%|###       | 8/26 [00:00<00:00, 31.62it/s]                                               31%|###       | 8/26 [00:00<00:00, 31.62it/s] 50%|#####     | 13/26 [00:00<00:00, 37.65it/s] 69%|######9   | 18/26 [00:00<00:00, 40.87it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.87it/s] 88%|########8 | 23/26 [00:00<00:00, 43.24it/s]100%|##########| 26/26 [00:00<00:00, 37.09it/s]
Test: [   0/  26]	Loss 0.256 (0.256)	test_acc   0.89 (  0.89)	test_minacc   0.54 (  0.54)	test_majacc   0.94 (  0.94)	Loss_d 0.256 (0.256)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.306 (0.292)	test_acc   0.85 (  0.87)	test_minacc   0.58 (  0.57)	test_majacc   0.90 (  0.92)	Loss_d 0.306 (0.292)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.90 (  0.92)	test_corr_d   0.78 (  0.79)
Test: [  20/  26]	Loss 0.285 (0.284)	test_acc   0.88 (  0.88)	test_minacc   0.57 (  0.60)	test_majacc   0.93 (  0.93)	Loss_d 0.285 (0.284)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.57 (  0.60)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.80 (  0.79)
Test: [  26/  26]	Loss 0.212 (0.278)	test_acc   0.94 (  0.88)	test_minacc   0.85 (  0.61)	test_majacc   0.96 (  0.93)	Loss_d 0.212 (0.278)	test_acc_d   0.94 (  0.88)	test_minacc_d   0.85 (  0.61)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.77 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.26it/s]
Test: [  0/  1]	Loss 1.764 (1.764)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 1.764 (1.764)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 1.764 (1.764)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 1.764 (1.764)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.45 (  0.45)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0403 (0.0445)	validation_time 0.0005 (0.0012)	train_time 0.0398 (0.0431)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.85it/s] 19%|#9        | 5/26 [00:00<00:00, 22.57it/s] 35%|###4      | 9/26 [00:00<00:00, 28.73it/s] 50%|#####     | 13/26 [00:00<00:00, 31.61it/s] 65%|######5   | 17/26 [00:00<00:00, 33.18it/s] 81%|########  | 21/26 [00:00<00:00, 34.24it/s] 96%|#########6| 25/26 [00:00<00:00, 34.76it/s]100%|##########| 26/26 [00:00<00:00, 29.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.245 (0.272)	train_nll   0.25 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.07 ( 22.96)	train_acc   0.90 (  0.89)	train_minacc   0.62 (  0.50)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7950 (7.6585)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.13it/s] 27%|##6       | 7/26 [00:00<00:00, 35.33it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.33it/s] 46%|####6     | 12/26 [00:00<00:00, 41.05it/s] 69%|######9   | 18/26 [00:00<00:00, 44.37it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.37it/s] 92%|#########2| 24/26 [00:00<00:00, 48.39it/s]100%|##########| 26/26 [00:00<00:00, 41.62it/s]
Test: [   0/  26]	Loss 0.266 (0.266)	test_acc   0.87 (  0.87)	test_minacc   0.50 (  0.50)	test_majacc   0.93 (  0.93)	Loss_d 0.266 (0.266)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.265 (0.289)	test_acc   0.88 (  0.87)	test_minacc   0.54 (  0.52)	test_majacc   0.93 (  0.93)	Loss_d 0.265 (0.289)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.272 (0.281)	test_acc   0.88 (  0.88)	test_minacc   0.55 (  0.56)	test_majacc   0.93 (  0.93)	Loss_d 0.272 (0.281)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.83 (  0.82)
Test: [  26/  26]	Loss 0.221 (0.276)	test_acc   0.93 (  0.88)	test_minacc   0.75 (  0.57)	test_majacc   0.97 (  0.93)	Loss_d 0.221 (0.276)	test_acc_d   0.93 (  0.88)	test_minacc_d   0.75 (  0.57)	test_majacc_d   0.97 (  0.93)	test_corr_d   0.81 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.87it/s]
Test: [  0/  1]	Loss 1.807 (1.807)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 1.807 (1.807)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 1.807 (1.807)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 1.807 (1.807)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.64 (  0.64)
Overall Timing[  9/  1]	epoch_time 0.0356 (0.0436)	validation_time 0.0003 (0.0011)	train_time 0.0352 (0.0423)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.8803000266551971, 0.3490000069141388)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.48it/s] 19%|#9        | 5/26 [00:00<00:00, 25.82it/s] 35%|###4      | 9/26 [00:00<00:00, 31.51it/s] 50%|#####     | 13/26 [00:00<00:00, 34.42it/s] 65%|######5   | 17/26 [00:00<00:00, 36.25it/s] 81%|########  | 21/26 [00:00<00:00, 37.31it/s] 96%|#########6| 25/26 [00:00<00:00, 37.91it/s]100%|##########| 26/26 [00:00<00:00, 32.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.266 (0.272)	train_nll   0.27 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  23.36 ( 23.21)	train_acc   0.88 (  0.89)	train_minacc   0.62 (  0.51)	train_majacc   0.92 (  0.95)	train_corr   0.00 (  0.00)	l1 6.8233 (7.4802)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.80it/s] 31%|###       | 8/26 [00:00<00:00, 39.83it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.83it/s] 50%|#####     | 13/26 [00:00<00:00, 41.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.27it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.27it/s] 96%|#########6| 25/26 [00:00<00:00, 47.81it/s]100%|##########| 26/26 [00:00<00:00, 42.27it/s]
Test: [   0/  26]	Loss 0.257 (0.257)	test_acc   0.91 (  0.91)	test_minacc   0.56 (  0.56)	test_majacc   0.96 (  0.96)	Loss_d 0.257 (0.257)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.264 (0.291)	test_acc   0.87 (  0.88)	test_minacc   0.54 (  0.52)	test_majacc   0.92 (  0.94)	Loss_d 0.264 (0.291)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.92 (  0.94)	test_corr_d   0.82 (  0.82)
Test: [  20/  26]	Loss 0.250 (0.279)	test_acc   0.91 (  0.88)	test_minacc   0.62 (  0.56)	test_majacc   0.95 (  0.94)	Loss_d 0.250 (0.279)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.81 (  0.82)
Test: [  26/  26]	Loss 0.232 (0.273)	test_acc   0.89 (  0.89)	test_minacc   0.68 (  0.57)	test_majacc   0.93 (  0.94)	Loss_d 0.232 (0.273)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.68 (  0.57)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.81 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.55it/s]
Test: [  0/  1]	Loss 1.926 (1.926)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.95 (  0.95)	Loss_d 1.926 (1.926)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 1.926 (1.926)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.95 (  0.95)	Loss_d 1.926 (1.926)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.57 (  0.57)
Overall Timing[ 10/  1]	epoch_time 0.0327 (0.0426)	validation_time 0.0003 (0.0010)	train_time 0.0323 (0.0414)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.8865000187158585, 0.36400002241134644)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.98it/s] 19%|#9        | 5/26 [00:00<00:01, 18.25it/s] 35%|###4      | 9/26 [00:00<00:00, 25.44it/s] 50%|#####     | 13/26 [00:00<00:00, 29.93it/s] 65%|######5   | 17/26 [00:00<00:00, 32.84it/s] 81%|########  | 21/26 [00:00<00:00, 34.39it/s] 96%|#########6| 25/26 [00:00<00:00, 35.20it/s]100%|##########| 26/26 [00:00<00:00, 28.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.176 (0.246)	train_nll   0.18 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.66 ( 23.51)	train_acc   0.92 (  0.90)	train_minacc   0.82 (  0.56)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 7.8246 (7.4900)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.60it/s] 27%|##6       | 7/26 [00:00<00:00, 32.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.36it/s] 46%|####6     | 12/26 [00:00<00:00, 39.27it/s] 65%|######5   | 17/26 [00:00<00:00, 39.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.98it/s] 88%|########8 | 23/26 [00:00<00:00, 44.95it/s]100%|##########| 26/26 [00:00<00:00, 37.85it/s]
Test: [   0/  26]	Loss 0.214 (0.214)	test_acc   0.92 (  0.92)	test_minacc   0.64 (  0.64)	test_majacc   0.96 (  0.96)	Loss_d 0.214 (0.214)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.225 (0.243)	test_acc   0.89 (  0.90)	test_minacc   0.65 (  0.66)	test_majacc   0.93 (  0.94)	Loss_d 0.225 (0.243)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.65 (  0.66)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.80 (  0.79)
Test: [  20/  26]	Loss 0.201 (0.230)	test_acc   0.93 (  0.90)	test_minacc   0.73 (  0.67)	test_majacc   0.96 (  0.94)	Loss_d 0.201 (0.230)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.73 (  0.67)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.78 (  0.79)
Test: [  26/  26]	Loss 0.149 (0.221)	test_acc   0.95 (  0.91)	test_minacc   0.82 (  0.69)	test_majacc   0.97 (  0.95)	Loss_d 0.149 (0.221)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.82 (  0.69)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.79 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.07it/s]
Test: [  0/  1]	Loss 2.218 (2.218)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 2.218 (2.218)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 2.218 (2.218)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 2.218 (2.218)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.47 (  0.47)
Overall Timing[ 11/  1]	epoch_time 0.0353 (0.0420)	validation_time 0.0004 (0.0010)	train_time 0.0348 (0.0408)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.9085000188350677, 0.4010000228881836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.58it/s] 19%|#9        | 5/26 [00:00<00:00, 24.39it/s] 35%|###4      | 9/26 [00:00<00:00, 30.55it/s] 50%|#####     | 13/26 [00:00<00:00, 32.51it/s] 65%|######5   | 17/26 [00:00<00:00, 34.54it/s] 81%|########  | 21/26 [00:00<00:00, 35.15it/s] 96%|#########6| 25/26 [00:00<00:00, 35.69it/s]100%|##########| 26/26 [00:00<00:00, 31.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.192 (0.230)	train_nll   0.19 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.98 ( 23.82)	train_acc   0.90 (  0.90)	train_minacc   0.75 (  0.60)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0109 (7.7904)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.85it/s] 27%|##6       | 7/26 [00:00<00:00, 32.77it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.77it/s] 50%|#####     | 13/26 [00:00<00:00, 39.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.41it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.41it/s] 96%|#########6| 25/26 [00:00<00:00, 46.43it/s]100%|##########| 26/26 [00:00<00:00, 39.71it/s]
Test: [   0/  26]	Loss 0.201 (0.201)	test_acc   0.92 (  0.92)	test_minacc   0.74 (  0.74)	test_majacc   0.94 (  0.94)	Loss_d 0.201 (0.201)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.197 (0.217)	test_acc   0.90 (  0.91)	test_minacc   0.79 (  0.76)	test_majacc   0.91 (  0.94)	Loss_d 0.197 (0.217)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.79 (  0.76)	test_majacc_d   0.91 (  0.94)	test_corr_d   0.76 (  0.76)
Test: [  20/  26]	Loss 0.189 (0.206)	test_acc   0.92 (  0.91)	test_minacc   0.73 (  0.77)	test_majacc   0.95 (  0.94)	Loss_d 0.189 (0.206)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.73 (  0.77)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.75 (  0.76)
Test: [  26/  26]	Loss 0.120 (0.196)	test_acc   0.97 (  0.92)	test_minacc   0.98 (  0.79)	test_majacc   0.97 (  0.94)	Loss_d 0.120 (0.196)	test_acc_d   0.97 (  0.92)	test_minacc_d   0.98 (  0.79)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.74 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.70it/s]
Test: [  0/  1]	Loss 2.293 (2.293)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.94 (  0.94)	Loss_d 2.293 (2.293)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 2.293 (2.293)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.94 (  0.94)	Loss_d 2.293 (2.293)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.44 (  0.44)
Overall Timing[ 12/  1]	epoch_time 0.0331 (0.0413)	validation_time 0.0005 (0.0009)	train_time 0.0327 (0.0402)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.9197000225782395, 0.4240000247955322)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.45it/s] 19%|#9        | 5/26 [00:00<00:00, 23.74it/s] 35%|###4      | 9/26 [00:00<00:00, 29.47it/s] 50%|#####     | 13/26 [00:00<00:00, 32.36it/s] 65%|######5   | 17/26 [00:00<00:00, 34.13it/s] 81%|########  | 21/26 [00:00<00:00, 35.83it/s] 96%|#########6| 25/26 [00:00<00:00, 36.95it/s]100%|##########| 26/26 [00:00<00:00, 31.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.139 (0.205)	train_nll   0.14 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm  24.36 ( 24.17)	train_acc   0.95 (  0.92)	train_minacc   0.90 (  0.66)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0171 (8.1650)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 27%|##6       | 7/26 [00:00<00:00, 31.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.70it/s] 50%|#####     | 13/26 [00:00<00:00, 37.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.94it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.94it/s] 96%|#########6| 25/26 [00:00<00:00, 45.38it/s]100%|##########| 26/26 [00:00<00:00, 39.27it/s]
Test: [   0/  26]	Loss 0.210 (0.210)	test_acc   0.92 (  0.92)	test_minacc   0.74 (  0.74)	test_majacc   0.95 (  0.95)	Loss_d 0.210 (0.210)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.215 (0.235)	test_acc   0.91 (  0.90)	test_minacc   0.85 (  0.73)	test_majacc   0.91 (  0.92)	Loss_d 0.215 (0.235)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.85 (  0.73)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.71 (  0.72)
Test: [  20/  26]	Loss 0.153 (0.207)	test_acc   0.94 (  0.91)	test_minacc   0.86 (  0.78)	test_majacc   0.96 (  0.93)	Loss_d 0.153 (0.207)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.86 (  0.78)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.098 (0.193)	test_acc   0.98 (  0.92)	test_minacc   0.98 (  0.80)	test_majacc   0.98 (  0.94)	Loss_d 0.098 (0.193)	test_acc_d   0.98 (  0.92)	test_minacc_d   0.98 (  0.80)	test_majacc_d   0.98 (  0.94)	test_corr_d   0.72 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.50it/s]
Test: [  0/  1]	Loss 2.404 (2.404)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 2.404 (2.404)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 2.404 (2.404)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 2.404 (2.404)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.40 (  0.40)
Overall Timing[ 13/  1]	epoch_time 0.0352 (0.0409)	validation_time 0.0003 (0.0009)	train_time 0.0349 (0.0398)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.9191000216603279, 0.42000001668930054)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 19%|#9        | 5/26 [00:00<00:00, 21.86it/s] 35%|###4      | 9/26 [00:00<00:00, 28.86it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.20it/s] 88%|########8 | 23/26 [00:00<00:00, 37.29it/s]100%|##########| 26/26 [00:00<00:00, 31.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.135 (0.198)	train_nll   0.14 (  0.20)	train_penalty   0.00 (  0.01)	weight_norm  24.76 ( 24.56)	train_acc   0.96 (  0.92)	train_minacc   0.85 (  0.67)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0668 (8.1920)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.41it/s] 23%|##3       | 6/26 [00:00<00:00, 30.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.95it/s] 42%|####2     | 11/26 [00:00<00:00, 37.18it/s] 65%|######5   | 17/26 [00:00<00:00, 41.65it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.65it/s] 88%|########8 | 23/26 [00:00<00:00, 46.08it/s]100%|##########| 26/26 [00:00<00:00, 38.67it/s]
Test: [   0/  26]	Loss 0.172 (0.172)	test_acc   0.93 (  0.93)	test_minacc   0.74 (  0.74)	test_majacc   0.96 (  0.96)	Loss_d 0.172 (0.172)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.227 (0.241)	test_acc   0.91 (  0.90)	test_minacc   0.87 (  0.73)	test_majacc   0.91 (  0.92)	Loss_d 0.227 (0.241)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.87 (  0.73)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.71 (  0.73)
Test: [  20/  26]	Loss 0.130 (0.220)	test_acc   0.95 (  0.91)	test_minacc   0.89 (  0.75)	test_majacc   0.96 (  0.93)	Loss_d 0.130 (0.220)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.89 (  0.75)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.73 (  0.73)
Test: [  26/  26]	Loss 0.073 (0.204)	test_acc   0.99 (  0.92)	test_minacc   0.98 (  0.78)	test_majacc   0.99 (  0.94)	Loss_d 0.073 (0.204)	test_acc_d   0.99 (  0.92)	test_minacc_d   0.98 (  0.78)	test_majacc_d   0.99 (  0.94)	test_corr_d   0.74 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.74it/s]
Test: [  0/  1]	Loss 2.581 (2.581)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.89 (  0.89)	Loss_d 2.581 (2.581)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 2.581 (2.581)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.89 (  0.89)	Loss_d 2.581 (2.581)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.49 (  0.49)
Overall Timing[ 14/  1]	epoch_time 0.0340 (0.0404)	validation_time 0.0005 (0.0009)	train_time 0.0335 (0.0394)
record: (train_acc, test_acc) (0.8800000212788582, 0.42900002002716064)
last accs (train_acc, test_acc) (0.9150000233650207, 0.3750000298023224)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 19%|#9        | 5/26 [00:00<00:00, 23.28it/s] 35%|###4      | 9/26 [00:00<00:00, 28.44it/s] 50%|#####     | 13/26 [00:00<00:00, 31.28it/s] 65%|######5   | 17/26 [00:00<00:00, 32.86it/s] 81%|########  | 21/26 [00:00<00:00, 33.96it/s] 96%|#########6| 25/26 [00:00<00:00, 34.57it/s]100%|##########| 26/26 [00:00<00:00, 29.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.007 (0.083)	train_nll   0.26 (  0.25)	train_penalty   0.01 (  0.00)	weight_norm  25.13 ( 24.98)	train_acc   0.87 (  0.90)	train_minacc   0.75 (  0.69)	train_majacc   0.90 (  0.93)	train_corr   0.00 (  0.00)	l1 6.3317 (7.6855)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.00it/s] 23%|##3       | 6/26 [00:00<00:00, 25.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.73it/s] 42%|####2     | 11/26 [00:00<00:00, 33.73it/s] 65%|######5   | 17/26 [00:00<00:00, 41.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.33it/s] 85%|########4 | 22/26 [00:00<00:00, 41.08it/s]100%|##########| 26/26 [00:00<00:00, 36.37it/s]
Test: [   0/  26]	Loss 0.290 (0.290)	test_acc   0.88 (  0.88)	test_minacc   0.82 (  0.82)	test_majacc   0.89 (  0.89)	Loss_d 0.290 (0.290)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.293 (0.275)	test_acc   0.89 (  0.89)	test_minacc   0.85 (  0.86)	test_majacc   0.89 (  0.89)	Loss_d 0.293 (0.275)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.85 (  0.86)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.70 (  0.67)
Test: [  20/  26]	Loss 0.310 (0.277)	test_acc   0.86 (  0.88)	test_minacc   0.75 (  0.85)	test_majacc   0.88 (  0.89)	Loss_d 0.310 (0.277)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.75 (  0.85)	test_majacc_d   0.88 (  0.89)	test_corr_d   0.67 (  0.67)
Test: [  26/  26]	Loss 0.279 (0.282)	test_acc   0.87 (  0.88)	test_minacc   0.75 (  0.83)	test_majacc   0.89 (  0.89)	Loss_d 0.279 (0.282)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.75 (  0.83)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.68 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.99it/s]
Test: [  0/  1]	Loss 1.531 (1.531)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.93 (  0.93)	Loss_d 1.531 (1.531)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.531 (1.531)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.93 (  0.93)	Loss_d 1.531 (1.531)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.36 (  0.36)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0434 (0.0406)	validation_time 0.0004 (0.0008)	train_time 0.0429 (0.0396)
record: (train_acc, test_acc) (0.8798000228404999, 0.47200003266334534)
last accs (train_acc, test_acc) (0.8798000228404999, 0.47200003266334534)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.20it/s] 19%|#9        | 5/26 [00:00<00:00, 24.20it/s] 35%|###4      | 9/26 [00:00<00:00, 30.17it/s] 50%|#####     | 13/26 [00:00<00:00, 33.79it/s] 69%|######9   | 18/26 [00:00<00:00, 36.65it/s] 88%|########8 | 23/26 [00:00<00:00, 38.13it/s]100%|##########| 26/26 [00:00<00:00, 32.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.004 (0.002)	train_nll   0.41 (  0.38)	train_penalty   0.00 (  0.00)	weight_norm  25.21 ( 25.18)	train_acc   0.79 (  0.81)	train_minacc   0.65 (  0.79)	train_majacc   0.82 (  0.81)	train_corr   0.00 (  0.00)	l1 5.6261 (5.9287)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.62it/s] 31%|###       | 8/26 [00:00<00:00, 40.60it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.60it/s] 50%|#####     | 13/26 [00:00<00:00, 43.20it/s] 69%|######9   | 18/26 [00:00<00:00, 44.27it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.27it/s] 96%|#########6| 25/26 [00:00<00:00, 49.79it/s]100%|##########| 26/26 [00:00<00:00, 42.64it/s]
Test: [   0/  26]	Loss 0.390 (0.390)	test_acc   0.80 (  0.80)	test_minacc   0.72 (  0.72)	test_majacc   0.81 (  0.81)	Loss_d 0.390 (0.390)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.376 (0.364)	test_acc   0.82 (  0.82)	test_minacc   0.75 (  0.77)	test_majacc   0.83 (  0.82)	Loss_d 0.376 (0.364)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.75 (  0.77)	test_majacc_d   0.83 (  0.82)	test_corr_d   0.67 (  0.63)
Test: [  20/  26]	Loss 0.375 (0.369)	test_acc   0.81 (  0.82)	test_minacc   0.71 (  0.76)	test_majacc   0.83 (  0.83)	Loss_d 0.375 (0.369)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.71 (  0.76)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.63 (  0.63)
Test: [  26/  26]	Loss 0.406 (0.372)	test_acc   0.79 (  0.81)	test_minacc   0.65 (  0.75)	test_majacc   0.81 (  0.83)	Loss_d 0.406 (0.372)	test_acc_d   0.79 (  0.81)	test_minacc_d   0.65 (  0.75)	test_majacc_d   0.81 (  0.83)	test_corr_d   0.64 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.61it/s]
Test: [  0/  1]	Loss 1.436 (1.436)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.86 (  0.86)	Loss_d 1.436 (1.436)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 1.436 (1.436)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.86 (  0.86)	Loss_d 1.436 (1.436)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.45 (  0.45)
Overall Timing[ 16/  1]	epoch_time 0.0347 (0.0402)	validation_time 0.0003 (0.0008)	train_time 0.0344 (0.0393)
record: (train_acc, test_acc) (0.8798000228404999, 0.47200003266334534)
last accs (train_acc, test_acc) (0.8144000270366669, 0.4350000321865082)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.17it/s] 27%|##6       | 7/26 [00:00<00:00, 28.63it/s] 42%|####2     | 11/26 [00:00<00:00, 31.86it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.96it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.37it/s] 88%|########8 | 23/26 [00:00<00:00, 33.77it/s]100%|##########| 26/26 [00:00<00:00, 31.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.002 (0.002)	train_nll   0.42 (  0.39)	train_penalty   0.00 (  0.00)	weight_norm  25.23 ( 25.22)	train_acc   0.77 (  0.79)	train_minacc   0.75 (  0.81)	train_majacc   0.78 (  0.79)	train_corr   0.00 (  0.00)	l1 6.0055 (5.6965)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.23it/s] 27%|##6       | 7/26 [00:00<00:00, 33.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.39it/s] 46%|####6     | 12/26 [00:00<00:00, 39.66it/s] 65%|######5   | 17/26 [00:00<00:00, 42.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.35it/s] 85%|########4 | 22/26 [00:00<00:00, 40.67it/s]100%|##########| 26/26 [00:00<00:00, 38.20it/s]
Test: [   0/  26]	Loss 0.428 (0.428)	test_acc   0.78 (  0.78)	test_minacc   0.78 (  0.78)	test_majacc   0.78 (  0.78)	Loss_d 0.428 (0.428)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.361 (0.388)	test_acc   0.83 (  0.80)	test_minacc   0.75 (  0.79)	test_majacc   0.84 (  0.80)	Loss_d 0.361 (0.388)	test_acc_d   0.83 (  0.80)	test_minacc_d   0.75 (  0.79)	test_majacc_d   0.84 (  0.80)	test_corr_d   0.65 (  0.60)
Test: [  20/  26]	Loss 0.395 (0.400)	test_acc   0.78 (  0.79)	test_minacc   0.77 (  0.79)	test_majacc   0.78 (  0.80)	Loss_d 0.395 (0.400)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.77 (  0.79)	test_majacc_d   0.78 (  0.80)	test_corr_d   0.59 (  0.59)
Test: [  26/  26]	Loss 0.411 (0.401)	test_acc   0.78 (  0.79)	test_minacc   0.75 (  0.78)	test_majacc   0.78 (  0.80)	Loss_d 0.411 (0.401)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.75 (  0.78)	test_majacc_d   0.78 (  0.80)	test_corr_d   0.58 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.52it/s]
Test: [  0/  1]	Loss 1.432 (1.432)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.83 (  0.83)	Loss_d 1.432 (1.432)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.432 (1.432)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.83 (  0.83)	Loss_d 1.432 (1.432)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.30 (  0.30)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0351 (0.0400)	validation_time 0.0004 (0.0008)	train_time 0.0347 (0.0391)
record: (train_acc, test_acc) (0.7936000264883042, 0.5010000467300415)
last accs (train_acc, test_acc) (0.7936000264883042, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.58it/s] 23%|##3       | 6/26 [00:00<00:00, 26.40it/s] 38%|###8      | 10/26 [00:00<00:00, 31.09it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.00it/s] 69%|######9   | 18/26 [00:00<00:00, 35.42it/s] 85%|########4 | 22/26 [00:00<00:00, 36.32it/s]100%|##########| 26/26 [00:00<00:00, 36.92it/s]100%|##########| 26/26 [00:00<00:00, 32.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.001 (0.002)	train_nll   0.36 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  25.24 ( 25.23)	train_acc   0.80 (  0.81)	train_minacc   0.82 (  0.80)	train_majacc   0.80 (  0.81)	train_corr   0.00 (  0.00)	l1 5.9382 (5.8684)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.19it/s] 27%|##6       | 7/26 [00:00<00:00, 35.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.93it/s] 46%|####6     | 12/26 [00:00<00:00, 40.69it/s] 65%|######5   | 17/26 [00:00<00:00, 43.95it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.95it/s] 88%|########8 | 23/26 [00:00<00:00, 46.07it/s]100%|##########| 26/26 [00:00<00:00, 41.33it/s]
Test: [   0/  26]	Loss 0.375 (0.375)	test_acc   0.81 (  0.81)	test_minacc   0.88 (  0.88)	test_majacc   0.79 (  0.79)	Loss_d 0.375 (0.375)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.370 (0.365)	test_acc   0.81 (  0.80)	test_minacc   0.81 (  0.88)	test_majacc   0.81 (  0.79)	Loss_d 0.370 (0.365)	test_acc_d   0.81 (  0.80)	test_minacc_d   0.81 (  0.88)	test_majacc_d   0.81 (  0.79)	test_corr_d   0.60 (  0.55)
Test: [  20/  26]	Loss 0.377 (0.370)	test_acc   0.78 (  0.80)	test_minacc   0.79 (  0.87)	test_majacc   0.78 (  0.79)	Loss_d 0.377 (0.370)	test_acc_d   0.78 (  0.80)	test_minacc_d   0.79 (  0.87)	test_majacc_d   0.78 (  0.79)	test_corr_d   0.57 (  0.55)
Test: [  26/  26]	Loss 0.369 (0.371)	test_acc   0.80 (  0.80)	test_minacc   0.82 (  0.87)	test_majacc   0.80 (  0.79)	Loss_d 0.369 (0.371)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.82 (  0.87)	test_majacc_d   0.80 (  0.79)	test_corr_d   0.55 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.07it/s]
Test: [  0/  1]	Loss 1.318 (1.318)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.81 (  0.81)	Loss_d 1.318 (1.318)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.318 (1.318)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.81 (  0.81)	Loss_d 1.318 (1.318)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.13 (  0.13)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/108/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0403 (0.0400)	validation_time 0.0004 (0.0008)	train_time 0.0399 (0.0391)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 19%|#9        | 5/26 [00:00<00:01, 19.54it/s] 35%|###4      | 9/26 [00:00<00:00, 25.84it/s] 50%|#####     | 13/26 [00:00<00:00, 29.64it/s] 65%|######5   | 17/26 [00:00<00:00, 31.89it/s] 81%|########  | 21/26 [00:00<00:00, 33.45it/s] 96%|#########6| 25/26 [00:00<00:00, 34.22it/s]100%|##########| 26/26 [00:00<00:00, 28.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.001 (0.001)	train_nll   0.35 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  25.24 ( 25.24)	train_acc   0.82 (  0.80)	train_minacc   0.78 (  0.85)	train_majacc   0.83 (  0.79)	train_corr   0.00 (  0.00)	l1 6.0181 (6.1509)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.26it/s] 31%|###       | 8/26 [00:00<00:00, 40.10it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.10it/s] 50%|#####     | 13/26 [00:00<00:00, 39.88it/s] 69%|######9   | 18/26 [00:00<00:00, 43.04it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.04it/s] 88%|########8 | 23/26 [00:00<00:00, 45.35it/s]100%|##########| 26/26 [00:00<00:00, 40.02it/s]
Test: [   0/  26]	Loss 0.341 (0.341)	test_acc   0.82 (  0.82)	test_minacc   0.80 (  0.80)	test_majacc   0.83 (  0.83)	Loss_d 0.341 (0.341)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.334 (0.328)	test_acc   0.85 (  0.84)	test_minacc   0.77 (  0.84)	test_majacc   0.86 (  0.84)	Loss_d 0.334 (0.328)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.77 (  0.84)	test_majacc_d   0.86 (  0.84)	test_corr_d   0.69 (  0.65)
Test: [  20/  26]	Loss 0.349 (0.334)	test_acc   0.82 (  0.83)	test_minacc   0.77 (  0.83)	test_majacc   0.83 (  0.83)	Loss_d 0.349 (0.334)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.77 (  0.83)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.66 (  0.64)
Test: [  26/  26]	Loss 0.353 (0.338)	test_acc   0.82 (  0.83)	test_minacc   0.78 (  0.82)	test_majacc   0.83 (  0.83)	Loss_d 0.353 (0.338)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.65 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.14it/s]
Test: [  0/  1]	Loss 1.477 (1.477)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.83 (  0.83)	Loss_d 1.477 (1.477)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.477 (1.477)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.83 (  0.83)	Loss_d 1.477 (1.477)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.29 (  0.29)
Overall Timing[ 19/  1]	epoch_time 0.0362 (0.0398)	validation_time 0.0004 (0.0007)	train_time 0.0358 (0.0389)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.8263000206947326, 0.5430000424385071)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.45it/s] 19%|#9        | 5/26 [00:00<00:00, 23.85it/s] 35%|###4      | 9/26 [00:00<00:00, 30.54it/s] 50%|#####     | 13/26 [00:00<00:00, 33.93it/s] 69%|######9   | 18/26 [00:00<00:00, 36.44it/s] 88%|########8 | 23/26 [00:00<00:00, 37.62it/s]100%|##########| 26/26 [00:00<00:00, 32.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.001)	train_nll   0.35 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  25.25 ( 25.24)	train_acc   0.83 (  0.81)	train_minacc   0.80 (  0.84)	train_majacc   0.83 (  0.81)	train_corr   0.00 (  0.00)	l1 6.1250 (6.2876)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.94it/s] 31%|###       | 8/26 [00:00<00:00, 41.92it/s]                                               31%|###       | 8/26 [00:00<00:00, 41.92it/s] 50%|#####     | 13/26 [00:00<00:00, 43.11it/s] 73%|#######3  | 19/26 [00:00<00:00, 49.05it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 49.05it/s] 96%|#########6| 25/26 [00:00<00:00, 48.75it/s]100%|##########| 26/26 [00:00<00:00, 42.97it/s]
Test: [   0/  26]	Loss 0.340 (0.340)	test_acc   0.82 (  0.82)	test_minacc   0.78 (  0.78)	test_majacc   0.83 (  0.83)	Loss_d 0.340 (0.340)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.313 (0.323)	test_acc   0.85 (  0.83)	test_minacc   0.81 (  0.83)	test_majacc   0.86 (  0.83)	Loss_d 0.313 (0.323)	test_acc_d   0.85 (  0.83)	test_minacc_d   0.81 (  0.83)	test_majacc_d   0.86 (  0.83)	test_corr_d   0.70 (  0.65)
Test: [  20/  26]	Loss 0.339 (0.324)	test_acc   0.82 (  0.83)	test_minacc   0.79 (  0.83)	test_majacc   0.83 (  0.83)	Loss_d 0.339 (0.324)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.79 (  0.83)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.65 (  0.65)
Test: [  26/  26]	Loss 0.352 (0.328)	test_acc   0.82 (  0.83)	test_minacc   0.80 (  0.82)	test_majacc   0.83 (  0.83)	Loss_d 0.352 (0.328)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.80 (  0.82)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.64 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.75it/s]
Test: [  0/  1]	Loss 1.535 (1.535)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.85 (  0.85)	Loss_d 1.535 (1.535)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.535 (1.535)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.85 (  0.85)	Loss_d 1.535 (1.535)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.33 (  0.33)
Overall Timing[ 20/  1]	epoch_time 0.0438 (0.0400)	validation_time 0.0003 (0.0007)	train_time 0.0434 (0.0392)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.8300000323057175, 0.5220000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.30it/s] 23%|##3       | 6/26 [00:00<00:00, 28.75it/s] 38%|###8      | 10/26 [00:00<00:00, 33.50it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.61it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.30it/s] 88%|########8 | 23/26 [00:00<00:00, 37.13it/s]100%|##########| 26/26 [00:00<00:00, 33.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.34 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  25.25 ( 25.25)	train_acc   0.82 (  0.81)	train_minacc   0.80 (  0.83)	train_majacc   0.83 (  0.81)	train_corr   0.00 (  0.00)	l1 6.1590 (6.4434)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.55it/s] 31%|###       | 8/26 [00:00<00:00, 39.36it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.36it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 47.99it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 47.99it/s]100%|##########| 26/26 [00:00<00:00, 50.90it/s]100%|##########| 26/26 [00:00<00:00, 43.12it/s]
Test: [   0/  26]	Loss 0.330 (0.330)	test_acc   0.84 (  0.84)	test_minacc   0.84 (  0.84)	test_majacc   0.84 (  0.84)	Loss_d 0.330 (0.330)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.305 (0.314)	test_acc   0.85 (  0.84)	test_minacc   0.77 (  0.83)	test_majacc   0.86 (  0.84)	Loss_d 0.305 (0.314)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.77 (  0.83)	test_majacc_d   0.86 (  0.84)	test_corr_d   0.71 (  0.67)
Test: [  20/  26]	Loss 0.326 (0.311)	test_acc   0.83 (  0.84)	test_minacc   0.77 (  0.83)	test_majacc   0.84 (  0.84)	Loss_d 0.326 (0.311)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.77 (  0.83)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.67 (  0.67)
Test: [  26/  26]	Loss 0.343 (0.315)	test_acc   0.82 (  0.84)	test_minacc   0.80 (  0.82)	test_majacc   0.83 (  0.84)	Loss_d 0.343 (0.315)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.80 (  0.82)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.66 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.53it/s]
Test: [  0/  1]	Loss 1.567 (1.567)	test_acc   0.52 (  0.52)	test_minacc   0.48 (  0.48)	test_majacc   0.85 (  0.85)	Loss_d 1.567 (1.567)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.567 (1.567)	test_acc   0.52 (  0.52)	test_minacc   0.48 (  0.48)	test_majacc   0.85 (  0.85)	Loss_d 1.567 (1.567)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Overall Timing[ 21/  1]	epoch_time 0.0401 (0.0400)	validation_time 0.0004 (0.0007)	train_time 0.0396 (0.0392)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.8379000260233879, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.17it/s] 23%|##3       | 6/26 [00:00<00:00, 25.76it/s] 38%|###8      | 10/26 [00:00<00:00, 30.00it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.13it/s] 69%|######9   | 18/26 [00:00<00:00, 33.20it/s] 85%|########4 | 22/26 [00:00<00:00, 33.75it/s]100%|##########| 26/26 [00:00<00:00, 34.46it/s]100%|##########| 26/26 [00:00<00:00, 30.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.001)	train_nll   0.35 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  25.26 ( 25.26)	train_acc   0.80 (  0.82)	train_minacc   0.73 (  0.83)	train_majacc   0.82 (  0.82)	train_corr   0.00 (  0.00)	l1 6.3670 (6.5983)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:03,  7.54it/s] 31%|###       | 8/26 [00:00<00:00, 25.22it/s]                                               31%|###       | 8/26 [00:00<00:00, 25.22it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.94it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.80it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 45.25it/s]100%|##########| 26/26 [00:00<00:00, 34.03it/s]
Test: [   0/  26]	Loss 0.327 (0.327)	test_acc   0.82 (  0.82)	test_minacc   0.78 (  0.78)	test_majacc   0.83 (  0.83)	Loss_d 0.327 (0.327)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.298 (0.313)	test_acc   0.86 (  0.84)	test_minacc   0.81 (  0.82)	test_majacc   0.87 (  0.84)	Loss_d 0.298 (0.313)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.87 (  0.84)	test_corr_d   0.73 (  0.69)
Test: [  20/  26]	Loss 0.309 (0.303)	test_acc   0.84 (  0.85)	test_minacc   0.75 (  0.82)	test_majacc   0.85 (  0.85)	Loss_d 0.309 (0.303)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.75 (  0.82)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.69 (  0.69)
Test: [  26/  26]	Loss 0.341 (0.307)	test_acc   0.81 (  0.84)	test_minacc   0.73 (  0.81)	test_majacc   0.83 (  0.85)	Loss_d 0.341 (0.307)	test_acc_d   0.81 (  0.84)	test_minacc_d   0.73 (  0.81)	test_majacc_d   0.83 (  0.85)	test_corr_d   0.68 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.14it/s]
Test: [  0/  1]	Loss 1.667 (1.667)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.87 (  0.87)	Loss_d 1.667 (1.667)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 1.667 (1.667)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.87 (  0.87)	Loss_d 1.667 (1.667)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.41 (  0.41)
Overall Timing[ 22/  1]	epoch_time 0.0433 (0.0401)	validation_time 0.0004 (0.0007)	train_time 0.0429 (0.0393)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.8441000215411186, 0.5060000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.63it/s] 23%|##3       | 6/26 [00:00<00:00, 27.02it/s] 35%|###4      | 9/26 [00:00<00:00, 26.89it/s] 50%|#####     | 13/26 [00:00<00:00, 29.31it/s] 65%|######5   | 17/26 [00:00<00:00, 31.21it/s] 81%|########  | 21/26 [00:00<00:00, 31.21it/s] 96%|#########6| 25/26 [00:00<00:00, 31.39it/s]100%|##########| 26/26 [00:00<00:00, 28.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.227126121520996
set z to 6.164854860305786
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 382 tensor(-0.0090, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 221 tensor(-0.0140, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 159 tensor(0.0095, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 146 tensor(0.0038, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 144 tensor(0.0009, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.008 (0.089)	train_nll   0.44 (  0.47)	train_penalty   0.01 (  0.09)	weight_norm  28.25 ( 26.13)	train_acc   0.86 (  0.77)	train_minacc   0.68 (  0.64)	train_majacc   0.89 (  0.80)	train_corr   0.00 (  0.00)	l1 7.4038 (7.7473)	zero_count 0.0000 (44.3040)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.19it/s] 23%|##3       | 6/26 [00:00<00:00, 20.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.68it/s] 42%|####2     | 11/26 [00:00<00:00, 29.96it/s] 62%|######1   | 16/26 [00:00<00:00, 36.24it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.24it/s] 81%|########  | 21/26 [00:00<00:00, 37.09it/s]100%|##########| 26/26 [00:00<00:00, 40.49it/s]100%|##########| 26/26 [00:00<00:00, 30.97it/s]
Test: [   0/  26]	Loss 0.522 (0.522)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.522 (0.522)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.625 (0.570)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.625 (0.570)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.52 (  0.50)
Test: [  20/  26]	Loss 0.542 (0.555)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.542 (0.555)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.52 (  0.50)
Test: [  26/  26]	Loss 0.537 (0.552)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.537 (0.552)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.51 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.27it/s]
Test: [  0/  1]	Loss 1.913 (1.913)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.913 (1.913)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.913 (1.913)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.913 (1.913)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 23/  1]	epoch_time 0.0446 (0.0403)	validation_time 0.0003 (0.0007)	train_time 0.0442 (0.0395)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.43it/s] 15%|#5        | 4/26 [00:00<00:01, 18.92it/s] 27%|##6       | 7/26 [00:00<00:00, 23.48it/s] 42%|####2     | 11/26 [00:00<00:00, 28.62it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.88it/s] 88%|########8 | 23/26 [00:00<00:00, 32.32it/s]100%|##########| 26/26 [00:00<00:00, 28.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 142 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 140 tensor(0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 142 tensor(7.2656e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 141 tensor(-6.8168e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 143 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 152 tensor(-0.0002, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  30.07 ( 29.51)	train_acc   0.56 (  0.59)	train_minacc   0.82 (  0.71)	train_majacc   0.50 (  0.57)	train_corr   0.00 (  0.00)	l1 6.3063 (6.4725)	zero_count 0.0000 (86.2680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.73it/s] 23%|##3       | 6/26 [00:00<00:00, 22.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.95it/s] 42%|####2     | 11/26 [00:00<00:00, 30.54it/s] 62%|######1   | 16/26 [00:00<00:00, 36.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.52it/s] 81%|########  | 21/26 [00:00<00:00, 37.15it/s]100%|##########| 26/26 [00:00<00:00, 40.40it/s]100%|##########| 26/26 [00:00<00:00, 31.40it/s]
Test: [   0/  26]	Loss 0.565 (0.565)	test_acc   0.50 (  0.50)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 0.565 (0.565)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.586 (0.579)	test_acc   0.48 (  0.50)	test_minacc   0.50 (  0.53)	test_majacc   0.47 (  0.49)	Loss_d 0.586 (0.579)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.50 (  0.53)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.49 (  0.47)
Test: [  20/  26]	Loss 0.579 (0.578)	test_acc   0.49 (  0.50)	test_minacc   0.57 (  0.54)	test_majacc   0.48 (  0.50)	Loss_d 0.579 (0.578)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.57 (  0.54)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.45 (  0.46)
Test: [  26/  26]	Loss 0.586 (0.578)	test_acc   0.51 (  0.50)	test_minacc   0.45 (  0.54)	test_majacc   0.52 (  0.49)	Loss_d 0.586 (0.578)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.45 (  0.54)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.43 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.59it/s]
Test: [  0/  1]	Loss 1.705 (1.705)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.705 (1.705)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 1.705 (1.705)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.705 (1.705)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Overall Timing[ 24/  1]	epoch_time 0.0410 (0.0403)	validation_time 0.0004 (0.0007)	train_time 0.0406 (0.0396)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5010000108182431, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 19%|#9        | 5/26 [00:00<00:01, 17.89it/s] 31%|###       | 8/26 [00:00<00:00, 21.78it/s] 42%|####2     | 11/26 [00:00<00:00, 23.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.71it/s] 88%|########8 | 23/26 [00:00<00:00, 29.77it/s]100%|##########| 26/26 [00:01<00:00, 24.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 156 tensor(-3.9131e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 162 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 182 tensor(1.5045e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 181 tensor(-4.4272e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 205 tensor(-4.4378e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 187 tensor(2.5475e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 187 tensor(1.3696e-07, device='cuda:0')
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm  30.22 ( 30.18)	train_acc   0.51 (  0.50)	train_minacc   0.43 (  0.57)	train_majacc   0.52 (  0.48)	train_corr   0.00 (  0.00)	l1 6.1918 (6.1920)	zero_count 0.0000 (79.0920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02, 10.00it/s] 23%|##3       | 6/26 [00:00<00:00, 32.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.43it/s] 42%|####2     | 11/26 [00:00<00:00, 38.75it/s] 62%|######1   | 16/26 [00:00<00:00, 41.57it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.57it/s] 81%|########  | 21/26 [00:00<00:00, 40.23it/s]100%|##########| 26/26 [00:00<00:00, 42.95it/s]100%|##########| 26/26 [00:00<00:00, 37.02it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.598 (0.598)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.598 (0.598)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.45 (  0.42)
Test: [  20/  26]	Loss 0.597 (0.597)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.597)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.41 (  0.42)
Test: [  26/  26]	Loss 0.597 (0.598)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.597 (0.598)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.41it/s]
Test: [  0/  1]	Loss 1.640 (1.640)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.640 (1.640)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 1.640 (1.640)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.640 (1.640)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Overall Timing[ 25/  1]	epoch_time 0.0395 (0.0403)	validation_time 0.0004 (0.0007)	train_time 0.0391 (0.0396)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4999000157415867, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.67it/s] 19%|#9        | 5/26 [00:00<00:01, 18.26it/s] 35%|###4      | 9/26 [00:00<00:00, 24.56it/s] 50%|#####     | 13/26 [00:00<00:00, 28.53it/s] 65%|######5   | 17/26 [00:00<00:00, 28.73it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.08it/s] 92%|#########2| 24/26 [00:00<00:00, 31.14it/s]100%|##########| 26/26 [00:01<00:00, 25.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 189 tensor(1.0089e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 338 tensor(-1.7582e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 268 tensor(1.5168e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 255 tensor(5.2154e-08, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1649 (6.1674)	zero_count 256.0000 (47.8180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.36it/s] 27%|##6       | 7/26 [00:00<00:00, 34.08it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.08it/s] 46%|####6     | 12/26 [00:00<00:00, 40.07it/s] 65%|######5   | 17/26 [00:00<00:00, 39.31it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.31it/s] 85%|########4 | 22/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 37.08it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.595 (0.595)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.602 (0.600)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.602 (0.600)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.43 (  0.41)
Test: [  20/  26]	Loss 0.598 (0.600)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.600)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.40 (  0.41)
Test: [  26/  26]	Loss 0.600 (0.601)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.600 (0.601)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.69it/s]
Test: [  0/  1]	Loss 1.612 (1.612)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.612 (1.612)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.612 (1.612)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.612 (1.612)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 26/  1]	epoch_time 0.0385 (0.0402)	validation_time 0.0004 (0.0006)	train_time 0.0380 (0.0395)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.74it/s] 15%|#5        | 4/26 [00:00<00:02, 10.19it/s] 31%|###       | 8/26 [00:00<00:01, 17.38it/s] 46%|####6     | 12/26 [00:00<00:00, 22.27it/s] 62%|######1   | 16/26 [00:00<00:00, 26.00it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.56it/s] 92%|#########2| 24/26 [00:01<00:00, 27.48it/s]100%|##########| 26/26 [00:01<00:00, 21.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 361 tensor(-4.9343e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 284 tensor(5.3774e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1645 (6.1639)	zero_count 0.0000 (14.7030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.55it/s] 23%|##3       | 6/26 [00:00<00:00, 24.98it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.98it/s] 42%|####2     | 11/26 [00:00<00:00, 33.01it/s] 62%|######1   | 16/26 [00:00<00:00, 38.22it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.22it/s] 81%|########  | 21/26 [00:00<00:00, 37.72it/s]100%|##########| 26/26 [00:00<00:00, 40.79it/s]100%|##########| 26/26 [00:00<00:00, 33.58it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.603 (0.602)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.603 (0.602)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.43 (  0.41)
Test: [  20/  26]	Loss 0.598 (0.601)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.601)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.39 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.602)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.601 (0.602)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.08it/s]
Test: [  0/  1]	Loss 1.593 (1.593)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.593 (1.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.593 (1.593)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.593 (1.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 27/  1]	epoch_time 0.0433 (0.0404)	validation_time 0.0005 (0.0006)	train_time 0.0428 (0.0396)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.94it/s] 27%|##6       | 7/26 [00:00<00:00, 32.87it/s] 42%|####2     | 11/26 [00:00<00:00, 35.53it/s] 62%|######1   | 16/26 [00:00<00:00, 37.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.85it/s] 92%|#########2| 24/26 [00:00<00:00, 32.88it/s]100%|##########| 26/26 [00:00<00:00, 32.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 442 tensor(-1.0856e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 397 tensor(4.1705e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1650 (6.1641)	zero_count 0.0000 (7.1370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 27%|##6       | 7/26 [00:00<00:00, 25.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.83it/s] 46%|####6     | 12/26 [00:00<00:00, 32.72it/s] 65%|######5   | 17/26 [00:00<00:00, 37.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.35it/s] 85%|########4 | 22/26 [00:00<00:00, 40.56it/s]100%|##########| 26/26 [00:00<00:00, 33.11it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.597 (0.597)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.604 (0.602)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.604 (0.602)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.39 (  0.40)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.09it/s]
Test: [  0/  1]	Loss 1.579 (1.579)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.579 (1.579)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.579 (1.579)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.579 (1.579)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 28/  1]	epoch_time 0.0408 (0.0404)	validation_time 0.0003 (0.0006)	train_time 0.0404 (0.0397)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 19%|#9        | 5/26 [00:00<00:01, 20.07it/s] 35%|###4      | 9/26 [00:00<00:00, 25.95it/s] 50%|#####     | 13/26 [00:00<00:00, 29.03it/s] 65%|######5   | 17/26 [00:00<00:00, 28.66it/s] 81%|########  | 21/26 [00:00<00:00, 30.59it/s] 96%|#########6| 25/26 [00:00<00:00, 29.49it/s]100%|##########| 26/26 [00:00<00:00, 26.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 444 tensor(-7.6294e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 400 tensor(5.7316e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 388 tensor(-8.8993e-07, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1659 (6.1644)	zero_count 0.0000 (6.9420)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.99it/s] 27%|##6       | 7/26 [00:00<00:00, 33.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.34it/s] 46%|####6     | 12/26 [00:00<00:00, 39.78it/s] 65%|######5   | 17/26 [00:00<00:00, 39.30it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.30it/s] 85%|########4 | 22/26 [00:00<00:00, 40.17it/s]100%|##########| 26/26 [00:00<00:00, 37.35it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.597 (0.597)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.603)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.605 (0.603)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.39 (  0.40)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.68it/s]
Test: [  0/  1]	Loss 1.575 (1.575)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.575 (1.575)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.575 (1.575)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.575 (1.575)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 29/  1]	epoch_time 0.0389 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0384 (0.0396)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.33it/s] 19%|#9        | 5/26 [00:00<00:01, 19.05it/s] 35%|###4      | 9/26 [00:00<00:00, 24.91it/s] 46%|####6     | 12/26 [00:00<00:00, 24.87it/s] 62%|######1   | 16/26 [00:00<00:00, 28.06it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.02it/s] 92%|#########2| 24/26 [00:00<00:00, 28.86it/s]100%|##########| 26/26 [00:01<00:00, 24.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 449 tensor(-6.7711e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 451 tensor(1.4284e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 390 tensor(1.3098e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 390 tensor(2.4391e-09, device='cuda:0')
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1671 (6.1647)	zero_count 0.0000 (9.5550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.86it/s] 15%|#5        | 4/26 [00:00<00:01, 17.92it/s] 35%|###4      | 9/26 [00:00<00:00, 31.12it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.12it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.23it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.23it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.23it/s] 92%|#########2| 24/26 [00:00<00:00, 40.49it/s]100%|##########| 26/26 [00:00<00:00, 34.88it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.597 (0.597)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.603)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.605 (0.603)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.600 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.600 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.79it/s]
Test: [  0/  1]	Loss 1.567 (1.567)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.567 (1.567)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.567 (1.567)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.567 (1.567)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 30/  1]	epoch_time 0.0450 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0445 (0.0398)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 19%|#9        | 5/26 [00:00<00:00, 21.25it/s] 35%|###4      | 9/26 [00:00<00:00, 27.30it/s] 50%|#####     | 13/26 [00:00<00:00, 30.23it/s] 65%|######5   | 17/26 [00:00<00:00, 28.91it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.89it/s] 92%|#########2| 24/26 [00:00<00:00, 30.17it/s]100%|##########| 26/26 [00:00<00:00, 26.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 453 tensor(-4.2422e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 471 tensor(3.9743e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 391 tensor(3.2527e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 396 tensor(-4.2279e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1649 (6.1648)	zero_count 120.0000 (11.5410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.47it/s] 23%|##3       | 6/26 [00:00<00:00, 30.36it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.36it/s] 42%|####2     | 11/26 [00:00<00:00, 37.39it/s] 62%|######1   | 16/26 [00:00<00:00, 41.00it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.00it/s] 81%|########  | 21/26 [00:00<00:00, 39.80it/s]100%|##########| 26/26 [00:00<00:00, 42.62it/s]100%|##########| 26/26 [00:00<00:00, 35.93it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.603)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.605 (0.603)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.36it/s]
Test: [  0/  1]	Loss 1.566 (1.566)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.566 (1.566)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.566 (1.566)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.566 (1.566)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 31/  1]	epoch_time 0.0398 (0.0404)	validation_time 0.0005 (0.0006)	train_time 0.0393 (0.0398)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 12%|#1        | 3/26 [00:00<00:02,  9.36it/s] 23%|##3       | 6/26 [00:00<00:01, 15.59it/s] 38%|###8      | 10/26 [00:00<00:00, 22.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.21it/s] 69%|######9   | 18/26 [00:00<00:00, 27.22it/s] 81%|########  | 21/26 [00:00<00:00, 26.72it/s] 92%|#########2| 24/26 [00:01<00:00, 26.65it/s]100%|##########| 26/26 [00:01<00:00, 22.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 408 tensor(-2.2361e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 455 tensor(-2.3727e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 481 tensor(1.5868e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 432 tensor(2.7432e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 405 tensor(-9.3958e-07, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1649 (6.1650)	zero_count 0.0000 (14.9370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.71it/s] 12%|#1        | 3/26 [00:00<00:01, 15.68it/s] 31%|###       | 8/26 [00:00<00:00, 30.54it/s]                                               31%|###       | 8/26 [00:00<00:00, 30.54it/s] 50%|#####     | 13/26 [00:00<00:00, 36.69it/s] 69%|######9   | 18/26 [00:00<00:00, 40.68it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.68it/s] 88%|########8 | 23/26 [00:00<00:00, 39.08it/s]100%|##########| 26/26 [00:00<00:00, 34.74it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.602)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.605 (0.602)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.25it/s]
Test: [  0/  1]	Loss 1.560 (1.560)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.560 (1.560)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.560 (1.560)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.560 (1.560)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 32/  1]	epoch_time 0.0418 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0414 (0.0398)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 15%|#5        | 4/26 [00:00<00:01, 18.50it/s] 31%|###       | 8/26 [00:00<00:00, 26.95it/s] 46%|####6     | 12/26 [00:00<00:00, 31.59it/s] 62%|######1   | 16/26 [00:00<00:00, 29.63it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.64it/s] 88%|########8 | 23/26 [00:00<00:00, 27.77it/s]100%|##########| 26/26 [00:00<00:00, 26.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 386 tensor(-6.5303e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 465 tensor(-5.0447e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 453 tensor(2.7770e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 458 tensor(2.5681e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 422 tensor(1.2851e-07, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1653 (6.1651)	zero_count 0.0000 (15.1320)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.24it/s] 23%|##3       | 6/26 [00:00<00:00, 21.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.16it/s] 46%|####6     | 12/26 [00:00<00:00, 31.78it/s] 65%|######5   | 17/26 [00:00<00:00, 36.05it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.05it/s] 85%|########4 | 22/26 [00:00<00:00, 39.32it/s]100%|##########| 26/26 [00:00<00:00, 31.44it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.595 (0.595)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.604 (0.602)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.604 (0.602)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.601)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.601)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.602)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.602)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.16it/s]
Test: [  0/  1]	Loss 1.561 (1.561)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.561 (1.561)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.561 (1.561)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.561 (1.561)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 33/  1]	epoch_time 0.0440 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0436 (0.0399)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 15%|#5        | 4/26 [00:00<00:01, 18.35it/s] 27%|##6       | 7/26 [00:00<00:00, 21.55it/s] 42%|####2     | 11/26 [00:00<00:00, 27.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.82it/s] 85%|########4 | 22/26 [00:00<00:00, 27.74it/s]100%|##########| 26/26 [00:00<00:00, 29.68it/s]100%|##########| 26/26 [00:01<00:00, 25.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 402 tensor(4.4962e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 381 tensor(5.5797e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 460 tensor(-6.0199e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 479 tensor(9.4970e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 480 tensor(-2.4784e-07, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1651 (6.1652)	zero_count 0.0000 (16.0290)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.85it/s] 27%|##6       | 7/26 [00:00<00:00, 33.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.39it/s] 46%|####6     | 12/26 [00:00<00:00, 38.78it/s] 65%|######5   | 17/26 [00:00<00:00, 41.19it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.19it/s] 85%|########4 | 22/26 [00:00<00:00, 39.39it/s]100%|##########| 26/26 [00:00<00:00, 37.28it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.594 (0.594)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.604 (0.601)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.604 (0.601)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.601)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.601)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.602)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.602)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.64it/s]
Test: [  0/  1]	Loss 1.557 (1.557)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.557 (1.557)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.557 (1.557)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.557 (1.557)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 34/  1]	epoch_time 0.0437 (0.0407)	validation_time 0.0006 (0.0006)	train_time 0.0431 (0.0400)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 19%|#9        | 5/26 [00:00<00:01, 20.00it/s] 31%|###       | 8/26 [00:00<00:00, 22.53it/s] 42%|####2     | 11/26 [00:00<00:00, 23.40it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.74it/s] 69%|######9   | 18/26 [00:00<00:00, 27.14it/s] 81%|########  | 21/26 [00:00<00:00, 26.52it/s] 96%|#########6| 25/26 [00:00<00:00, 29.21it/s]100%|##########| 26/26 [00:01<00:00, 23.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 470 tensor(-9.6177e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 380 tensor(1.9324e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 488 tensor(3.3154e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 459 tensor(1.4958e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 443 tensor(1.9632e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 471 tensor(-8.1830e-08, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1651 (6.1652)	zero_count 0.0000 (13.4940)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.11it/s] 23%|##3       | 6/26 [00:00<00:00, 23.89it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.89it/s] 42%|####2     | 11/26 [00:00<00:00, 32.50it/s] 62%|######1   | 16/26 [00:00<00:00, 38.09it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.09it/s] 81%|########  | 21/26 [00:00<00:00, 37.60it/s]100%|##########| 26/26 [00:00<00:00, 40.71it/s]100%|##########| 26/26 [00:00<00:00, 32.56it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.594 (0.594)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.603 (0.600)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.603 (0.600)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.598 (0.600)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.600)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.601)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.601)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.06it/s]
Test: [  0/  1]	Loss 1.558 (1.558)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.558 (1.558)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.558 (1.558)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.558 (1.558)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 35/  1]	epoch_time 0.0418 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0413 (0.0400)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.88it/s] 23%|##3       | 6/26 [00:00<00:00, 24.44it/s] 38%|###8      | 10/26 [00:00<00:00, 26.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.17it/s] 69%|######9   | 18/26 [00:00<00:00, 32.94it/s] 85%|########4 | 22/26 [00:00<00:00, 31.70it/s]100%|##########| 26/26 [00:00<00:00, 33.03it/s]100%|##########| 26/26 [00:00<00:00, 29.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 401 tensor(1.6239e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 391 tensor(2.5058e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 462 tensor(-1.0093e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1646 (6.1650)	zero_count 0.0000 (12.4410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.91it/s] 38%|###8      | 10/26 [00:00<00:00, 43.67it/s]                                                38%|###8      | 10/26 [00:00<00:00, 43.67it/s] 58%|#####7    | 15/26 [00:00<00:00, 44.07it/s] 77%|#######6  | 20/26 [00:00<00:00, 43.60it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 43.60it/s] 96%|#########6| 25/26 [00:00<00:00, 44.40it/s]100%|##########| 26/26 [00:00<00:00, 40.23it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.602 (0.600)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.602 (0.600)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.598 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.601)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.601)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.04it/s]
Test: [  0/  1]	Loss 1.556 (1.556)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.556 (1.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.556 (1.556)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.556 (1.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 36/  1]	epoch_time 0.0402 (0.0407)	validation_time 0.0003 (0.0006)	train_time 0.0398 (0.0400)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.500000013411045, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.87it/s] 15%|#5        | 4/26 [00:00<00:01, 16.20it/s] 31%|###       | 8/26 [00:00<00:00, 23.53it/s] 42%|####2     | 11/26 [00:00<00:00, 24.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.98it/s] 69%|######9   | 18/26 [00:00<00:00, 28.66it/s] 81%|########  | 21/26 [00:00<00:00, 27.70it/s] 92%|#########2| 24/26 [00:00<00:00, 27.44it/s]100%|##########| 26/26 [00:01<00:00, 24.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 375 tensor(1.8465e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 477 tensor(9.0280e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 457 tensor(6.3821e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 437 tensor(1.7528e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1646 (6.1651)	zero_count 0.0000 (11.6220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.00it/s]  8%|7         | 2/26 [00:00<00:03,  7.20it/s] 27%|##6       | 7/26 [00:00<00:00, 22.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.66it/s] 46%|####6     | 12/26 [00:00<00:00, 30.97it/s] 65%|######5   | 17/26 [00:00<00:00, 36.32it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.32it/s] 85%|########4 | 22/26 [00:00<00:00, 35.96it/s]100%|##########| 26/26 [00:00<00:00, 30.39it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.602 (0.599)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.602 (0.599)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.597 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.601 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.60it/s]
Test: [  0/  1]	Loss 1.558 (1.558)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.558 (1.558)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.558 (1.558)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.558 (1.558)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 37/  1]	epoch_time 0.0421 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0417 (0.0401)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.500000013411045, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.35it/s] 19%|#9        | 5/26 [00:00<00:01, 13.66it/s] 31%|###       | 8/26 [00:00<00:01, 17.81it/s] 46%|####6     | 12/26 [00:00<00:00, 23.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 23.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.12it/s] 88%|########8 | 23/26 [00:01<00:00, 29.45it/s]100%|##########| 26/26 [00:01<00:00, 23.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 394 tensor(4.8649e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 417 tensor(-3.2169e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1641 (6.1645)	zero_count 0.0000 (8.2290)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.65it/s] 23%|##3       | 6/26 [00:00<00:00, 30.81it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.81it/s] 42%|####2     | 11/26 [00:00<00:00, 36.15it/s] 62%|######1   | 16/26 [00:00<00:00, 40.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.99it/s] 81%|########  | 21/26 [00:00<00:00, 38.99it/s]100%|##########| 26/26 [00:00<00:00, 42.19it/s]100%|##########| 26/26 [00:00<00:00, 35.72it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.601 (0.599)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.601 (0.599)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.597 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.601 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.20it/s]
Test: [  0/  1]	Loss 1.556 (1.556)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.556 (1.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.556 (1.556)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.556 (1.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 38/  1]	epoch_time 0.0442 (0.0408)	validation_time 0.0004 (0.0006)	train_time 0.0437 (0.0402)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4999000145792961, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.51it/s] 19%|#9        | 5/26 [00:00<00:00, 23.09it/s] 35%|###4      | 9/26 [00:00<00:00, 27.52it/s] 46%|####6     | 12/26 [00:00<00:00, 26.91it/s] 62%|######1   | 16/26 [00:00<00:00, 29.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.33it/s] 88%|########8 | 23/26 [00:00<00:00, 29.46it/s]100%|##########| 26/26 [00:00<00:00, 27.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 387 tensor(-2.4432e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 488 tensor(6.4651e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1649 (6.1642)	zero_count 0.0000 (5.7330)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 27%|##6       | 7/26 [00:00<00:00, 29.43it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.43it/s] 50%|#####     | 13/26 [00:00<00:00, 37.66it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.14it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.14it/s] 92%|#########2| 24/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 35.95it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.592 (0.592)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.601 (0.599)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.601 (0.599)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.597 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.601 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.601 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.36it/s]
Test: [  0/  1]	Loss 1.559 (1.559)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.559 (1.559)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.559 (1.559)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.559 (1.559)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 39/  1]	epoch_time 0.0413 (0.0408)	validation_time 0.0003 (0.0006)	train_time 0.0410 (0.0402)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4999000145792961, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.42it/s] 15%|#5        | 4/26 [00:00<00:01, 13.05it/s] 31%|###       | 8/26 [00:00<00:00, 20.12it/s] 46%|####6     | 12/26 [00:00<00:00, 24.89it/s] 62%|######1   | 16/26 [00:00<00:00, 26.10it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.74it/s] 92%|#########2| 24/26 [00:00<00:00, 30.73it/s]100%|##########| 26/26 [00:01<00:00, 24.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 383 tensor(-3.4968e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1642 (6.1641)	zero_count 0.0000 (4.9920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.69it/s] 15%|#5        | 4/26 [00:00<00:02,  7.55it/s] 31%|###       | 8/26 [00:00<00:01, 14.81it/s]                                               31%|###       | 8/26 [00:00<00:01, 14.81it/s] 50%|#####     | 13/26 [00:00<00:00, 22.74it/s] 69%|######9   | 18/26 [00:00<00:00, 28.90it/s]                                                69%|######9   | 18/26 [00:00<00:00, 28.90it/s] 88%|########8 | 23/26 [00:00<00:00, 34.06it/s]100%|##########| 26/26 [00:01<00:00, 24.27it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.602 (0.599)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.602 (0.599)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.597 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.19it/s]
Test: [  0/  1]	Loss 1.559 (1.559)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.559 (1.559)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.559 (1.559)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.559 (1.559)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 40/  1]	epoch_time 0.0484 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0480 (0.0404)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4999000145792961, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.61it/s] 19%|#9        | 5/26 [00:00<00:00, 22.57it/s] 35%|###4      | 9/26 [00:00<00:00, 27.10it/s] 50%|#####     | 13/26 [00:00<00:00, 29.97it/s] 65%|######5   | 17/26 [00:00<00:00, 29.05it/s] 81%|########  | 21/26 [00:00<00:00, 30.90it/s] 96%|#########6| 25/26 [00:00<00:00, 32.31it/s]100%|##########| 26/26 [00:00<00:00, 27.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 386 tensor(-4.2459e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1642 (6.1638)	zero_count 0.0000 (4.8750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.31it/s] 31%|###       | 8/26 [00:00<00:00, 32.23it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.23it/s] 50%|#####     | 13/26 [00:00<00:00, 37.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.04it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.04it/s] 96%|#########6| 25/26 [00:00<00:00, 44.05it/s]100%|##########| 26/26 [00:00<00:00, 36.59it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.602 (0.600)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.602 (0.600)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.597 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.51it/s]
Test: [  0/  1]	Loss 1.564 (1.564)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.564 (1.564)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.564 (1.564)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.564 (1.564)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 41/  1]	epoch_time 0.0384 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0380 (0.0403)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4999000145792961, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.15it/s] 19%|#9        | 5/26 [00:00<00:01, 19.29it/s] 35%|###4      | 9/26 [00:00<00:00, 25.02it/s] 50%|#####     | 13/26 [00:00<00:00, 28.14it/s] 65%|######5   | 17/26 [00:00<00:00, 30.08it/s] 81%|########  | 21/26 [00:00<00:00, 31.38it/s] 96%|#########6| 25/26 [00:00<00:00, 32.74it/s]100%|##########| 26/26 [00:00<00:00, 27.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1605 (6.1632)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.89it/s] 19%|#9        | 5/26 [00:00<00:00, 26.74it/s] 38%|###8      | 10/26 [00:00<00:00, 31.57it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.57it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.73it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.01it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.01it/s] 96%|#########6| 25/26 [00:00<00:00, 41.66it/s]100%|##########| 26/26 [00:00<00:00, 35.54it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.594 (0.594)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.603 (0.600)	test_acc   0.47 (  0.49)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.49)	Loss_d 0.603 (0.600)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.42 (  0.40)
Test: [  20/  26]	Loss 0.598 (0.600)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.600)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.602 (0.601)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.601)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.46it/s]
Test: [  0/  1]	Loss 1.565 (1.565)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.565 (1.565)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.565 (1.565)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.565 (1.565)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 42/  1]	epoch_time 0.0393 (0.0409)	validation_time 0.0004 (0.0006)	train_time 0.0389 (0.0403)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.499500014603138, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.55it/s] 12%|#1        | 3/26 [00:00<00:01, 13.38it/s] 23%|##3       | 6/26 [00:00<00:00, 20.16it/s] 38%|###8      | 10/26 [00:00<00:00, 26.15it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.55it/s] 69%|######9   | 18/26 [00:00<00:00, 28.67it/s] 85%|########4 | 22/26 [00:00<00:00, 30.77it/s]100%|##########| 26/26 [00:00<00:00, 32.24it/s]100%|##########| 26/26 [00:00<00:00, 26.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 387 tensor(-1.1160e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1641 (6.1620)	zero_count 0.0000 (4.8360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.33it/s] 31%|###       | 8/26 [00:00<00:00, 37.68it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.68it/s] 50%|#####     | 13/26 [00:00<00:00, 40.64it/s] 69%|######9   | 18/26 [00:00<00:00, 43.35it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.35it/s] 88%|########8 | 23/26 [00:00<00:00, 40.60it/s]100%|##########| 26/26 [00:00<00:00, 38.42it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.595 (0.595)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.603 (0.601)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.603 (0.601)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.598 (0.601)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.601)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.603 (0.602)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.602)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 1.571 (1.571)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.571 (1.571)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.571 (1.571)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.571 (1.571)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 43/  1]	epoch_time 0.0398 (0.0409)	validation_time 0.0004 (0.0006)	train_time 0.0393 (0.0403)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4998000145852566, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 19%|#9        | 5/26 [00:00<00:00, 21.74it/s] 35%|###4      | 9/26 [00:00<00:00, 25.82it/s] 50%|#####     | 13/26 [00:00<00:00, 28.63it/s] 65%|######5   | 17/26 [00:00<00:00, 30.60it/s] 81%|########  | 21/26 [00:00<00:00, 31.79it/s] 96%|#########6| 25/26 [00:00<00:00, 30.33it/s]100%|##########| 26/26 [00:00<00:00, 27.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 375 tensor(-7.6091e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1645 (6.1637)	zero_count 0.0000 (5.3040)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s]  8%|7         | 2/26 [00:00<00:02,  8.18it/s] 27%|##6       | 7/26 [00:00<00:00, 24.33it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.33it/s] 46%|####6     | 12/26 [00:00<00:00, 32.86it/s] 65%|######5   | 17/26 [00:00<00:00, 38.08it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.08it/s] 85%|########4 | 22/26 [00:00<00:00, 39.76it/s]100%|##########| 26/26 [00:00<00:00, 32.86it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.602)	test_acc   0.47 (  0.49)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.49)	Loss_d 0.605 (0.602)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.604 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.604 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.80it/s]
Test: [  0/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 44/  1]	epoch_time 0.0448 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0444 (0.0404)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.49940001460909844, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.71it/s] 23%|##3       | 6/26 [00:00<00:00, 24.06it/s] 38%|###8      | 10/26 [00:00<00:00, 28.46it/s] 50%|#####     | 13/26 [00:00<00:00, 26.70it/s] 62%|######1   | 16/26 [00:00<00:00, 25.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.99it/s] 88%|########8 | 23/26 [00:00<00:00, 28.10it/s]100%|##########| 26/26 [00:00<00:00, 26.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 463 tensor(-5.9872e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 459 tensor(2.5915e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 500 tensor(3.0323e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 379 tensor(6.4749e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 376 tensor(1.8871e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 376 tensor(5.0593e-09, device='cuda:0')
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1671 (6.1654)	zero_count 0.0000 (9.4770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 15%|#5        | 4/26 [00:00<00:01, 18.12it/s] 35%|###4      | 9/26 [00:00<00:00, 30.17it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.17it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.97it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.97it/s] 92%|#########2| 24/26 [00:00<00:00, 40.39it/s]100%|##########| 26/26 [00:00<00:00, 33.63it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.602)	test_acc   0.47 (  0.49)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.49)	Loss_d 0.605 (0.602)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.603 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.49it/s]
Test: [  0/  1]	Loss 1.573 (1.573)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.573 (1.573)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.573 (1.573)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.573 (1.573)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 45/  1]	epoch_time 0.0439 (0.0410)	validation_time 0.0003 (0.0005)	train_time 0.0436 (0.0404)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4995000134408474, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.03it/s] 23%|##3       | 6/26 [00:00<00:00, 22.27it/s] 38%|###8      | 10/26 [00:00<00:00, 26.94it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.85it/s] 69%|######9   | 18/26 [00:00<00:00, 30.83it/s] 85%|########4 | 22/26 [00:00<00:00, 32.19it/s]100%|##########| 26/26 [00:00<00:00, 30.61it/s]100%|##########| 26/26 [00:00<00:00, 27.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 368 tensor(-4.8976e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 367 tensor(2.5397e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1649 (6.1620)	zero_count 143.0000 (8.8400)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.92it/s] 23%|##3       | 6/26 [00:00<00:00, 32.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.43it/s] 42%|####2     | 11/26 [00:00<00:00, 38.59it/s] 62%|######1   | 16/26 [00:00<00:00, 41.82it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.82it/s] 81%|########  | 21/26 [00:00<00:00, 39.29it/s]100%|##########| 26/26 [00:00<00:00, 42.05it/s]100%|##########| 26/26 [00:00<00:00, 36.03it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.596 (0.596)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.603)	test_acc   0.47 (  0.49)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.49)	Loss_d 0.605 (0.603)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.41 (  0.39)
Test: [  20/  26]	Loss 0.599 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.604 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.604 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.59it/s]
Test: [  0/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 46/  1]	epoch_time 0.0427 (0.0411)	validation_time 0.0006 (0.0006)	train_time 0.0421 (0.0405)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4991000111401081, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.85it/s] 19%|#9        | 5/26 [00:00<00:01, 17.74it/s] 35%|###4      | 9/26 [00:00<00:00, 24.10it/s] 50%|#####     | 13/26 [00:00<00:00, 27.88it/s] 65%|######5   | 17/26 [00:00<00:00, 27.56it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.69it/s] 92%|#########2| 24/26 [00:00<00:00, 27.05it/s]100%|##########| 26/26 [00:01<00:00, 24.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 455 tensor(-4.3773e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 497 tensor(3.6873e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 442 tensor(8.5766e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 399 tensor(2.2364e-06, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1655 (6.1647)	zero_count 0.0000 (11.0370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.24it/s] 27%|##6       | 7/26 [00:00<00:00, 32.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.55it/s] 50%|#####     | 13/26 [00:00<00:00, 43.03it/s] 69%|######9   | 18/26 [00:00<00:00, 44.15it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.15it/s] 88%|########8 | 23/26 [00:00<00:00, 44.43it/s]100%|##########| 26/26 [00:00<00:00, 38.69it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.595 (0.595)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.605 (0.602)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.605 (0.602)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.598 (0.601)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.601)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.603 (0.602)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.603 (0.602)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.69it/s]
Test: [  0/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.568 (1.568)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.568 (1.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 47/  1]	epoch_time 0.0414 (0.0411)	validation_time 0.0004 (0.0005)	train_time 0.0410 (0.0405)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4996000134348869, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 15%|#5        | 4/26 [00:00<00:01, 14.45it/s] 31%|###       | 8/26 [00:00<00:00, 22.23it/s] 46%|####6     | 12/26 [00:00<00:00, 26.35it/s] 62%|######1   | 16/26 [00:00<00:00, 28.90it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.89it/s] 92%|#########2| 24/26 [00:00<00:00, 32.36it/s]100%|##########| 26/26 [00:00<00:00, 26.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 380 tensor(1.7159e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 479 tensor(-1.1384e-06, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1644 (6.1635)	zero_count 0.0000 (9.4770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.06it/s] 31%|###       | 8/26 [00:00<00:00, 27.32it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.32it/s] 50%|#####     | 13/26 [00:00<00:00, 31.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.25it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.25it/s] 92%|#########2| 24/26 [00:00<00:00, 41.32it/s]100%|##########| 26/26 [00:00<00:00, 32.41it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.593 (0.593)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.604 (0.601)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.604 (0.601)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.41 (  0.40)
Test: [  20/  26]	Loss 0.598 (0.600)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.600)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.602 (0.601)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.602 (0.601)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.36 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.07it/s]
Test: [  0/  1]	Loss 1.561 (1.561)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.561 (1.561)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.561 (1.561)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.561 (1.561)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 48/  1]	epoch_time 0.0405 (0.0411)	validation_time 0.0004 (0.0005)	train_time 0.0401 (0.0405)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.4996000134348869, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  9.66it/s] 23%|##3       | 6/26 [00:00<00:01, 19.42it/s] 35%|###4      | 9/26 [00:00<00:00, 20.87it/s] 50%|#####     | 13/26 [00:00<00:00, 25.03it/s] 65%|######5   | 17/26 [00:00<00:00, 25.27it/s] 81%|########  | 21/26 [00:00<00:00, 28.06it/s] 92%|#########2| 24/26 [00:00<00:00, 27.29it/s]100%|##########| 26/26 [00:01<00:00, 24.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 436 tensor(2.9265e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 402 tensor(2.6409e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 461 tensor(1.1436e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 478 tensor(3.3667e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 469 tensor(5.3852e-06, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  30.23 ( 30.23)	train_acc   0.51 (  0.50)	train_minacc   0.40 (  0.50)	train_majacc   0.53 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1669 (6.1656)	zero_count 0.0000 (11.6610)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.58it/s] 27%|##6       | 7/26 [00:00<00:00, 32.42it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.42it/s] 46%|####6     | 12/26 [00:00<00:00, 38.65it/s] 65%|######5   | 17/26 [00:00<00:00, 40.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.33it/s] 85%|########4 | 22/26 [00:00<00:00, 42.40it/s]100%|##########| 26/26 [00:00<00:00, 37.34it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.591 (0.591)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.601 (0.598)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.601 (0.598)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.42 (  0.41)
Test: [  20/  26]	Loss 0.596 (0.598)	test_acc   0.49 (  0.50)	test_minacc   0.54 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.596 (0.598)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.600 (0.599)	test_acc   0.51 (  0.50)	test_minacc   0.40 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.600 (0.599)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.37 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.99it/s]
Test: [  0/  1]	Loss 1.565 (1.565)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.565 (1.565)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 1.565 (1.565)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.565 (1.565)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 49/  1]	epoch_time 0.0442 (0.0411)	validation_time 0.0004 (0.0005)	train_time 0.0438 (0.0405)
record: (train_acc, test_acc) (0.7982000213265419, 0.5870000123977661)
last accs (train_acc, test_acc) (0.49980001226067544, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.171 MB of 0.171 MB uploadedwandb: \ 0.171 MB of 0.171 MB uploadedwandb: | 0.193 MB of 0.202 MB uploaded (0.003 MB deduped)wandb: / 0.153 MB of 0.502 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/epoch_time_val █▂▃▂▂▂▃▂▁▁▁▁▃▁▁▂▃▂▃▃▂▂▃▂▃▂▃▃▂▂▃▃▄▂▂▂▃▃▂▃
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/train_time_val █▂▃▂▂▂▃▃▁▂▁▂▃▁▁▃▃▃▃▃▂▂▃▃▃▂▃▃▃▃▃▃▄▂▂▂▃▃▃▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_avg ▃▄▅▄▅▅▄▄▅▇▇█▂▂▂▁▂▃▃▅▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_d_avg ▃▄▅▄▅▅▄▄▅▇▇█▂▂▂▁▂▃▃▅▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_d_val ▃▄▅▄▅▅▄▄▅▇▇█▂▂▂▁▂▃▃▅▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_val ▃▄▅▄▅▅▄▄▅▇▇█▂▂▂▁▂▃▃▅▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_avg ▁▁▁▃▃▄▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_d_avg ▁▁▁▃▃▄▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_d_val ▁▁▁▃▃▄▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_val ▁▁▁▃▃▄▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_corr_d_avg ███▇▆▆▅▄▅▄▄▃▃▄▂▁▃▃▃▁▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_corr_d_val ███▇▆▆▅▄▅▄▄▃▃▄▂▁▃▃▃▁▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_avg ██████▇▇▇▇▇▆▇▆▆▅▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_d_avg ██████▇▇▇▇▇▆▇▆▆▅▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_d_val ██████▇▇▇▇▇▆▇▆▆▅▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_val ██████▇▇▇▇▇▆▇▆▆▅▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_avg ▁▁▁▃▃▃▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_d_avg ▁▁▁▃▃▃▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_d_val ▁▁▁▃▃▃▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_val ▁▁▁▃▃▃▅▆▅▅▆▆▆▆▇█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/Loss_val ██▇▆▆▅▆▅▅▄▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/l1_avg █▅▅▅▅▅▅▅▅▅▅▆▅▁▁▁▂▃▃▅▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/l1_val ▇▆▇▇▆▆▅▅▅▇██▃▁▂▂▂▃▃▆▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇█████▆▆▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_acc_val ▆▆▆▇▇▇▇▇▇█▇█▇▅▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_majacc_avg ▇███████▇███▇▅▅▅▅▅▆▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_majacc_val ████▇▇▇█▇▇▇█▇▆▅▅▆▆▆▇▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_minacc_avg ▁▁▁▂▃▄▄▄▅▆▆▆▇██████▆▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_minacc_val ▁▁▂▃▅▅▇▆▆▇▇█▇▆▇▇▇▇▇▆▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_nll_avg ▇▄▄▄▃▃▃▂▂▂▁▁▂▄▄▄▄▄▃▆████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_nll_val ▅▅▅▄▃▃▃▃▃▂▂▁▃▅▅▄▄▄▄▅████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_penalty_avg █▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_penalty_val █▇▄▃▃▂▂▃▂▂▁▁▂▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/weight_norm_avg ▁▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▅▆████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/weight_norm_val ▁▂▂▂▂▂▂▂▃▃▃▄▄▄▄▄▄▄▄▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▅█▅▂▂▂▂▂▂▂▂▂▂▁▁▁▁▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▅▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/epoch_time_val 0.04425
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/train_time_val 0.0438
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/diagnostics/validation_time_val 0.00042
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_avg 1.56482
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_d_avg 1.56482
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_d_val 1.56482
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/Loss_val 1.56482
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_corr_d_avg 0.3473
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_corr_d_val 0.3473
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/Loss_val 7e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/l1_avg 6.16555
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/l1_val 6.16687
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_acc_avg 0.4997
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_acc_val 0.512
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_majacc_avg 0.49962
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_majacc_val 0.53333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_minacc_avg 0.49878
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_minacc_val 0.4
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_nll_avg 0.59995
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_nll_val 0.59962
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/train_penalty_val 1e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/weight_norm_avg 30.23365
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/weight_norm_val 30.23349
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/zero_count_avg 11.661
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/108/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/xkiw1f3k
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_185923-xkiw1f3k/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_190204-x2v62s2r
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/x2v62s2r
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1227
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5995, 3, 32, 32) (6005, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:43,  1.75s/it] 19%|#9        | 5/26 [00:01<00:06,  3.49it/s] 35%|###4      | 9/26 [00:01<00:02,  6.92it/s] 50%|#####     | 13/26 [00:02<00:01, 10.70it/s] 65%|######5   | 17/26 [00:02<00:00, 14.62it/s] 81%|########  | 21/26 [00:02<00:00, 18.59it/s] 96%|#########6| 25/26 [00:02<00:00, 22.12it/s]100%|##########| 26/26 [00:02<00:00,  9.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.408 (0.516)	train_nll   0.41 (  0.52)	train_penalty   0.06 (  0.19)	weight_norm  20.92 ( 18.20)	train_acc   0.86 (  0.81)	train_minacc   0.03 (  0.08)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5553 (7.8441)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.77it/s] 27%|##6       | 7/26 [00:00<00:00, 31.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.83it/s] 46%|####6     | 12/26 [00:00<00:00, 38.22it/s] 65%|######5   | 17/26 [00:00<00:00, 41.65it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.65it/s] 85%|########4 | 22/26 [00:00<00:00, 40.43it/s]100%|##########| 26/26 [00:00<00:00, 36.59it/s]
Test: [   0/  26]	Loss 0.359 (0.359)	test_acc   0.88 (  0.88)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.359 (0.359)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.374 (0.418)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.374 (0.418)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.98)
Test: [  20/  26]	Loss 0.415 (0.415)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.415 (0.415)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.401 (0.414)	test_acc   0.86 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.401 (0.414)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]
Test: [  0/  1]	Loss 1.916 (1.916)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.916 (1.916)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.916 (1.916)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.916 (1.916)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0808 (0.0808)	validation_time 0.0068 (0.0068)	train_time 0.0720 (0.0720)
record: (train_acc, test_acc) (0.846600026845932, 0.10700000822544098)
last accs (train_acc, test_acc) (0.846600026845932, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 19%|#9        | 5/26 [00:00<00:00, 23.04it/s] 35%|###4      | 9/26 [00:00<00:00, 26.77it/s] 50%|#####     | 13/26 [00:00<00:00, 29.49it/s] 65%|######5   | 17/26 [00:00<00:00, 31.40it/s] 81%|########  | 21/26 [00:00<00:00, 32.77it/s] 96%|#########6| 25/26 [00:00<00:00, 33.25it/s]100%|##########| 26/26 [00:00<00:00, 28.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.358 (0.399)	train_nll   0.36 (  0.40)	train_penalty   0.04 (  0.05)	weight_norm  22.01 ( 21.67)	train_acc   0.86 (  0.85)	train_minacc   0.11 (  0.02)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 6.3650 (6.3460)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.24it/s] 31%|###       | 8/26 [00:00<00:00, 36.81it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.81it/s] 46%|####6     | 12/26 [00:00<00:00, 37.85it/s] 65%|######5   | 17/26 [00:00<00:00, 38.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.80it/s] 85%|########4 | 22/26 [00:00<00:00, 41.03it/s]100%|##########| 26/26 [00:00<00:00, 36.02it/s]
Test: [   0/  26]	Loss 0.339 (0.339)	test_acc   0.87 (  0.87)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.339 (0.339)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.337 (0.376)	test_acc   0.87 (  0.85)	test_minacc   0.13 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.337 (0.376)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.13 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.95)
Test: [  20/  26]	Loss 0.366 (0.372)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.05)	test_majacc   1.00 (  0.99)	Loss_d 0.366 (0.372)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.05)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  26/  26]	Loss 0.343 (0.369)	test_acc   0.86 (  0.85)	test_minacc   0.11 (  0.05)	test_majacc   0.98 (  0.99)	Loss_d 0.343 (0.369)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.11 (  0.05)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.12it/s]
Test: [  0/  1]	Loss 1.868 (1.868)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.868 (1.868)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.868 (1.868)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.868 (1.868)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0472 (0.0640)	validation_time 0.0005 (0.0036)	train_time 0.0466 (0.0593)
record: (train_acc, test_acc) (0.8496000266671181, 0.13700000941753387)
last accs (train_acc, test_acc) (0.8496000266671181, 0.13700000941753387)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.19it/s] 15%|#5        | 4/26 [00:00<00:01, 12.51it/s] 31%|###       | 8/26 [00:00<00:00, 20.22it/s] 46%|####6     | 12/26 [00:00<00:00, 24.98it/s] 62%|######1   | 16/26 [00:00<00:00, 27.73it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.64it/s] 92%|#########2| 24/26 [00:00<00:00, 31.35it/s]100%|##########| 26/26 [00:01<00:00, 24.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.341 (0.365)	train_nll   0.34 (  0.36)	train_penalty   0.02 (  0.04)	weight_norm  22.16 ( 22.10)	train_acc   0.87 (  0.85)	train_minacc   0.22 (  0.11)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 6.5222 (6.4868)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.96it/s] 23%|##3       | 6/26 [00:00<00:00, 29.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.72it/s] 42%|####2     | 11/26 [00:00<00:00, 36.25it/s] 62%|######1   | 16/26 [00:00<00:00, 40.34it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.34it/s] 81%|########  | 21/26 [00:00<00:00, 38.96it/s]100%|##########| 26/26 [00:00<00:00, 41.55it/s]100%|##########| 26/26 [00:00<00:00, 34.77it/s]
Test: [   0/  26]	Loss 0.294 (0.294)	test_acc   0.89 (  0.89)	test_minacc   0.13 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 0.294 (0.294)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.304 (0.337)	test_acc   0.88 (  0.86)	test_minacc   0.21 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 0.304 (0.337)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.21 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.92)
Test: [  20/  26]	Loss 0.319 (0.336)	test_acc   0.86 (  0.86)	test_minacc   0.18 (  0.15)	test_majacc   0.98 (  0.98)	Loss_d 0.319 (0.336)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.18 (  0.15)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  26/  26]	Loss 0.306 (0.334)	test_acc   0.88 (  0.86)	test_minacc   0.22 (  0.15)	test_majacc   0.99 (  0.98)	Loss_d 0.306 (0.334)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.22 (  0.15)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.90 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.88it/s]
Test: [  0/  1]	Loss 1.812 (1.812)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 1.812 (1.812)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.812 (1.812)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 1.812 (1.812)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0447 (0.0576)	validation_time 0.0006 (0.0026)	train_time 0.0441 (0.0542)
record: (train_acc, test_acc) (0.8563000258207322, 0.17900000512599945)
last accs (train_acc, test_acc) (0.8563000258207322, 0.17900000512599945)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.19it/s] 12%|#1        | 3/26 [00:00<00:01, 11.67it/s] 27%|##6       | 7/26 [00:00<00:00, 21.15it/s] 42%|####2     | 11/26 [00:00<00:00, 25.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.74it/s] 88%|########8 | 23/26 [00:00<00:00, 30.77it/s]100%|##########| 26/26 [00:01<00:00, 25.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.297 (0.343)	train_nll   0.30 (  0.34)	train_penalty   0.01 (  0.03)	weight_norm  22.25 ( 22.21)	train_acc   0.86 (  0.85)	train_minacc   0.33 (  0.18)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 6.7698 (6.6489)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.86it/s] 23%|##3       | 6/26 [00:00<00:01, 19.28it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.28it/s] 42%|####2     | 11/26 [00:00<00:00, 28.29it/s] 62%|######1   | 16/26 [00:00<00:00, 34.54it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.54it/s] 81%|########  | 21/26 [00:00<00:00, 36.52it/s]100%|##########| 26/26 [00:00<00:00, 39.41it/s]100%|##########| 26/26 [00:00<00:00, 29.63it/s]
Test: [   0/  26]	Loss 0.283 (0.283)	test_acc   0.89 (  0.89)	test_minacc   0.21 (  0.21)	test_majacc   0.98 (  0.98)	Loss_d 0.283 (0.283)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.293 (0.329)	test_acc   0.89 (  0.86)	test_minacc   0.35 (  0.26)	test_majacc   0.97 (  0.97)	Loss_d 0.293 (0.329)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.35 (  0.26)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  20/  26]	Loss 0.308 (0.327)	test_acc   0.85 (  0.86)	test_minacc   0.31 (  0.27)	test_majacc   0.95 (  0.96)	Loss_d 0.308 (0.327)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.31 (  0.27)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  26/  26]	Loss 0.289 (0.324)	test_acc   0.86 (  0.86)	test_minacc   0.28 (  0.27)	test_majacc   0.96 (  0.97)	Loss_d 0.289 (0.324)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.28 (  0.27)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.87 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.26it/s]
Test: [  0/  1]	Loss 1.869 (1.869)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 1.869 (1.869)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 1.869 (1.869)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 1.869 (1.869)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.72 (  0.72)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0441 (0.0542)	validation_time 0.0004 (0.0021)	train_time 0.0436 (0.0516)
record: (train_acc, test_acc) (0.8610000179409981, 0.27800002694129944)
last accs (train_acc, test_acc) (0.8610000179409981, 0.27800002694129944)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 19%|#9        | 5/26 [00:00<00:01, 18.27it/s] 35%|###4      | 9/26 [00:00<00:00, 24.70it/s] 50%|#####     | 13/26 [00:00<00:00, 28.35it/s] 65%|######5   | 17/26 [00:00<00:00, 30.39it/s] 81%|########  | 21/26 [00:00<00:00, 31.75it/s] 96%|#########6| 25/26 [00:00<00:00, 32.38it/s]100%|##########| 26/26 [00:00<00:00, 26.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.273 (0.324)	train_nll   0.27 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.34 ( 22.29)	train_acc   0.88 (  0.86)	train_minacc   0.42 (  0.27)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7455 (6.6725)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.95it/s] 27%|##6       | 7/26 [00:00<00:00, 33.40it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.40it/s] 46%|####6     | 12/26 [00:00<00:00, 37.87it/s] 69%|######9   | 18/26 [00:00<00:00, 41.11it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.11it/s] 88%|########8 | 23/26 [00:00<00:00, 42.86it/s]100%|##########| 26/26 [00:00<00:00, 37.58it/s]
Test: [   0/  26]	Loss 0.285 (0.285)	test_acc   0.89 (  0.89)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 0.285 (0.285)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.278 (0.325)	test_acc   0.89 (  0.86)	test_minacc   0.44 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 0.278 (0.325)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.44 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.311 (0.322)	test_acc   0.86 (  0.87)	test_minacc   0.34 (  0.35)	test_majacc   0.96 (  0.96)	Loss_d 0.311 (0.322)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.34 (  0.35)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.88)
Test: [  26/  26]	Loss 0.264 (0.320)	test_acc   0.88 (  0.86)	test_minacc   0.42 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 0.264 (0.320)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.42 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.95it/s]
Test: [  0/  1]	Loss 1.871 (1.871)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 1.871 (1.871)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.68 (  0.68)
Test: [  1/  1]	Loss 1.871 (1.871)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 1.871 (1.871)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.68 (  0.68)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0430 (0.0520)	validation_time 0.0004 (0.0017)	train_time 0.0426 (0.0498)
record: (train_acc, test_acc) (0.8649000220298767, 0.3270000219345093)
last accs (train_acc, test_acc) (0.8649000220298767, 0.3270000219345093)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.73it/s] 23%|##3       | 6/26 [00:00<00:00, 21.73it/s] 38%|###8      | 10/26 [00:00<00:00, 26.51it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.31it/s] 69%|######9   | 18/26 [00:00<00:00, 30.85it/s] 85%|########4 | 22/26 [00:00<00:00, 32.11it/s]100%|##########| 26/26 [00:00<00:00, 33.97it/s]100%|##########| 26/26 [00:00<00:00, 27.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.262 (0.311)	train_nll   0.26 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.45 ( 22.39)	train_acc   0.90 (  0.87)	train_minacc   0.53 (  0.34)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7468 (6.7039)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 23%|##3       | 6/26 [00:00<00:00, 28.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.69it/s] 42%|####2     | 11/26 [00:00<00:00, 34.51it/s] 62%|######1   | 16/26 [00:00<00:00, 38.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.27it/s] 81%|########  | 21/26 [00:00<00:00, 39.22it/s]100%|##########| 26/26 [00:00<00:00, 34.42it/s]
Test: [   0/  26]	Loss 0.266 (0.266)	test_acc   0.89 (  0.89)	test_minacc   0.40 (  0.40)	test_majacc   0.96 (  0.96)	Loss_d 0.266 (0.266)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.259 (0.305)	test_acc   0.90 (  0.87)	test_minacc   0.46 (  0.36)	test_majacc   0.97 (  0.96)	Loss_d 0.259 (0.305)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.46 (  0.36)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  20/  26]	Loss 0.274 (0.298)	test_acc   0.87 (  0.87)	test_minacc   0.33 (  0.37)	test_majacc   0.97 (  0.96)	Loss_d 0.274 (0.298)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.33 (  0.37)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  26/  26]	Loss 0.249 (0.295)	test_acc   0.90 (  0.87)	test_minacc   0.56 (  0.37)	test_majacc   0.96 (  0.96)	Loss_d 0.249 (0.295)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.56 (  0.37)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.14it/s]
Test: [  0/  1]	Loss 1.921 (1.921)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.95 (  0.95)	Loss_d 1.921 (1.921)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.68 (  0.68)
Test: [  1/  1]	Loss 1.921 (1.921)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.95 (  0.95)	Loss_d 1.921 (1.921)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.68 (  0.68)
Overall Timing[  5/  1]	epoch_time 0.0501 (0.0516)	validation_time 0.0005 (0.0015)	train_time 0.0496 (0.0497)
record: (train_acc, test_acc) (0.8649000220298767, 0.3270000219345093)
last accs (train_acc, test_acc) (0.8740000233650208, 0.3190000057220459)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.62it/s] 23%|##3       | 6/26 [00:00<00:00, 25.90it/s] 38%|###8      | 10/26 [00:00<00:00, 29.44it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.98it/s] 69%|######9   | 18/26 [00:00<00:00, 31.79it/s] 85%|########4 | 22/26 [00:00<00:00, 32.83it/s]100%|##########| 26/26 [00:00<00:00, 33.22it/s]100%|##########| 26/26 [00:00<00:00, 28.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.270 (0.295)	train_nll   0.27 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.59 ( 22.52)	train_acc   0.88 (  0.87)	train_minacc   0.36 (  0.41)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.0073 (6.8104)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.97it/s] 23%|##3       | 6/26 [00:00<00:00, 28.34it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.34it/s] 42%|####2     | 11/26 [00:00<00:00, 36.55it/s] 62%|######1   | 16/26 [00:00<00:00, 41.44it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.44it/s] 81%|########  | 21/26 [00:00<00:00, 41.57it/s]100%|##########| 26/26 [00:00<00:00, 35.91it/s]
Test: [   0/  26]	Loss 0.247 (0.247)	test_acc   0.90 (  0.90)	test_minacc   0.34 (  0.34)	test_majacc   0.98 (  0.98)	Loss_d 0.247 (0.247)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.230 (0.278)	test_acc   0.90 (  0.88)	test_minacc   0.40 (  0.38)	test_majacc   0.97 (  0.97)	Loss_d 0.230 (0.278)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.40 (  0.38)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.89)
Test: [  20/  26]	Loss 0.234 (0.268)	test_acc   0.90 (  0.89)	test_minacc   0.52 (  0.44)	test_majacc   0.97 (  0.97)	Loss_d 0.234 (0.268)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.52 (  0.44)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.223 (0.264)	test_acc   0.90 (  0.89)	test_minacc   0.53 (  0.44)	test_majacc   0.96 (  0.97)	Loss_d 0.223 (0.264)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.53 (  0.44)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.88 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.00it/s]
Test: [  0/  1]	Loss 2.040 (2.040)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 2.040 (2.040)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.70 (  0.70)
Test: [  1/  1]	Loss 2.040 (2.040)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 2.040 (2.040)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.70 (  0.70)
Overall Timing[  6/  1]	epoch_time 0.0394 (0.0499)	validation_time 0.0003 (0.0014)	train_time 0.0391 (0.0482)
record: (train_acc, test_acc) (0.8649000220298767, 0.3270000219345093)
last accs (train_acc, test_acc) (0.8885000190138816, 0.3240000009536743)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.93it/s] 19%|#9        | 5/26 [00:00<00:00, 23.75it/s] 35%|###4      | 9/26 [00:00<00:00, 28.89it/s] 50%|#####     | 13/26 [00:00<00:00, 31.58it/s] 65%|######5   | 17/26 [00:00<00:00, 33.19it/s] 81%|########  | 21/26 [00:00<00:00, 34.44it/s] 96%|#########6| 25/26 [00:00<00:00, 34.78it/s]100%|##########| 26/26 [00:00<00:00, 29.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.207 (0.280)	train_nll   0.21 (  0.28)	train_penalty   0.00 (  0.01)	weight_norm  22.75 ( 22.67)	train_acc   0.92 (  0.88)	train_minacc   0.64 (  0.46)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.2176 (6.8832)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.55it/s] 23%|##3       | 6/26 [00:00<00:00, 23.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.69it/s] 42%|####2     | 11/26 [00:00<00:00, 32.60it/s] 62%|######1   | 16/26 [00:00<00:00, 38.05it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.05it/s] 81%|########  | 21/26 [00:00<00:00, 37.75it/s]100%|##########| 26/26 [00:00<00:00, 40.97it/s]100%|##########| 26/26 [00:00<00:00, 32.22it/s]
Test: [   0/  26]	Loss 0.255 (0.255)	test_acc   0.89 (  0.89)	test_minacc   0.47 (  0.47)	test_majacc   0.95 (  0.95)	Loss_d 0.255 (0.255)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.222 (0.262)	test_acc   0.91 (  0.89)	test_minacc   0.54 (  0.52)	test_majacc   0.96 (  0.95)	Loss_d 0.222 (0.262)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.86 (  0.84)
Test: [  20/  26]	Loss 0.204 (0.248)	test_acc   0.92 (  0.90)	test_minacc   0.67 (  0.57)	test_majacc   0.96 (  0.96)	Loss_d 0.204 (0.248)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.83)
Test: [  26/  26]	Loss 0.170 (0.243)	test_acc   0.95 (  0.90)	test_minacc   0.81 (  0.58)	test_majacc   0.98 (  0.96)	Loss_d 0.170 (0.243)	test_acc_d   0.95 (  0.90)	test_minacc_d   0.81 (  0.58)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.82 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.09it/s]
Test: [  0/  1]	Loss 2.022 (2.022)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 2.022 (2.022)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 2.022 (2.022)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 2.022 (2.022)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.48 (  0.48)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0408 (0.0488)	validation_time 0.0004 (0.0012)	train_time 0.0403 (0.0472)
record: (train_acc, test_acc) (0.8998000203967095, 0.42000001668930054)
last accs (train_acc, test_acc) (0.8998000203967095, 0.42000001668930054)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.11it/s] 19%|#9        | 5/26 [00:00<00:01, 18.34it/s] 35%|###4      | 9/26 [00:00<00:00, 25.18it/s] 50%|#####     | 13/26 [00:00<00:00, 28.04it/s] 65%|######5   | 17/26 [00:00<00:00, 29.67it/s] 81%|########  | 21/26 [00:00<00:00, 30.86it/s] 96%|#########6| 25/26 [00:00<00:00, 32.16it/s]100%|##########| 26/26 [00:00<00:00, 26.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.200 (0.269)	train_nll   0.20 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  22.97 ( 22.86)	train_acc   0.92 (  0.88)	train_minacc   0.61 (  0.51)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.3577 (6.9637)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.77it/s] 15%|#5        | 4/26 [00:00<00:01, 14.38it/s] 35%|###4      | 9/26 [00:00<00:00, 26.05it/s]                                               35%|###4      | 9/26 [00:00<00:00, 26.05it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.55it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.55it/s] 92%|#########2| 24/26 [00:00<00:00, 37.06it/s]100%|##########| 26/26 [00:00<00:00, 30.59it/s]
Test: [   0/  26]	Loss 0.242 (0.242)	test_acc   0.89 (  0.89)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 0.242 (0.242)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.234 (0.261)	test_acc   0.90 (  0.89)	test_minacc   0.48 (  0.48)	test_majacc   0.96 (  0.96)	Loss_d 0.234 (0.261)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.87)
Test: [  20/  26]	Loss 0.232 (0.257)	test_acc   0.88 (  0.89)	test_minacc   0.48 (  0.48)	test_majacc   0.96 (  0.96)	Loss_d 0.232 (0.257)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.87)
Test: [  26/  26]	Loss 0.171 (0.251)	test_acc   0.94 (  0.89)	test_minacc   0.69 (  0.48)	test_majacc   0.98 (  0.96)	Loss_d 0.171 (0.251)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.69 (  0.48)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.85 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.58it/s]
Test: [  0/  1]	Loss 2.219 (2.219)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.97 (  0.97)	Loss_d 2.219 (2.219)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 2.219 (2.219)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.97 (  0.97)	Loss_d 2.219 (2.219)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.61 (  0.61)
Overall Timing[  8/  1]	epoch_time 0.0432 (0.0481)	validation_time 0.0004 (0.0012)	train_time 0.0428 (0.0467)
record: (train_acc, test_acc) (0.8998000203967095, 0.42000001668930054)
last accs (train_acc, test_acc) (0.8923000193834305, 0.35500001907348633)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.46it/s] 12%|#1        | 3/26 [00:00<00:02,  9.78it/s] 27%|##6       | 7/26 [00:00<00:00, 19.34it/s] 42%|####2     | 11/26 [00:00<00:00, 25.12it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.15it/s] 88%|########8 | 23/26 [00:00<00:00, 32.64it/s]100%|##########| 26/26 [00:01<00:00, 25.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.220 (0.254)	train_nll   0.22 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.21 ( 23.09)	train_acc   0.91 (  0.89)	train_minacc   0.58 (  0.54)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.5032 (7.2144)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.48it/s] 27%|##6       | 7/26 [00:00<00:00, 32.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.93it/s] 46%|####6     | 12/26 [00:00<00:00, 38.89it/s] 65%|######5   | 17/26 [00:00<00:00, 41.92it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.92it/s] 85%|########4 | 22/26 [00:00<00:00, 39.29it/s]100%|##########| 26/26 [00:00<00:00, 36.85it/s]
Test: [   0/  26]	Loss 0.236 (0.236)	test_acc   0.90 (  0.90)	test_minacc   0.51 (  0.51)	test_majacc   0.96 (  0.96)	Loss_d 0.236 (0.236)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.220 (0.258)	test_acc   0.91 (  0.89)	test_minacc   0.50 (  0.53)	test_majacc   0.97 (  0.96)	Loss_d 0.220 (0.258)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.50 (  0.53)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.86 (  0.84)
Test: [  20/  26]	Loss 0.185 (0.243)	test_acc   0.92 (  0.90)	test_minacc   0.69 (  0.57)	test_majacc   0.96 (  0.96)	Loss_d 0.185 (0.243)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.69 (  0.57)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.83)
Test: [  26/  26]	Loss 0.177 (0.239)	test_acc   0.93 (  0.90)	test_minacc   0.69 (  0.58)	test_majacc   0.97 (  0.96)	Loss_d 0.177 (0.239)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.69 (  0.58)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.83 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.88it/s]
Test: [  0/  1]	Loss 2.234 (2.234)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.95 (  0.95)	Loss_d 2.234 (2.234)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 2.234 (2.234)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.95 (  0.95)	Loss_d 2.234 (2.234)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.50 (  0.50)
Overall Timing[  9/  1]	epoch_time 0.0420 (0.0475)	validation_time 0.0004 (0.0011)	train_time 0.0416 (0.0462)
record: (train_acc, test_acc) (0.8998000203967095, 0.42000001668930054)
last accs (train_acc, test_acc) (0.9016000218987464, 0.3970000147819519)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.17it/s] 23%|##3       | 6/26 [00:00<00:00, 26.02it/s] 38%|###8      | 10/26 [00:00<00:00, 29.93it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.91it/s] 69%|######9   | 18/26 [00:00<00:00, 33.33it/s] 85%|########4 | 22/26 [00:00<00:00, 34.44it/s]100%|##########| 26/26 [00:00<00:00, 34.75it/s]100%|##########| 26/26 [00:00<00:00, 29.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.169 (0.234)	train_nll   0.17 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.52 ( 23.37)	train_acc   0.93 (  0.90)	train_minacc   0.81 (  0.60)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 7.2386 (7.3718)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.66it/s] 27%|##6       | 7/26 [00:00<00:00, 34.50it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.50it/s] 46%|####6     | 12/26 [00:00<00:00, 40.04it/s] 65%|######5   | 17/26 [00:00<00:00, 38.83it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.83it/s] 85%|########4 | 22/26 [00:00<00:00, 41.70it/s]100%|##########| 26/26 [00:00<00:00, 36.40it/s]
Test: [   0/  26]	Loss 0.216 (0.216)	test_acc   0.92 (  0.92)	test_minacc   0.49 (  0.49)	test_majacc   0.97 (  0.97)	Loss_d 0.216 (0.216)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.206 (0.249)	test_acc   0.91 (  0.90)	test_minacc   0.56 (  0.56)	test_majacc   0.96 (  0.96)	Loss_d 0.206 (0.249)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.83)
Test: [  20/  26]	Loss 0.159 (0.225)	test_acc   0.95 (  0.91)	test_minacc   0.77 (  0.62)	test_majacc   0.98 (  0.96)	Loss_d 0.159 (0.225)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.77 (  0.62)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.79 (  0.82)
Test: [  26/  26]	Loss 0.132 (0.213)	test_acc   0.97 (  0.92)	test_minacc   0.89 (  0.65)	test_majacc   0.98 (  0.96)	Loss_d 0.132 (0.213)	test_acc_d   0.97 (  0.92)	test_minacc_d   0.89 (  0.65)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.79 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.67it/s]
Test: [  0/  1]	Loss 2.162 (2.162)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 2.162 (2.162)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 2.162 (2.162)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 2.162 (2.162)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.42 (  0.42)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0419 (0.0470)	validation_time 0.0004 (0.0010)	train_time 0.0414 (0.0458)
record: (train_acc, test_acc) (0.9163000190854073, 0.4360000193119049)
last accs (train_acc, test_acc) (0.9163000190854073, 0.4360000193119049)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.43it/s] 15%|#5        | 4/26 [00:00<00:01, 17.91it/s] 31%|###       | 8/26 [00:00<00:00, 25.36it/s] 46%|####6     | 12/26 [00:00<00:00, 29.04it/s] 62%|######1   | 16/26 [00:00<00:00, 30.81it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.11it/s] 92%|#########2| 24/26 [00:00<00:00, 32.54it/s]100%|##########| 26/26 [00:00<00:00, 27.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.166 (0.219)	train_nll   0.17 (  0.22)	train_penalty   0.00 (  0.01)	weight_norm  23.88 ( 23.70)	train_acc   0.93 (  0.91)	train_minacc   0.83 (  0.63)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 8.3464 (7.6177)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.86it/s] 23%|##3       | 6/26 [00:00<00:00, 32.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.75it/s] 42%|####2     | 11/26 [00:00<00:00, 37.52it/s] 62%|######1   | 16/26 [00:00<00:00, 41.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.89it/s] 81%|########  | 21/26 [00:00<00:00, 40.68it/s]100%|##########| 26/26 [00:00<00:00, 43.47it/s]100%|##########| 26/26 [00:00<00:00, 36.55it/s]
Test: [   0/  26]	Loss 0.203 (0.203)	test_acc   0.92 (  0.92)	test_minacc   0.68 (  0.68)	test_majacc   0.95 (  0.95)	Loss_d 0.203 (0.203)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.222 (0.255)	test_acc   0.92 (  0.90)	test_minacc   0.63 (  0.65)	test_majacc   0.96 (  0.94)	Loss_d 0.222 (0.255)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.63 (  0.65)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.81 (  0.79)
Test: [  20/  26]	Loss 0.197 (0.239)	test_acc   0.90 (  0.90)	test_minacc   0.72 (  0.67)	test_majacc   0.94 (  0.94)	Loss_d 0.197 (0.239)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.72 (  0.67)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.74 (  0.78)
Test: [  26/  26]	Loss 0.136 (0.229)	test_acc   0.94 (  0.91)	test_minacc   0.81 (  0.69)	test_majacc   0.96 (  0.94)	Loss_d 0.136 (0.229)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.81 (  0.69)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.76 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.12it/s]
Test: [  0/  1]	Loss 2.283 (2.283)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.92 (  0.92)	Loss_d 2.283 (2.283)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 2.283 (2.283)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.92 (  0.92)	Loss_d 2.283 (2.283)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.25 (  0.25)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0389 (0.0463)	validation_time 0.0006 (0.0010)	train_time 0.0382 (0.0451)
record: (train_acc, test_acc) (0.9070000289678574, 0.503000020980835)
last accs (train_acc, test_acc) (0.9070000289678574, 0.503000020980835)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 19%|#9        | 5/26 [00:00<00:00, 22.13it/s] 35%|###4      | 9/26 [00:00<00:00, 27.56it/s] 50%|#####     | 13/26 [00:00<00:00, 30.42it/s] 65%|######5   | 17/26 [00:00<00:00, 32.08it/s] 81%|########  | 21/26 [00:00<00:00, 33.19it/s] 96%|#########6| 25/26 [00:00<00:00, 33.86it/s]100%|##########| 26/26 [00:00<00:00, 28.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.103 (0.208)	train_nll   0.10 (  0.21)	train_penalty   0.00 (  0.01)	weight_norm  24.32 ( 24.11)	train_acc   0.96 (  0.91)	train_minacc   0.86 (  0.64)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.8955 (7.7817)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.20it/s] 23%|##3       | 6/26 [00:00<00:00, 21.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.18it/s] 42%|####2     | 11/26 [00:00<00:00, 30.20it/s] 62%|######1   | 16/26 [00:00<00:00, 35.77it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.77it/s] 81%|########  | 21/26 [00:00<00:00, 36.61it/s]100%|##########| 26/26 [00:00<00:00, 39.40it/s]100%|##########| 26/26 [00:00<00:00, 30.19it/s]
Test: [   0/  26]	Loss 0.206 (0.206)	test_acc   0.91 (  0.91)	test_minacc   0.51 (  0.51)	test_majacc   0.96 (  0.96)	Loss_d 0.206 (0.206)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.262 (0.259)	test_acc   0.90 (  0.90)	test_minacc   0.63 (  0.62)	test_majacc   0.94 (  0.95)	Loss_d 0.262 (0.259)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.63 (  0.62)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.79 (  0.78)
Test: [  20/  26]	Loss 0.136 (0.228)	test_acc   0.94 (  0.91)	test_minacc   0.82 (  0.68)	test_majacc   0.96 (  0.95)	Loss_d 0.136 (0.228)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.82 (  0.68)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.74 (  0.77)
Test: [  26/  26]	Loss 0.064 (0.207)	test_acc   0.99 (  0.92)	test_minacc   1.00 (  0.72)	test_majacc   0.99 (  0.96)	Loss_d 0.064 (0.207)	test_acc_d   0.99 (  0.92)	test_minacc_d   1.00 (  0.72)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.74 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.21it/s]
Test: [  0/  1]	Loss 2.828 (2.828)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.95 (  0.95)	Loss_d 2.828 (2.828)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 2.828 (2.828)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.95 (  0.95)	Loss_d 2.828 (2.828)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.33 (  0.33)
Overall Timing[ 12/  1]	epoch_time 0.0429 (0.0461)	validation_time 0.0004 (0.0009)	train_time 0.0425 (0.0449)
record: (train_acc, test_acc) (0.9070000289678574, 0.503000020980835)
last accs (train_acc, test_acc) (0.9197000195980072, 0.4660000205039978)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.48it/s] 27%|##6       | 7/26 [00:00<00:00, 30.17it/s] 42%|####2     | 11/26 [00:00<00:00, 30.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.29it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.89it/s] 88%|########8 | 23/26 [00:00<00:00, 32.38it/s]100%|##########| 26/26 [00:00<00:00, 29.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.092 (0.202)	train_nll   0.09 (  0.20)	train_penalty   0.00 (  0.01)	weight_norm  24.82 ( 24.57)	train_acc   0.97 (  0.91)	train_minacc   0.83 (  0.67)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 9.1642 (8.1319)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.16it/s] 27%|##6       | 7/26 [00:00<00:00, 23.15it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.15it/s] 46%|####6     | 12/26 [00:00<00:00, 31.43it/s] 65%|######5   | 17/26 [00:00<00:00, 33.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.45it/s] 85%|########4 | 22/26 [00:00<00:00, 37.42it/s]100%|##########| 26/26 [00:00<00:00, 30.51it/s]
Test: [   0/  26]	Loss 0.132 (0.132)	test_acc   0.96 (  0.96)	test_minacc   0.72 (  0.72)	test_majacc   0.99 (  0.99)	Loss_d 0.132 (0.132)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.218 (0.211)	test_acc   0.91 (  0.92)	test_minacc   0.58 (  0.62)	test_majacc   0.96 (  0.97)	Loss_d 0.218 (0.211)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.58 (  0.62)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.85 (  0.82)
Test: [  20/  26]	Loss 0.164 (0.204)	test_acc   0.94 (  0.92)	test_minacc   0.74 (  0.65)	test_majacc   0.98 (  0.97)	Loss_d 0.164 (0.204)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.74 (  0.65)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.79 (  0.81)
Test: [  26/  26]	Loss 0.052 (0.188)	test_acc   0.98 (  0.93)	test_minacc   0.92 (  0.68)	test_majacc   1.00 (  0.97)	Loss_d 0.052 (0.188)	test_acc_d   0.98 (  0.93)	test_minacc_d   0.92 (  0.68)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.78 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.13it/s]
Test: [  0/  1]	Loss 3.129 (3.129)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 3.129 (3.129)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 3.129 (3.129)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 3.129 (3.129)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.41 (  0.41)
Overall Timing[ 13/  1]	epoch_time 0.0416 (0.0458)	validation_time 0.0004 (0.0009)	train_time 0.0412 (0.0447)
record: (train_acc, test_acc) (0.9070000289678574, 0.503000020980835)
last accs (train_acc, test_acc) (0.9273000177741051, 0.4270000159740448)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.21it/s] 19%|#9        | 5/26 [00:00<00:00, 23.38it/s] 31%|###       | 8/26 [00:00<00:00, 25.62it/s] 46%|####6     | 12/26 [00:00<00:00, 29.77it/s] 62%|######1   | 16/26 [00:00<00:00, 32.48it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.25it/s] 92%|#########2| 24/26 [00:00<00:00, 34.58it/s]100%|##########| 26/26 [00:00<00:00, 29.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.098 (0.184)	train_nll   0.10 (  0.18)	train_penalty   0.01 (  0.00)	weight_norm  25.38 ( 25.10)	train_acc   0.99 (  0.93)	train_minacc   0.92 (  0.72)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 8.3107 (8.6612)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.81it/s] 27%|##6       | 7/26 [00:00<00:00, 35.81it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.81it/s] 50%|#####     | 13/26 [00:00<00:00, 42.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.63it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.63it/s] 96%|#########6| 25/26 [00:00<00:00, 48.13it/s]100%|##########| 26/26 [00:00<00:00, 40.79it/s]
Test: [   0/  26]	Loss 0.142 (0.142)	test_acc   0.94 (  0.94)	test_minacc   0.68 (  0.68)	test_majacc   0.97 (  0.97)	Loss_d 0.142 (0.142)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.213 (0.193)	test_acc   0.91 (  0.92)	test_minacc   0.54 (  0.67)	test_majacc   0.96 (  0.96)	Loss_d 0.213 (0.193)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.54 (  0.67)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.79)
Test: [  20/  26]	Loss 0.156 (0.186)	test_acc   0.95 (  0.92)	test_minacc   0.84 (  0.71)	test_majacc   0.97 (  0.96)	Loss_d 0.156 (0.186)	test_acc_d   0.95 (  0.92)	test_minacc_d   0.84 (  0.71)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.74 (  0.77)
Test: [  26/  26]	Loss 0.069 (0.173)	test_acc   0.99 (  0.93)	test_minacc   0.92 (  0.74)	test_majacc   1.00 (  0.96)	Loss_d 0.069 (0.173)	test_acc_d   0.99 (  0.93)	test_minacc_d   0.92 (  0.74)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.76 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.52it/s]
Test: [  0/  1]	Loss 2.583 (2.583)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 2.583 (2.583)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 2.583 (2.583)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 2.583 (2.583)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.38 (  0.38)
Overall Timing[ 14/  1]	epoch_time 0.0364 (0.0451)	validation_time 0.0004 (0.0009)	train_time 0.0360 (0.0441)
record: (train_acc, test_acc) (0.9070000289678574, 0.503000020980835)
last accs (train_acc, test_acc) (0.9287000213861465, 0.4310000240802765)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.75it/s] 19%|#9        | 5/26 [00:00<00:01, 20.06it/s] 35%|###4      | 9/26 [00:00<00:00, 26.80it/s] 50%|#####     | 13/26 [00:00<00:00, 30.64it/s] 65%|######5   | 17/26 [00:00<00:00, 33.05it/s] 81%|########  | 21/26 [00:00<00:00, 34.75it/s] 96%|#########6| 25/26 [00:00<00:00, 35.18it/s]100%|##########| 26/26 [00:00<00:00, 28.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.002 (0.064)	train_nll   0.18 (  0.18)	train_penalty   0.00 (  0.00)	weight_norm  25.82 ( 25.63)	train_acc   0.94 (  0.92)	train_minacc   0.86 (  0.74)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 8.1113 (9.3951)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 27%|##6       | 7/26 [00:00<00:00, 31.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.46it/s] 46%|####6     | 12/26 [00:00<00:00, 38.29it/s] 65%|######5   | 17/26 [00:00<00:00, 41.03it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.03it/s] 88%|########8 | 23/26 [00:00<00:00, 46.37it/s]100%|##########| 26/26 [00:00<00:00, 37.32it/s]
Test: [   0/  26]	Loss 0.193 (0.193)	test_acc   0.90 (  0.90)	test_minacc   0.85 (  0.85)	test_majacc   0.91 (  0.91)	Loss_d 0.193 (0.193)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.186 (0.198)	test_acc   0.93 (  0.91)	test_minacc   0.79 (  0.83)	test_majacc   0.95 (  0.93)	Loss_d 0.186 (0.198)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.79 (  0.83)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.77 (  0.72)
Test: [  20/  26]	Loss 0.200 (0.194)	test_acc   0.91 (  0.92)	test_minacc   0.85 (  0.85)	test_majacc   0.92 (  0.93)	Loss_d 0.200 (0.194)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.69 (  0.71)
Test: [  26/  26]	Loss 0.190 (0.197)	test_acc   0.92 (  0.91)	test_minacc   0.81 (  0.84)	test_majacc   0.94 (  0.93)	Loss_d 0.190 (0.197)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.73 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.58it/s]
Test: [  0/  1]	Loss 1.948 (1.948)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.91 (  0.91)	Loss_d 1.948 (1.948)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.948 (1.948)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.91 (  0.91)	Loss_d 1.948 (1.948)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.17 (  0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0369 (0.0446)	validation_time 0.0007 (0.0009)	train_time 0.0362 (0.0436)
record: (train_acc, test_acc) (0.9139000195860862, 0.534000039100647)
last accs (train_acc, test_acc) (0.9139000195860862, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.01it/s] 19%|#9        | 5/26 [00:00<00:00, 23.00it/s] 35%|###4      | 9/26 [00:00<00:00, 29.34it/s] 50%|#####     | 13/26 [00:00<00:00, 32.36it/s] 65%|######5   | 17/26 [00:00<00:00, 34.52it/s] 81%|########  | 21/26 [00:00<00:00, 35.92it/s] 96%|#########6| 25/26 [00:00<00:00, 36.71it/s]100%|##########| 26/26 [00:00<00:00, 30.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.001)	train_nll   0.29 (  0.25)	train_penalty   0.00 (  0.00)	weight_norm  25.93 ( 25.90)	train_acc   0.85 (  0.88)	train_minacc   0.81 (  0.86)	train_majacc   0.86 (  0.88)	train_corr   0.00 (  0.00)	l1 7.1822 (7.4310)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.45it/s] 23%|##3       | 6/26 [00:00<00:00, 31.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.84it/s] 42%|####2     | 11/26 [00:00<00:00, 38.78it/s] 65%|######5   | 17/26 [00:00<00:00, 42.48it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.48it/s] 88%|########8 | 23/26 [00:00<00:00, 46.77it/s]100%|##########| 26/26 [00:00<00:00, 38.96it/s]
Test: [   0/  26]	Loss 0.259 (0.259)	test_acc   0.86 (  0.86)	test_minacc   0.87 (  0.87)	test_majacc   0.86 (  0.86)	Loss_d 0.259 (0.259)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.257 (0.274)	test_acc   0.88 (  0.87)	test_minacc   0.83 (  0.83)	test_majacc   0.89 (  0.88)	Loss_d 0.257 (0.274)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.89 (  0.88)	test_corr_d   0.71 (  0.68)
Test: [  20/  26]	Loss 0.266 (0.263)	test_acc   0.88 (  0.88)	test_minacc   0.82 (  0.84)	test_majacc   0.89 (  0.88)	Loss_d 0.266 (0.263)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.89 (  0.88)	test_corr_d   0.65 (  0.67)
Test: [  26/  26]	Loss 0.285 (0.264)	test_acc   0.86 (  0.87)	test_minacc   0.81 (  0.84)	test_majacc   0.87 (  0.88)	Loss_d 0.285 (0.264)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.87 (  0.88)	test_corr_d   0.67 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.03it/s]
Test: [  0/  1]	Loss 1.638 (1.638)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.89 (  0.89)	Loss_d 1.638 (1.638)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 1.638 (1.638)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.89 (  0.89)	Loss_d 1.638 (1.638)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.07 (  0.07)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0368 (0.0442)	validation_time 0.0004 (0.0008)	train_time 0.0364 (0.0432)
record: (train_acc, test_acc) (0.8747000275850296, 0.5920000076293945)
last accs (train_acc, test_acc) (0.8747000275850296, 0.5920000076293945)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.14it/s] 19%|#9        | 5/26 [00:00<00:00, 21.34it/s] 35%|###4      | 9/26 [00:00<00:00, 27.62it/s] 50%|#####     | 13/26 [00:00<00:00, 31.21it/s] 65%|######5   | 17/26 [00:00<00:00, 33.23it/s] 81%|########  | 21/26 [00:00<00:00, 35.04it/s] 96%|#########6| 25/26 [00:00<00:00, 35.88it/s]100%|##########| 26/26 [00:00<00:00, 29.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.001)	train_nll   0.27 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm  25.94 ( 25.94)	train_acc   0.86 (  0.87)	train_minacc   0.81 (  0.84)	train_majacc   0.86 (  0.88)	train_corr   0.00 (  0.00)	l1 7.4791 (7.2757)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.88it/s] 15%|#5        | 4/26 [00:00<00:01, 20.48it/s] 35%|###4      | 9/26 [00:00<00:00, 32.99it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.99it/s] 58%|#####7    | 15/26 [00:00<00:00, 41.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 43.44it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 43.44it/s]100%|##########| 26/26 [00:00<00:00, 48.45it/s]100%|##########| 26/26 [00:00<00:00, 37.67it/s]
Test: [   0/  26]	Loss 0.261 (0.261)	test_acc   0.86 (  0.86)	test_minacc   0.81 (  0.81)	test_majacc   0.87 (  0.87)	Loss_d 0.261 (0.261)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.274 (0.280)	test_acc   0.88 (  0.87)	test_minacc   0.83 (  0.82)	test_majacc   0.89 (  0.88)	Loss_d 0.274 (0.280)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.83 (  0.82)	test_majacc_d   0.89 (  0.88)	test_corr_d   0.70 (  0.68)
Test: [  20/  26]	Loss 0.248 (0.268)	test_acc   0.87 (  0.87)	test_minacc   0.85 (  0.85)	test_majacc   0.88 (  0.88)	Loss_d 0.248 (0.268)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.66 (  0.66)
Test: [  26/  26]	Loss 0.265 (0.266)	test_acc   0.86 (  0.87)	test_minacc   0.83 (  0.85)	test_majacc   0.87 (  0.88)	Loss_d 0.265 (0.266)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.83 (  0.85)	test_majacc_d   0.87 (  0.88)	test_corr_d   0.67 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.86it/s]
Test: [  0/  1]	Loss 1.656 (1.656)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.88 (  0.88)	Loss_d 1.656 (1.656)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 1.656 (1.656)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.88 (  0.88)	Loss_d 1.656 (1.656)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.06 (  0.06)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0364 (0.0437)	validation_time 0.0004 (0.0008)	train_time 0.0360 (0.0428)
record: (train_acc, test_acc) (0.8718000265955925, 0.6060000061988831)
last accs (train_acc, test_acc) (0.8718000265955925, 0.6060000061988831)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.24it/s] 19%|#9        | 5/26 [00:00<00:01, 18.94it/s] 35%|###4      | 9/26 [00:00<00:00, 26.25it/s] 50%|#####     | 13/26 [00:00<00:00, 30.67it/s] 65%|######5   | 17/26 [00:00<00:00, 33.47it/s] 85%|########4 | 22/26 [00:00<00:00, 36.03it/s]100%|##########| 26/26 [00:00<00:00, 36.83it/s]100%|##########| 26/26 [00:00<00:00, 28.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.003 (0.001)	train_nll   0.32 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm  25.95 ( 25.95)	train_acc   0.84 (  0.87)	train_minacc   0.83 (  0.85)	train_majacc   0.84 (  0.88)	train_corr   0.00 (  0.00)	l1 7.9306 (7.4630)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.93it/s] 27%|##6       | 7/26 [00:00<00:00, 32.75it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.75it/s] 50%|#####     | 13/26 [00:00<00:00, 39.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.27it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.27it/s] 96%|#########6| 25/26 [00:00<00:00, 46.17it/s]100%|##########| 26/26 [00:00<00:00, 38.59it/s]
Test: [   0/  26]	Loss 0.303 (0.303)	test_acc   0.84 (  0.84)	test_minacc   0.85 (  0.85)	test_majacc   0.84 (  0.84)	Loss_d 0.303 (0.303)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.309 (0.323)	test_acc   0.85 (  0.84)	test_minacc   0.85 (  0.86)	test_majacc   0.85 (  0.84)	Loss_d 0.309 (0.323)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.85 (  0.86)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.65 (  0.62)
Test: [  20/  26]	Loss 0.278 (0.312)	test_acc   0.86 (  0.84)	test_minacc   0.92 (  0.87)	test_majacc   0.85 (  0.84)	Loss_d 0.278 (0.312)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.92 (  0.87)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.60 (  0.61)
Test: [  26/  26]	Loss 0.293 (0.307)	test_acc   0.84 (  0.85)	test_minacc   0.83 (  0.87)	test_majacc   0.84 (  0.84)	Loss_d 0.293 (0.307)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.83 (  0.87)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.62 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.52it/s]
Test: [  0/  1]	Loss 1.652 (1.652)	test_acc   0.64 (  0.64)	test_minacc   0.61 (  0.61)	test_majacc   0.87 (  0.87)	Loss_d 1.652 (1.652)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.87 (  0.87)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 1.652 (1.652)	test_acc   0.64 (  0.64)	test_minacc   0.61 (  0.61)	test_majacc   0.87 (  0.87)	Loss_d 1.652 (1.652)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.87 (  0.87)	test_corr_d  -0.01 ( -0.01)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0369 (0.0434)	validation_time 0.0004 (0.0008)	train_time 0.0364 (0.0424)
record: (train_acc, test_acc) (0.8451000235676766, 0.64000004529953)
last accs (train_acc, test_acc) (0.8451000235676766, 0.64000004529953)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.19it/s] 19%|#9        | 5/26 [00:00<00:00, 21.37it/s] 35%|###4      | 9/26 [00:00<00:00, 27.95it/s] 50%|#####     | 13/26 [00:00<00:00, 31.84it/s] 65%|######5   | 17/26 [00:00<00:00, 34.41it/s] 81%|########  | 21/26 [00:00<00:00, 35.92it/s] 96%|#########6| 25/26 [00:00<00:00, 36.93it/s]100%|##########| 26/26 [00:00<00:00, 30.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.001)	train_nll   0.28 (  0.28)	train_penalty   0.00 (  0.00)	weight_norm  25.96 ( 25.95)	train_acc   0.84 (  0.86)	train_minacc   0.83 (  0.84)	train_majacc   0.84 (  0.86)	train_corr   0.00 (  0.00)	l1 7.7004 (7.5292)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.15it/s] 27%|##6       | 7/26 [00:00<00:00, 34.85it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.85it/s] 50%|#####     | 13/26 [00:00<00:00, 40.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.52it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.52it/s] 96%|#########6| 25/26 [00:00<00:00, 47.22it/s]100%|##########| 26/26 [00:00<00:00, 40.07it/s]
Test: [   0/  26]	Loss 0.283 (0.283)	test_acc   0.82 (  0.82)	test_minacc   0.85 (  0.85)	test_majacc   0.81 (  0.81)	Loss_d 0.283 (0.283)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.357 (0.328)	test_acc   0.81 (  0.82)	test_minacc   0.79 (  0.79)	test_majacc   0.81 (  0.83)	Loss_d 0.357 (0.328)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.81 (  0.83)	test_corr_d   0.66 (  0.65)
Test: [  20/  26]	Loss 0.334 (0.331)	test_acc   0.83 (  0.82)	test_minacc   0.82 (  0.81)	test_majacc   0.84 (  0.82)	Loss_d 0.334 (0.331)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.82 (  0.81)	test_majacc_d   0.84 (  0.82)	test_corr_d   0.61 (  0.63)
Test: [  26/  26]	Loss 0.285 (0.327)	test_acc   0.84 (  0.82)	test_minacc   0.83 (  0.81)	test_majacc   0.84 (  0.83)	Loss_d 0.285 (0.327)	test_acc_d   0.84 (  0.82)	test_minacc_d   0.83 (  0.81)	test_majacc_d   0.84 (  0.83)	test_corr_d   0.65 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.31it/s]
Test: [  0/  1]	Loss 1.841 (1.841)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.80 (  0.80)	Loss_d 1.841 (1.841)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.841 (1.841)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.80 (  0.80)	Loss_d 1.841 (1.841)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.08 (  0.08)
Overall Timing[ 19/  1]	epoch_time 0.0350 (0.0429)	validation_time 0.0004 (0.0008)	train_time 0.0346 (0.0421)
record: (train_acc, test_acc) (0.8451000235676766, 0.64000004529953)
last accs (train_acc, test_acc) (0.823600026011467, 0.5990000367164612)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.13it/s] 19%|#9        | 5/26 [00:00<00:00, 23.70it/s] 35%|###4      | 9/26 [00:00<00:00, 29.57it/s] 50%|#####     | 13/26 [00:00<00:00, 33.02it/s] 65%|######5   | 17/26 [00:00<00:00, 34.89it/s] 81%|########  | 21/26 [00:00<00:00, 36.16it/s] 96%|#########6| 25/26 [00:00<00:00, 36.52it/s]100%|##########| 26/26 [00:00<00:00, 30.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.004 (0.001)	train_nll   0.22 (  0.28)	train_penalty   0.00 (  0.00)	weight_norm  25.96 ( 25.96)	train_acc   0.90 (  0.85)	train_minacc   0.97 (  0.85)	train_majacc   0.88 (  0.85)	train_corr   0.00 (  0.00)	l1 8.0128 (7.5847)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 27%|##6       | 7/26 [00:00<00:00, 32.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.54it/s] 46%|####6     | 12/26 [00:00<00:00, 38.60it/s] 69%|######9   | 18/26 [00:00<00:00, 45.29it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.29it/s] 88%|########8 | 23/26 [00:00<00:00, 44.89it/s]100%|##########| 26/26 [00:00<00:00, 38.41it/s]
Test: [   0/  26]	Loss 0.268 (0.268)	test_acc   0.85 (  0.85)	test_minacc   0.87 (  0.87)	test_majacc   0.85 (  0.85)	Loss_d 0.268 (0.268)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.344 (0.303)	test_acc   0.82 (  0.84)	test_minacc   0.83 (  0.86)	test_majacc   0.82 (  0.84)	Loss_d 0.344 (0.303)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.83 (  0.86)	test_majacc_d   0.82 (  0.84)	test_corr_d   0.64 (  0.62)
Test: [  20/  26]	Loss 0.321 (0.321)	test_acc   0.82 (  0.83)	test_minacc   0.87 (  0.85)	test_majacc   0.81 (  0.83)	Loss_d 0.321 (0.321)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.87 (  0.85)	test_majacc_d   0.81 (  0.83)	test_corr_d   0.59 (  0.61)
Test: [  26/  26]	Loss 0.231 (0.314)	test_acc   0.89 (  0.83)	test_minacc   0.97 (  0.86)	test_majacc   0.87 (  0.83)	Loss_d 0.231 (0.314)	test_acc_d   0.89 (  0.83)	test_minacc_d   0.97 (  0.86)	test_majacc_d   0.87 (  0.83)	test_corr_d   0.62 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.38it/s]
Test: [  0/  1]	Loss 1.647 (1.647)	test_acc   0.65 (  0.65)	test_minacc   0.62 (  0.62)	test_majacc   0.84 (  0.84)	Loss_d 1.647 (1.647)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.84 (  0.84)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 1.647 (1.647)	test_acc   0.65 (  0.65)	test_minacc   0.62 (  0.62)	test_majacc   0.84 (  0.84)	Loss_d 1.647 (1.647)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.84 (  0.84)	test_corr_d  -0.05 ( -0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[ 20/  1]	epoch_time 0.0353 (0.0426)	validation_time 0.0003 (0.0007)	train_time 0.0350 (0.0417)
record: (train_acc, test_acc) (0.8333000289797783, 0.6460000276565552)
last accs (train_acc, test_acc) (0.8333000289797783, 0.6460000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.96it/s] 19%|#9        | 5/26 [00:00<00:00, 24.52it/s] 35%|###4      | 9/26 [00:00<00:00, 28.82it/s] 50%|#####     | 13/26 [00:00<00:00, 32.30it/s] 65%|######5   | 17/26 [00:00<00:00, 33.81it/s] 81%|########  | 21/26 [00:00<00:00, 35.19it/s] 96%|#########6| 25/26 [00:00<00:00, 36.07it/s]100%|##########| 26/26 [00:00<00:00, 30.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.005 (0.002)	train_nll   0.24 (  0.28)	train_penalty   0.01 (  0.00)	weight_norm  25.98 ( 25.97)	train_acc   0.88 (  0.86)	train_minacc   0.72 (  0.84)	train_majacc   0.91 (  0.86)	train_corr   0.00 (  0.00)	l1 7.9082 (7.8294)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.89it/s] 23%|##3       | 6/26 [00:00<00:00, 23.12it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.12it/s] 42%|####2     | 11/26 [00:00<00:00, 32.77it/s] 65%|######5   | 17/26 [00:00<00:00, 38.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.58it/s] 88%|########8 | 23/26 [00:00<00:00, 43.65it/s]100%|##########| 26/26 [00:00<00:00, 34.02it/s]
Test: [   0/  26]	Loss 0.271 (0.271)	test_acc   0.85 (  0.85)	test_minacc   0.70 (  0.70)	test_majacc   0.87 (  0.87)	Loss_d 0.271 (0.271)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.295 (0.268)	test_acc   0.86 (  0.87)	test_minacc   0.69 (  0.76)	test_majacc   0.89 (  0.89)	Loss_d 0.295 (0.268)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.69 (  0.76)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.76 (  0.74)
Test: [  20/  26]	Loss 0.309 (0.288)	test_acc   0.84 (  0.85)	test_minacc   0.82 (  0.74)	test_majacc   0.84 (  0.87)	Loss_d 0.309 (0.288)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.82 (  0.74)	test_majacc_d   0.84 (  0.87)	test_corr_d   0.69 (  0.73)
Test: [  26/  26]	Loss 0.249 (0.288)	test_acc   0.87 (  0.85)	test_minacc   0.69 (  0.74)	test_majacc   0.90 (  0.87)	Loss_d 0.249 (0.288)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.69 (  0.74)	test_majacc_d   0.90 (  0.87)	test_corr_d   0.73 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.13it/s]
Test: [  0/  1]	Loss 2.082 (2.082)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.86 (  0.86)	Loss_d 2.082 (2.082)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 2.082 (2.082)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.86 (  0.86)	Loss_d 2.082 (2.082)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.32 (  0.32)
Overall Timing[ 21/  1]	epoch_time 0.0380 (0.0424)	validation_time 0.0004 (0.0007)	train_time 0.0375 (0.0415)
record: (train_acc, test_acc) (0.8333000289797783, 0.6460000276565552)
last accs (train_acc, test_acc) (0.8545000222325325, 0.503000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.26it/s] 23%|##3       | 6/26 [00:00<00:00, 24.57it/s] 38%|###8      | 10/26 [00:00<00:00, 29.27it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.61it/s] 69%|######9   | 18/26 [00:00<00:00, 32.63it/s] 85%|########4 | 22/26 [00:00<00:00, 34.25it/s]100%|##########| 26/26 [00:00<00:00, 35.33it/s]100%|##########| 26/26 [00:00<00:00, 29.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.003 (0.001)	train_nll   0.24 (  0.30)	train_penalty   0.00 (  0.00)	weight_norm  26.00 ( 25.99)	train_acc   0.84 (  0.84)	train_minacc   0.94 (  0.78)	train_majacc   0.83 (  0.85)	train_corr   0.00 (  0.00)	l1 8.0029 (8.2879)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.63it/s] 23%|##3       | 6/26 [00:00<00:00, 31.48it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.48it/s] 42%|####2     | 11/26 [00:00<00:00, 39.21it/s] 65%|######5   | 17/26 [00:00<00:00, 42.76it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.76it/s] 88%|########8 | 23/26 [00:00<00:00, 47.50it/s]100%|##########| 26/26 [00:00<00:00, 39.19it/s]
Test: [   0/  26]	Loss 0.236 (0.236)	test_acc   0.87 (  0.87)	test_minacc   0.94 (  0.94)	test_majacc   0.86 (  0.86)	Loss_d 0.236 (0.236)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.259 (0.252)	test_acc   0.85 (  0.86)	test_minacc   0.90 (  0.92)	test_majacc   0.84 (  0.85)	Loss_d 0.259 (0.252)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.90 (  0.92)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.71 (  0.69)
Test: [  20/  26]	Loss 0.285 (0.267)	test_acc   0.84 (  0.85)	test_minacc   0.92 (  0.91)	test_majacc   0.83 (  0.84)	Loss_d 0.285 (0.267)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.92 (  0.91)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.67 (  0.68)
Test: [  26/  26]	Loss 0.243 (0.269)	test_acc   0.84 (  0.85)	test_minacc   0.94 (  0.91)	test_majacc   0.82 (  0.84)	Loss_d 0.243 (0.269)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.94 (  0.91)	test_majacc_d   0.82 (  0.84)	test_corr_d   0.66 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.80it/s]
Test: [  0/  1]	Loss 1.816 (1.816)	test_acc   0.66 (  0.66)	test_minacc   0.63 (  0.63)	test_majacc   0.87 (  0.87)	Loss_d 1.816 (1.816)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.816 (1.816)	test_acc   0.66 (  0.66)	test_minacc   0.63 (  0.63)	test_majacc   0.87 (  0.87)	Loss_d 1.816 (1.816)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.09 (  0.09)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[ 22/  1]	epoch_time 0.0425 (0.0424)	validation_time 0.0006 (0.0007)	train_time 0.0419 (0.0415)
record: (train_acc, test_acc) (0.8491000200510025, 0.6580000519752502)
last accs (train_acc, test_acc) (0.8491000200510025, 0.6580000519752502)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.37it/s] 23%|##3       | 6/26 [00:00<00:00, 22.42it/s] 35%|###4      | 9/26 [00:00<00:00, 23.57it/s] 50%|#####     | 13/26 [00:00<00:00, 26.76it/s] 69%|######9   | 18/26 [00:00<00:00, 29.97it/s] 85%|########4 | 22/26 [00:00<00:00, 25.95it/s]100%|##########| 26/26 [00:00<00:00, 28.36it/s]100%|##########| 26/26 [00:01<00:00, 24.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 8.146949768066406
set z to 8.065480270385741
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 371 tensor(-0.0117, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 254 tensor(-0.0077, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 244 tensor(-0.0024, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 241 tensor(-0.0019, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 240 tensor(-0.0009, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.008 (0.010)	train_nll   0.42 (  0.35)	train_penalty   0.01 (  0.01)	weight_norm  26.32 ( 26.11)	train_acc   0.86 (  0.82)	train_minacc   0.78 (  0.79)	train_majacc   0.87 (  0.82)	train_corr   0.00 (  0.00)	l1 8.8440 (9.1692)	zero_count 0.0000 (36.4260)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.63it/s] 23%|##3       | 6/26 [00:00<00:00, 29.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.27it/s] 42%|####2     | 11/26 [00:00<00:00, 37.41it/s] 65%|######5   | 17/26 [00:00<00:00, 40.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.35it/s] 88%|########8 | 23/26 [00:00<00:00, 45.05it/s]100%|##########| 26/26 [00:00<00:00, 37.16it/s]
Test: [   0/  26]	Loss 0.503 (0.503)	test_acc   0.54 (  0.54)	test_minacc   0.72 (  0.72)	test_majacc   0.51 (  0.51)	Loss_d 0.503 (0.503)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.504 (0.499)	test_acc   0.53 (  0.53)	test_minacc   0.67 (  0.69)	test_majacc   0.51 (  0.50)	Loss_d 0.504 (0.499)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.67 (  0.69)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.63 (  0.61)
Test: [  20/  26]	Loss 0.483 (0.494)	test_acc   0.55 (  0.53)	test_minacc   0.64 (  0.69)	test_majacc   0.53 (  0.51)	Loss_d 0.483 (0.494)	test_acc_d   0.55 (  0.53)	test_minacc_d   0.64 (  0.69)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.48 (  0.59)
Test: [  26/  26]	Loss 0.531 (0.496)	test_acc   0.49 (  0.53)	test_minacc   0.64 (  0.68)	test_majacc   0.46 (  0.51)	Loss_d 0.531 (0.496)	test_acc_d   0.49 (  0.53)	test_minacc_d   0.64 (  0.68)	test_majacc_d   0.46 (  0.51)	test_corr_d   0.64 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.47it/s]
Test: [  0/  1]	Loss 2.250 (2.250)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 2.250 (2.250)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 2.250 (2.250)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 2.250 (2.250)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 23/  1]	epoch_time 0.0396 (0.0423)	validation_time 0.0004 (0.0007)	train_time 0.0392 (0.0414)
record: (train_acc, test_acc) (0.8491000200510025, 0.6580000519752502)
last accs (train_acc, test_acc) (0.5318000129163265, 0.5350000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.92it/s] 15%|#5        | 4/26 [00:00<00:01, 20.41it/s] 27%|##6       | 7/26 [00:00<00:00, 23.04it/s] 42%|####2     | 11/26 [00:00<00:00, 27.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.20it/s] 65%|######5   | 17/26 [00:00<00:00, 28.16it/s] 81%|########  | 21/26 [00:00<00:00, 30.05it/s] 92%|#########2| 24/26 [00:00<00:00, 29.82it/s]100%|##########| 26/26 [00:00<00:00, 26.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 238 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 237 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 237 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 236 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 237 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 237 tensor(-0.0003, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.003 (0.001)	train_nll   0.59 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  26.49 ( 26.44)	train_acc   0.71 (  0.65)	train_minacc   0.94 (  0.81)	train_majacc   0.67 (  0.62)	train_corr   0.00 (  0.00)	l1 8.2306 (8.2587)	zero_count 0.0000 (63.9990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.55it/s] 23%|##3       | 6/26 [00:00<00:00, 30.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.57it/s] 42%|####2     | 11/26 [00:00<00:00, 34.68it/s] 65%|######5   | 17/26 [00:00<00:00, 43.16it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.16it/s] 85%|########4 | 22/26 [00:00<00:00, 45.19it/s]100%|##########| 26/26 [00:00<00:00, 37.45it/s]
Test: [   0/  26]	Loss 0.551 (0.551)	test_acc   0.48 (  0.48)	test_minacc   0.87 (  0.87)	test_majacc   0.43 (  0.43)	Loss_d 0.551 (0.551)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.514 (0.544)	test_acc   0.52 (  0.50)	test_minacc   0.81 (  0.86)	test_majacc   0.47 (  0.44)	Loss_d 0.514 (0.544)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.81 (  0.86)	test_majacc_d   0.47 (  0.44)	test_corr_d   0.50 (  0.49)
Test: [  20/  26]	Loss 0.530 (0.539)	test_acc   0.53 (  0.51)	test_minacc   0.87 (  0.87)	test_majacc   0.47 (  0.44)	Loss_d 0.530 (0.539)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.47 (  0.44)	test_corr_d   0.36 (  0.46)
Test: [  26/  26]	Loss 0.587 (0.540)	test_acc   0.46 (  0.50)	test_minacc   0.86 (  0.86)	test_majacc   0.39 (  0.44)	Loss_d 0.587 (0.540)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.39 (  0.44)	test_corr_d   0.51 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.01it/s]
Test: [  0/  1]	Loss 1.973 (1.973)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.45 (  0.45)	Loss_d 1.973 (1.973)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.45 (  0.45)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 1.973 (1.973)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.45 (  0.45)	Loss_d 1.973 (1.973)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.45 (  0.45)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 24/  1]	epoch_time 0.0399 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0395 (0.0414)
record: (train_acc, test_acc) (0.8491000200510025, 0.6580000519752502)
last accs (train_acc, test_acc) (0.503600013256073, 0.6360000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.68it/s] 19%|#9        | 5/26 [00:00<00:01, 15.48it/s] 35%|###4      | 9/26 [00:00<00:00, 21.79it/s] 46%|####6     | 12/26 [00:00<00:00, 23.15it/s] 62%|######1   | 16/26 [00:00<00:00, 24.49it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.67it/s] 92%|#########2| 24/26 [00:00<00:00, 29.91it/s]100%|##########| 26/26 [00:01<00:00, 23.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 258 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 258 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 392 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 403 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.001 (0.001)	train_nll   0.53 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  26.51 ( 26.50)	train_acc   0.52 (  0.68)	train_minacc   0.94 (  0.82)	train_majacc   0.45 (  0.66)	train_corr   0.00 (  0.00)	l1 7.9494 (8.1129)	zero_count 0.0000 (39.2730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.11it/s] 27%|##6       | 7/26 [00:00<00:00, 35.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.55it/s] 46%|####6     | 12/26 [00:00<00:00, 40.65it/s] 65%|######5   | 17/26 [00:00<00:00, 43.26it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.26it/s] 85%|########4 | 22/26 [00:00<00:00, 44.92it/s]100%|##########| 26/26 [00:00<00:00, 40.83it/s]
Test: [   0/  26]	Loss 0.525 (0.525)	test_acc   0.50 (  0.50)	test_minacc   0.60 (  0.60)	test_majacc   0.48 (  0.48)	Loss_d 0.525 (0.525)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.511 (0.537)	test_acc   0.51 (  0.49)	test_minacc   0.52 (  0.55)	test_majacc   0.51 (  0.48)	Loss_d 0.511 (0.537)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.52 (  0.55)	test_majacc_d   0.51 (  0.48)	test_corr_d   0.52 (  0.50)
Test: [  20/  26]	Loss 0.527 (0.533)	test_acc   0.54 (  0.50)	test_minacc   0.48 (  0.55)	test_majacc   0.55 (  0.49)	Loss_d 0.527 (0.533)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.48 (  0.55)	test_majacc_d   0.55 (  0.49)	test_corr_d   0.38 (  0.48)
Test: [  26/  26]	Loss 0.539 (0.533)	test_acc   0.47 (  0.50)	test_minacc   0.67 (  0.55)	test_majacc   0.43 (  0.49)	Loss_d 0.539 (0.533)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.67 (  0.55)	test_majacc_d   0.43 (  0.49)	test_corr_d   0.54 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.70it/s]
Test: [  0/  1]	Loss 1.909 (1.909)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.909 (1.909)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 1.909 (1.909)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.909 (1.909)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.00 ( -0.00)
Overall Timing[ 25/  1]	epoch_time 0.0433 (0.0422)	validation_time 0.0003 (0.0007)	train_time 0.0430 (0.0414)
record: (train_acc, test_acc) (0.8491000200510025, 0.6580000519752502)
last accs (train_acc, test_acc) (0.49570001128315927, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 19%|#9        | 5/26 [00:00<00:00, 21.76it/s] 35%|###4      | 9/26 [00:00<00:00, 28.37it/s] 50%|#####     | 13/26 [00:00<00:00, 28.53it/s] 62%|######1   | 16/26 [00:00<00:00, 28.63it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.69it/s] 92%|#########2| 24/26 [00:00<00:00, 29.98it/s]100%|##########| 26/26 [00:00<00:00, 26.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 370 tensor(-0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 431 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 412 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.001 (0.001)	train_nll   0.53 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  26.53 ( 26.52)	train_acc   0.63 (  0.58)	train_minacc   0.94 (  0.67)	train_majacc   0.58 (  0.56)	train_corr   0.00 (  0.00)	l1 7.9250 (8.0609)	zero_count 0.0000 (12.4800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.90it/s] 27%|##6       | 7/26 [00:00<00:00, 30.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.58it/s] 46%|####6     | 12/26 [00:00<00:00, 37.57it/s] 65%|######5   | 17/26 [00:00<00:00, 40.92it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.92it/s] 85%|########4 | 22/26 [00:00<00:00, 42.98it/s]100%|##########| 26/26 [00:00<00:00, 36.61it/s]
Test: [   0/  26]	Loss 0.516 (0.516)	test_acc   0.60 (  0.60)	test_minacc   0.91 (  0.91)	test_majacc   0.56 (  0.56)	Loss_d 0.516 (0.516)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.507 (0.523)	test_acc   0.64 (  0.62)	test_minacc   0.94 (  0.92)	test_majacc   0.60 (  0.56)	Loss_d 0.507 (0.523)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.94 (  0.92)	test_majacc_d   0.60 (  0.56)	test_corr_d   0.53 (  0.52)
Test: [  20/  26]	Loss 0.515 (0.520)	test_acc   0.54 (  0.60)	test_minacc   0.95 (  0.93)	test_majacc   0.46 (  0.54)	Loss_d 0.515 (0.520)	test_acc_d   0.54 (  0.60)	test_minacc_d   0.95 (  0.93)	test_majacc_d   0.46 (  0.54)	test_corr_d   0.41 (  0.51)
Test: [  26/  26]	Loss 0.526 (0.520)	test_acc   0.64 (  0.60)	test_minacc   0.94 (  0.93)	test_majacc   0.58 (  0.55)	Loss_d 0.526 (0.520)	test_acc_d   0.64 (  0.60)	test_minacc_d   0.94 (  0.93)	test_majacc_d   0.58 (  0.55)	test_corr_d   0.56 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.87it/s]
Test: [  0/  1]	Loss 1.972 (1.972)	test_acc   0.73 (  0.73)	test_minacc   0.77 (  0.77)	test_majacc   0.42 (  0.42)	Loss_d 1.972 (1.972)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.972 (1.972)	test_acc   0.73 (  0.73)	test_minacc   0.77 (  0.77)	test_majacc   0.42 (  0.42)	Loss_d 1.972 (1.972)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.05 (  0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/109/checkpoints/model_best.pth
Overall Timing[ 26/  1]	epoch_time 0.0419 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0414 (0.0414)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.29it/s] 23%|##3       | 6/26 [00:00<00:00, 28.99it/s] 38%|###8      | 10/26 [00:00<00:00, 31.56it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.50it/s] 69%|######9   | 18/26 [00:00<00:00, 32.68it/s] 85%|########4 | 22/26 [00:00<00:00, 33.99it/s]100%|##########| 26/26 [00:00<00:00, 32.48it/s]100%|##########| 26/26 [00:00<00:00, 29.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 390 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.53 ( 26.53)	train_acc   0.46 (  0.49)	train_minacc   0.58 (  0.61)	train_majacc   0.44 (  0.47)	train_corr   0.00 (  0.00)	l1 8.0567 (8.0053)	zero_count 0.0000 (4.7190)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 23%|##3       | 6/26 [00:00<00:00, 30.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.13it/s] 42%|####2     | 11/26 [00:00<00:00, 38.50it/s] 62%|######1   | 16/26 [00:00<00:00, 42.44it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.44it/s] 81%|########  | 21/26 [00:00<00:00, 42.51it/s]100%|##########| 26/26 [00:00<00:00, 44.89it/s]100%|##########| 26/26 [00:00<00:00, 36.87it/s]
Test: [   0/  26]	Loss 0.545 (0.545)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.545 (0.545)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.532 (0.544)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.532 (0.544)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.52 (  0.51)
Test: [  20/  26]	Loss 0.536 (0.542)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.536 (0.542)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.40 (  0.50)
Test: [  26/  26]	Loss 0.555 (0.543)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.555 (0.543)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.56 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.44it/s]
Test: [  0/  1]	Loss 1.934 (1.934)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.934 (1.934)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 1.934 (1.934)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.934 (1.934)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Overall Timing[ 27/  1]	epoch_time 0.0412 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0408 (0.0414)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 19%|#9        | 5/26 [00:00<00:00, 21.69it/s] 35%|###4      | 9/26 [00:00<00:00, 27.56it/s] 50%|#####     | 13/26 [00:00<00:00, 30.38it/s] 65%|######5   | 17/26 [00:00<00:00, 31.51it/s] 81%|########  | 21/26 [00:00<00:00, 29.91it/s] 96%|#########6| 25/26 [00:00<00:00, 31.27it/s]100%|##########| 26/26 [00:00<00:00, 27.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 410 tensor(6.9604e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.54 ( 26.54)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0063 (8.0122)	zero_count 0.0000 (3.9390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.32it/s] 31%|###       | 8/26 [00:00<00:00, 39.03it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.03it/s] 50%|#####     | 13/26 [00:00<00:00, 38.28it/s] 69%|######9   | 18/26 [00:00<00:00, 41.70it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.70it/s] 88%|########8 | 23/26 [00:00<00:00, 43.04it/s]100%|##########| 26/26 [00:00<00:00, 37.35it/s]
Test: [   0/  26]	Loss 0.538 (0.538)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.538 (0.538)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.525 (0.537)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.525 (0.537)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.54 (  0.53)
Test: [  20/  26]	Loss 0.529 (0.535)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.529 (0.535)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.43 (  0.52)
Test: [  26/  26]	Loss 0.548 (0.536)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.548 (0.536)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.58 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.68it/s]
Test: [  0/  1]	Loss 1.933 (1.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.933 (1.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.933 (1.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.933 (1.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 28/  1]	epoch_time 0.0429 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0425 (0.0414)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.59it/s] 19%|#9        | 5/26 [00:00<00:01, 17.06it/s] 35%|###4      | 9/26 [00:00<00:00, 23.18it/s] 50%|#####     | 13/26 [00:00<00:00, 26.73it/s] 65%|######5   | 17/26 [00:00<00:00, 26.68it/s] 81%|########  | 21/26 [00:00<00:00, 28.73it/s] 92%|#########2| 24/26 [00:00<00:00, 27.95it/s]100%|##########| 26/26 [00:01<00:00, 24.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 424 tensor(-1.1330e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.54 ( 26.54)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0250 (8.0222)	zero_count 0.0000 (3.3930)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.65it/s] 23%|##3       | 6/26 [00:00<00:00, 27.37it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.37it/s] 46%|####6     | 12/26 [00:00<00:00, 38.37it/s] 65%|######5   | 17/26 [00:00<00:00, 40.86it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.86it/s] 85%|########4 | 22/26 [00:00<00:00, 43.77it/s]100%|##########| 26/26 [00:00<00:00, 36.11it/s]
Test: [   0/  26]	Loss 0.539 (0.539)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.539 (0.539)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.526 (0.538)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.526 (0.538)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.55 (  0.54)
Test: [  20/  26]	Loss 0.530 (0.536)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.530 (0.536)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.44 (  0.53)
Test: [  26/  26]	Loss 0.550 (0.537)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.550 (0.537)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.59 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.83it/s]
Test: [  0/  1]	Loss 1.949 (1.949)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.949 (1.949)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.949 (1.949)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.949 (1.949)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 29/  1]	epoch_time 0.0395 (0.0421)	validation_time 0.0003 (0.0006)	train_time 0.0391 (0.0414)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.42it/s] 19%|#9        | 5/26 [00:00<00:00, 21.62it/s] 35%|###4      | 9/26 [00:00<00:00, 27.30it/s] 50%|#####     | 13/26 [00:00<00:00, 29.68it/s] 65%|######5   | 17/26 [00:00<00:00, 31.33it/s] 81%|########  | 21/26 [00:00<00:00, 30.04it/s] 96%|#########6| 25/26 [00:00<00:00, 32.00it/s]100%|##########| 26/26 [00:00<00:00, 27.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 422 tensor(-4.0131e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.54 ( 26.54)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0331 (8.0257)	zero_count 0.0000 (3.4710)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.68it/s] 27%|##6       | 7/26 [00:00<00:00, 22.77it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.77it/s] 46%|####6     | 12/26 [00:00<00:00, 30.31it/s] 65%|######5   | 17/26 [00:00<00:00, 36.24it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.24it/s] 88%|########8 | 23/26 [00:00<00:00, 42.60it/s]100%|##########| 26/26 [00:00<00:00, 32.02it/s]
Test: [   0/  26]	Loss 0.540 (0.540)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.540 (0.540)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.528 (0.539)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.528 (0.539)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.55 (  0.54)
Test: [  20/  26]	Loss 0.532 (0.538)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.532 (0.538)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.44 (  0.53)
Test: [  26/  26]	Loss 0.552 (0.539)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.552 (0.539)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.59 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.95it/s]
Test: [  0/  1]	Loss 1.959 (1.959)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.959 (1.959)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.959 (1.959)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.959 (1.959)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 30/  1]	epoch_time 0.0474 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0470 (0.0415)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.83it/s] 23%|##3       | 6/26 [00:00<00:00, 27.53it/s] 38%|###8      | 10/26 [00:00<00:00, 31.19it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.18it/s] 69%|######9   | 18/26 [00:00<00:00, 33.62it/s] 85%|########4 | 22/26 [00:00<00:00, 31.69it/s]100%|##########| 26/26 [00:00<00:00, 33.22it/s]100%|##########| 26/26 [00:00<00:00, 29.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 421 tensor(-6.9175e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.54 ( 26.54)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0440 (8.0202)	zero_count 0.0000 (3.5100)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 15.62it/s] 31%|###       | 8/26 [00:00<00:00, 28.65it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.65it/s] 50%|#####     | 13/26 [00:00<00:00, 35.27it/s] 69%|######9   | 18/26 [00:00<00:00, 39.31it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.31it/s] 88%|########8 | 23/26 [00:00<00:00, 41.79it/s]100%|##########| 26/26 [00:00<00:00, 34.15it/s]
Test: [   0/  26]	Loss 0.542 (0.542)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.542 (0.542)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.529 (0.541)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.529 (0.541)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.54 (  0.54)
Test: [  20/  26]	Loss 0.533 (0.539)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.533 (0.539)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.44 (  0.53)
Test: [  26/  26]	Loss 0.552 (0.540)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.552 (0.540)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.59 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.94it/s]
Test: [  0/  1]	Loss 1.968 (1.968)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.968 (1.968)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.968 (1.968)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.968 (1.968)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 31/  1]	epoch_time 0.0442 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0437 (0.0416)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 19%|#9        | 5/26 [00:00<00:00, 21.78it/s] 35%|###4      | 9/26 [00:00<00:00, 27.03it/s] 50%|#####     | 13/26 [00:00<00:00, 29.72it/s] 65%|######5   | 17/26 [00:00<00:00, 31.17it/s] 81%|########  | 21/26 [00:00<00:00, 28.57it/s] 92%|#########2| 24/26 [00:00<00:00, 28.10it/s]100%|##########| 26/26 [00:01<00:00, 25.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 425 tensor(-4.1265e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 421 tensor(8.8678e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.54 ( 26.54)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0551 (8.0220)	zero_count 0.0000 (6.8640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.66it/s] 27%|##6       | 7/26 [00:00<00:00, 34.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.79it/s] 46%|####6     | 12/26 [00:00<00:00, 39.68it/s] 65%|######5   | 17/26 [00:00<00:00, 40.49it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.49it/s] 85%|########4 | 22/26 [00:00<00:00, 39.57it/s]100%|##########| 26/26 [00:00<00:00, 36.47it/s]
Test: [   0/  26]	Loss 0.543 (0.543)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.543 (0.543)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.531 (0.543)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.531 (0.543)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.54 (  0.54)
Test: [  20/  26]	Loss 0.534 (0.541)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.534 (0.541)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.44 (  0.52)
Test: [  26/  26]	Loss 0.552 (0.541)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.552 (0.541)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.60 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.12it/s]
Test: [  0/  1]	Loss 1.978 (1.978)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.978 (1.978)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.978 (1.978)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.978 (1.978)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 32/  1]	epoch_time 0.0468 (0.0425)	validation_time 0.0004 (0.0006)	train_time 0.0464 (0.0418)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.56it/s] 19%|#9        | 5/26 [00:00<00:01, 18.70it/s] 35%|###4      | 9/26 [00:00<00:00, 24.32it/s] 50%|#####     | 13/26 [00:00<00:00, 27.79it/s] 65%|######5   | 17/26 [00:00<00:00, 30.51it/s] 81%|########  | 21/26 [00:00<00:00, 31.46it/s] 96%|#########6| 25/26 [00:00<00:00, 30.02it/s]100%|##########| 26/26 [00:01<00:00, 25.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 410 tensor(2.7696e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.54 ( 26.54)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0595 (8.0235)	zero_count 0.0000 (3.9390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.56it/s] 27%|##6       | 7/26 [00:00<00:00, 35.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.66it/s] 46%|####6     | 12/26 [00:00<00:00, 40.66it/s] 65%|######5   | 17/26 [00:00<00:00, 39.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.13it/s] 85%|########4 | 22/26 [00:00<00:00, 42.09it/s]100%|##########| 26/26 [00:00<00:00, 36.92it/s]
Test: [   0/  26]	Loss 0.545 (0.545)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.545 (0.545)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.533 (0.545)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.533 (0.545)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.54 (  0.53)
Test: [  20/  26]	Loss 0.536 (0.543)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.536 (0.543)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.44 (  0.52)
Test: [  26/  26]	Loss 0.554 (0.544)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.554 (0.544)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.60 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.79it/s]
Test: [  0/  1]	Loss 1.984 (1.984)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.984 (1.984)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.984 (1.984)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.984 (1.984)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 33/  1]	epoch_time 0.0415 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0417)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.34it/s] 19%|#9        | 5/26 [00:00<00:01, 18.55it/s] 35%|###4      | 9/26 [00:00<00:00, 24.57it/s] 50%|#####     | 13/26 [00:00<00:00, 28.39it/s] 65%|######5   | 17/26 [00:00<00:00, 30.46it/s] 81%|########  | 21/26 [00:00<00:00, 32.15it/s] 96%|#########6| 25/26 [00:00<00:00, 30.41it/s]100%|##########| 26/26 [00:01<00:00, 25.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 403 tensor(-1.2081e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 404 tensor(-2.1781e-06, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.54 ( 26.54)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0763 (8.0176)	zero_count 0.0000 (4.2120)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.29it/s] 27%|##6       | 7/26 [00:00<00:00, 34.64it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.64it/s] 46%|####6     | 12/26 [00:00<00:00, 39.89it/s] 65%|######5   | 17/26 [00:00<00:00, 42.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.11it/s] 85%|########4 | 22/26 [00:00<00:00, 40.59it/s]100%|##########| 26/26 [00:00<00:00, 37.51it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.547 (0.547)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.535 (0.547)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.535 (0.547)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.53 (  0.53)
Test: [  20/  26]	Loss 0.538 (0.545)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.538 (0.545)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.44 (  0.52)
Test: [  26/  26]	Loss 0.555 (0.546)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.555 (0.546)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.60 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.50it/s]
Test: [  0/  1]	Loss 1.993 (1.993)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.993 (1.993)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.993 (1.993)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.993 (1.993)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 34/  1]	epoch_time 0.0394 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0390 (0.0417)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.92it/s] 19%|#9        | 5/26 [00:00<00:01, 18.01it/s] 35%|###4      | 9/26 [00:00<00:00, 24.36it/s] 50%|#####     | 13/26 [00:00<00:00, 28.78it/s] 65%|######5   | 17/26 [00:00<00:00, 31.47it/s] 81%|########  | 21/26 [00:00<00:00, 30.61it/s] 96%|#########6| 25/26 [00:00<00:00, 32.84it/s]100%|##########| 26/26 [00:00<00:00, 26.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 405 tensor(-7.2437e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 406 tensor(7.9066e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 406 tensor(1.9448e-07, device='cuda:0')
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.54 ( 26.54)	train_acc   0.46 (  0.51)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.51)	train_corr   0.00 (  0.00)	l1 8.1093 (8.0218)	zero_count 0.0000 (8.3070)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.38it/s] 15%|#5        | 4/26 [00:00<00:01, 19.81it/s] 35%|###4      | 9/26 [00:00<00:00, 32.05it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.05it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.74it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.76it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.76it/s] 92%|#########2| 24/26 [00:00<00:00, 40.96it/s]100%|##########| 26/26 [00:00<00:00, 34.19it/s]
Test: [   0/  26]	Loss 0.548 (0.548)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.548 (0.548)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.536 (0.548)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.536 (0.548)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.53 (  0.53)
Test: [  20/  26]	Loss 0.539 (0.546)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.539 (0.546)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.43 (  0.52)
Test: [  26/  26]	Loss 0.554 (0.546)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.554 (0.546)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.60 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.95it/s]
Test: [  0/  1]	Loss 1.996 (1.996)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.996 (1.996)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.996 (1.996)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.996 (1.996)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 35/  1]	epoch_time 0.0462 (0.0425)	validation_time 0.0003 (0.0006)	train_time 0.0459 (0.0418)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.00it/s] 19%|#9        | 5/26 [00:00<00:00, 21.28it/s] 35%|###4      | 9/26 [00:00<00:00, 25.94it/s] 50%|#####     | 13/26 [00:00<00:00, 28.40it/s] 65%|######5   | 17/26 [00:00<00:00, 30.66it/s] 81%|########  | 21/26 [00:00<00:00, 31.62it/s] 96%|#########6| 25/26 [00:00<00:00, 30.28it/s]100%|##########| 26/26 [00:00<00:00, 26.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 389 tensor(1.8888e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 403 tensor(2.4373e-05, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.55 ( 26.54)	train_acc   0.46 (  0.51)	train_minacc   0.58 (  0.49)	train_majacc   0.44 (  0.52)	train_corr   0.00 (  0.00)	l1 8.0655 (8.0181)	zero_count 122.0000 (7.1450)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.32it/s] 27%|##6       | 7/26 [00:00<00:00, 33.41it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.41it/s] 46%|####6     | 12/26 [00:00<00:00, 40.25it/s] 65%|######5   | 17/26 [00:00<00:00, 41.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.81it/s] 85%|########4 | 22/26 [00:00<00:00, 44.30it/s]100%|##########| 26/26 [00:00<00:00, 37.61it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.550 (0.550)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.539 (0.549)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.539 (0.549)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.53 (  0.53)
Test: [  20/  26]	Loss 0.541 (0.548)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.541 (0.548)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.43 (  0.52)
Test: [  26/  26]	Loss 0.556 (0.548)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.556 (0.548)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.60 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.44it/s]
Test: [  0/  1]	Loss 1.997 (1.997)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.997 (1.997)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.997 (1.997)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.997 (1.997)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 36/  1]	epoch_time 0.0421 (0.0424)	validation_time 0.0005 (0.0006)	train_time 0.0416 (0.0418)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.47it/s] 19%|#9        | 5/26 [00:00<00:00, 23.69it/s] 35%|###4      | 9/26 [00:00<00:00, 29.08it/s] 50%|#####     | 13/26 [00:00<00:00, 31.55it/s] 65%|######5   | 17/26 [00:00<00:00, 33.25it/s] 81%|########  | 21/26 [00:00<00:00, 33.87it/s] 96%|#########6| 25/26 [00:00<00:00, 31.43it/s]100%|##########| 26/26 [00:00<00:00, 28.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 395 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 406 tensor(9.7558e-05, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.55 ( 26.55)	train_acc   0.46 (  0.51)	train_minacc   0.58 (  0.51)	train_majacc   0.44 (  0.51)	train_corr   0.00 (  0.00)	l1 8.0901 (8.0094)	zero_count 0.0000 (8.7360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.92it/s] 27%|##6       | 7/26 [00:00<00:00, 32.02it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.02it/s] 50%|#####     | 13/26 [00:00<00:00, 40.19it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.93it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.93it/s] 92%|#########2| 24/26 [00:00<00:00, 45.21it/s]100%|##########| 26/26 [00:00<00:00, 38.31it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.550 (0.550)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.539 (0.549)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.539 (0.549)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.52 (  0.53)
Test: [  20/  26]	Loss 0.541 (0.548)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.541 (0.548)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.43 (  0.51)
Test: [  26/  26]	Loss 0.555 (0.548)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.555 (0.548)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.59 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.60it/s]
Test: [  0/  1]	Loss 1.993 (1.993)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.993 (1.993)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.993 (1.993)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.993 (1.993)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 37/  1]	epoch_time 0.0402 (0.0424)	validation_time 0.0003 (0.0006)	train_time 0.0398 (0.0417)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.13it/s] 15%|#5        | 4/26 [00:00<00:02, 10.92it/s] 31%|###       | 8/26 [00:00<00:00, 18.57it/s] 46%|####6     | 12/26 [00:00<00:00, 23.69it/s] 62%|######1   | 16/26 [00:00<00:00, 27.31it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.95it/s] 92%|#########2| 24/26 [00:01<00:00, 31.86it/s]100%|##########| 26/26 [00:01<00:00, 23.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 395 tensor(4.8726e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 383 tensor(-0.0001, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.55 ( 26.55)	train_acc   0.45 (  0.50)	train_minacc   0.58 (  0.54)	train_majacc   0.43 (  0.49)	train_corr   0.00 (  0.00)	l1 8.0721 (8.0049)	zero_count 0.0000 (8.6190)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.26it/s] 27%|##6       | 7/26 [00:00<00:00, 30.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.17it/s] 50%|#####     | 13/26 [00:00<00:00, 37.26it/s] 69%|######9   | 18/26 [00:00<00:00, 40.21it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.21it/s] 88%|########8 | 23/26 [00:00<00:00, 42.43it/s]100%|##########| 26/26 [00:00<00:00, 36.20it/s]
Test: [   0/  26]	Loss 0.549 (0.549)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.549 (0.549)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.536 (0.546)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.536 (0.546)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.52 (  0.53)
Test: [  20/  26]	Loss 0.539 (0.546)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.539 (0.546)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.43 (  0.51)
Test: [  26/  26]	Loss 0.554 (0.546)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.554 (0.546)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.59 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.28it/s]
Test: [  0/  1]	Loss 1.983 (1.983)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.983 (1.983)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.983 (1.983)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.983 (1.983)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 38/  1]	epoch_time 0.0415 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0417)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.70it/s] 15%|#5        | 4/26 [00:00<00:01, 14.02it/s] 31%|###       | 8/26 [00:00<00:00, 21.27it/s] 46%|####6     | 12/26 [00:00<00:00, 25.40it/s] 62%|######1   | 16/26 [00:00<00:00, 28.20it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.90it/s] 92%|#########2| 24/26 [00:00<00:00, 31.35it/s]100%|##########| 26/26 [00:01<00:00, 24.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 393 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.55 ( 26.55)	train_acc   0.45 (  0.50)	train_minacc   0.67 (  0.57)	train_majacc   0.41 (  0.49)	train_corr   0.00 (  0.00)	l1 8.0430 (8.0167)	zero_count 0.0000 (9.5940)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.05it/s]  8%|7         | 2/26 [00:00<00:02,  9.09it/s] 23%|##3       | 6/26 [00:00<00:00, 22.30it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.30it/s] 42%|####2     | 11/26 [00:00<00:00, 32.69it/s] 62%|######1   | 16/26 [00:00<00:00, 37.97it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.97it/s] 81%|########  | 21/26 [00:00<00:00, 40.89it/s]100%|##########| 26/26 [00:00<00:00, 43.61it/s]100%|##########| 26/26 [00:00<00:00, 32.49it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.42 (  0.42)	test_minacc   0.66 (  0.66)	test_majacc   0.38 (  0.38)	Loss_d 0.547 (0.547)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.532 (0.541)	test_acc   0.43 (  0.42)	test_minacc   0.58 (  0.57)	test_majacc   0.41 (  0.39)	Loss_d 0.532 (0.541)	test_acc_d   0.43 (  0.42)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.41 (  0.39)	test_corr_d   0.51 (  0.51)
Test: [  20/  26]	Loss 0.537 (0.542)	test_acc   0.43 (  0.42)	test_minacc   0.51 (  0.57)	test_majacc   0.42 (  0.40)	Loss_d 0.537 (0.542)	test_acc_d   0.43 (  0.42)	test_minacc_d   0.51 (  0.57)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.41 (  0.49)
Test: [  26/  26]	Loss 0.552 (0.543)	test_acc   0.42 (  0.42)	test_minacc   0.61 (  0.57)	test_majacc   0.38 (  0.39)	Loss_d 0.552 (0.543)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.61 (  0.57)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.55 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.70it/s]
Test: [  0/  1]	Loss 1.942 (1.942)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 1.942 (1.942)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.942 (1.942)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 1.942 (1.942)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.11 (  0.11)
Overall Timing[ 39/  1]	epoch_time 0.0416 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0412 (0.0417)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.41970000487565995, 0.5850000381469727)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.55it/s] 19%|#9        | 5/26 [00:00<00:00, 22.28it/s] 31%|###       | 8/26 [00:00<00:00, 23.91it/s] 46%|####6     | 12/26 [00:00<00:00, 27.99it/s] 62%|######1   | 16/26 [00:00<00:00, 30.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.26it/s] 92%|#########2| 24/26 [00:00<00:00, 33.10it/s]100%|##########| 26/26 [00:00<00:00, 27.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 378 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 382 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.56)	train_acc   0.48 (  0.49)	train_minacc   0.61 (  0.52)	train_majacc   0.46 (  0.48)	train_corr   0.00 (  0.00)	l1 7.9906 (8.0309)	zero_count 0.0000 (10.2180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.30it/s] 23%|##3       | 6/26 [00:00<00:00, 26.54it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.54it/s] 42%|####2     | 11/26 [00:00<00:00, 34.47it/s] 62%|######1   | 16/26 [00:00<00:00, 39.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.63it/s] 81%|########  | 21/26 [00:00<00:00, 38.38it/s]100%|##########| 26/26 [00:00<00:00, 41.34it/s]100%|##########| 26/26 [00:00<00:00, 33.49it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.43 (  0.43)	test_minacc   0.62 (  0.62)	test_majacc   0.40 (  0.40)	Loss_d 0.547 (0.547)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.528 (0.539)	test_acc   0.44 (  0.44)	test_minacc   0.52 (  0.53)	test_majacc   0.43 (  0.42)	Loss_d 0.528 (0.539)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.52 (  0.53)	test_majacc_d   0.43 (  0.42)	test_corr_d   0.51 (  0.51)
Test: [  20/  26]	Loss 0.534 (0.539)	test_acc   0.45 (  0.44)	test_minacc   0.51 (  0.55)	test_majacc   0.43 (  0.42)	Loss_d 0.534 (0.539)	test_acc_d   0.45 (  0.44)	test_minacc_d   0.51 (  0.55)	test_majacc_d   0.43 (  0.42)	test_corr_d   0.41 (  0.49)
Test: [  26/  26]	Loss 0.553 (0.540)	test_acc   0.46 (  0.44)	test_minacc   0.58 (  0.54)	test_majacc   0.44 (  0.42)	Loss_d 0.553 (0.540)	test_acc_d   0.46 (  0.44)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.44 (  0.42)	test_corr_d   0.54 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.65it/s]
Test: [  0/  1]	Loss 1.916 (1.916)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.44 (  0.44)	Loss_d 1.916 (1.916)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.916 (1.916)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.44 (  0.44)	Loss_d 1.916 (1.916)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.10 (  0.10)
Overall Timing[ 40/  1]	epoch_time 0.0405 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0401 (0.0417)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.4370000039041042, 0.5610000491142273)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.93it/s] 19%|#9        | 5/26 [00:00<00:01, 20.15it/s] 35%|###4      | 9/26 [00:00<00:00, 26.13it/s] 46%|####6     | 12/26 [00:00<00:00, 26.06it/s] 62%|######1   | 16/26 [00:00<00:00, 29.32it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.23it/s] 92%|#########2| 24/26 [00:00<00:00, 32.39it/s]100%|##########| 26/26 [00:00<00:00, 27.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 371 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 368 tensor(8.4128e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.56)	train_acc   0.47 (  0.49)	train_minacc   0.58 (  0.51)	train_majacc   0.45 (  0.49)	train_corr   0.00 (  0.00)	l1 7.9999 (8.0416)	zero_count 0.0000 (11.0370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.30it/s] 15%|#5        | 4/26 [00:00<00:01, 13.77it/s] 35%|###4      | 9/26 [00:00<00:00, 25.49it/s]                                               35%|###4      | 9/26 [00:00<00:00, 25.49it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.86it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.66it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.66it/s] 92%|#########2| 24/26 [00:00<00:00, 37.44it/s]100%|##########| 26/26 [00:00<00:00, 29.05it/s]
Test: [   0/  26]	Loss 0.548 (0.548)	test_acc   0.52 (  0.52)	test_minacc   0.55 (  0.55)	test_majacc   0.51 (  0.51)	Loss_d 0.548 (0.548)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.529 (0.541)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.53 (  0.50)	Loss_d 0.529 (0.541)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.53 (  0.51)
Test: [  20/  26]	Loss 0.533 (0.540)	test_acc   0.53 (  0.51)	test_minacc   0.41 (  0.50)	test_majacc   0.56 (  0.51)	Loss_d 0.533 (0.540)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.56 (  0.51)	test_corr_d   0.42 (  0.50)
Test: [  26/  26]	Loss 0.556 (0.542)	test_acc   0.47 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.45 (  0.51)	Loss_d 0.556 (0.542)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.45 (  0.51)	test_corr_d   0.55 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.66it/s]
Test: [  0/  1]	Loss 1.901 (1.901)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.901 (1.901)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.901 (1.901)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.901 (1.901)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 41/  1]	epoch_time 0.0456 (0.0424)	validation_time 0.0003 (0.0006)	train_time 0.0452 (0.0417)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5040000119507313, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.36it/s] 23%|##3       | 6/26 [00:00<00:00, 25.94it/s] 38%|###8      | 10/26 [00:00<00:00, 28.49it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.05it/s] 69%|######9   | 18/26 [00:00<00:00, 30.41it/s] 85%|########4 | 22/26 [00:00<00:00, 32.28it/s]100%|##########| 26/26 [00:00<00:00, 33.33it/s]100%|##########| 26/26 [00:00<00:00, 28.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 370 tensor(-3.7314e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.56)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0172 (8.0414)	zero_count 0.0000 (5.4990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.50it/s] 23%|##3       | 6/26 [00:00<00:00, 26.78it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.78it/s] 42%|####2     | 11/26 [00:00<00:00, 30.72it/s] 62%|######1   | 16/26 [00:00<00:00, 36.79it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.79it/s] 81%|########  | 21/26 [00:00<00:00, 39.30it/s]100%|##########| 26/26 [00:00<00:00, 41.75it/s]100%|##########| 26/26 [00:00<00:00, 32.86it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.550 (0.550)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.529 (0.543)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.529 (0.543)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.53 (  0.51)
Test: [  20/  26]	Loss 0.534 (0.542)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.534 (0.542)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.42 (  0.50)
Test: [  26/  26]	Loss 0.560 (0.543)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.560 (0.543)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.55 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.80it/s]
Test: [  0/  1]	Loss 1.882 (1.882)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.882 (1.882)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.882 (1.882)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.882 (1.882)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 42/  1]	epoch_time 0.0418 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0414 (0.0417)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5008000119328498, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.14it/s] 23%|##3       | 6/26 [00:00<00:00, 27.11it/s] 38%|###8      | 10/26 [00:00<00:00, 28.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.86it/s] 69%|######9   | 18/26 [00:00<00:00, 29.43it/s] 85%|########4 | 22/26 [00:00<00:00, 31.13it/s]100%|##########| 26/26 [00:00<00:00, 32.75it/s]100%|##########| 26/26 [00:00<00:00, 28.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 366 tensor(2.9572e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.56)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0292 (8.0393)	zero_count 0.0000 (5.6550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  8.96it/s] 27%|##6       | 7/26 [00:00<00:00, 24.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.11it/s] 46%|####6     | 12/26 [00:00<00:00, 32.13it/s] 65%|######5   | 17/26 [00:00<00:00, 36.53it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.53it/s] 85%|########4 | 22/26 [00:00<00:00, 36.20it/s]100%|##########| 26/26 [00:00<00:00, 31.82it/s]
Test: [   0/  26]	Loss 0.553 (0.553)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.553 (0.553)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.532 (0.547)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.532 (0.547)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.53 (  0.50)
Test: [  20/  26]	Loss 0.537 (0.546)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.537 (0.546)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.41 (  0.50)
Test: [  26/  26]	Loss 0.563 (0.547)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.563 (0.547)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.55 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.26it/s]
Test: [  0/  1]	Loss 1.865 (1.865)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.865 (1.865)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.865 (1.865)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.865 (1.865)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 43/  1]	epoch_time 0.0454 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0450 (0.0418)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5001000082790852, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.16it/s] 23%|##3       | 6/26 [00:00<00:00, 23.52it/s] 38%|###8      | 10/26 [00:00<00:00, 27.86it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.24it/s] 69%|######9   | 18/26 [00:00<00:00, 29.21it/s] 85%|########4 | 22/26 [00:00<00:00, 28.94it/s]100%|##########| 26/26 [00:00<00:00, 31.01it/s]100%|##########| 26/26 [00:00<00:00, 27.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 374 tensor(-2.5091e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 364 tensor(6.6966e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.56)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0483 (8.0369)	zero_count 0.0000 (11.0760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.09it/s] 27%|##6       | 7/26 [00:00<00:00, 26.22it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.22it/s] 46%|####6     | 12/26 [00:00<00:00, 34.35it/s] 65%|######5   | 17/26 [00:00<00:00, 35.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.37it/s] 85%|########4 | 22/26 [00:00<00:00, 39.16it/s]100%|##########| 26/26 [00:00<00:00, 32.65it/s]
Test: [   0/  26]	Loss 0.555 (0.555)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.555 (0.555)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.534 (0.550)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.534 (0.550)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.53 (  0.50)
Test: [  20/  26]	Loss 0.539 (0.548)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.539 (0.548)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.41 (  0.49)
Test: [  26/  26]	Loss 0.565 (0.549)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.565 (0.549)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.54 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.00it/s]
Test: [  0/  1]	Loss 1.868 (1.868)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.868 (1.868)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.868 (1.868)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.868 (1.868)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 44/  1]	epoch_time 0.0436 (0.0425)	validation_time 0.0004 (0.0006)	train_time 0.0432 (0.0418)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.49990001061558725, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.22it/s] 27%|##6       | 7/26 [00:00<00:00, 28.63it/s] 42%|####2     | 11/26 [00:00<00:00, 31.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.67it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.48it/s] 88%|########8 | 23/26 [00:00<00:00, 31.49it/s]100%|##########| 26/26 [00:00<00:00, 28.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 369 tensor(-1.5318e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.56)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0630 (8.0395)	zero_count 0.0000 (5.5380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.35it/s] 23%|##3       | 6/26 [00:00<00:00, 23.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.97it/s] 42%|####2     | 11/26 [00:00<00:00, 32.61it/s] 65%|######5   | 17/26 [00:00<00:00, 37.99it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.99it/s] 88%|########8 | 23/26 [00:00<00:00, 42.89it/s]100%|##########| 26/26 [00:00<00:00, 33.95it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.536 (0.551)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.536 (0.551)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.52 (  0.50)
Test: [  20/  26]	Loss 0.540 (0.549)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.540 (0.549)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.41 (  0.49)
Test: [  26/  26]	Loss 0.565 (0.550)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.565 (0.550)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.55 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.02it/s]
Test: [  0/  1]	Loss 1.884 (1.884)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.884 (1.884)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.884 (1.884)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.884 (1.884)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 45/  1]	epoch_time 0.0439 (0.0425)	validation_time 0.0005 (0.0006)	train_time 0.0434 (0.0419)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.11it/s] 19%|#9        | 5/26 [00:00<00:01, 20.11it/s] 35%|###4      | 9/26 [00:00<00:00, 26.15it/s] 50%|#####     | 13/26 [00:00<00:00, 29.12it/s] 65%|######5   | 17/26 [00:00<00:00, 30.74it/s] 81%|########  | 21/26 [00:00<00:00, 32.09it/s] 96%|#########6| 25/26 [00:00<00:00, 30.56it/s]100%|##########| 26/26 [00:00<00:00, 26.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 376 tensor(-3.4057e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.56)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0655 (8.0429)	zero_count 135.0000 (3.3750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.49it/s] 23%|##3       | 6/26 [00:00<00:00, 30.09it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.09it/s] 42%|####2     | 11/26 [00:00<00:00, 36.60it/s] 62%|######1   | 16/26 [00:00<00:00, 40.38it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.38it/s] 81%|########  | 21/26 [00:00<00:00, 36.46it/s]100%|##########| 26/26 [00:00<00:00, 34.91it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.536 (0.550)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.536 (0.550)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.52 (  0.51)
Test: [  20/  26]	Loss 0.540 (0.549)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.540 (0.549)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.42 (  0.50)
Test: [  26/  26]	Loss 0.564 (0.549)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.564 (0.549)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.55 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.59it/s]
Test: [  0/  1]	Loss 1.908 (1.908)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.908 (1.908)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.908 (1.908)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.908 (1.908)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 46/  1]	epoch_time 0.0417 (0.0425)	validation_time 0.0004 (0.0006)	train_time 0.0412 (0.0419)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000094473362, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 15%|#5        | 4/26 [00:00<00:01, 19.54it/s] 27%|##6       | 7/26 [00:00<00:00, 23.53it/s] 42%|####2     | 11/26 [00:00<00:00, 27.01it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.47it/s] 65%|######5   | 17/26 [00:00<00:00, 28.09it/s] 81%|########  | 21/26 [00:00<00:00, 28.98it/s] 96%|#########6| 25/26 [00:00<00:00, 30.54it/s]100%|##########| 26/26 [00:00<00:00, 26.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 390 tensor(-3.8379e-05, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.56)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0661 (8.0490)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 27.38it/s] 31%|###       | 8/26 [00:00<00:00, 33.37it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.37it/s] 50%|#####     | 13/26 [00:00<00:00, 38.68it/s] 69%|######9   | 18/26 [00:00<00:00, 41.91it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.91it/s] 88%|########8 | 23/26 [00:00<00:00, 42.93it/s]100%|##########| 26/26 [00:00<00:00, 36.77it/s]
Test: [   0/  26]	Loss 0.554 (0.554)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.554 (0.554)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.534 (0.548)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.534 (0.548)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.52 (  0.51)
Test: [  20/  26]	Loss 0.539 (0.546)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.539 (0.546)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.42 (  0.50)
Test: [  26/  26]	Loss 0.561 (0.547)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.561 (0.547)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.55 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.23it/s]
Test: [  0/  1]	Loss 1.930 (1.930)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.930 (1.930)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.930 (1.930)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.930 (1.930)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 47/  1]	epoch_time 0.0431 (0.0425)	validation_time 0.0003 (0.0006)	train_time 0.0427 (0.0419)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.49990001061558725, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.11it/s] 15%|#5        | 4/26 [00:00<00:01, 14.85it/s] 31%|###       | 8/26 [00:00<00:00, 22.67it/s] 46%|####6     | 12/26 [00:00<00:00, 26.88it/s] 62%|######1   | 16/26 [00:00<00:00, 29.11it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.71it/s] 92%|#########2| 24/26 [00:00<00:00, 31.94it/s]100%|##########| 26/26 [00:01<00:00, 25.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 382 tensor(1.4293e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.56)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0475 (8.0526)	zero_count 0.0000 (9.7500)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.60it/s] 23%|##3       | 6/26 [00:00<00:01, 18.78it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.78it/s] 50%|#####     | 13/26 [00:00<00:00, 32.91it/s] 69%|######9   | 18/26 [00:00<00:00, 36.95it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.95it/s] 88%|########8 | 23/26 [00:00<00:00, 39.77it/s]100%|##########| 26/26 [00:00<00:00, 30.41it/s]
Test: [   0/  26]	Loss 0.551 (0.551)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.551 (0.551)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.532 (0.544)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.532 (0.544)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.52 (  0.51)
Test: [  20/  26]	Loss 0.537 (0.543)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.537 (0.543)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.42 (  0.50)
Test: [  26/  26]	Loss 0.559 (0.544)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.559 (0.544)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.55 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.00it/s]
Test: [  0/  1]	Loss 1.941 (1.941)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.941 (1.941)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.941 (1.941)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.941 (1.941)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 48/  1]	epoch_time 0.0458 (0.0426)	validation_time 0.0003 (0.0005)	train_time 0.0455 (0.0419)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5000000106096267, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.25it/s] 19%|#9        | 5/26 [00:00<00:01, 19.53it/s] 31%|###       | 8/26 [00:00<00:00, 22.24it/s] 46%|####6     | 12/26 [00:00<00:00, 26.83it/s] 62%|######1   | 16/26 [00:00<00:00, 28.90it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.28it/s] 92%|#########2| 24/26 [00:00<00:00, 31.44it/s]100%|##########| 26/26 [00:01<00:00, 25.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 363 tensor(4.8601e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.56)	train_acc   0.46 (  0.50)	train_minacc   0.58 (  0.50)	train_majacc   0.44 (  0.50)	train_corr   0.00 (  0.00)	l1 8.0370 (8.0531)	zero_count 0.0000 (5.7720)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.26it/s] 27%|##6       | 7/26 [00:00<00:00, 32.99it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.99it/s] 46%|####6     | 12/26 [00:00<00:00, 38.55it/s] 65%|######5   | 17/26 [00:00<00:00, 41.25it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.25it/s] 85%|########4 | 22/26 [00:00<00:00, 39.23it/s]100%|##########| 26/26 [00:00<00:00, 36.37it/s]
Test: [   0/  26]	Loss 0.549 (0.549)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.549 (0.549)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.530 (0.542)	test_acc   0.52 (  0.49)	test_minacc   0.50 (  0.49)	test_majacc   0.52 (  0.49)	Loss_d 0.530 (0.542)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.53 (  0.52)
Test: [  20/  26]	Loss 0.535 (0.542)	test_acc   0.53 (  0.50)	test_minacc   0.41 (  0.51)	test_majacc   0.55 (  0.50)	Loss_d 0.535 (0.542)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.42 (  0.50)
Test: [  26/  26]	Loss 0.557 (0.543)	test_acc   0.46 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.44 (  0.50)	Loss_d 0.557 (0.543)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.55 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.15it/s]
Test: [  0/  1]	Loss 1.941 (1.941)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.941 (1.941)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.941 (1.941)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.941 (1.941)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 49/  1]	epoch_time 0.0406 (0.0425)	validation_time 0.0005 (0.0005)	train_time 0.0401 (0.0419)
record: (train_acc, test_acc) (0.6046000088453293, 0.7330000400543213)
last accs (train_acc, test_acc) (0.5002000094354153, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.167 MB of 0.167 MB uploadedwandb: \ 0.167 MB of 0.167 MB uploadedwandb: | 0.189 MB of 0.490 MB uploaded (0.003 MB deduped)wandb: / 0.043 MB of 0.500 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/diagnostics/epoch_time_val █▃▂▂▃▂▂▂▂▂▂▂▁▁▁▁▁▁▂▂▂▂▂▂▃▂▃▂▃▂▂▂▂▃▂▃▂▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/diagnostics/train_time_val █▃▃▃▄▂▂▂▂▂▂▂▁▁▁▁▁▁▂▂▃▂▂▂▃▃▃▂▃▂▂▂▂▃▂▃▃▂▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/Loss_avg ▂▂▂▂▂▃▃▄▃▄▇█▂▁▁▁▁▃▂▄▂▃▂▂▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/Loss_d_avg ▂▂▂▂▂▃▃▄▃▄▇█▂▁▁▁▁▃▂▄▂▃▂▂▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/Loss_d_val ▂▂▂▂▂▃▃▄▃▄▇█▂▁▁▁▁▃▂▄▂▃▂▂▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/Loss_val ▂▂▂▂▂▃▃▄▃▄▇█▂▁▁▁▁▃▂▄▂▃▂▂▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_acc_avg ▁▁▂▃▃▃▄▄▅▅▅▅▆▆▇▇▇▅▇▆▅█▅▅▅▅▅▅▅▅▅▅▆▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_acc_d_avg ▁▁▂▃▃▃▄▄▅▅▅▅▆▆▇▇▇▅▇▆▅█▅▅▅▅▅▅▅▅▅▅▆▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_acc_d_val ▁▁▂▃▃▃▄▄▅▅▅▅▆▆▇▇▇▅▇▆▅█▅▅▅▅▅▅▅▅▅▅▆▅▅▅▅▅▅▅
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_acc_val ▁▁▂▃▃▃▄▄▅▅▅▅▆▆▇▇▇▅▇▆▅█▅▅▅▅▅▅▅▅▅▅▆▅▅▅▅▅▅▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_corr_d_avg ██▇▆▆▆▅▆▄▃▄▄▃▂▂▁▁▄▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_corr_d_val ██▇▆▆▆▅▆▄▃▄▄▃▂▂▁▁▄▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_majacc_avg ████▇█▇█▇▇▇▇▇▇▇▆▆▆▆▂▂▁▂▂▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_majacc_d_avg ████▇█▇█▇▇▇▇▇▇▇▆▆▆▆▂▂▁▂▂▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_majacc_d_val ████▇█▇█▇▇▇▇▇▇▇▆▆▆▆▂▂▁▂▂▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_majacc_val ████▇█▇█▇▇▇▇▇▇▇▆▆▆▆▂▂▁▂▂▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_minacc_avg ▁▁▂▃▃▃▄▄▄▅▅▄▅▆▆▇▇▅▇▆▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_minacc_d_avg ▁▁▂▃▃▃▄▄▄▅▅▄▅▆▆▇▇▅▇▆▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_minacc_d_val ▁▁▂▃▃▃▄▄▄▅▅▄▅▆▆▇▇▅▇▆▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_minacc_val ▁▁▂▃▃▃▄▄▄▅▅▄▅▆▆▇▇▅▇▆▆█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/Loss_val █▇▇▆▅▆▅▄▄▄▃▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/l1_avg ▄▁▁▂▂▂▂▂▃▄▄▅█▃▃▄▄▄▅▇▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/l1_val ▁▁▁▂▂▃▃▃▃▆▇█▅▃▄▅▅▅▅▇▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇█████▇▇▇▇▇▇▆▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_acc_val ▆▆▇▇▇▇▇▇█▇███▆▆▆▇▇▆▇▂▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_majacc_avg ▇████▇▇▇▇███▇▇▆▆▆▆▆▆▃▂▁▁▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_majacc_val ███▇████▇▇██▇▆▆▆▇▇▆▆▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_minacc_avg ▁▁▂▂▄▄▅▅▆▆▆▆▇█████▇▇█▆▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_minacc_val ▁▂▂▃▅▃▆▅▇▇▇▇▇▇▇▇█▆█▇██▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_nll_avg ▇▅▄▄▃▃▃▃▂▂▁▁▁▂▃▃▃▃▃▄▇███████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_nll_val ▆▅▅▄▄▄▃▃▂▂▁▁▂▄▄▄▃▃▃▆▇▇██████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_penalty_avg █▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_penalty_val █▆▄▃▂▃▂▂▂▁▁▁▁▁▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/weight_norm_avg ▁▄▄▄▅▅▅▅▅▆▆▆▇▇▇▇▇███████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/weight_norm_val ▁▂▃▃▃▃▃▄▄▅▅▆▇▇▇▇▇▇▇█████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▇█▃▂▂▂▂▂▂▂▂▃▃▃▃▂▂▂▂▁▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▇▁▁▁▁▁▁▁█▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/diagnostics/epoch_time_val 0.04063
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/diagnostics/train_time_val 0.04014
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/diagnostics/validation_time_val 0.00047
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/Loss_avg 1.9414
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/Loss_d_avg 1.9414
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/Loss_d_val 1.9414
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/Loss_val 1.9414
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_corr_d_avg 0.12292
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_corr_d_val 0.12292
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/Loss_val 7e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/l1_avg 8.05308
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/l1_val 8.03699
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_acc_avg 0.5003
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_acc_val 0.464
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_majacc_avg 0.50034
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_majacc_val 0.44393
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_minacc_avg 0.50036
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_minacc_val 0.58333
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_nll_avg 0.54494
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_nll_val 0.55697
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_penalty_avg 1e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/train_penalty_val 1e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/weight_norm_avg 26.56429
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/weight_norm_val 26.56458
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/zero_count_avg 5.772
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/109/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/x2v62s2r
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_190204-x2v62s2r/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_190452-riumlq2h
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/riumlq2h
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1214
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6012, 3, 32, 32) (5988, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:43,  1.73s/it] 19%|#9        | 5/26 [00:01<00:05,  3.54it/s] 35%|###4      | 9/26 [00:01<00:02,  6.99it/s] 50%|#####     | 13/26 [00:02<00:01, 10.77it/s] 65%|######5   | 17/26 [00:02<00:00, 14.63it/s] 81%|########  | 21/26 [00:02<00:00, 18.48it/s] 96%|#########6| 25/26 [00:02<00:00, 21.96it/s]100%|##########| 26/26 [00:02<00:00,  9.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.428 (0.612)	train_nll   0.43 (  0.61)	train_penalty   0.04 (  0.35)	weight_norm  21.06 ( 18.20)	train_acc   0.83 (  0.77)	train_minacc   0.00 (  0.11)	train_majacc   0.97 (  0.89)	train_corr   0.00 (  0.00)	l1 8.2819 (8.2329)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.89it/s] 27%|##6       | 7/26 [00:00<00:00, 31.76it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.76it/s] 46%|####6     | 12/26 [00:00<00:00, 38.47it/s] 65%|######5   | 17/26 [00:00<00:00, 38.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.37it/s] 85%|########4 | 22/26 [00:00<00:00, 41.13it/s]100%|##########| 26/26 [00:00<00:00, 34.47it/s]
Test: [   0/  26]	Loss 0.416 (0.416)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.416 (0.416)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.385 (0.415)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.04)	test_majacc   0.99 (  0.98)	Loss_d 0.385 (0.415)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.04)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.409 (0.421)	test_acc   0.85 (  0.84)	test_minacc   0.04 (  0.04)	test_majacc   0.98 (  0.98)	Loss_d 0.409 (0.421)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.423 (0.420)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.04)	test_majacc   0.98 (  0.98)	Loss_d 0.423 (0.420)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.04)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.95 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]
Test: [  0/  1]	Loss 1.491 (1.491)	test_acc   0.13 (  0.13)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.491 (1.491)	test_acc_d   0.13 (  0.13)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.91)
Test: [  1/  1]	Loss 1.491 (1.491)	test_acc   0.13 (  0.13)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.491 (1.491)	test_acc_d   0.13 (  0.13)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.91)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0825 (0.0825)	validation_time 0.0068 (0.0068)	train_time 0.0725 (0.0725)
record: (train_acc, test_acc) (0.8410000249743461, 0.1340000033378601)
last accs (train_acc, test_acc) (0.8410000249743461, 0.1340000033378601)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.42it/s] 19%|#9        | 5/26 [00:00<00:00, 21.03it/s] 35%|###4      | 9/26 [00:00<00:00, 26.76it/s] 50%|#####     | 13/26 [00:00<00:00, 30.09it/s] 65%|######5   | 17/26 [00:00<00:00, 32.26it/s] 81%|########  | 21/26 [00:00<00:00, 33.17it/s] 96%|#########6| 25/26 [00:00<00:00, 34.06it/s]100%|##########| 26/26 [00:00<00:00, 28.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.389 (0.409)	train_nll   0.39 (  0.41)	train_penalty   0.03 (  0.06)	weight_norm  22.23 ( 21.87)	train_acc   0.84 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 8.7504 (8.6270)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.93it/s] 27%|##6       | 7/26 [00:00<00:00, 33.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.32it/s] 46%|####6     | 12/26 [00:00<00:00, 39.21it/s] 65%|######5   | 17/26 [00:00<00:00, 41.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.79it/s] 85%|########4 | 22/26 [00:00<00:00, 40.32it/s]100%|##########| 26/26 [00:00<00:00, 38.07it/s]
Test: [   0/  26]	Loss 0.378 (0.378)	test_acc   0.85 (  0.85)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.378 (0.378)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.363 (0.386)	test_acc   0.86 (  0.85)	test_minacc   0.11 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.363 (0.386)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.11 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.365 (0.392)	test_acc   0.86 (  0.85)	test_minacc   0.07 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.365 (0.392)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.07 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.94)
Test: [  26/  26]	Loss 0.383 (0.392)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.383 (0.392)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.62it/s]
Test: [  0/  1]	Loss 1.514 (1.514)	test_acc   0.16 (  0.16)	test_minacc   0.06 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 1.514 (1.514)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.88 (  0.88)
Test: [  1/  1]	Loss 1.514 (1.514)	test_acc   0.16 (  0.16)	test_minacc   0.06 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 1.514 (1.514)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.88 (  0.88)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0492 (0.0658)	validation_time 0.0004 (0.0036)	train_time 0.0488 (0.0607)
record: (train_acc, test_acc) (0.8470000310540199, 0.15600000321865082)
last accs (train_acc, test_acc) (0.8470000310540199, 0.15600000321865082)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 15%|#5        | 4/26 [00:00<00:01, 17.23it/s] 31%|###       | 8/26 [00:00<00:00, 24.61it/s] 46%|####6     | 12/26 [00:00<00:00, 27.78it/s] 65%|######5   | 17/26 [00:00<00:00, 32.51it/s] 85%|########4 | 22/26 [00:00<00:00, 35.31it/s]100%|##########| 26/26 [00:00<00:00, 29.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.379 (0.379)	train_nll   0.38 (  0.38)	train_penalty   0.03 (  0.04)	weight_norm  22.36 ( 22.31)	train_acc   0.85 (  0.85)	train_minacc   0.06 (  0.08)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 9.0066 (8.9274)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.55it/s] 23%|##3       | 6/26 [00:00<00:00, 27.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.16it/s] 42%|####2     | 11/26 [00:00<00:00, 33.78it/s] 62%|######1   | 16/26 [00:00<00:00, 38.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.76it/s] 81%|########  | 21/26 [00:00<00:00, 39.00it/s]100%|##########| 26/26 [00:00<00:00, 42.03it/s]100%|##########| 26/26 [00:00<00:00, 33.96it/s]
Test: [   0/  26]	Loss 0.355 (0.355)	test_acc   0.86 (  0.86)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.355 (0.355)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.315 (0.357)	test_acc   0.87 (  0.86)	test_minacc   0.14 (  0.12)	test_majacc   0.99 (  0.98)	Loss_d 0.315 (0.357)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.14 (  0.12)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.329 (0.363)	test_acc   0.86 (  0.85)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.98)	Loss_d 0.329 (0.363)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.372 (0.364)	test_acc   0.85 (  0.85)	test_minacc   0.06 (  0.10)	test_majacc   0.98 (  0.98)	Loss_d 0.372 (0.364)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.06 (  0.10)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.16it/s]
Test: [  0/  1]	Loss 1.593 (1.593)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.97 (  0.97)	Loss_d 1.593 (1.593)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.83 (  0.83)
Test: [  1/  1]	Loss 1.593 (1.593)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.97 (  0.97)	Loss_d 1.593 (1.593)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.83 (  0.83)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0452 (0.0590)	validation_time 0.0005 (0.0025)	train_time 0.0447 (0.0553)
record: (train_acc, test_acc) (0.851200023829937, 0.19700001180171967)
last accs (train_acc, test_acc) (0.851200023829937, 0.19700001180171967)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.35it/s] 19%|#9        | 5/26 [00:00<00:01, 20.12it/s] 35%|###4      | 9/26 [00:00<00:00, 26.18it/s] 50%|#####     | 13/26 [00:00<00:00, 28.80it/s] 65%|######5   | 17/26 [00:00<00:00, 31.44it/s] 81%|########  | 21/26 [00:00<00:00, 33.90it/s] 96%|#########6| 25/26 [00:00<00:00, 35.02it/s]100%|##########| 26/26 [00:00<00:00, 28.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.376 (0.361)	train_nll   0.38 (  0.36)	train_penalty   0.03 (  0.04)	weight_norm  22.42 ( 22.39)	train_acc   0.85 (  0.85)	train_minacc   0.11 (  0.13)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 9.0122 (9.0234)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.70it/s] 23%|##3       | 6/26 [00:00<00:00, 22.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.73it/s] 42%|####2     | 11/26 [00:00<00:00, 31.56it/s] 62%|######1   | 16/26 [00:00<00:00, 36.14it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.14it/s] 81%|########  | 21/26 [00:00<00:00, 37.47it/s]100%|##########| 26/26 [00:00<00:00, 41.03it/s]100%|##########| 26/26 [00:00<00:00, 32.01it/s]
Test: [   0/  26]	Loss 0.327 (0.327)	test_acc   0.87 (  0.87)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 0.327 (0.327)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.288 (0.334)	test_acc   0.89 (  0.86)	test_minacc   0.29 (  0.22)	test_majacc   0.99 (  0.97)	Loss_d 0.288 (0.334)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.29 (  0.22)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  20/  26]	Loss 0.300 (0.338)	test_acc   0.86 (  0.86)	test_minacc   0.20 (  0.20)	test_majacc   0.97 (  0.97)	Loss_d 0.300 (0.338)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  26/  26]	Loss 0.364 (0.340)	test_acc   0.85 (  0.86)	test_minacc   0.11 (  0.19)	test_majacc   0.98 (  0.97)	Loss_d 0.364 (0.340)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.11 (  0.19)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.92 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.02it/s]
Test: [  0/  1]	Loss 1.649 (1.649)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.95 (  0.95)	Loss_d 1.649 (1.649)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 1.649 (1.649)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.95 (  0.95)	Loss_d 1.649 (1.649)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.72 (  0.72)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0434 (0.0551)	validation_time 0.0005 (0.0020)	train_time 0.0429 (0.0522)
record: (train_acc, test_acc) (0.8562000249028205, 0.2750000059604645)
last accs (train_acc, test_acc) (0.8562000249028205, 0.2750000059604645)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.26it/s] 19%|#9        | 5/26 [00:00<00:01, 16.59it/s] 35%|###4      | 9/26 [00:00<00:00, 23.43it/s] 50%|#####     | 13/26 [00:00<00:00, 27.81it/s] 65%|######5   | 17/26 [00:00<00:00, 30.53it/s] 81%|########  | 21/26 [00:00<00:00, 32.61it/s] 96%|#########6| 25/26 [00:00<00:00, 33.39it/s]100%|##########| 26/26 [00:00<00:00, 26.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.355 (0.343)	train_nll   0.36 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.48 ( 22.45)	train_acc   0.85 (  0.85)	train_minacc   0.22 (  0.18)	train_majacc   0.96 (  0.97)	train_corr   0.00 (  0.00)	l1 8.9584 (9.0101)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.51it/s] 23%|##3       | 6/26 [00:00<00:00, 25.92it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.92it/s] 42%|####2     | 11/26 [00:00<00:00, 34.89it/s] 62%|######1   | 16/26 [00:00<00:00, 39.03it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.03it/s] 81%|########  | 21/26 [00:00<00:00, 39.79it/s]100%|##########| 26/26 [00:00<00:00, 42.32it/s]100%|##########| 26/26 [00:00<00:00, 33.71it/s]
Test: [   0/  26]	Loss 0.311 (0.311)	test_acc   0.87 (  0.87)	test_minacc   0.20 (  0.20)	test_majacc   0.99 (  0.99)	Loss_d 0.311 (0.311)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.286 (0.314)	test_acc   0.89 (  0.87)	test_minacc   0.32 (  0.25)	test_majacc   0.99 (  0.98)	Loss_d 0.286 (0.314)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.32 (  0.25)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.284 (0.317)	test_acc   0.88 (  0.86)	test_minacc   0.30 (  0.23)	test_majacc   0.97 (  0.98)	Loss_d 0.284 (0.317)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.30 (  0.23)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.340 (0.318)	test_acc   0.86 (  0.86)	test_minacc   0.19 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.340 (0.318)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.19 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.67it/s]
Test: [  0/  1]	Loss 1.575 (1.575)	test_acc   0.26 (  0.26)	test_minacc   0.19 (  0.19)	test_majacc   0.94 (  0.94)	Loss_d 1.575 (1.575)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 1.575 (1.575)	test_acc   0.26 (  0.26)	test_minacc   0.19 (  0.19)	test_majacc   0.94 (  0.94)	Loss_d 1.575 (1.575)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.72 (  0.72)
Overall Timing[  4/  1]	epoch_time 0.0412 (0.0523)	validation_time 0.0005 (0.0017)	train_time 0.0407 (0.0499)
record: (train_acc, test_acc) (0.8562000249028205, 0.2750000059604645)
last accs (train_acc, test_acc) (0.8634000270962715, 0.26200002431869507)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.05it/s] 15%|#5        | 4/26 [00:00<00:01, 19.28it/s] 31%|###       | 8/26 [00:00<00:00, 26.15it/s] 46%|####6     | 12/26 [00:00<00:00, 29.17it/s] 62%|######1   | 16/26 [00:00<00:00, 30.84it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.26it/s] 92%|#########2| 24/26 [00:00<00:00, 33.12it/s]100%|##########| 26/26 [00:00<00:00, 27.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.349 (0.331)	train_nll   0.35 (  0.33)	train_penalty   0.02 (  0.03)	weight_norm  22.54 ( 22.51)	train_acc   0.85 (  0.86)	train_minacc   0.25 (  0.21)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 9.0067 (9.0921)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.21it/s] 23%|##3       | 6/26 [00:00<00:00, 29.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.20it/s] 42%|####2     | 11/26 [00:00<00:00, 32.49it/s] 62%|######1   | 16/26 [00:00<00:00, 37.70it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.70it/s] 81%|########  | 21/26 [00:00<00:00, 40.10it/s]100%|##########| 26/26 [00:00<00:00, 42.51it/s]100%|##########| 26/26 [00:00<00:00, 34.04it/s]
Test: [   0/  26]	Loss 0.308 (0.308)	test_acc   0.87 (  0.87)	test_minacc   0.29 (  0.29)	test_majacc   0.97 (  0.97)	Loss_d 0.308 (0.308)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.290 (0.317)	test_acc   0.88 (  0.87)	test_minacc   0.39 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 0.290 (0.317)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.39 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.88)
Test: [  20/  26]	Loss 0.281 (0.318)	test_acc   0.89 (  0.86)	test_minacc   0.39 (  0.30)	test_majacc   0.97 (  0.96)	Loss_d 0.281 (0.318)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.39 (  0.30)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.340 (0.320)	test_acc   0.86 (  0.86)	test_minacc   0.25 (  0.29)	test_majacc   0.97 (  0.96)	Loss_d 0.340 (0.320)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.25 (  0.29)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.90it/s]
Test: [  0/  1]	Loss 1.607 (1.607)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.93 (  0.93)	Loss_d 1.607 (1.607)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 1.607 (1.607)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.93 (  0.93)	Loss_d 1.607 (1.607)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.65 (  0.65)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0430 (0.0507)	validation_time 0.0004 (0.0015)	train_time 0.0426 (0.0487)
record: (train_acc, test_acc) (0.863400020122528, 0.3230000138282776)
last accs (train_acc, test_acc) (0.863400020122528, 0.3230000138282776)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.64it/s] 15%|#5        | 4/26 [00:00<00:01, 17.96it/s] 31%|###       | 8/26 [00:00<00:00, 25.36it/s] 46%|####6     | 12/26 [00:00<00:00, 28.99it/s] 62%|######1   | 16/26 [00:00<00:00, 30.74it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.10it/s] 92%|#########2| 24/26 [00:00<00:00, 32.95it/s]100%|##########| 26/26 [00:00<00:00, 27.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.341 (0.321)	train_nll   0.34 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.63 ( 22.58)	train_acc   0.86 (  0.86)	train_minacc   0.28 (  0.23)	train_majacc   0.96 (  0.97)	train_corr   0.00 (  0.00)	l1 9.1191 (9.1378)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.71it/s] 23%|##3       | 6/26 [00:00<00:01, 19.47it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.47it/s] 42%|####2     | 11/26 [00:00<00:00, 28.36it/s] 62%|######1   | 16/26 [00:00<00:00, 34.78it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.78it/s] 81%|########  | 21/26 [00:00<00:00, 35.41it/s]100%|##########| 26/26 [00:00<00:00, 38.88it/s]100%|##########| 26/26 [00:00<00:00, 28.94it/s]
Test: [   0/  26]	Loss 0.309 (0.309)	test_acc   0.87 (  0.87)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.309 (0.309)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.288 (0.321)	test_acc   0.88 (  0.86)	test_minacc   0.45 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 0.288 (0.321)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.45 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.87)
Test: [  20/  26]	Loss 0.290 (0.323)	test_acc   0.87 (  0.86)	test_minacc   0.35 (  0.29)	test_majacc   0.95 (  0.96)	Loss_d 0.290 (0.323)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.35 (  0.29)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  26/  26]	Loss 0.323 (0.322)	test_acc   0.87 (  0.86)	test_minacc   0.28 (  0.29)	test_majacc   0.97 (  0.96)	Loss_d 0.323 (0.322)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.28 (  0.29)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.72it/s]
Test: [  0/  1]	Loss 1.675 (1.675)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.95 (  0.95)	Loss_d 1.675 (1.675)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 1.675 (1.675)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.95 (  0.95)	Loss_d 1.675 (1.675)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.62 (  0.62)
Overall Timing[  6/  1]	epoch_time 0.0430 (0.0496)	validation_time 0.0005 (0.0013)	train_time 0.0425 (0.0478)
record: (train_acc, test_acc) (0.863400020122528, 0.3230000138282776)
last accs (train_acc, test_acc) (0.8588000287413597, 0.3230000138282776)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.77it/s] 19%|#9        | 5/26 [00:00<00:00, 23.34it/s] 35%|###4      | 9/26 [00:00<00:00, 28.26it/s] 50%|#####     | 13/26 [00:00<00:00, 29.71it/s] 65%|######5   | 17/26 [00:00<00:00, 31.01it/s] 81%|########  | 21/26 [00:00<00:00, 32.02it/s] 96%|#########6| 25/26 [00:00<00:00, 32.56it/s]100%|##########| 26/26 [00:00<00:00, 27.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.309 (0.313)	train_nll   0.31 (  0.31)	train_penalty   0.02 (  0.02)	weight_norm  22.73 ( 22.68)	train_acc   0.87 (  0.86)	train_minacc   0.28 (  0.27)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 8.9844 (9.0795)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.16it/s] 23%|##3       | 6/26 [00:00<00:00, 20.93it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.93it/s] 42%|####2     | 11/26 [00:00<00:00, 29.76it/s] 62%|######1   | 16/26 [00:00<00:00, 35.61it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.61it/s] 81%|########  | 21/26 [00:00<00:00, 35.27it/s]100%|##########| 26/26 [00:00<00:00, 38.94it/s]100%|##########| 26/26 [00:00<00:00, 29.78it/s]
Test: [   0/  26]	Loss 0.282 (0.282)	test_acc   0.87 (  0.87)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 0.282 (0.282)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.264 (0.293)	test_acc   0.89 (  0.87)	test_minacc   0.43 (  0.30)	test_majacc   0.97 (  0.97)	Loss_d 0.264 (0.293)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.43 (  0.30)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.89)
Test: [  20/  26]	Loss 0.255 (0.294)	test_acc   0.88 (  0.87)	test_minacc   0.30 (  0.28)	test_majacc   0.98 (  0.97)	Loss_d 0.255 (0.294)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.30 (  0.28)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.89)
Test: [  26/  26]	Loss 0.293 (0.295)	test_acc   0.88 (  0.87)	test_minacc   0.28 (  0.28)	test_majacc   0.98 (  0.98)	Loss_d 0.293 (0.295)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.35it/s]
Test: [  0/  1]	Loss 1.745 (1.745)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.95 (  0.95)	Loss_d 1.745 (1.745)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.70 (  0.70)
Test: [  1/  1]	Loss 1.745 (1.745)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.95 (  0.95)	Loss_d 1.745 (1.745)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.70 (  0.70)
Overall Timing[  7/  1]	epoch_time 0.0404 (0.0485)	validation_time 0.0004 (0.0012)	train_time 0.0400 (0.0468)
record: (train_acc, test_acc) (0.863400020122528, 0.3230000138282776)
last accs (train_acc, test_acc) (0.8698000252246857, 0.28300002217292786)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.54it/s] 12%|#1        | 3/26 [00:00<00:01, 13.39it/s] 23%|##3       | 6/26 [00:00<00:00, 20.16it/s] 38%|###8      | 10/26 [00:00<00:00, 26.17it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.13it/s] 69%|######9   | 18/26 [00:00<00:00, 30.34it/s] 85%|########4 | 22/26 [00:00<00:00, 31.99it/s]100%|##########| 26/26 [00:00<00:00, 33.01it/s]100%|##########| 26/26 [00:00<00:00, 26.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.308 (0.291)	train_nll   0.31 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.84 ( 22.78)	train_acc   0.86 (  0.87)	train_minacc   0.42 (  0.36)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 9.0949 (9.1343)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.53it/s] 19%|#9        | 5/26 [00:00<00:00, 23.03it/s] 38%|###8      | 10/26 [00:00<00:00, 33.78it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.78it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.51it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.99it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.99it/s] 96%|#########6| 25/26 [00:00<00:00, 40.89it/s]100%|##########| 26/26 [00:00<00:00, 34.50it/s]
Test: [   0/  26]	Loss 0.255 (0.255)	test_acc   0.90 (  0.90)	test_minacc   0.45 (  0.45)	test_majacc   0.97 (  0.97)	Loss_d 0.255 (0.255)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.244 (0.274)	test_acc   0.92 (  0.88)	test_minacc   0.66 (  0.50)	test_majacc   0.96 (  0.95)	Loss_d 0.244 (0.274)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.66 (  0.50)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.83 (  0.84)
Test: [  20/  26]	Loss 0.238 (0.275)	test_acc   0.90 (  0.88)	test_minacc   0.57 (  0.49)	test_majacc   0.95 (  0.95)	Loss_d 0.238 (0.275)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.57 (  0.49)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  26/  26]	Loss 0.289 (0.275)	test_acc   0.88 (  0.88)	test_minacc   0.44 (  0.48)	test_majacc   0.95 (  0.95)	Loss_d 0.289 (0.275)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.44 (  0.48)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.84 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.22it/s]
Test: [  0/  1]	Loss 1.620 (1.620)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 1.620 (1.620)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 1.620 (1.620)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 1.620 (1.620)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.53 (  0.53)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0435 (0.0479)	validation_time 0.0005 (0.0011)	train_time 0.0430 (0.0464)
record: (train_acc, test_acc) (0.8784000200629234, 0.41600000858306885)
last accs (train_acc, test_acc) (0.8784000200629234, 0.41600000858306885)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.97it/s] 23%|##3       | 6/26 [00:00<00:00, 25.69it/s] 38%|###8      | 10/26 [00:00<00:00, 29.47it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.55it/s] 69%|######9   | 18/26 [00:00<00:00, 31.91it/s] 85%|########4 | 22/26 [00:00<00:00, 33.15it/s]100%|##########| 26/26 [00:00<00:00, 33.56it/s]100%|##########| 26/26 [00:00<00:00, 29.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.294 (0.274)	train_nll   0.29 (  0.27)	train_penalty   0.02 (  0.01)	weight_norm  22.98 ( 22.91)	train_acc   0.88 (  0.88)	train_minacc   0.44 (  0.44)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 9.4010 (9.2633)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.84it/s] 23%|##3       | 6/26 [00:00<00:00, 27.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.43it/s] 42%|####2     | 11/26 [00:00<00:00, 35.27it/s] 62%|######1   | 16/26 [00:00<00:00, 39.20it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.20it/s] 81%|########  | 21/26 [00:00<00:00, 39.30it/s]100%|##########| 26/26 [00:00<00:00, 42.12it/s]100%|##########| 26/26 [00:00<00:00, 34.31it/s]
Test: [   0/  26]	Loss 0.240 (0.240)	test_acc   0.91 (  0.91)	test_minacc   0.58 (  0.58)	test_majacc   0.97 (  0.97)	Loss_d 0.240 (0.240)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.227 (0.262)	test_acc   0.91 (  0.89)	test_minacc   0.70 (  0.55)	test_majacc   0.95 (  0.95)	Loss_d 0.227 (0.262)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.70 (  0.55)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.80 (  0.82)
Test: [  20/  26]	Loss 0.224 (0.259)	test_acc   0.91 (  0.89)	test_minacc   0.63 (  0.54)	test_majacc   0.95 (  0.95)	Loss_d 0.224 (0.259)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.63 (  0.54)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.83)
Test: [  26/  26]	Loss 0.255 (0.257)	test_acc   0.89 (  0.89)	test_minacc   0.50 (  0.54)	test_majacc   0.95 (  0.95)	Loss_d 0.255 (0.257)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.50 (  0.54)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.09it/s]
Test: [  0/  1]	Loss 1.810 (1.810)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 1.810 (1.810)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 1.810 (1.810)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 1.810 (1.810)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.50 (  0.50)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0436 (0.0475)	validation_time 0.0006 (0.0011)	train_time 0.0429 (0.0461)
record: (train_acc, test_acc) (0.8876000199317932, 0.42000001668930054)
last accs (train_acc, test_acc) (0.8876000199317932, 0.42000001668930054)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.82it/s] 19%|#9        | 5/26 [00:00<00:01, 17.83it/s] 35%|###4      | 9/26 [00:00<00:00, 24.09it/s] 50%|#####     | 13/26 [00:00<00:00, 27.42it/s] 65%|######5   | 17/26 [00:00<00:00, 30.12it/s] 81%|########  | 21/26 [00:00<00:00, 32.14it/s] 96%|#########6| 25/26 [00:00<00:00, 33.59it/s]100%|##########| 26/26 [00:00<00:00, 26.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.248 (0.267)	train_nll   0.25 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.18 ( 23.08)	train_acc   0.89 (  0.88)	train_minacc   0.50 (  0.46)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 9.3723 (9.2834)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.67it/s] 23%|##3       | 6/26 [00:00<00:00, 27.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.73it/s] 42%|####2     | 11/26 [00:00<00:00, 35.03it/s] 62%|######1   | 16/26 [00:00<00:00, 39.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.63it/s] 81%|########  | 21/26 [00:00<00:00, 38.70it/s]100%|##########| 26/26 [00:00<00:00, 41.44it/s]100%|##########| 26/26 [00:00<00:00, 33.44it/s]
Test: [   0/  26]	Loss 0.221 (0.221)	test_acc   0.91 (  0.91)	test_minacc   0.62 (  0.62)	test_majacc   0.96 (  0.96)	Loss_d 0.221 (0.221)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.252 (0.263)	test_acc   0.89 (  0.88)	test_minacc   0.64 (  0.59)	test_majacc   0.93 (  0.93)	Loss_d 0.252 (0.263)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.64 (  0.59)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.78 (  0.79)
Test: [  20/  26]	Loss 0.235 (0.259)	test_acc   0.89 (  0.88)	test_minacc   0.65 (  0.58)	test_majacc   0.93 (  0.94)	Loss_d 0.235 (0.259)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.65 (  0.58)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.80 (  0.80)
Test: [  26/  26]	Loss 0.210 (0.256)	test_acc   0.91 (  0.89)	test_minacc   0.61 (  0.58)	test_majacc   0.96 (  0.94)	Loss_d 0.210 (0.256)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.61 (  0.58)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.81 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.43it/s]
Test: [  0/  1]	Loss 1.868 (1.868)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.87 (  0.87)	Loss_d 1.868 (1.868)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 1.868 (1.868)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.87 (  0.87)	Loss_d 1.868 (1.868)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.42 (  0.42)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0414 (0.0469)	validation_time 0.0003 (0.0010)	train_time 0.0411 (0.0456)
record: (train_acc, test_acc) (0.8850000198483468, 0.42500001192092896)
last accs (train_acc, test_acc) (0.8850000198483468, 0.42500001192092896)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.21it/s] 19%|#9        | 5/26 [00:00<00:00, 23.16it/s] 35%|###4      | 9/26 [00:00<00:00, 28.77it/s] 50%|#####     | 13/26 [00:00<00:00, 31.17it/s] 65%|######5   | 17/26 [00:00<00:00, 32.43it/s] 81%|########  | 21/26 [00:00<00:00, 33.47it/s] 96%|#########6| 25/26 [00:00<00:00, 31.95it/s]100%|##########| 26/26 [00:00<00:00, 28.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.243 (0.247)	train_nll   0.24 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.43 ( 23.31)	train_acc   0.90 (  0.89)	train_minacc   0.61 (  0.52)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 9.6036 (9.3725)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.69it/s] 27%|##6       | 7/26 [00:00<00:00, 34.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.12it/s] 46%|####6     | 12/26 [00:00<00:00, 36.54it/s] 65%|######5   | 17/26 [00:00<00:00, 39.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.81it/s] 85%|########4 | 22/26 [00:00<00:00, 42.18it/s]100%|##########| 26/26 [00:00<00:00, 35.92it/s]
Test: [   0/  26]	Loss 0.223 (0.223)	test_acc   0.90 (  0.90)	test_minacc   0.45 (  0.45)	test_majacc   0.97 (  0.97)	Loss_d 0.223 (0.223)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.244 (0.254)	test_acc   0.89 (  0.89)	test_minacc   0.59 (  0.53)	test_majacc   0.94 (  0.95)	Loss_d 0.244 (0.254)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.59 (  0.53)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.80 (  0.82)
Test: [  20/  26]	Loss 0.232 (0.254)	test_acc   0.90 (  0.89)	test_minacc   0.61 (  0.54)	test_majacc   0.95 (  0.95)	Loss_d 0.232 (0.254)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.82)
Test: [  26/  26]	Loss 0.188 (0.247)	test_acc   0.93 (  0.89)	test_minacc   0.64 (  0.55)	test_majacc   0.98 (  0.95)	Loss_d 0.188 (0.247)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.82 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.28it/s]
Test: [  0/  1]	Loss 2.235 (2.235)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.92 (  0.92)	Loss_d 2.235 (2.235)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 2.235 (2.235)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.92 (  0.92)	Loss_d 2.235 (2.235)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.51 (  0.51)
Overall Timing[ 11/  1]	epoch_time 0.0418 (0.0465)	validation_time 0.0004 (0.0010)	train_time 0.0413 (0.0453)
record: (train_acc, test_acc) (0.8850000198483468, 0.42500001192092896)
last accs (train_acc, test_acc) (0.8916000271439553, 0.3960000276565552)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.82it/s] 12%|#1        | 3/26 [00:00<00:02, 10.95it/s] 23%|##3       | 6/26 [00:00<00:01, 16.90it/s] 38%|###8      | 10/26 [00:00<00:00, 23.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.68it/s] 69%|######9   | 18/26 [00:00<00:00, 29.86it/s] 85%|########4 | 22/26 [00:00<00:00, 31.38it/s]100%|##########| 26/26 [00:00<00:00, 32.73it/s]100%|##########| 26/26 [00:01<00:00, 24.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.217 (0.246)	train_nll   0.22 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.73 ( 23.59)	train_acc   0.91 (  0.89)	train_minacc   0.72 (  0.55)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 9.5120 (9.2831)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s] 15%|#5        | 4/26 [00:00<00:01, 16.53it/s] 35%|###4      | 9/26 [00:00<00:00, 28.76it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.76it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.36it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.36it/s] 92%|#########2| 24/26 [00:00<00:00, 40.54it/s]100%|##########| 26/26 [00:00<00:00, 32.92it/s]
Test: [   0/  26]	Loss 0.191 (0.191)	test_acc   0.91 (  0.91)	test_minacc   0.67 (  0.67)	test_majacc   0.95 (  0.95)	Loss_d 0.191 (0.191)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.239 (0.249)	test_acc   0.91 (  0.89)	test_minacc   0.77 (  0.67)	test_majacc   0.94 (  0.93)	Loss_d 0.239 (0.249)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.77 (  0.67)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.73 (  0.75)
Test: [  20/  26]	Loss 0.235 (0.254)	test_acc   0.90 (  0.89)	test_minacc   0.69 (  0.66)	test_majacc   0.93 (  0.93)	Loss_d 0.235 (0.254)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.69 (  0.66)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.76 (  0.75)
Test: [  26/  26]	Loss 0.174 (0.249)	test_acc   0.93 (  0.89)	test_minacc   0.69 (  0.66)	test_majacc   0.97 (  0.93)	Loss_d 0.174 (0.249)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.69 (  0.66)	test_majacc_d   0.97 (  0.93)	test_corr_d   0.77 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.15it/s]
Test: [  0/  1]	Loss 1.936 (1.936)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.89 (  0.89)	Loss_d 1.936 (1.936)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.936 (1.936)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.89 (  0.89)	Loss_d 1.936 (1.936)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.30 (  0.30)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0415 (0.0461)	validation_time 0.0004 (0.0009)	train_time 0.0411 (0.0449)
record: (train_acc, test_acc) (0.889800017952919, 0.46700000762939453)
last accs (train_acc, test_acc) (0.889800017952919, 0.46700000762939453)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.79it/s] 15%|#5        | 4/26 [00:00<00:01, 12.42it/s] 31%|###       | 8/26 [00:00<00:00, 20.39it/s] 46%|####6     | 12/26 [00:00<00:00, 24.79it/s] 62%|######1   | 16/26 [00:00<00:00, 28.19it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.72it/s] 92%|#########2| 24/26 [00:00<00:00, 31.47it/s]100%|##########| 26/26 [00:01<00:00, 23.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.212 (0.238)	train_nll   0.21 (  0.24)	train_penalty   0.01 (  0.01)	weight_norm  24.08 ( 23.90)	train_acc   0.89 (  0.89)	train_minacc   0.47 (  0.55)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 9.3281 (9.5775)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.67it/s] 23%|##3       | 6/26 [00:00<00:00, 25.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.13it/s] 42%|####2     | 11/26 [00:00<00:00, 33.49it/s] 62%|######1   | 16/26 [00:00<00:00, 38.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.76it/s] 81%|########  | 21/26 [00:00<00:00, 37.71it/s]100%|##########| 26/26 [00:00<00:00, 40.70it/s]100%|##########| 26/26 [00:00<00:00, 32.78it/s]
Test: [   0/  26]	Loss 0.199 (0.199)	test_acc   0.92 (  0.92)	test_minacc   0.53 (  0.53)	test_majacc   0.98 (  0.98)	Loss_d 0.199 (0.199)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.177 (0.217)	test_acc   0.92 (  0.90)	test_minacc   0.70 (  0.61)	test_majacc   0.96 (  0.96)	Loss_d 0.177 (0.217)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.70 (  0.61)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.81)
Test: [  20/  26]	Loss 0.183 (0.216)	test_acc   0.91 (  0.91)	test_minacc   0.59 (  0.59)	test_majacc   0.96 (  0.96)	Loss_d 0.183 (0.216)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.83 (  0.82)
Test: [  26/  26]	Loss 0.184 (0.215)	test_acc   0.92 (  0.91)	test_minacc   0.61 (  0.60)	test_majacc   0.98 (  0.96)	Loss_d 0.184 (0.215)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.61 (  0.60)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.82 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.93it/s]
Test: [  0/  1]	Loss 1.975 (1.975)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.90 (  0.90)	Loss_d 1.975 (1.975)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 1.975 (1.975)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.90 (  0.90)	Loss_d 1.975 (1.975)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.48 (  0.48)
Overall Timing[ 13/  1]	epoch_time 0.0408 (0.0457)	validation_time 0.0004 (0.0009)	train_time 0.0404 (0.0446)
record: (train_acc, test_acc) (0.889800017952919, 0.46700000762939453)
last accs (train_acc, test_acc) (0.9064000188708305, 0.4000000059604645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.41it/s] 19%|#9        | 5/26 [00:00<00:01, 18.83it/s] 35%|###4      | 9/26 [00:00<00:00, 23.90it/s] 50%|#####     | 13/26 [00:00<00:00, 27.13it/s] 65%|######5   | 17/26 [00:00<00:00, 29.34it/s] 81%|########  | 21/26 [00:00<00:00, 30.93it/s] 96%|#########6| 25/26 [00:00<00:00, 32.79it/s]100%|##########| 26/26 [00:00<00:00, 26.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.202 (0.211)	train_nll   0.20 (  0.21)	train_penalty   0.01 (  0.01)	weight_norm  24.42 ( 24.25)	train_acc   0.91 (  0.91)	train_minacc   0.61 (  0.62)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 10.2126 (9.9169)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.86it/s] 15%|#5        | 4/26 [00:00<00:01, 15.92it/s] 35%|###4      | 9/26 [00:00<00:00, 28.19it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.19it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.92it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.92it/s] 92%|#########2| 24/26 [00:00<00:00, 38.22it/s]100%|##########| 26/26 [00:00<00:00, 31.25it/s]
Test: [   0/  26]	Loss 0.187 (0.187)	test_acc   0.93 (  0.93)	test_minacc   0.56 (  0.56)	test_majacc   0.99 (  0.99)	Loss_d 0.187 (0.187)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.148 (0.181)	test_acc   0.94 (  0.92)	test_minacc   0.75 (  0.64)	test_majacc   0.98 (  0.97)	Loss_d 0.148 (0.181)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.75 (  0.64)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.81 (  0.83)
Test: [  20/  26]	Loss 0.127 (0.177)	test_acc   0.96 (  0.93)	test_minacc   0.78 (  0.64)	test_majacc   0.99 (  0.98)	Loss_d 0.127 (0.177)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.78 (  0.64)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.86 (  0.83)
Test: [  26/  26]	Loss 0.133 (0.172)	test_acc   0.95 (  0.93)	test_minacc   0.81 (  0.66)	test_majacc   0.98 (  0.98)	Loss_d 0.133 (0.172)	test_acc_d   0.95 (  0.93)	test_minacc_d   0.81 (  0.66)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.81 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.55it/s]
Test: [  0/  1]	Loss 2.594 (2.594)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.92 (  0.92)	Loss_d 2.594 (2.594)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 2.594 (2.594)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.92 (  0.92)	Loss_d 2.594 (2.594)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.58 (  0.58)
Overall Timing[ 14/  1]	epoch_time 0.0423 (0.0455)	validation_time 0.0003 (0.0008)	train_time 0.0419 (0.0444)
record: (train_acc, test_acc) (0.889800017952919, 0.46700000762939453)
last accs (train_acc, test_acc) (0.9304000185728073, 0.34700000286102295)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.29it/s] 19%|#9        | 5/26 [00:00<00:01, 18.96it/s] 35%|###4      | 9/26 [00:00<00:00, 25.21it/s] 50%|#####     | 13/26 [00:00<00:00, 28.26it/s] 65%|######5   | 17/26 [00:00<00:00, 30.45it/s] 81%|########  | 21/26 [00:00<00:00, 31.88it/s] 96%|#########6| 25/26 [00:00<00:00, 32.63it/s]100%|##########| 26/26 [00:00<00:00, 26.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.006 (0.082)	train_nll   0.53 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  24.82 ( 24.62)	train_acc   0.67 (  0.87)	train_minacc   0.53 (  0.63)	train_majacc   0.70 (  0.91)	train_corr   0.00 (  0.00)	l1 8.0621 (9.7617)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.57it/s] 23%|##3       | 6/26 [00:00<00:00, 28.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.14it/s] 42%|####2     | 11/26 [00:00<00:00, 35.68it/s] 62%|######1   | 16/26 [00:00<00:00, 39.51it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.51it/s] 81%|########  | 21/26 [00:00<00:00, 41.55it/s]100%|##########| 26/26 [00:00<00:00, 43.27it/s]100%|##########| 26/26 [00:00<00:00, 35.28it/s]
Test: [   0/  26]	Loss 0.526 (0.526)	test_acc   0.71 (  0.71)	test_minacc   0.56 (  0.56)	test_majacc   0.73 (  0.73)	Loss_d 0.526 (0.526)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.507 (0.517)	test_acc   0.74 (  0.72)	test_minacc   0.70 (  0.67)	test_majacc   0.75 (  0.73)	Loss_d 0.507 (0.517)	test_acc_d   0.74 (  0.72)	test_minacc_d   0.70 (  0.67)	test_majacc_d   0.75 (  0.73)	test_corr_d   0.52 (  0.53)
Test: [  20/  26]	Loss 0.522 (0.503)	test_acc   0.72 (  0.73)	test_minacc   0.81 (  0.68)	test_majacc   0.71 (  0.74)	Loss_d 0.522 (0.503)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.81 (  0.68)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.55 (  0.55)
Test: [  26/  26]	Loss 0.508 (0.503)	test_acc   0.68 (  0.73)	test_minacc   0.56 (  0.67)	test_majacc   0.71 (  0.74)	Loss_d 0.508 (0.503)	test_acc_d   0.68 (  0.73)	test_minacc_d   0.56 (  0.67)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.55 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.12it/s]
Test: [  0/  1]	Loss 1.046 (1.046)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.70 (  0.70)	Loss_d 1.046 (1.046)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.046 (1.046)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.70 (  0.70)	Loss_d 1.046 (1.046)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.12 (  0.12)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0396 (0.0451)	validation_time 0.0004 (0.0008)	train_time 0.0392 (0.0441)
record: (train_acc, test_acc) (0.7273000301122665, 0.5210000276565552)
last accs (train_acc, test_acc) (0.7273000301122665, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.72it/s] 19%|#9        | 5/26 [00:00<00:01, 15.18it/s] 35%|###4      | 9/26 [00:00<00:00, 21.91it/s] 50%|#####     | 13/26 [00:00<00:00, 26.34it/s] 65%|######5   | 17/26 [00:00<00:00, 29.27it/s] 81%|########  | 21/26 [00:00<00:00, 31.58it/s] 96%|#########6| 25/26 [00:00<00:00, 32.96it/s]100%|##########| 26/26 [00:01<00:00, 25.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.003 (0.002)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  24.94 ( 24.90)	train_acc   0.66 (  0.67)	train_minacc   0.92 (  0.87)	train_majacc   0.62 (  0.63)	train_corr   0.00 (  0.00)	l1 6.8961 (7.2419)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 23%|##3       | 6/26 [00:00<00:00, 27.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.63it/s] 42%|####2     | 11/26 [00:00<00:00, 36.05it/s] 65%|######5   | 17/26 [00:00<00:00, 39.68it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.68it/s] 85%|########4 | 22/26 [00:00<00:00, 42.15it/s]100%|##########| 26/26 [00:00<00:00, 34.57it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.65 (  0.65)	test_minacc   0.85 (  0.85)	test_majacc   0.61 (  0.61)	Loss_d 0.570 (0.570)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.539 (0.565)	test_acc   0.67 (  0.65)	test_minacc   0.89 (  0.83)	test_majacc   0.63 (  0.62)	Loss_d 0.539 (0.565)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.89 (  0.83)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.34 (  0.31)
Test: [  20/  26]	Loss 0.549 (0.553)	test_acc   0.66 (  0.66)	test_minacc   0.81 (  0.84)	test_majacc   0.64 (  0.63)	Loss_d 0.549 (0.553)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.33 (  0.32)
Test: [  26/  26]	Loss 0.544 (0.552)	test_acc   0.67 (  0.66)	test_minacc   0.89 (  0.85)	test_majacc   0.63 (  0.63)	Loss_d 0.544 (0.552)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.89 (  0.85)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.35 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.61it/s]
Test: [  0/  1]	Loss 0.723 (0.723)	test_acc   0.68 (  0.68)	test_minacc   0.68 (  0.68)	test_majacc   0.71 (  0.71)	Loss_d 0.723 (0.723)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.71 (  0.71)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.723 (0.723)	test_acc   0.68 (  0.68)	test_minacc   0.68 (  0.68)	test_majacc   0.71 (  0.71)	Loss_d 0.723 (0.723)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.71 (  0.71)	test_corr_d  -0.10 ( -0.10)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/110/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0421 (0.0450)	validation_time 0.0004 (0.0008)	train_time 0.0416 (0.0440)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.27it/s] 19%|#9        | 5/26 [00:00<00:01, 14.04it/s] 35%|###4      | 9/26 [00:00<00:00, 20.95it/s] 50%|#####     | 13/26 [00:00<00:00, 25.48it/s] 65%|######5   | 17/26 [00:00<00:00, 28.68it/s] 81%|########  | 21/26 [00:00<00:00, 30.81it/s] 96%|#########6| 25/26 [00:00<00:00, 31.74it/s]100%|##########| 26/26 [00:01<00:00, 23.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.001)	train_nll   0.56 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  24.96 ( 24.95)	train_acc   0.67 (  0.67)	train_minacc   0.83 (  0.79)	train_majacc   0.64 (  0.64)	train_corr   0.00 (  0.00)	l1 6.8271 (6.8456)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.24it/s] 31%|###       | 8/26 [00:00<00:00, 37.41it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.41it/s] 50%|#####     | 13/26 [00:00<00:00, 40.69it/s] 69%|######9   | 18/26 [00:00<00:00, 43.24it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.24it/s] 88%|########8 | 23/26 [00:00<00:00, 41.60it/s]100%|##########| 26/26 [00:00<00:00, 38.27it/s]
Test: [   0/  26]	Loss 0.602 (0.602)	test_acc   0.61 (  0.61)	test_minacc   0.76 (  0.76)	test_majacc   0.59 (  0.59)	Loss_d 0.602 (0.602)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.553 (0.586)	test_acc   0.65 (  0.64)	test_minacc   0.82 (  0.76)	test_majacc   0.62 (  0.61)	Loss_d 0.553 (0.586)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.82 (  0.76)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.35 (  0.31)
Test: [  20/  26]	Loss 0.577 (0.575)	test_acc   0.64 (  0.65)	test_minacc   0.74 (  0.76)	test_majacc   0.62 (  0.63)	Loss_d 0.577 (0.575)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.74 (  0.76)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.31 (  0.32)
Test: [  26/  26]	Loss 0.569 (0.574)	test_acc   0.66 (  0.65)	test_minacc   0.83 (  0.77)	test_majacc   0.64 (  0.62)	Loss_d 0.569 (0.574)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.83 (  0.77)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.35 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 0.769 (0.769)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.74 (  0.74)	Loss_d 0.769 (0.769)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.74 (  0.74)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.769 (0.769)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.74 (  0.74)	Loss_d 0.769 (0.769)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.74 (  0.74)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 17/  1]	epoch_time 0.0436 (0.0449)	validation_time 0.0004 (0.0008)	train_time 0.0432 (0.0439)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.6453000133633614, 0.6380000114440918)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.03it/s] 19%|#9        | 5/26 [00:00<00:01, 18.14it/s] 35%|###4      | 9/26 [00:00<00:00, 24.62it/s] 50%|#####     | 13/26 [00:00<00:00, 28.34it/s] 65%|######5   | 17/26 [00:00<00:00, 30.55it/s] 81%|########  | 21/26 [00:00<00:00, 31.92it/s] 96%|#########6| 25/26 [00:00<00:00, 32.73it/s]100%|##########| 26/26 [00:00<00:00, 26.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.001 (0.001)	train_nll   0.55 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.96 ( 24.96)	train_acc   0.67 (  0.65)	train_minacc   0.83 (  0.77)	train_majacc   0.64 (  0.62)	train_corr   0.00 (  0.00)	l1 6.7095 (6.7798)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.32it/s] 23%|##3       | 6/26 [00:00<00:00, 21.56it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.56it/s] 42%|####2     | 11/26 [00:00<00:00, 31.19it/s] 65%|######5   | 17/26 [00:00<00:00, 37.82it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.82it/s] 88%|########8 | 23/26 [00:00<00:00, 43.37it/s]100%|##########| 26/26 [00:00<00:00, 32.91it/s]
Test: [   0/  26]	Loss 0.577 (0.577)	test_acc   0.62 (  0.62)	test_minacc   0.76 (  0.76)	test_majacc   0.59 (  0.59)	Loss_d 0.577 (0.577)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.548 (0.570)	test_acc   0.64 (  0.63)	test_minacc   0.82 (  0.77)	test_majacc   0.61 (  0.61)	Loss_d 0.548 (0.570)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.82 (  0.77)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.38 (  0.36)
Test: [  20/  26]	Loss 0.562 (0.560)	test_acc   0.64 (  0.65)	test_minacc   0.78 (  0.78)	test_majacc   0.62 (  0.62)	Loss_d 0.562 (0.560)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.554 (0.560)	test_acc   0.67 (  0.65)	test_minacc   0.83 (  0.78)	test_majacc   0.64 (  0.62)	Loss_d 0.554 (0.560)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.83 (  0.78)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.41 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.80it/s]
Test: [  0/  1]	Loss 0.796 (0.796)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.77 (  0.77)	Loss_d 0.796 (0.796)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.796 (0.796)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.77 (  0.77)	Loss_d 0.796 (0.796)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.06 (  0.06)
Overall Timing[ 18/  1]	epoch_time 0.0427 (0.0448)	validation_time 0.0004 (0.0008)	train_time 0.0423 (0.0438)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.6473000146150589, 0.64000004529953)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 19%|#9        | 5/26 [00:00<00:01, 19.24it/s] 35%|###4      | 9/26 [00:00<00:00, 25.55it/s] 50%|#####     | 13/26 [00:00<00:00, 29.17it/s] 65%|######5   | 17/26 [00:00<00:00, 30.79it/s] 81%|########  | 21/26 [00:00<00:00, 32.13it/s] 96%|#########6| 25/26 [00:00<00:00, 32.86it/s]100%|##########| 26/26 [00:00<00:00, 27.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.97 ( 24.96)	train_acc   0.67 (  0.63)	train_minacc   0.81 (  0.79)	train_majacc   0.64 (  0.60)	train_corr   0.00 (  0.00)	l1 6.7288 (6.7635)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 27.12it/s] 35%|###4      | 9/26 [00:00<00:00, 36.48it/s]                                               35%|###4      | 9/26 [00:00<00:00, 36.48it/s] 54%|#####3    | 14/26 [00:00<00:00, 40.86it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.94it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.94it/s] 92%|#########2| 24/26 [00:00<00:00, 40.49it/s]100%|##########| 26/26 [00:00<00:00, 37.32it/s]
Test: [   0/  26]	Loss 0.584 (0.584)	test_acc   0.62 (  0.62)	test_minacc   0.73 (  0.73)	test_majacc   0.60 (  0.60)	Loss_d 0.584 (0.584)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.552 (0.574)	test_acc   0.63 (  0.63)	test_minacc   0.77 (  0.74)	test_majacc   0.60 (  0.62)	Loss_d 0.552 (0.574)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.77 (  0.74)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.38 (  0.36)
Test: [  20/  26]	Loss 0.563 (0.563)	test_acc   0.64 (  0.65)	test_minacc   0.74 (  0.74)	test_majacc   0.62 (  0.63)	Loss_d 0.563 (0.563)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.560 (0.563)	test_acc   0.68 (  0.65)	test_minacc   0.81 (  0.75)	test_majacc   0.65 (  0.63)	Loss_d 0.560 (0.563)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.81 (  0.75)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.41 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.47it/s]
Test: [  0/  1]	Loss 0.807 (0.807)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.79 (  0.79)	Loss_d 0.807 (0.807)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.807 (0.807)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.79 (  0.79)	Loss_d 0.807 (0.807)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.07 (  0.07)
Overall Timing[ 19/  1]	epoch_time 0.0418 (0.0446)	validation_time 0.0004 (0.0007)	train_time 0.0414 (0.0437)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.6484000184535981, 0.628000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.80it/s] 15%|#5        | 4/26 [00:00<00:01, 17.65it/s] 31%|###       | 8/26 [00:00<00:00, 24.64it/s] 46%|####6     | 12/26 [00:00<00:00, 27.64it/s] 62%|######1   | 16/26 [00:00<00:00, 29.36it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.77it/s] 92%|#########2| 24/26 [00:00<00:00, 32.09it/s]100%|##########| 26/26 [00:00<00:00, 26.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.97 ( 24.97)	train_acc   0.65 (  0.65)	train_minacc   0.83 (  0.73)	train_majacc   0.62 (  0.64)	train_corr   0.00 (  0.00)	l1 6.7362 (6.7392)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 15%|#5        | 4/26 [00:00<00:01, 19.49it/s] 35%|###4      | 9/26 [00:00<00:00, 31.11it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.11it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.67it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.52it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.52it/s] 92%|#########2| 24/26 [00:00<00:00, 40.65it/s]100%|##########| 26/26 [00:00<00:00, 33.48it/s]
Test: [   0/  26]	Loss 0.588 (0.588)	test_acc   0.61 (  0.61)	test_minacc   0.75 (  0.75)	test_majacc   0.59 (  0.59)	Loss_d 0.588 (0.588)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.553 (0.577)	test_acc   0.61 (  0.62)	test_minacc   0.82 (  0.78)	test_majacc   0.58 (  0.59)	Loss_d 0.553 (0.577)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.82 (  0.78)	test_majacc_d   0.58 (  0.59)	test_corr_d   0.37 (  0.34)
Test: [  20/  26]	Loss 0.566 (0.565)	test_acc   0.64 (  0.63)	test_minacc   0.78 (  0.79)	test_majacc   0.61 (  0.60)	Loss_d 0.566 (0.565)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.563 (0.565)	test_acc   0.64 (  0.63)	test_minacc   0.83 (  0.79)	test_majacc   0.61 (  0.60)	Loss_d 0.563 (0.565)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.83 (  0.79)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.40 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.15it/s]
Test: [  0/  1]	Loss 0.802 (0.802)	test_acc   0.65 (  0.65)	test_minacc   0.63 (  0.63)	test_majacc   0.76 (  0.76)	Loss_d 0.802 (0.802)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.802 (0.802)	test_acc   0.65 (  0.65)	test_minacc   0.63 (  0.63)	test_majacc   0.76 (  0.76)	Loss_d 0.802 (0.802)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.04 (  0.04)
Overall Timing[ 20/  1]	epoch_time 0.0410 (0.0445)	validation_time 0.0004 (0.0007)	train_time 0.0406 (0.0436)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.6322000122666359, 0.6460000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 19%|#9        | 5/26 [00:00<00:00, 22.16it/s] 35%|###4      | 9/26 [00:00<00:00, 27.15it/s] 50%|#####     | 13/26 [00:00<00:00, 29.46it/s] 65%|######5   | 17/26 [00:00<00:00, 31.01it/s] 81%|########  | 21/26 [00:00<00:00, 31.84it/s] 96%|#########6| 25/26 [00:00<00:00, 32.13it/s]100%|##########| 26/26 [00:00<00:00, 27.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.97 ( 24.97)	train_acc   0.66 (  0.61)	train_minacc   0.81 (  0.83)	train_majacc   0.63 (  0.57)	train_corr   0.00 (  0.00)	l1 6.7255 (6.7375)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.91it/s] 31%|###       | 8/26 [00:00<00:00, 38.20it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.20it/s] 50%|#####     | 13/26 [00:00<00:00, 41.62it/s] 69%|######9   | 18/26 [00:00<00:00, 43.24it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.24it/s] 88%|########8 | 23/26 [00:00<00:00, 43.76it/s]100%|##########| 26/26 [00:00<00:00, 38.40it/s]
Test: [   0/  26]	Loss 0.581 (0.581)	test_acc   0.62 (  0.62)	test_minacc   0.76 (  0.76)	test_majacc   0.60 (  0.60)	Loss_d 0.581 (0.581)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.560 (0.577)	test_acc   0.62 (  0.63)	test_minacc   0.77 (  0.75)	test_majacc   0.59 (  0.61)	Loss_d 0.560 (0.577)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.77 (  0.75)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.36 (  0.34)
Test: [  20/  26]	Loss 0.554 (0.564)	test_acc   0.65 (  0.65)	test_minacc   0.72 (  0.76)	test_majacc   0.63 (  0.63)	Loss_d 0.554 (0.564)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.72 (  0.76)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.562 (0.563)	test_acc   0.68 (  0.65)	test_minacc   0.81 (  0.76)	test_majacc   0.65 (  0.63)	Loss_d 0.562 (0.563)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.81 (  0.76)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.40 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.05it/s]
Test: [  0/  1]	Loss 0.807 (0.807)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.62)	test_majacc   0.76 (  0.76)	Loss_d 0.807 (0.807)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.807 (0.807)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.62)	test_majacc   0.76 (  0.76)	Loss_d 0.807 (0.807)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.04 (  0.04)
Overall Timing[ 21/  1]	epoch_time 0.0395 (0.0442)	validation_time 0.0004 (0.0007)	train_time 0.0390 (0.0433)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.6490000207424164, 0.6380000114440918)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.55it/s] 15%|#5        | 4/26 [00:00<00:01, 14.00it/s] 31%|###       | 8/26 [00:00<00:00, 21.51it/s] 46%|####6     | 12/26 [00:00<00:00, 26.16it/s] 62%|######1   | 16/26 [00:00<00:00, 28.88it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.03it/s] 92%|#########2| 24/26 [00:00<00:00, 32.16it/s]100%|##########| 26/26 [00:01<00:00, 25.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.97 ( 24.97)	train_acc   0.65 (  0.66)	train_minacc   0.81 (  0.71)	train_majacc   0.62 (  0.65)	train_corr   0.00 (  0.00)	l1 6.7489 (6.7223)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.15it/s] 15%|#5        | 4/26 [00:00<00:01, 16.50it/s] 38%|###8      | 10/26 [00:00<00:00, 32.43it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.43it/s] 62%|######1   | 16/26 [00:00<00:00, 39.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.11it/s] 85%|########4 | 22/26 [00:00<00:00, 44.03it/s]100%|##########| 26/26 [00:00<00:00, 34.76it/s]
Test: [   0/  26]	Loss 0.586 (0.586)	test_acc   0.59 (  0.59)	test_minacc   0.78 (  0.78)	test_majacc   0.56 (  0.56)	Loss_d 0.586 (0.586)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.560 (0.579)	test_acc   0.60 (  0.61)	test_minacc   0.82 (  0.79)	test_majacc   0.56 (  0.57)	Loss_d 0.560 (0.579)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.82 (  0.79)	test_majacc_d   0.56 (  0.57)	test_corr_d   0.36 (  0.34)
Test: [  20/  26]	Loss 0.560 (0.566)	test_acc   0.63 (  0.62)	test_minacc   0.80 (  0.80)	test_majacc   0.60 (  0.59)	Loss_d 0.560 (0.566)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.564 (0.565)	test_acc   0.64 (  0.62)	test_minacc   0.83 (  0.80)	test_majacc   0.60 (  0.59)	Loss_d 0.564 (0.565)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.83 (  0.80)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.40 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.80it/s]
Test: [  0/  1]	Loss 0.812 (0.812)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.75 (  0.75)	Loss_d 0.812 (0.812)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.812 (0.812)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.75 (  0.75)	Loss_d 0.812 (0.812)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.04 (  0.04)
Overall Timing[ 22/  1]	epoch_time 0.0403 (0.0441)	validation_time 0.0003 (0.0007)	train_time 0.0400 (0.0432)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.6223000089526176, 0.6580000519752502)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.58it/s] 19%|#9        | 5/26 [00:00<00:00, 22.51it/s] 35%|###4      | 9/26 [00:00<00:00, 27.92it/s] 50%|#####     | 13/26 [00:00<00:00, 28.80it/s] 65%|######5   | 17/26 [00:00<00:00, 31.81it/s] 81%|########  | 21/26 [00:00<00:00, 30.87it/s] 96%|#########6| 25/26 [00:00<00:00, 29.78it/s]100%|##########| 26/26 [00:00<00:00, 26.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.7411298751831055
set z to 6.673718576431274
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 386 tensor(-0.0096, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 336 tensor(-0.0113, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 317 tensor(-0.0140, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 304 tensor(-0.0083, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.004 (0.794)	train_nll   0.61 (  0.91)	train_penalty   0.00 (  0.79)	weight_norm  33.68 ( 26.59)	train_acc   0.75 (  0.58)	train_minacc   0.33 (  0.63)	train_majacc   0.82 (  0.58)	train_corr   0.00 (  0.00)	l1 6.8926 (6.7659)	zero_count 0.0000 (19.2660)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.39it/s] 31%|###       | 8/26 [00:00<00:00, 37.81it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.81it/s] 50%|#####     | 13/26 [00:00<00:00, 38.05it/s] 69%|######9   | 18/26 [00:00<00:00, 41.13it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.13it/s] 88%|########8 | 23/26 [00:00<00:00, 41.88it/s]100%|##########| 26/26 [00:00<00:00, 36.81it/s]
Test: [   0/  26]	Loss 0.701 (0.701)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.701 (0.701)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.695 (0.717)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.695 (0.717)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.63 (  0.62)
Test: [  20/  26]	Loss 0.769 (0.724)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.769 (0.724)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.60 (  0.62)
Test: [  26/  26]	Loss 0.720 (0.723)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.720 (0.723)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.41it/s]
Test: [  0/  1]	Loss 1.004 (1.004)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.004 (1.004)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 1.004 (1.004)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.004 (1.004)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.56 (  0.56)
Overall Timing[ 23/  1]	epoch_time 0.0424 (0.0440)	validation_time 0.0004 (0.0007)	train_time 0.0420 (0.0432)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.66it/s] 15%|#5        | 4/26 [00:00<00:01, 18.46it/s] 27%|##6       | 7/26 [00:00<00:00, 22.68it/s] 42%|####2     | 11/26 [00:00<00:00, 27.60it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.00it/s] 65%|######5   | 17/26 [00:00<00:00, 28.28it/s] 81%|########  | 21/26 [00:00<00:00, 30.57it/s] 96%|#########6| 25/26 [00:00<00:00, 30.35it/s]100%|##########| 26/26 [00:01<00:00, 25.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 291 tensor(-0.0043, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 273 tensor(-0.0074, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 266 tensor(-0.0043, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 255 tensor(-0.0025, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 257 tensor(-0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 268 tensor(-0.0007, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  46.89 ( 42.60)	train_acc   0.64 (  0.60)	train_minacc   0.33 (  0.40)	train_majacc   0.70 (  0.64)	train_corr   0.00 (  0.00)	l1 6.7645 (6.8624)	zero_count 0.0000 (55.3800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.81it/s] 31%|###       | 8/26 [00:00<00:00, 32.52it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.52it/s] 54%|#####3    | 14/26 [00:00<00:00, 38.66it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.91it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.91it/s] 96%|#########6| 25/26 [00:00<00:00, 43.42it/s]100%|##########| 26/26 [00:00<00:00, 35.76it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.662 (0.662)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.650 (0.663)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.650 (0.663)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.40 (  0.38)
Test: [  20/  26]	Loss 0.678 (0.664)	test_acc   0.45 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.45 (  0.50)	Loss_d 0.678 (0.664)	test_acc_d   0.45 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.39 (  0.39)
Test: [  26/  26]	Loss 0.661 (0.664)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.661 (0.664)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.41 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.78it/s]
Test: [  0/  1]	Loss 0.736 (0.736)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.736 (0.736)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 0.736 (0.736)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.736 (0.736)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.28 (  0.28)
Overall Timing[ 24/  1]	epoch_time 0.0421 (0.0439)	validation_time 0.0003 (0.0007)	train_time 0.0417 (0.0431)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5001000129878521, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.87it/s] 19%|#9        | 5/26 [00:00<00:00, 24.16it/s] 31%|###       | 8/26 [00:00<00:00, 26.08it/s] 42%|####2     | 11/26 [00:00<00:00, 26.63it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.89it/s] 69%|######9   | 18/26 [00:00<00:00, 29.20it/s] 81%|########  | 21/26 [00:00<00:00, 28.28it/s] 96%|#########6| 25/26 [00:00<00:00, 30.40it/s]100%|##########| 26/26 [00:00<00:00, 26.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 279 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 287 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 303 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 311 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 320 tensor(-6.1658e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 324 tensor(-2.5379e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm  48.08 ( 47.74)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6879 (6.6875)	zero_count 0.0000 (50.6220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.21it/s] 15%|#5        | 4/26 [00:00<00:01, 20.66it/s] 35%|###4      | 9/26 [00:00<00:00, 32.12it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.12it/s] 54%|#####3    | 14/26 [00:00<00:00, 38.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.29it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.29it/s] 92%|#########2| 24/26 [00:00<00:00, 40.94it/s]100%|##########| 26/26 [00:00<00:00, 34.94it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.679 (0.679)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.671 (0.680)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.671 (0.680)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.27 (  0.26)
Test: [  20/  26]	Loss 0.692 (0.681)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.692 (0.681)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.29 (  0.26)
Test: [  26/  26]	Loss 0.678 (0.681)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.678 (0.681)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.29 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.35it/s]
Test: [  0/  1]	Loss 0.717 (0.717)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.717 (0.717)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.717 (0.717)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.717 (0.717)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 25/  1]	epoch_time 0.0418 (0.0438)	validation_time 0.0004 (0.0007)	train_time 0.0414 (0.0430)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.50it/s] 19%|#9        | 5/26 [00:00<00:01, 13.78it/s] 35%|###4      | 9/26 [00:00<00:00, 20.60it/s] 46%|####6     | 12/26 [00:00<00:00, 22.70it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.38it/s] 88%|########8 | 23/26 [00:00<00:00, 29.40it/s]100%|##########| 26/26 [00:01<00:00, 22.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 329 tensor(-4.8897e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 326 tensor(-4.5934e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 329 tensor(-6.0775e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 349 tensor(-1.1034e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 381 tensor(-1.4293e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 382 tensor(-2.3605e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm  48.17 ( 48.15)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6737 (6.6772)	zero_count 130.0000 (38.2720)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.93it/s] 23%|##3       | 6/26 [00:00<00:00, 31.26it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.26it/s] 46%|####6     | 12/26 [00:00<00:00, 41.83it/s] 65%|######5   | 17/26 [00:00<00:00, 43.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.29it/s] 88%|########8 | 23/26 [00:00<00:00, 46.43it/s]100%|##########| 26/26 [00:00<00:00, 39.37it/s]
Test: [   0/  26]	Loss 0.684 (0.684)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.684 (0.684)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.678 (0.685)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.678 (0.685)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.22 (  0.21)
Test: [  20/  26]	Loss 0.697 (0.687)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.697 (0.687)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.24 (  0.21)
Test: [  26/  26]	Loss 0.684 (0.687)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.684 (0.687)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.13it/s]
Test: [  0/  1]	Loss 0.712 (0.712)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.712 (0.712)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.712 (0.712)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.712 (0.712)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Overall Timing[ 26/  1]	epoch_time 0.0404 (0.0437)	validation_time 0.0005 (0.0007)	train_time 0.0399 (0.0429)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.63it/s] 15%|#5        | 4/26 [00:00<00:01, 20.18it/s] 31%|###       | 8/26 [00:00<00:00, 28.31it/s] 42%|####2     | 11/26 [00:00<00:00, 28.56it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.96it/s] 69%|######9   | 18/26 [00:00<00:00, 32.25it/s] 85%|########4 | 22/26 [00:00<00:00, 34.34it/s]100%|##########| 26/26 [00:00<00:00, 35.35it/s]100%|##########| 26/26 [00:00<00:00, 28.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 380 tensor(-7.8772e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 385 tensor(-1.3536e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 394 tensor(-1.5742e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.18 ( 48.18)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6731 (6.6736)	zero_count 0.0000 (19.6170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 12%|#1        | 3/26 [00:00<00:01, 11.64it/s] 31%|###       | 8/26 [00:00<00:00, 25.87it/s]                                               31%|###       | 8/26 [00:00<00:00, 25.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.19it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.19it/s] 96%|#########6| 25/26 [00:00<00:00, 45.30it/s]100%|##########| 26/26 [00:00<00:00, 33.52it/s]
Test: [   0/  26]	Loss 0.684 (0.684)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.684 (0.684)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.679 (0.686)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.679 (0.686)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.21 (  0.20)
Test: [  20/  26]	Loss 0.696 (0.687)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.696 (0.687)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.24 (  0.20)
Test: [  26/  26]	Loss 0.684 (0.687)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.684 (0.687)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.79it/s]
Test: [  0/  1]	Loss 0.710 (0.710)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.710 (0.710)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.710 (0.710)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.710 (0.710)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Overall Timing[ 27/  1]	epoch_time 0.0398 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0393 (0.0428)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 15%|#5        | 4/26 [00:00<00:01, 16.51it/s] 31%|###       | 8/26 [00:00<00:00, 21.37it/s] 46%|####6     | 12/26 [00:00<00:00, 26.09it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.06it/s] 88%|########8 | 23/26 [00:00<00:00, 28.82it/s]100%|##########| 26/26 [00:01<00:00, 25.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 391 tensor(-4.1360e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 392 tensor(-8.4071e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 391 tensor(-1.1438e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 389 tensor(-2.2106e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 389 tensor(-5.7453e-06, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.18 ( 48.18)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6740 (6.6740)	zero_count 0.0000 (18.7590)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.15it/s] 19%|#9        | 5/26 [00:00<00:00, 22.34it/s]                                               19%|#9        | 5/26 [00:00<00:00, 22.34it/s] 42%|####2     | 11/26 [00:00<00:00, 35.27it/s] 65%|######5   | 17/26 [00:00<00:00, 42.55it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.55it/s] 85%|########4 | 22/26 [00:00<00:00, 44.54it/s]100%|##########| 26/26 [00:00<00:00, 37.09it/s]
Test: [   0/  26]	Loss 0.685 (0.685)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.685 (0.685)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.679 (0.686)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.679 (0.686)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.21 (  0.20)
Test: [  20/  26]	Loss 0.696 (0.687)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.696 (0.687)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.23 (  0.20)
Test: [  26/  26]	Loss 0.684 (0.687)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.684 (0.687)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.60it/s]
Test: [  0/  1]	Loss 0.709 (0.709)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.709 (0.709)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.709 (0.709)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.709 (0.709)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Overall Timing[ 28/  1]	epoch_time 0.0408 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0404 (0.0427)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.75it/s] 15%|#5        | 4/26 [00:00<00:01, 18.97it/s] 27%|##6       | 7/26 [00:00<00:00, 23.19it/s] 42%|####2     | 11/26 [00:00<00:00, 28.36it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.48it/s] 65%|######5   | 17/26 [00:00<00:00, 27.99it/s] 81%|########  | 21/26 [00:00<00:00, 30.86it/s] 96%|#########6| 25/26 [00:00<00:00, 30.66it/s]100%|##########| 26/26 [00:00<00:00, 26.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 388 tensor(-2.5153e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 387 tensor(-5.2354e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 384 tensor(-9.0339e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 383 tensor(-9.9428e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 381 tensor(-8.7254e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 381 tensor(-6.5971e-06, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.68 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.18 ( 48.18)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6746 (6.6743)	zero_count 0.0000 (29.4060)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.38it/s] 35%|###4      | 9/26 [00:00<00:00, 38.83it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.83it/s] 58%|#####7    | 15/26 [00:00<00:00, 44.85it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 44.85it/s] 81%|########  | 21/26 [00:00<00:00, 46.08it/s]100%|##########| 26/26 [00:00<00:00, 41.58it/s]
Test: [   0/  26]	Loss 0.685 (0.685)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.685 (0.685)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.680 (0.687)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.680 (0.687)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.20 (  0.19)
Test: [  20/  26]	Loss 0.696 (0.688)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.696 (0.688)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.23 (  0.19)
Test: [  26/  26]	Loss 0.685 (0.688)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.685 (0.688)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.17it/s]
Test: [  0/  1]	Loss 0.707 (0.707)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.707 (0.707)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.707 (0.707)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.707 (0.707)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 29/  1]	epoch_time 0.0389 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0385 (0.0426)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.24it/s] 19%|#9        | 5/26 [00:00<00:01, 16.21it/s] 31%|###       | 8/26 [00:00<00:00, 20.43it/s] 42%|####2     | 11/26 [00:00<00:00, 23.05it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.89it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.97it/s] 88%|########8 | 23/26 [00:00<00:00, 29.69it/s]100%|##########| 26/26 [00:01<00:00, 24.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 382 tensor(-1.0931e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 381 tensor(-4.6698e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 375 tensor(-7.6763e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 375 tensor(-8.3903e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 378 tensor(-8.3969e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 378 tensor(-7.8898e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.18 ( 48.18)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6749 (6.6745)	zero_count 0.0000 (30.9660)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.04it/s] 27%|##6       | 7/26 [00:00<00:00, 29.23it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.23it/s] 46%|####6     | 12/26 [00:00<00:00, 36.61it/s] 65%|######5   | 17/26 [00:00<00:00, 38.68it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.68it/s] 85%|########4 | 22/26 [00:00<00:00, 40.96it/s]100%|##########| 26/26 [00:00<00:00, 34.64it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.686 (0.686)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.681 (0.687)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.681 (0.687)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.19 (  0.18)
Test: [  20/  26]	Loss 0.696 (0.688)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.696 (0.688)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.22 (  0.18)
Test: [  26/  26]	Loss 0.685 (0.688)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.685 (0.688)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.85it/s]
Test: [  0/  1]	Loss 0.706 (0.706)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.706 (0.706)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.706 (0.706)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.706 (0.706)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 30/  1]	epoch_time 0.0417 (0.0433)	validation_time 0.0005 (0.0006)	train_time 0.0412 (0.0425)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.11it/s] 15%|#5        | 4/26 [00:00<00:01, 18.07it/s] 27%|##6       | 7/26 [00:00<00:00, 21.63it/s] 38%|###8      | 10/26 [00:00<00:00, 24.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.67it/s] 69%|######9   | 18/26 [00:00<00:00, 30.34it/s] 85%|########4 | 22/26 [00:00<00:00, 30.58it/s]100%|##########| 26/26 [00:00<00:00, 31.44it/s]100%|##########| 26/26 [00:00<00:00, 26.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 376 tensor(-4.6103e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 373 tensor(-6.9970e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 370 tensor(-7.0125e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 374 tensor(-7.7120e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 375 tensor(-7.9236e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 375 tensor(-1.1312e-06, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.19 ( 48.19)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6737 (6.6745)	zero_count 136.0000 (30.0370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.71it/s] 23%|##3       | 6/26 [00:00<00:00, 32.02it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.02it/s] 42%|####2     | 11/26 [00:00<00:00, 36.79it/s] 62%|######1   | 16/26 [00:00<00:00, 41.61it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.61it/s] 81%|########  | 21/26 [00:00<00:00, 39.80it/s]100%|##########| 26/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 35.78it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.686 (0.686)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.682 (0.687)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.682 (0.687)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.18 (  0.17)
Test: [  20/  26]	Loss 0.696 (0.688)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.696 (0.688)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.22 (  0.18)
Test: [  26/  26]	Loss 0.686 (0.688)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.686 (0.688)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.93it/s]
Test: [  0/  1]	Loss 0.705 (0.705)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.705 (0.705)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.705 (0.705)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.705 (0.705)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 31/  1]	epoch_time 0.0433 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0429 (0.0425)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.19it/s] 15%|#5        | 4/26 [00:00<00:01, 15.56it/s] 31%|###       | 8/26 [00:00<00:00, 23.22it/s] 42%|####2     | 11/26 [00:00<00:00, 24.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.39it/s] 69%|######9   | 18/26 [00:00<00:00, 28.56it/s] 81%|########  | 21/26 [00:00<00:00, 27.89it/s] 92%|#########2| 24/26 [00:00<00:00, 27.59it/s]100%|##########| 26/26 [00:01<00:00, 24.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 373 tensor(-3.1683e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 370 tensor(-5.7336e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 368 tensor(-6.5465e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 373 tensor(-7.5618e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 373 tensor(-6.8861e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 373 tensor(-2.5040e-06, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.19 ( 48.19)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6740 (6.6745)	zero_count 0.0000 (32.5260)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 23%|##3       | 6/26 [00:00<00:00, 27.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.84it/s] 42%|####2     | 11/26 [00:00<00:00, 35.01it/s] 62%|######1   | 16/26 [00:00<00:00, 39.26it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.26it/s] 81%|########  | 21/26 [00:00<00:00, 38.30it/s]100%|##########| 26/26 [00:00<00:00, 41.35it/s]100%|##########| 26/26 [00:00<00:00, 34.02it/s]
Test: [   0/  26]	Loss 0.687 (0.687)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.687 (0.687)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.682 (0.688)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.682 (0.688)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.18 (  0.17)
Test: [  20/  26]	Loss 0.696 (0.689)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.696 (0.689)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.21 (  0.17)
Test: [  26/  26]	Loss 0.686 (0.689)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.686 (0.689)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.76it/s]
Test: [  0/  1]	Loss 0.704 (0.704)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.704 (0.704)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.704 (0.704)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.704 (0.704)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 32/  1]	epoch_time 0.0459 (0.0433)	validation_time 0.0003 (0.0006)	train_time 0.0455 (0.0426)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.54it/s] 15%|#5        | 4/26 [00:00<00:01, 17.87it/s] 31%|###       | 8/26 [00:00<00:00, 22.90it/s] 46%|####6     | 12/26 [00:00<00:00, 27.23it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.97it/s] 69%|######9   | 18/26 [00:00<00:00, 26.96it/s] 85%|########4 | 22/26 [00:00<00:00, 29.53it/s] 96%|#########6| 25/26 [00:00<00:00, 28.62it/s]100%|##########| 26/26 [00:01<00:00, 24.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 369 tensor(-2.4448e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 368 tensor(-4.2515e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 366 tensor(-6.4224e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 370 tensor(-7.1808e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 370 tensor(-6.3017e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 369 tensor(-3.7838e-06, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.19 ( 48.19)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6743 (6.6745)	zero_count 0.0000 (33.1500)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 23%|##3       | 6/26 [00:00<00:00, 25.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.82it/s] 42%|####2     | 11/26 [00:00<00:00, 34.00it/s] 62%|######1   | 16/26 [00:00<00:00, 38.86it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.86it/s] 81%|########  | 21/26 [00:00<00:00, 37.71it/s]100%|##########| 26/26 [00:00<00:00, 41.01it/s]100%|##########| 26/26 [00:00<00:00, 33.14it/s]
Test: [   0/  26]	Loss 0.687 (0.687)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.687 (0.687)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.683 (0.688)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.683 (0.688)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.17 (  0.16)
Test: [  20/  26]	Loss 0.696 (0.689)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.696 (0.689)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.21 (  0.17)
Test: [  26/  26]	Loss 0.686 (0.689)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.686 (0.689)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.17)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.93it/s]
Test: [  0/  1]	Loss 0.704 (0.704)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.704 (0.704)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.704 (0.704)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.704 (0.704)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 33/  1]	epoch_time 0.0467 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0463 (0.0427)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.47it/s] 15%|#5        | 4/26 [00:00<00:01, 18.43it/s] 27%|##6       | 7/26 [00:00<00:00, 21.51it/s] 42%|####2     | 11/26 [00:00<00:00, 25.71it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.59it/s] 65%|######5   | 17/26 [00:00<00:00, 25.35it/s] 81%|########  | 21/26 [00:00<00:00, 28.18it/s] 92%|#########2| 24/26 [00:00<00:00, 28.50it/s]100%|##########| 26/26 [00:01<00:00, 24.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 367 tensor(-1.5977e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 366 tensor(-3.3703e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 364 tensor(-6.1532e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 366 tensor(-6.5809e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 369 tensor(-6.1409e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 368 tensor(-4.6831e-06, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.19 ( 48.19)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6747 (6.6745)	zero_count 0.0000 (33.7350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 15%|#5        | 4/26 [00:00<00:01, 17.89it/s] 35%|###4      | 9/26 [00:00<00:00, 30.79it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.79it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.37it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.58it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.58it/s]100%|##########| 26/26 [00:00<00:00, 45.05it/s]100%|##########| 26/26 [00:00<00:00, 34.83it/s]
Test: [   0/  26]	Loss 0.687 (0.687)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.687 (0.687)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.683 (0.688)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.683 (0.688)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.17 (  0.16)
Test: [  20/  26]	Loss 0.696 (0.689)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.696 (0.689)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.21 (  0.16)
Test: [  26/  26]	Loss 0.686 (0.689)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.686 (0.689)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.93it/s]
Test: [  0/  1]	Loss 0.703 (0.703)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.703 (0.703)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.703 (0.703)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.703 (0.703)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 34/  1]	epoch_time 0.0416 (0.0434)	validation_time 0.0005 (0.0006)	train_time 0.0411 (0.0427)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.73it/s] 15%|#5        | 4/26 [00:00<00:01, 14.70it/s] 27%|##6       | 7/26 [00:00<00:00, 19.49it/s] 42%|####2     | 11/26 [00:00<00:00, 22.80it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.34it/s] 69%|######9   | 18/26 [00:00<00:00, 26.52it/s] 81%|########  | 21/26 [00:00<00:00, 26.60it/s] 96%|#########6| 25/26 [00:01<00:00, 29.16it/s]100%|##########| 26/26 [00:01<00:00, 23.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 367 tensor(-7.3080e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 363 tensor(-3.2200e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 362 tensor(-5.5854e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 361 tensor(-5.9750e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 368 tensor(-6.1666e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 368 tensor(-5.7880e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.19 ( 48.19)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6750 (6.6746)	zero_count 0.0000 (34.2030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.78it/s] 35%|###4      | 9/26 [00:00<00:00, 44.27it/s]                                               35%|###4      | 9/26 [00:00<00:00, 44.27it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.81it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.36it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.36it/s] 92%|#########2| 24/26 [00:00<00:00, 45.67it/s]100%|##########| 26/26 [00:00<00:00, 40.36it/s]
Test: [   0/  26]	Loss 0.687 (0.687)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.687 (0.687)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.684 (0.689)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.684 (0.689)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.16 (  0.15)
Test: [  20/  26]	Loss 0.696 (0.689)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.696 (0.689)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.20 (  0.16)
Test: [  26/  26]	Loss 0.687 (0.689)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.687 (0.689)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.89it/s]
Test: [  0/  1]	Loss 0.702 (0.702)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.702 (0.702)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.702 (0.702)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.702 (0.702)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 35/  1]	epoch_time 0.0480 (0.0435)	validation_time 0.0005 (0.0006)	train_time 0.0475 (0.0428)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.60it/s] 19%|#9        | 5/26 [00:00<00:01, 20.51it/s] 35%|###4      | 9/26 [00:00<00:00, 26.68it/s] 46%|####6     | 12/26 [00:00<00:00, 26.62it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.39it/s] 88%|########8 | 23/26 [00:00<00:00, 30.76it/s]100%|##########| 26/26 [00:00<00:00, 26.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 363 tensor(-3.2435e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 360 tensor(-5.1963e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 359 tensor(-4.9922e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 366 tensor(-5.9793e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 366 tensor(-6.1560e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 367 tensor(-8.7075e-07, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.19 ( 48.19)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6737 (6.6746)	zero_count 145.0000 (32.4460)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.32it/s] 27%|##6       | 7/26 [00:00<00:00, 30.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.83it/s] 54%|#####3    | 14/26 [00:00<00:00, 44.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.60it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.60it/s] 92%|#########2| 24/26 [00:00<00:00, 45.30it/s]100%|##########| 26/26 [00:00<00:00, 39.68it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.684 (0.689)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.684 (0.689)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.16 (  0.15)
Test: [  20/  26]	Loss 0.696 (0.690)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.696 (0.690)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.20 (  0.15)
Test: [  26/  26]	Loss 0.687 (0.690)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.687 (0.690)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.17it/s]
Test: [  0/  1]	Loss 0.702 (0.702)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.702 (0.702)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.702 (0.702)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.702 (0.702)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 36/  1]	epoch_time 0.0493 (0.0437)	validation_time 0.0004 (0.0006)	train_time 0.0489 (0.0430)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 15%|#5        | 4/26 [00:00<00:01, 16.43it/s] 31%|###       | 8/26 [00:00<00:00, 24.37it/s] 42%|####2     | 11/26 [00:00<00:00, 25.17it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.23it/s] 69%|######9   | 18/26 [00:00<00:00, 28.23it/s] 81%|########  | 21/26 [00:00<00:00, 27.69it/s] 92%|#########2| 24/26 [00:00<00:00, 27.37it/s]100%|##########| 26/26 [00:01<00:00, 24.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 363 tensor(-2.3894e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 359 tensor(-4.5405e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 357 tensor(-4.9762e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 362 tensor(-5.9769e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 362 tensor(-5.5237e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 362 tensor(-2.0361e-06, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.20 ( 48.20)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6740 (6.6745)	zero_count 0.0000 (34.9440)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.58it/s] 19%|#9        | 5/26 [00:00<00:00, 25.50it/s] 38%|###8      | 10/26 [00:00<00:00, 35.86it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.86it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.35it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.66it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.66it/s] 96%|#########6| 25/26 [00:00<00:00, 41.93it/s]100%|##########| 26/26 [00:00<00:00, 34.88it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.684 (0.689)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.684 (0.689)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.15 (  0.14)
Test: [  20/  26]	Loss 0.695 (0.690)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.690)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.19 (  0.15)
Test: [  26/  26]	Loss 0.687 (0.690)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.687 (0.690)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.97it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.701 (0.701)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.701 (0.701)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 37/  1]	epoch_time 0.0508 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0504 (0.0432)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.20it/s] 19%|#9        | 5/26 [00:00<00:00, 22.12it/s] 31%|###       | 8/26 [00:00<00:00, 24.10it/s] 46%|####6     | 12/26 [00:00<00:00, 27.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.59it/s] 69%|######9   | 18/26 [00:00<00:00, 27.61it/s] 85%|########4 | 22/26 [00:00<00:00, 30.23it/s]100%|##########| 26/26 [00:00<00:00, 30.09it/s]100%|##########| 26/26 [00:00<00:00, 26.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 360 tensor(-1.8968e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 357 tensor(-3.4511e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 354 tensor(-5.0021e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 358 tensor(-5.7167e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 357 tensor(-5.1626e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 359 tensor(-3.1339e-06, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.20 ( 48.20)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6742 (6.6745)	zero_count 0.0000 (35.8020)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.93it/s] 15%|#5        | 4/26 [00:00<00:01, 19.07it/s] 35%|###4      | 9/26 [00:00<00:00, 31.04it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.04it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.31it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.31it/s] 92%|#########2| 24/26 [00:00<00:00, 40.05it/s]100%|##########| 26/26 [00:00<00:00, 33.39it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.685 (0.689)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.685 (0.689)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.15 (  0.14)
Test: [  20/  26]	Loss 0.695 (0.690)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.690)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.19 (  0.14)
Test: [  26/  26]	Loss 0.687 (0.690)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.687 (0.690)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.33it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.701 (0.701)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.701 (0.701)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 38/  1]	epoch_time 0.0452 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0447 (0.0432)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 15%|#5        | 4/26 [00:00<00:01, 15.14it/s] 27%|##6       | 7/26 [00:00<00:00, 19.17it/s] 42%|####2     | 11/26 [00:00<00:00, 24.63it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.01it/s] 65%|######5   | 17/26 [00:00<00:00, 25.39it/s] 81%|########  | 21/26 [00:00<00:00, 28.20it/s] 92%|#########2| 24/26 [00:00<00:00, 27.92it/s]100%|##########| 26/26 [00:01<00:00, 23.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 357 tensor(-1.2813e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 356 tensor(-2.7101e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 351 tensor(-4.9689e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 353 tensor(-5.3206e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 356 tensor(-5.1397e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 357 tensor(-3.8946e-06, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.20 ( 48.20)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6746 (6.6745)	zero_count 0.0000 (36.4260)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 23%|##3       | 6/26 [00:00<00:00, 28.04it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.04it/s] 42%|####2     | 11/26 [00:00<00:00, 35.49it/s] 62%|######1   | 16/26 [00:00<00:00, 39.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.99it/s] 81%|########  | 21/26 [00:00<00:00, 38.74it/s]100%|##########| 26/26 [00:00<00:00, 41.68it/s]100%|##########| 26/26 [00:00<00:00, 34.34it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.685 (0.689)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.685 (0.689)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  20/  26]	Loss 0.695 (0.690)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.690)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.19 (  0.14)
Test: [  26/  26]	Loss 0.687 (0.690)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.687 (0.690)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.41it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 39/  1]	epoch_time 0.0427 (0.0439)	validation_time 0.0003 (0.0006)	train_time 0.0424 (0.0432)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.82it/s] 15%|#5        | 4/26 [00:00<00:01, 20.70it/s] 27%|##6       | 7/26 [00:00<00:00, 23.40it/s] 42%|####2     | 11/26 [00:00<00:00, 25.61it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.11it/s] 69%|######9   | 18/26 [00:00<00:00, 28.44it/s] 81%|########  | 21/26 [00:00<00:00, 28.04it/s] 96%|#########6| 25/26 [00:00<00:00, 30.10it/s]100%|##########| 26/26 [00:01<00:00, 25.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 362 tensor(-5.7798e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 356 tensor(-2.6233e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 349 tensor(-4.6567e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 349 tensor(-4.7125e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 354 tensor(-5.0572e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 354 tensor(-4.6797e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.20 ( 48.20)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6749 (6.6746)	zero_count 0.0000 (36.6210)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.34it/s] 27%|##6       | 7/26 [00:00<00:00, 26.43it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.43it/s] 46%|####6     | 12/26 [00:00<00:00, 34.08it/s] 65%|######5   | 17/26 [00:00<00:00, 34.52it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.52it/s] 85%|########4 | 22/26 [00:00<00:00, 38.09it/s]100%|##########| 26/26 [00:00<00:00, 31.63it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.685 (0.689)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.685 (0.689)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.14 (  0.13)
Test: [  20/  26]	Loss 0.695 (0.690)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.690)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.19 (  0.14)
Test: [  26/  26]	Loss 0.688 (0.690)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.690)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.63it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 40/  1]	epoch_time 0.0439 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0435 (0.0432)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.43it/s] 19%|#9        | 5/26 [00:00<00:01, 17.26it/s] 35%|###4      | 9/26 [00:00<00:00, 23.41it/s] 46%|####6     | 12/26 [00:00<00:00, 23.69it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.30it/s] 85%|########4 | 22/26 [00:00<00:00, 26.82it/s] 96%|#########6| 25/26 [00:01<00:00, 26.75it/s]100%|##########| 26/26 [00:01<00:00, 23.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 355 tensor(-2.4579e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 348 tensor(-4.2191e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 347 tensor(-3.8585e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 354 tensor(-4.9215e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 352 tensor(-5.0250e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 354 tensor(-6.8235e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.20 ( 48.20)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6737 (6.6746)	zero_count 159.0000 (35.0580)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.96it/s] 27%|##6       | 7/26 [00:00<00:00, 28.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.58it/s] 46%|####6     | 12/26 [00:00<00:00, 35.94it/s] 65%|######5   | 17/26 [00:00<00:00, 39.67it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.67it/s] 85%|########4 | 22/26 [00:00<00:00, 38.95it/s]100%|##########| 26/26 [00:00<00:00, 34.83it/s]
Test: [   0/  26]	Loss 0.688 (0.688)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.686 (0.690)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.686 (0.690)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.14 (  0.13)
Test: [  20/  26]	Loss 0.695 (0.690)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.690)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.18 (  0.13)
Test: [  26/  26]	Loss 0.688 (0.690)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.690)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.16it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 41/  1]	epoch_time 0.0424 (0.0438)	validation_time 0.0004 (0.0006)	train_time 0.0419 (0.0432)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.94it/s] 19%|#9        | 5/26 [00:00<00:01, 19.52it/s] 35%|###4      | 9/26 [00:00<00:00, 23.60it/s] 50%|#####     | 13/26 [00:00<00:00, 27.87it/s] 62%|######1   | 16/26 [00:00<00:00, 27.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.44it/s] 88%|########8 | 23/26 [00:00<00:00, 29.61it/s]100%|##########| 26/26 [00:00<00:00, 28.41it/s]100%|##########| 26/26 [00:01<00:00, 25.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 357 tensor(-1.8181e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 347 tensor(-3.6763e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 345 tensor(-3.8409e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 351 tensor(-4.7684e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 351 tensor(-4.4595e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 352 tensor(-1.6331e-06, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.20 ( 48.20)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6740 (6.6745)	zero_count 0.0000 (37.4790)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.28it/s] 19%|#9        | 5/26 [00:00<00:00, 24.57it/s]                                               19%|#9        | 5/26 [00:00<00:00, 24.57it/s] 42%|####2     | 11/26 [00:00<00:00, 34.28it/s] 62%|######1   | 16/26 [00:00<00:00, 39.30it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.30it/s] 81%|########  | 21/26 [00:00<00:00, 41.87it/s]100%|##########| 26/26 [00:00<00:00, 44.03it/s]100%|##########| 26/26 [00:00<00:00, 35.94it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.686 (0.690)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.686 (0.690)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  20/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.18 (  0.13)
Test: [  26/  26]	Loss 0.688 (0.690)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.690)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.60it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.699 (0.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.699 (0.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 42/  1]	epoch_time 0.0480 (0.0439)	validation_time 0.0003 (0.0006)	train_time 0.0477 (0.0433)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.98it/s] 15%|#5        | 4/26 [00:00<00:01, 16.03it/s] 31%|###       | 8/26 [00:00<00:00, 21.04it/s] 46%|####6     | 12/26 [00:00<00:00, 25.46it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.65it/s] 69%|######9   | 18/26 [00:00<00:00, 26.22it/s] 85%|########4 | 22/26 [00:00<00:00, 28.90it/s] 96%|#########6| 25/26 [00:01<00:00, 27.78it/s]100%|##########| 26/26 [00:01<00:00, 23.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 352 tensor(-1.3792e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 349 tensor(-2.6417e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 345 tensor(-3.8574e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 349 tensor(-4.5449e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 351 tensor(-4.2062e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 351 tensor(-2.5332e-06, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.20 ( 48.20)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6742 (6.6745)	zero_count 0.0000 (37.7520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.80it/s] 27%|##6       | 7/26 [00:00<00:00, 25.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.70it/s] 46%|####6     | 12/26 [00:00<00:00, 31.82it/s] 65%|######5   | 17/26 [00:00<00:00, 35.01it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.01it/s] 85%|########4 | 22/26 [00:00<00:00, 39.05it/s]100%|##########| 26/26 [00:00<00:00, 31.64it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.686 (0.690)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.686 (0.690)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.13 (  0.12)
Test: [  20/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.18 (  0.13)
Test: [  26/  26]	Loss 0.688 (0.691)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.691)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.79it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.699 (0.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.699 (0.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
Overall Timing[ 43/  1]	epoch_time 0.0454 (0.0440)	validation_time 0.0005 (0.0006)	train_time 0.0449 (0.0433)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.61it/s] 15%|#5        | 4/26 [00:00<00:01, 16.91it/s] 27%|##6       | 7/26 [00:00<00:00, 20.42it/s] 42%|####2     | 11/26 [00:00<00:00, 25.51it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.73it/s] 65%|######5   | 17/26 [00:00<00:00, 25.55it/s] 81%|########  | 21/26 [00:00<00:00, 28.14it/s] 92%|#########2| 24/26 [00:00<00:00, 27.77it/s]100%|##########| 26/26 [00:01<00:00, 24.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 347 tensor(-9.3312e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 353 tensor(-1.9181e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 344 tensor(-3.9709e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 345 tensor(-4.2667e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 349 tensor(-4.2507e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 349 tensor(-3.1417e-06, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.21 ( 48.21)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6746 (6.6745)	zero_count 0.0000 (38.1030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.80it/s] 27%|##6       | 7/26 [00:00<00:00, 27.97it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.97it/s] 46%|####6     | 12/26 [00:00<00:00, 31.43it/s] 65%|######5   | 17/26 [00:00<00:00, 36.22it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.22it/s] 85%|########4 | 22/26 [00:00<00:00, 39.33it/s]100%|##########| 26/26 [00:00<00:00, 33.01it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.686 (0.690)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.686 (0.690)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.13 (  0.12)
Test: [  20/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.18 (  0.12)
Test: [  26/  26]	Loss 0.688 (0.691)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.691)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.13)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.38it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.699 (0.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.699 (0.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 44/  1]	epoch_time 0.0448 (0.0440)	validation_time 0.0005 (0.0006)	train_time 0.0443 (0.0433)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.78it/s] 23%|##3       | 6/26 [00:00<00:00, 23.51it/s] 38%|###8      | 10/26 [00:00<00:00, 28.38it/s] 50%|#####     | 13/26 [00:00<00:00, 28.83it/s] 62%|######1   | 16/26 [00:00<00:00, 27.95it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.51it/s] 92%|#########2| 24/26 [00:00<00:00, 29.51it/s]100%|##########| 26/26 [00:00<00:00, 26.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 355 tensor(-3.9647e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 352 tensor(-1.8263e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 343 tensor(-3.7870e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 343 tensor(-3.8036e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 349 tensor(-4.2602e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 349 tensor(-3.8978e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.21 ( 48.21)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6749 (6.6746)	zero_count 0.0000 (38.0250)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.44it/s] 27%|##6       | 7/26 [00:00<00:00, 34.76it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.76it/s] 46%|####6     | 12/26 [00:00<00:00, 39.75it/s] 65%|######5   | 17/26 [00:00<00:00, 42.07it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.07it/s] 85%|########4 | 22/26 [00:00<00:00, 39.56it/s]100%|##########| 26/26 [00:00<00:00, 37.15it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  10/  26]	Loss 0.686 (0.690)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.686 (0.690)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  20/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.17 (  0.12)
Test: [  26/  26]	Loss 0.688 (0.691)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.691)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.12it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 45/  1]	epoch_time 0.0401 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0397 (0.0433)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000142753124, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.53it/s] 19%|#9        | 5/26 [00:00<00:01, 18.19it/s] 35%|###4      | 9/26 [00:00<00:00, 24.82it/s] 46%|####6     | 12/26 [00:00<00:00, 25.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.56it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.63it/s] 88%|########8 | 23/26 [00:00<00:00, 29.29it/s]100%|##########| 26/26 [00:00<00:00, 29.00it/s]100%|##########| 26/26 [00:01<00:00, 24.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 354 tensor(-1.8308e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 342 tensor(-3.5603e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 341 tensor(-3.0799e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 348 tensor(-4.1303e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 345 tensor(-4.1840e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 347 tensor(-5.4398e-07, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.21 ( 48.21)	train_acc   0.49 (  0.50)	train_minacc   0.47 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6737 (6.6746)	zero_count 166.0000 (36.1690)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.52it/s] 27%|##6       | 7/26 [00:00<00:00, 29.33it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.33it/s] 46%|####6     | 12/26 [00:00<00:00, 36.30it/s] 65%|######5   | 17/26 [00:00<00:00, 39.46it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.46it/s] 85%|########4 | 22/26 [00:00<00:00, 40.28it/s]100%|##########| 26/26 [00:00<00:00, 34.78it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.687 (0.690)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.687 (0.690)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  20/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.17 (  0.12)
Test: [  26/  26]	Loss 0.688 (0.691)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.691)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.30it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 46/  1]	epoch_time 0.0441 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0437 (0.0433)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.500000015437603, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.94it/s] 15%|#5        | 4/26 [00:00<00:02, 10.51it/s] 31%|###       | 8/26 [00:00<00:00, 18.16it/s] 42%|####2     | 11/26 [00:00<00:00, 20.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 21.95it/s] 69%|######9   | 18/26 [00:00<00:00, 25.31it/s] 81%|########  | 21/26 [00:01<00:00, 24.90it/s] 92%|#########2| 24/26 [00:01<00:00, 25.37it/s]100%|##########| 26/26 [00:01<00:00, 20.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 354 tensor(-1.3553e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 344 tensor(-3.0918e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 340 tensor(-3.1239e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 343 tensor(-3.9921e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 343 tensor(-3.7482e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 344 tensor(-1.3711e-06, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.21 ( 48.21)	train_acc   0.50 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6740 (6.6745)	zero_count 0.0000 (38.8050)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 23%|##3       | 6/26 [00:00<00:00, 29.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.71it/s] 42%|####2     | 11/26 [00:00<00:00, 36.52it/s] 62%|######1   | 16/26 [00:00<00:00, 40.20it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.20it/s] 81%|########  | 21/26 [00:00<00:00, 38.77it/s]100%|##########| 26/26 [00:00<00:00, 40.57it/s]100%|##########| 26/26 [00:00<00:00, 34.09it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.687 (0.690)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.687 (0.690)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.12 (  0.11)
Test: [  20/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.17 (  0.12)
Test: [  26/  26]	Loss 0.688 (0.691)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.691)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.61it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.10 (  0.10)
Overall Timing[ 47/  1]	epoch_time 0.0487 (0.0440)	validation_time 0.0003 (0.0005)	train_time 0.0484 (0.0434)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.5000000144839287, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.64it/s] 15%|#5        | 4/26 [00:00<00:01, 16.45it/s] 31%|###       | 8/26 [00:00<00:00, 21.59it/s] 46%|####6     | 12/26 [00:00<00:00, 25.71it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.86it/s] 69%|######9   | 18/26 [00:00<00:00, 26.11it/s] 85%|########4 | 22/26 [00:00<00:00, 28.82it/s] 96%|#########6| 25/26 [00:00<00:00, 28.00it/s]100%|##########| 26/26 [00:01<00:00, 24.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 351 tensor(-1.1135e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 348 tensor(-2.3090e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 337 tensor(-3.3054e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 339 tensor(-3.8063e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 339 tensor(-3.5538e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 339 tensor(-2.1191e-06, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.21 ( 48.21)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6743 (6.6745)	zero_count 0.0000 (39.3120)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.84it/s] 31%|###       | 8/26 [00:00<00:00, 36.47it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.47it/s] 50%|#####     | 13/26 [00:00<00:00, 40.28it/s] 69%|######9   | 18/26 [00:00<00:00, 41.72it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.72it/s] 88%|########8 | 23/26 [00:00<00:00, 40.78it/s]100%|##########| 26/26 [00:00<00:00, 37.59it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.687 (0.690)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.687 (0.690)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.12 (  0.11)
Test: [  20/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.17 (  0.11)
Test: [  26/  26]	Loss 0.688 (0.691)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.688 (0.691)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.17 (  0.12)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 48/  1]	epoch_time 0.0419 (0.0440)	validation_time 0.0004 (0.0005)	train_time 0.0415 (0.0433)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.4999000142812729, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.53it/s] 15%|#5        | 4/26 [00:00<00:01, 13.93it/s] 27%|##6       | 7/26 [00:00<00:01, 18.53it/s] 42%|####2     | 11/26 [00:00<00:00, 23.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.57it/s] 65%|######5   | 17/26 [00:00<00:00, 24.57it/s] 81%|########  | 21/26 [00:00<00:00, 27.55it/s] 92%|#########2| 24/26 [00:01<00:00, 27.45it/s]100%|##########| 26/26 [00:01<00:00, 22.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 343 tensor(-7.4298e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 351 tensor(-1.5010e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 340 tensor(-3.4315e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 336 tensor(-3.6378e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 341 tensor(-3.6474e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 339 tensor(-2.6703e-06, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.69 (  0.69)	train_penalty   0.00 (  0.00)	weight_norm  48.21 ( 48.21)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 6.6746 (6.6745)	zero_count 0.0000 (39.6240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 23%|##3       | 6/26 [00:00<00:00, 30.83it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.83it/s] 42%|####2     | 11/26 [00:00<00:00, 37.59it/s] 62%|######1   | 16/26 [00:00<00:00, 41.38it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.38it/s] 81%|########  | 21/26 [00:00<00:00, 39.48it/s]100%|##########| 26/26 [00:00<00:00, 42.03it/s]100%|##########| 26/26 [00:00<00:00, 35.27it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.50 (  0.50)	Loss_d 0.689 (0.689)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.687 (0.690)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.687 (0.690)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.11 (  0.11)
Test: [  20/  26]	Loss 0.695 (0.691)	test_acc   0.46 (  0.50)	test_minacc   0.46 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.695 (0.691)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.17 (  0.11)
Test: [  26/  26]	Loss 0.689 (0.691)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.48 (  0.50)	Loss_d 0.689 (0.691)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.17 (  0.11)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.91it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.698 (0.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.09 (  0.09)
Overall Timing[ 49/  1]	epoch_time 0.0460 (0.0440)	validation_time 0.0004 (0.0005)	train_time 0.0455 (0.0434)
record: (train_acc, test_acc) (0.6631000276207923, 0.6820000410079956)
last accs (train_acc, test_acc) (0.4997000148296356, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.163 MB of 0.163 MB uploadedwandb: \ 0.163 MB of 0.163 MB uploadedwandb: | 0.186 MB of 0.192 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/diagnostics/epoch_time_val █▃▂▂▂▂▁▂▁▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▂▂▂▂▃▃▂▂▁▂▂▁▂▃▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/diagnostics/train_time_val █▃▂▂▂▂▁▂▁▁▁▁▁▂▂▂▁▁▁▂▂▁▁▁▁▂▂▃▃▃▃▂▂▂▃▂▁▂▃▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/Loss_avg ▅▅▅▅▅▅▆▅▆█▇▇▃▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/Loss_d_avg ▅▅▅▅▅▅▆▅▆█▇▇▃▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/Loss_d_val ▅▅▅▅▅▅▆▅▆█▇▇▃▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/Loss_val ▅▅▅▅▅▅▆▅▆█▇▇▃▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_acc_avg ▁▁▂▃▃▃▃▅▅▄▅▄▆█▇▇█▇█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_acc_d_avg ▁▁▂▃▃▃▃▅▅▄▅▄▆█▇▇█▇█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_acc_d_val ▁▁▂▃▃▃▃▅▅▄▅▄▆█▇▇█▇█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_acc_val ▁▁▂▃▃▃▃▅▅▄▅▄▆█▇▇█▇█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_corr_d_avg ██▇▇▆▆▇▅▅▅▄▅▃▁▂▂▂▂▂▆▃▃▃▃▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_corr_d_val ██▇▇▆▆▇▅▅▅▄▅▃▁▂▂▂▂▂▆▃▃▃▃▃▃▃▃▃▃▃▃▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_majacc_avg ███▇▇▇▇▇▆▇▆▇▄▄▄▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_majacc_d_avg ███▇▇▇▇▇▆▇▆▇▄▄▄▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_majacc_d_val ███▇▇▇▇▇▆▇▆▇▄▄▄▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_majacc_val ███▇▇▇▇▇▆▇▆▇▄▄▄▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_minacc_avg ▁▁▂▃▃▃▃▅▅▄▅▄▆█▇▇█▇█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_minacc_d_avg ▁▁▂▃▃▃▃▅▅▄▅▄▆█▇▇█▇█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_minacc_d_val ▁▁▂▃▃▃▃▅▅▄▅▄▆█▇▇█▇█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_minacc_val ▁▁▂▃▃▃▃▅▅▄▅▄▆█▇▇█▇█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/Loss_avg ▆▅▄▄▄▄▄▄▃▃▃▃▂▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/Loss_val █▇▇▇▇▇▆▆▅▅▅▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/l1_avg ▅▅▆▆▆▇▆▇▇▇▇██▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/l1_val ▅▆▇▇▇▇▇▇▇██▇▄▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_acc_avg ▆▇▇▇▇▇▇██████▄▄▄▄▃▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_acc_val ▇▇▇▇▇▇▇▇████▄▄▄▄▄▄▄▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_majacc_avg ▇███████▇▇▇▇▇▃▃▃▃▂▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_majacc_val ███████▇██▇█▄▃▃▃▃▃▃▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_minacc_avg ▂▁▁▂▃▃▃▄▅▅▅▅▆█▇▇▇█▇▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_minacc_val ▁▁▁▂▃▃▃▄▅▆▇▅▅█▇▇▇▇▇▄▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_nll_avg ▅▃▂▂▂▂▂▂▁▁▁▁▁▄▄▄▄▄▄█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_nll_val ▄▄▃▃▃▃▂▂▂▁▁▁▆▆▆▆▆▆▆▇████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_penalty_avg ▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_penalty_val █▇▇▇▅▄▄▄▂▂▁▂▂▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/weight_norm_avg ▁▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/weight_norm_val ▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▂▂▂▄████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▄█▆▄▄▅▅▅▆▆▅▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▆▁▁▁▇▁▁▁▇▁▁▁█▁▁▁█▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/diagnostics/epoch_time_val 0.046
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/diagnostics/train_time_val 0.04554
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/diagnostics/validation_time_val 0.00045
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/Loss_avg 0.69752
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/Loss_d_avg 0.69752
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/Loss_d_val 0.69752
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/Loss_val 0.69752
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_corr_d_avg 0.09305
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_corr_d_val 0.09305
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/Loss_avg 8e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/Loss_val 9e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/l1_avg 6.67451
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/l1_val 6.6746
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_acc_avg 0.4997
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_acc_val 0.488
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_majacc_avg 0.49933
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_majacc_val 0.48131
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_minacc_avg 0.50312
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_minacc_val 0.52778
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_nll_avg 0.69121
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_nll_val 0.68851
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_penalty_avg 1e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/train_penalty_val 2e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/weight_norm_avg 48.21153
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/weight_norm_val 48.21176
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/zero_count_avg 39.624
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/110/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/riumlq2h
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_190452-riumlq2h/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_190744-jd1ulmch
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/jd1ulmch
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1161
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6049, 3, 32, 32) (5951, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:40,  1.62s/it] 23%|##3       | 6/26 [00:01<00:04,  4.55it/s] 42%|####2     | 11/26 [00:01<00:01,  9.04it/s] 58%|#####7    | 15/26 [00:01<00:00, 12.90it/s] 73%|#######3  | 19/26 [00:02<00:00, 16.68it/s] 88%|########8 | 23/26 [00:02<00:00, 20.45it/s]100%|##########| 26/26 [00:02<00:00,  9.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.401 (0.632)	train_nll   0.40 (  0.63)	train_penalty   0.05 (  0.48)	weight_norm  20.85 ( 18.09)	train_acc   0.87 (  0.78)	train_minacc   0.00 (  0.12)	train_majacc   1.00 (  0.90)	train_corr   0.00 (  0.00)	l1 5.5657 (7.2051)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.59it/s] 27%|##6       | 7/26 [00:00<00:00, 35.61it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.61it/s] 46%|####6     | 12/26 [00:00<00:00, 39.72it/s] 62%|######1   | 16/26 [00:00<00:00, 39.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.58it/s] 81%|########  | 21/26 [00:00<00:00, 37.95it/s]100%|##########| 26/26 [00:00<00:00, 41.35it/s]100%|##########| 26/26 [00:00<00:00, 35.45it/s]
Test: [   0/  26]	Loss 0.413 (0.413)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.413 (0.413)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.427 (0.427)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.427 (0.427)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  20/  26]	Loss 0.424 (0.421)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.424 (0.421)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.99 (  0.99)
Test: [  26/  26]	Loss 0.382 (0.421)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.382 (0.421)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.99)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.50it/s]100%|##########| 1/1 [00:00<00:00,  2.50it/s]
Test: [  0/  1]	Loss 1.630 (1.630)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.630 (1.630)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  1/  1]	Loss 1.630 (1.630)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.630 (1.630)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0786 (0.0786)	validation_time 0.0068 (0.0068)	train_time 0.0693 (0.0693)
record: (train_acc, test_acc) (0.8468000271320343, 0.10500000417232513)
last accs (train_acc, test_acc) (0.8468000271320343, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.80it/s] 12%|#1        | 3/26 [00:00<00:01, 11.57it/s] 27%|##6       | 7/26 [00:00<00:00, 21.18it/s] 42%|####2     | 11/26 [00:00<00:00, 25.85it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.05it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.46it/s] 88%|########8 | 23/26 [00:00<00:00, 33.16it/s]100%|##########| 26/26 [00:00<00:00, 26.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.364 (0.422)	train_nll   0.36 (  0.42)	train_penalty   0.05 (  0.07)	weight_norm  22.00 ( 21.65)	train_acc   0.87 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 5.6117 (5.5739)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.53it/s] 15%|#5        | 4/26 [00:00<00:01, 18.60it/s] 35%|###4      | 9/26 [00:00<00:00, 30.61it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.93it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.93it/s] 92%|#########2| 24/26 [00:00<00:00, 39.46it/s]100%|##########| 26/26 [00:00<00:00, 33.36it/s]
Test: [   0/  26]	Loss 0.415 (0.415)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.415 (0.415)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.412 (0.418)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.412 (0.418)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.425 (0.414)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.425 (0.414)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.362 (0.415)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.362 (0.415)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.85it/s]
Test: [  0/  1]	Loss 1.801 (1.801)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.801 (1.801)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.801 (1.801)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.801 (1.801)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Overall Timing[  1/  1]	epoch_time 0.0412 (0.0599)	validation_time 0.0004 (0.0036)	train_time 0.0408 (0.0550)
record: (train_acc, test_acc) (0.8468000271320343, 0.10500000417232513)
last accs (train_acc, test_acc) (0.8488000293374062, 0.10300000756978989)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.09it/s] 23%|##3       | 6/26 [00:00<00:00, 25.21it/s] 35%|###4      | 9/26 [00:00<00:00, 26.73it/s] 50%|#####     | 13/26 [00:00<00:00, 29.47it/s] 65%|######5   | 17/26 [00:00<00:00, 31.11it/s] 81%|########  | 21/26 [00:00<00:00, 32.29it/s] 96%|#########6| 25/26 [00:00<00:00, 33.22it/s]100%|##########| 26/26 [00:00<00:00, 28.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.357 (0.410)	train_nll   0.36 (  0.41)	train_penalty   0.04 (  0.06)	weight_norm  22.11 ( 22.08)	train_acc   0.86 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   0.99 (  1.00)	train_corr   0.00 (  0.00)	l1 5.6545 (5.6515)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.69it/s] 31%|###       | 8/26 [00:00<00:00, 35.14it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.14it/s] 46%|####6     | 12/26 [00:00<00:00, 36.86it/s] 69%|######9   | 18/26 [00:00<00:00, 44.22it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.22it/s] 88%|########8 | 23/26 [00:00<00:00, 43.91it/s]100%|##########| 26/26 [00:00<00:00, 38.51it/s]
Test: [   0/  26]	Loss 0.398 (0.398)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.398 (0.398)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.415 (0.414)	test_acc   0.83 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.415 (0.414)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.431 (0.411)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.431 (0.411)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.357 (0.409)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   0.99 (  1.00)	Loss_d 0.357 (0.409)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.53it/s]
Test: [  0/  1]	Loss 1.795 (1.795)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.795 (1.795)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.795 (1.795)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.795 (1.795)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0414 (0.0537)	validation_time 0.0004 (0.0025)	train_time 0.0409 (0.0503)
record: (train_acc, test_acc) (0.8482000313997269, 0.10700000822544098)
last accs (train_acc, test_acc) (0.8482000313997269, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.84it/s] 27%|##6       | 7/26 [00:00<00:00, 32.23it/s] 46%|####6     | 12/26 [00:00<00:00, 36.96it/s] 62%|######1   | 16/26 [00:00<00:00, 37.91it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.16it/s] 92%|#########2| 24/26 [00:00<00:00, 36.75it/s]100%|##########| 26/26 [00:00<00:00, 33.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.329 (0.395)	train_nll   0.33 (  0.39)	train_penalty   0.03 (  0.05)	weight_norm  22.15 ( 22.13)	train_acc   0.86 (  0.85)	train_minacc   0.15 (  0.03)	train_majacc   0.97 (  0.99)	train_corr   0.00 (  0.00)	l1 5.8241 (5.7427)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.47it/s] 23%|##3       | 6/26 [00:00<00:00, 30.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.77it/s] 42%|####2     | 11/26 [00:00<00:00, 36.55it/s] 62%|######1   | 16/26 [00:00<00:00, 37.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.93it/s] 81%|########  | 21/26 [00:00<00:00, 39.79it/s]100%|##########| 26/26 [00:00<00:00, 42.15it/s]100%|##########| 26/26 [00:00<00:00, 34.79it/s]
Test: [   0/  26]	Loss 0.399 (0.399)	test_acc   0.84 (  0.84)	test_minacc   0.07 (  0.07)	test_majacc   0.98 (  0.98)	Loss_d 0.399 (0.399)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.396 (0.394)	test_acc   0.83 (  0.84)	test_minacc   0.14 (  0.12)	test_majacc   0.96 (  0.97)	Loss_d 0.396 (0.394)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.14 (  0.12)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.405 (0.393)	test_acc   0.84 (  0.85)	test_minacc   0.10 (  0.12)	test_majacc   0.97 (  0.97)	Loss_d 0.405 (0.393)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.10 (  0.12)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.93 (  0.94)
Test: [  26/  26]	Loss 0.320 (0.389)	test_acc   0.87 (  0.85)	test_minacc   0.18 (  0.11)	test_majacc   0.97 (  0.98)	Loss_d 0.320 (0.389)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.18 (  0.11)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.93 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.84it/s]
Test: [  0/  1]	Loss 1.752 (1.752)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 1.752 (1.752)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  1/  1]	Loss 1.752 (1.752)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 1.752 (1.752)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0404 (0.0504)	validation_time 0.0004 (0.0020)	train_time 0.0400 (0.0477)
record: (train_acc, test_acc) (0.8465000190138817, 0.14900000393390656)
last accs (train_acc, test_acc) (0.8465000190138817, 0.14900000393390656)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.88it/s] 15%|#5        | 4/26 [00:00<00:01, 15.76it/s] 31%|###       | 8/26 [00:00<00:00, 23.57it/s] 46%|####6     | 12/26 [00:00<00:00, 27.39it/s] 62%|######1   | 16/26 [00:00<00:00, 30.01it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.61it/s] 92%|#########2| 24/26 [00:00<00:00, 32.62it/s]100%|##########| 26/26 [00:00<00:00, 26.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.301 (0.374)	train_nll   0.30 (  0.37)	train_penalty   0.02 (  0.04)	weight_norm  22.21 ( 22.18)	train_acc   0.88 (  0.85)	train_minacc   0.24 (  0.09)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 6.0014 (5.9017)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 23%|##3       | 6/26 [00:00<00:00, 24.70it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.70it/s] 42%|####2     | 11/26 [00:00<00:00, 27.92it/s] 65%|######5   | 17/26 [00:00<00:00, 37.39it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.39it/s] 85%|########4 | 22/26 [00:00<00:00, 40.33it/s]100%|##########| 26/26 [00:00<00:00, 32.34it/s]
Test: [   0/  26]	Loss 0.372 (0.372)	test_acc   0.84 (  0.84)	test_minacc   0.14 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 0.372 (0.372)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.383 (0.363)	test_acc   0.84 (  0.85)	test_minacc   0.22 (  0.21)	test_majacc   0.95 (  0.96)	Loss_d 0.383 (0.363)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.22 (  0.21)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.363 (0.363)	test_acc   0.83 (  0.84)	test_minacc   0.17 (  0.19)	test_majacc   0.94 (  0.96)	Loss_d 0.363 (0.363)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.17 (  0.19)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.89 (  0.90)
Test: [  26/  26]	Loss 0.291 (0.359)	test_acc   0.88 (  0.85)	test_minacc   0.36 (  0.19)	test_majacc   0.95 (  0.96)	Loss_d 0.291 (0.359)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.36 (  0.19)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.88 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.56it/s]
Test: [  0/  1]	Loss 1.664 (1.664)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   1.00 (  1.00)	Loss_d 1.664 (1.664)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.81)
Test: [  1/  1]	Loss 1.664 (1.664)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   1.00 (  1.00)	Loss_d 1.664 (1.664)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.81)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0427 (0.0488)	validation_time 0.0004 (0.0017)	train_time 0.0423 (0.0467)
record: (train_acc, test_acc) (0.8454000206589699, 0.21800000965595245)
last accs (train_acc, test_acc) (0.8454000206589699, 0.21800000965595245)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.20it/s] 15%|#5        | 4/26 [00:00<00:01, 12.75it/s] 31%|###       | 8/26 [00:00<00:00, 20.38it/s] 46%|####6     | 12/26 [00:00<00:00, 25.08it/s] 62%|######1   | 16/26 [00:00<00:00, 28.60it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.53it/s] 92%|#########2| 24/26 [00:00<00:00, 32.17it/s]100%|##########| 26/26 [00:01<00:00, 24.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.306 (0.356)	train_nll   0.31 (  0.36)	train_penalty   0.02 (  0.03)	weight_norm  22.28 ( 22.24)	train_acc   0.87 (  0.85)	train_minacc   0.30 (  0.15)	train_majacc   0.96 (  0.98)	train_corr   0.00 (  0.00)	l1 5.9200 (5.9558)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.68it/s] 23%|##3       | 6/26 [00:00<00:01, 15.60it/s]                                               23%|##3       | 6/26 [00:00<00:01, 15.60it/s] 42%|####2     | 11/26 [00:00<00:00, 24.39it/s] 62%|######1   | 16/26 [00:00<00:00, 31.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 31.41it/s] 81%|########  | 21/26 [00:00<00:00, 35.63it/s]100%|##########| 26/26 [00:00<00:00, 27.88it/s]
Test: [   0/  26]	Loss 0.340 (0.340)	test_acc   0.85 (  0.85)	test_minacc   0.16 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 0.340 (0.340)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.346 (0.339)	test_acc   0.84 (  0.86)	test_minacc   0.19 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 0.346 (0.339)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.19 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.90)
Test: [  20/  26]	Loss 0.327 (0.336)	test_acc   0.85 (  0.86)	test_minacc   0.20 (  0.21)	test_majacc   0.96 (  0.97)	Loss_d 0.327 (0.336)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.20 (  0.21)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.280 (0.334)	test_acc   0.88 (  0.86)	test_minacc   0.27 (  0.21)	test_majacc   0.97 (  0.97)	Loss_d 0.280 (0.334)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.27 (  0.21)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.50it/s]
Test: [  0/  1]	Loss 1.676 (1.676)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 1.676 (1.676)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.78)
Test: [  1/  1]	Loss 1.676 (1.676)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 1.676 (1.676)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.78)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0398 (0.0473)	validation_time 0.0004 (0.0014)	train_time 0.0394 (0.0454)
record: (train_acc, test_acc) (0.8564000236988067, 0.2200000137090683)
last accs (train_acc, test_acc) (0.8564000236988067, 0.2200000137090683)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.60it/s] 23%|##3       | 6/26 [00:00<00:00, 25.24it/s] 38%|###8      | 10/26 [00:00<00:00, 29.83it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.81it/s] 69%|######9   | 18/26 [00:00<00:00, 32.76it/s] 85%|########4 | 22/26 [00:00<00:00, 33.66it/s]100%|##########| 26/26 [00:00<00:00, 34.67it/s]100%|##########| 26/26 [00:00<00:00, 29.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.275 (0.335)	train_nll   0.27 (  0.33)	train_penalty   0.01 (  0.03)	weight_norm  22.36 ( 22.32)	train_acc   0.89 (  0.86)	train_minacc   0.45 (  0.21)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 6.1301 (6.0815)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 23%|##3       | 6/26 [00:00<00:00, 24.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.03it/s] 42%|####2     | 11/26 [00:00<00:00, 32.56it/s] 62%|######1   | 16/26 [00:00<00:00, 38.48it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.48it/s] 81%|########  | 21/26 [00:00<00:00, 37.90it/s]100%|##########| 26/26 [00:00<00:00, 41.08it/s]100%|##########| 26/26 [00:00<00:00, 32.27it/s]
Test: [   0/  26]	Loss 0.338 (0.338)	test_acc   0.84 (  0.84)	test_minacc   0.22 (  0.22)	test_majacc   0.94 (  0.94)	Loss_d 0.338 (0.338)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.326 (0.325)	test_acc   0.87 (  0.86)	test_minacc   0.37 (  0.37)	test_majacc   0.97 (  0.95)	Loss_d 0.326 (0.325)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  20/  26]	Loss 0.304 (0.324)	test_acc   0.86 (  0.86)	test_minacc   0.36 (  0.36)	test_majacc   0.95 (  0.95)	Loss_d 0.304 (0.324)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.84 (  0.86)
Test: [  26/  26]	Loss 0.243 (0.320)	test_acc   0.90 (  0.86)	test_minacc   0.48 (  0.36)	test_majacc   0.96 (  0.95)	Loss_d 0.243 (0.320)	test_acc_d   0.90 (  0.86)	test_minacc_d   0.48 (  0.36)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.85 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.87it/s]
Test: [  0/  1]	Loss 1.687 (1.687)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.95 (  0.95)	Loss_d 1.687 (1.687)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.63 (  0.63)
Test: [  1/  1]	Loss 1.687 (1.687)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.95 (  0.95)	Loss_d 1.687 (1.687)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.63 (  0.63)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0420 (0.0465)	validation_time 0.0003 (0.0013)	train_time 0.0416 (0.0449)
record: (train_acc, test_acc) (0.8609000262618065, 0.32100000977516174)
last accs (train_acc, test_acc) (0.8609000262618065, 0.32100000977516174)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.93it/s] 19%|#9        | 5/26 [00:00<00:00, 22.67it/s] 35%|###4      | 9/26 [00:00<00:00, 27.58it/s] 50%|#####     | 13/26 [00:00<00:00, 29.62it/s] 65%|######5   | 17/26 [00:00<00:00, 31.47it/s] 81%|########  | 21/26 [00:00<00:00, 32.86it/s] 96%|#########6| 25/26 [00:00<00:00, 33.36it/s]100%|##########| 26/26 [00:00<00:00, 28.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.262 (0.318)	train_nll   0.26 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.46 ( 22.41)	train_acc   0.89 (  0.86)	train_minacc   0.55 (  0.27)	train_majacc   0.94 (  0.97)	train_corr   0.00 (  0.00)	l1 6.2744 (6.2631)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.58it/s] 15%|#5        | 4/26 [00:00<00:01, 15.24it/s] 38%|###8      | 10/26 [00:00<00:00, 30.48it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.48it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.03it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 37.03it/s] 81%|########  | 21/26 [00:00<00:00, 41.90it/s]100%|##########| 26/26 [00:00<00:00, 33.98it/s]
Test: [   0/  26]	Loss 0.316 (0.316)	test_acc   0.85 (  0.85)	test_minacc   0.29 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 0.316 (0.316)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.335 (0.314)	test_acc   0.86 (  0.86)	test_minacc   0.43 (  0.45)	test_majacc   0.94 (  0.94)	Loss_d 0.335 (0.314)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.43 (  0.45)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.85 (  0.84)
Test: [  20/  26]	Loss 0.292 (0.312)	test_acc   0.89 (  0.86)	test_minacc   0.58 (  0.45)	test_majacc   0.95 (  0.93)	Loss_d 0.292 (0.312)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.58 (  0.45)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.82 (  0.84)
Test: [  26/  26]	Loss 0.227 (0.307)	test_acc   0.89 (  0.86)	test_minacc   0.55 (  0.45)	test_majacc   0.94 (  0.94)	Loss_d 0.227 (0.307)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.55 (  0.45)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.17it/s]
Test: [  0/  1]	Loss 1.739 (1.739)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.94 (  0.94)	Loss_d 1.739 (1.739)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 1.739 (1.739)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.94 (  0.94)	Loss_d 1.739 (1.739)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.64 (  0.64)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0460 (0.0465)	validation_time 0.0004 (0.0012)	train_time 0.0456 (0.0450)
record: (train_acc, test_acc) (0.8626000166535378, 0.3400000035762787)
last accs (train_acc, test_acc) (0.8626000166535378, 0.3400000035762787)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.38it/s] 19%|#9        | 5/26 [00:00<00:00, 24.14it/s] 35%|###4      | 9/26 [00:00<00:00, 29.19it/s] 50%|#####     | 13/26 [00:00<00:00, 31.23it/s] 65%|######5   | 17/26 [00:00<00:00, 33.00it/s] 81%|########  | 21/26 [00:00<00:00, 34.08it/s] 96%|#########6| 25/26 [00:00<00:00, 34.71it/s]100%|##########| 26/26 [00:00<00:00, 29.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.233 (0.309)	train_nll   0.23 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.59 ( 22.53)	train_acc   0.90 (  0.87)	train_minacc   0.42 (  0.31)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 6.3979 (6.3211)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.81it/s] 23%|##3       | 6/26 [00:00<00:00, 23.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.58it/s] 42%|####2     | 11/26 [00:00<00:00, 31.98it/s] 62%|######1   | 16/26 [00:00<00:00, 37.28it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.28it/s] 81%|########  | 21/26 [00:00<00:00, 38.91it/s]100%|##########| 26/26 [00:00<00:00, 40.85it/s]100%|##########| 26/26 [00:00<00:00, 32.65it/s]
Test: [   0/  26]	Loss 0.317 (0.317)	test_acc   0.85 (  0.85)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 0.317 (0.317)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.298 (0.309)	test_acc   0.87 (  0.86)	test_minacc   0.41 (  0.46)	test_majacc   0.96 (  0.94)	Loss_d 0.298 (0.309)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.41 (  0.46)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.87 (  0.84)
Test: [  20/  26]	Loss 0.287 (0.303)	test_acc   0.90 (  0.87)	test_minacc   0.56 (  0.47)	test_majacc   0.96 (  0.94)	Loss_d 0.287 (0.303)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.56 (  0.47)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.84 (  0.85)
Test: [  26/  26]	Loss 0.216 (0.298)	test_acc   0.90 (  0.87)	test_minacc   0.48 (  0.47)	test_majacc   0.96 (  0.94)	Loss_d 0.216 (0.298)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.48 (  0.47)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.85 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.94it/s]
Test: [  0/  1]	Loss 1.836 (1.836)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 1.836 (1.836)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 1.836 (1.836)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 1.836 (1.836)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.65 (  0.65)
Overall Timing[  8/  1]	epoch_time 0.0381 (0.0455)	validation_time 0.0005 (0.0011)	train_time 0.0376 (0.0442)
record: (train_acc, test_acc) (0.8626000166535378, 0.3400000035762787)
last accs (train_acc, test_acc) (0.8719000246524811, 0.33400002121925354)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.01it/s] 19%|#9        | 5/26 [00:00<00:00, 24.03it/s] 35%|###4      | 9/26 [00:00<00:00, 28.69it/s] 50%|#####     | 13/26 [00:00<00:00, 30.79it/s] 65%|######5   | 17/26 [00:00<00:00, 32.62it/s] 81%|########  | 21/26 [00:00<00:00, 33.64it/s] 96%|#########6| 25/26 [00:00<00:00, 34.32it/s]100%|##########| 26/26 [00:00<00:00, 29.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.206 (0.301)	train_nll   0.21 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.76 ( 22.67)	train_acc   0.90 (  0.87)	train_minacc   0.42 (  0.36)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 6.2923 (6.3543)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.06it/s] 31%|###       | 8/26 [00:00<00:00, 36.90it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.90it/s] 50%|#####     | 13/26 [00:00<00:00, 40.20it/s] 69%|######9   | 18/26 [00:00<00:00, 42.59it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.59it/s] 88%|########8 | 23/26 [00:00<00:00, 40.30it/s]100%|##########| 26/26 [00:00<00:00, 37.89it/s]
Test: [   0/  26]	Loss 0.294 (0.294)	test_acc   0.85 (  0.85)	test_minacc   0.26 (  0.26)	test_majacc   0.95 (  0.95)	Loss_d 0.294 (0.294)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.296 (0.288)	test_acc   0.88 (  0.87)	test_minacc   0.37 (  0.38)	test_majacc   0.98 (  0.96)	Loss_d 0.296 (0.288)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.37 (  0.38)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.90 (  0.88)
Test: [  20/  26]	Loss 0.275 (0.283)	test_acc   0.88 (  0.87)	test_minacc   0.34 (  0.37)	test_majacc   0.97 (  0.96)	Loss_d 0.275 (0.283)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.34 (  0.37)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.193 (0.278)	test_acc   0.91 (  0.87)	test_minacc   0.48 (  0.37)	test_majacc   0.98 (  0.96)	Loss_d 0.193 (0.278)	test_acc_d   0.91 (  0.87)	test_minacc_d   0.48 (  0.37)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.88 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.51it/s]
Test: [  0/  1]	Loss 1.957 (1.957)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.99 (  0.99)	Loss_d 1.957 (1.957)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 1.957 (1.957)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.99 (  0.99)	Loss_d 1.957 (1.957)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Overall Timing[  9/  1]	epoch_time 0.0390 (0.0449)	validation_time 0.0004 (0.0010)	train_time 0.0386 (0.0436)
record: (train_acc, test_acc) (0.8626000166535378, 0.3400000035762787)
last accs (train_acc, test_acc) (0.8745000193119049, 0.28300002217292786)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.29it/s] 23%|##3       | 6/26 [00:00<00:00, 23.98it/s] 38%|###8      | 10/26 [00:00<00:00, 28.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.90it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.50it/s] 92%|#########2| 24/26 [00:00<00:00, 37.21it/s]100%|##########| 26/26 [00:00<00:00, 30.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.231 (0.281)	train_nll   0.23 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.97 ( 22.86)	train_acc   0.90 (  0.88)	train_minacc   0.39 (  0.43)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 6.2104 (6.6630)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 23%|##3       | 6/26 [00:00<00:00, 26.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.00it/s] 42%|####2     | 11/26 [00:00<00:00, 33.81it/s] 62%|######1   | 16/26 [00:00<00:00, 38.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.93it/s] 81%|########  | 21/26 [00:00<00:00, 38.31it/s]100%|##########| 26/26 [00:00<00:00, 41.30it/s]100%|##########| 26/26 [00:00<00:00, 33.52it/s]
Test: [   0/  26]	Loss 0.316 (0.316)	test_acc   0.85 (  0.85)	test_minacc   0.22 (  0.22)	test_majacc   0.96 (  0.96)	Loss_d 0.316 (0.316)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.299 (0.294)	test_acc   0.87 (  0.87)	test_minacc   0.33 (  0.35)	test_majacc   0.98 (  0.97)	Loss_d 0.299 (0.294)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.33 (  0.35)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.88)
Test: [  20/  26]	Loss 0.274 (0.283)	test_acc   0.89 (  0.88)	test_minacc   0.44 (  0.36)	test_majacc   0.97 (  0.97)	Loss_d 0.274 (0.283)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.44 (  0.36)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.88)
Test: [  26/  26]	Loss 0.214 (0.279)	test_acc   0.91 (  0.88)	test_minacc   0.45 (  0.36)	test_majacc   0.98 (  0.97)	Loss_d 0.214 (0.279)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.45 (  0.36)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.89 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.71it/s]
Test: [  0/  1]	Loss 1.917 (1.917)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 1.917 (1.917)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.917 (1.917)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 1.917 (1.917)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
Overall Timing[ 10/  1]	epoch_time 0.0417 (0.0446)	validation_time 0.0004 (0.0010)	train_time 0.0413 (0.0434)
record: (train_acc, test_acc) (0.8626000166535378, 0.3400000035762787)
last accs (train_acc, test_acc) (0.8762000226974487, 0.281000018119812)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.87it/s] 19%|#9        | 5/26 [00:00<00:00, 23.63it/s] 35%|###4      | 9/26 [00:00<00:00, 28.59it/s] 50%|#####     | 13/26 [00:00<00:00, 30.95it/s] 65%|######5   | 17/26 [00:00<00:00, 32.17it/s] 81%|########  | 21/26 [00:00<00:00, 33.19it/s] 96%|#########6| 25/26 [00:00<00:00, 34.93it/s]100%|##########| 26/26 [00:00<00:00, 29.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.209 (0.269)	train_nll   0.21 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.20 ( 23.08)	train_acc   0.92 (  0.88)	train_minacc   0.73 (  0.47)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.8447 (6.7964)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.40it/s] 27%|##6       | 7/26 [00:00<00:00, 32.65it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.65it/s] 46%|####6     | 12/26 [00:00<00:00, 36.86it/s] 65%|######5   | 17/26 [00:00<00:00, 39.17it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.17it/s] 85%|########4 | 22/26 [00:00<00:00, 41.89it/s]100%|##########| 26/26 [00:00<00:00, 35.96it/s]
Test: [   0/  26]	Loss 0.270 (0.270)	test_acc   0.87 (  0.87)	test_minacc   0.59 (  0.59)	test_majacc   0.92 (  0.92)	Loss_d 0.270 (0.270)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.248 (0.277)	test_acc   0.88 (  0.87)	test_minacc   0.56 (  0.58)	test_majacc   0.94 (  0.93)	Loss_d 0.248 (0.277)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.82 (  0.80)
Test: [  20/  26]	Loss 0.227 (0.264)	test_acc   0.91 (  0.88)	test_minacc   0.66 (  0.60)	test_majacc   0.95 (  0.93)	Loss_d 0.227 (0.264)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.66 (  0.60)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.79 (  0.80)
Test: [  26/  26]	Loss 0.178 (0.258)	test_acc   0.93 (  0.89)	test_minacc   0.76 (  0.62)	test_majacc   0.96 (  0.93)	Loss_d 0.178 (0.258)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.76 (  0.62)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.82 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.33it/s]
Test: [  0/  1]	Loss 1.946 (1.946)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.97 (  0.97)	Loss_d 1.946 (1.946)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 1.946 (1.946)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.97 (  0.97)	Loss_d 1.946 (1.946)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.48 (  0.48)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0414 (0.0443)	validation_time 0.0004 (0.0009)	train_time 0.0410 (0.0432)
record: (train_acc, test_acc) (0.8859000193476677, 0.4230000078678131)
last accs (train_acc, test_acc) (0.8859000193476677, 0.4230000078678131)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.26it/s] 19%|#9        | 5/26 [00:00<00:00, 21.87it/s] 35%|###4      | 9/26 [00:00<00:00, 27.52it/s] 50%|#####     | 13/26 [00:00<00:00, 29.86it/s] 65%|######5   | 17/26 [00:00<00:00, 31.56it/s] 81%|########  | 21/26 [00:00<00:00, 32.69it/s] 96%|#########6| 25/26 [00:00<00:00, 33.37it/s]100%|##########| 26/26 [00:00<00:00, 28.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.190 (0.248)	train_nll   0.19 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.46 ( 23.33)	train_acc   0.93 (  0.89)	train_minacc   0.82 (  0.53)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 7.5007 (6.9299)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.62it/s] 15%|#5        | 4/26 [00:00<00:01, 14.38it/s] 35%|###4      | 9/26 [00:00<00:00, 26.07it/s]                                               35%|###4      | 9/26 [00:00<00:00, 26.07it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.73it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.30it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.30it/s] 92%|#########2| 24/26 [00:00<00:00, 39.09it/s]100%|##########| 26/26 [00:00<00:00, 29.97it/s]
Test: [   0/  26]	Loss 0.266 (0.266)	test_acc   0.88 (  0.88)	test_minacc   0.52 (  0.52)	test_majacc   0.95 (  0.95)	Loss_d 0.266 (0.266)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.227 (0.242)	test_acc   0.88 (  0.89)	test_minacc   0.56 (  0.56)	test_majacc   0.95 (  0.95)	Loss_d 0.227 (0.242)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.178 (0.229)	test_acc   0.91 (  0.90)	test_minacc   0.63 (  0.57)	test_majacc   0.96 (  0.96)	Loss_d 0.178 (0.229)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.63 (  0.57)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.82)
Test: [  26/  26]	Loss 0.126 (0.220)	test_acc   0.96 (  0.90)	test_minacc   0.85 (  0.59)	test_majacc   0.98 (  0.96)	Loss_d 0.126 (0.220)	test_acc_d   0.96 (  0.90)	test_minacc_d   0.85 (  0.59)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.81 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.00it/s]
Test: [  0/  1]	Loss 2.325 (2.325)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.92 (  0.92)	Loss_d 2.325 (2.325)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 2.325 (2.325)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.92 (  0.92)	Loss_d 2.325 (2.325)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.50 (  0.50)
Overall Timing[ 12/  1]	epoch_time 0.0396 (0.0440)	validation_time 0.0005 (0.0009)	train_time 0.0391 (0.0429)
record: (train_acc, test_acc) (0.8859000193476677, 0.4230000078678131)
last accs (train_acc, test_acc) (0.9010000207424164, 0.3850000202655792)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.77it/s] 19%|#9        | 5/26 [00:00<00:01, 17.92it/s] 35%|###4      | 9/26 [00:00<00:00, 24.43it/s] 50%|#####     | 13/26 [00:00<00:00, 28.13it/s] 65%|######5   | 17/26 [00:00<00:00, 30.50it/s] 81%|########  | 21/26 [00:00<00:00, 32.01it/s] 96%|#########6| 25/26 [00:00<00:00, 33.29it/s]100%|##########| 26/26 [00:00<00:00, 26.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.150 (0.240)	train_nll   0.15 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  23.79 ( 23.63)	train_acc   0.96 (  0.90)	train_minacc   0.79 (  0.56)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5662 (7.1517)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.43it/s] 27%|##6       | 7/26 [00:00<00:00, 19.67it/s]                                               27%|##6       | 7/26 [00:00<00:00, 19.67it/s] 46%|####6     | 12/26 [00:00<00:00, 27.94it/s] 65%|######5   | 17/26 [00:00<00:00, 33.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.45it/s] 85%|########4 | 22/26 [00:00<00:00, 37.29it/s]100%|##########| 26/26 [00:00<00:00, 28.95it/s]
Test: [   0/  26]	Loss 0.216 (0.216)	test_acc   0.91 (  0.91)	test_minacc   0.60 (  0.60)	test_majacc   0.96 (  0.96)	Loss_d 0.216 (0.216)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.200 (0.233)	test_acc   0.91 (  0.90)	test_minacc   0.59 (  0.63)	test_majacc   0.97 (  0.95)	Loss_d 0.200 (0.233)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.59 (  0.63)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.82 (  0.79)
Test: [  20/  26]	Loss 0.193 (0.220)	test_acc   0.91 (  0.90)	test_minacc   0.69 (  0.65)	test_majacc   0.95 (  0.95)	Loss_d 0.193 (0.220)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.69 (  0.65)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.78 (  0.80)
Test: [  26/  26]	Loss 0.106 (0.209)	test_acc   0.97 (  0.91)	test_minacc   0.88 (  0.66)	test_majacc   0.99 (  0.95)	Loss_d 0.106 (0.209)	test_acc_d   0.97 (  0.91)	test_minacc_d   0.88 (  0.66)	test_majacc_d   0.99 (  0.95)	test_corr_d   0.81 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.50it/s]
Test: [  0/  1]	Loss 2.416 (2.416)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.92 (  0.92)	Loss_d 2.416 (2.416)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.46 (  0.46)
Test: [  1/  1]	Loss 2.416 (2.416)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.92 (  0.92)	Loss_d 2.416 (2.416)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.46 (  0.46)
Overall Timing[ 13/  1]	epoch_time 0.0400 (0.0437)	validation_time 0.0004 (0.0008)	train_time 0.0396 (0.0426)
record: (train_acc, test_acc) (0.8859000193476677, 0.4230000078678131)
last accs (train_acc, test_acc) (0.9094000197052956, 0.4090000092983246)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.98it/s] 23%|##3       | 6/26 [00:00<00:00, 23.66it/s] 38%|###8      | 10/26 [00:00<00:00, 28.06it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.25it/s] 69%|######9   | 18/26 [00:00<00:00, 31.86it/s] 85%|########4 | 22/26 [00:00<00:00, 32.99it/s]100%|##########| 26/26 [00:00<00:00, 34.53it/s]100%|##########| 26/26 [00:00<00:00, 29.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.119 (0.212)	train_nll   0.12 (  0.21)	train_penalty   0.01 (  0.00)	weight_norm  24.18 ( 23.99)	train_acc   0.95 (  0.91)	train_minacc   0.88 (  0.65)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.6420 (7.6825)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.08it/s] 23%|##3       | 6/26 [00:00<00:00, 23.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.47it/s] 42%|####2     | 11/26 [00:00<00:00, 32.06it/s] 62%|######1   | 16/26 [00:00<00:00, 37.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.59it/s] 81%|########  | 21/26 [00:00<00:00, 37.23it/s]100%|##########| 26/26 [00:00<00:00, 32.26it/s]
Test: [   0/  26]	Loss 0.178 (0.178)	test_acc   0.92 (  0.92)	test_minacc   0.72 (  0.72)	test_majacc   0.95 (  0.95)	Loss_d 0.178 (0.178)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.193 (0.210)	test_acc   0.92 (  0.91)	test_minacc   0.73 (  0.73)	test_majacc   0.95 (  0.94)	Loss_d 0.193 (0.210)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.78 (  0.76)
Test: [  20/  26]	Loss 0.199 (0.205)	test_acc   0.91 (  0.91)	test_minacc   0.76 (  0.76)	test_majacc   0.93 (  0.94)	Loss_d 0.199 (0.205)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.75 (  0.76)
Test: [  26/  26]	Loss 0.099 (0.195)	test_acc   0.97 (  0.92)	test_minacc   0.97 (  0.77)	test_majacc   0.97 (  0.94)	Loss_d 0.099 (0.195)	test_acc_d   0.97 (  0.92)	test_minacc_d   0.97 (  0.77)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.79 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 53.62it/s]
Test: [  0/  1]	Loss 2.410 (2.410)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.93 (  0.93)	Loss_d 2.410 (2.410)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 2.410 (2.410)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.93 (  0.93)	Loss_d 2.410 (2.410)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.44 (  0.44)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0414 (0.0435)	validation_time 0.0004 (0.0008)	train_time 0.0410 (0.0425)
record: (train_acc, test_acc) (0.91540002399683, 0.4350000321865082)
last accs (train_acc, test_acc) (0.91540002399683, 0.4350000321865082)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.80it/s] 19%|#9        | 5/26 [00:00<00:01, 18.78it/s] 35%|###4      | 9/26 [00:00<00:00, 25.51it/s] 50%|#####     | 13/26 [00:00<00:00, 29.44it/s] 65%|######5   | 17/26 [00:00<00:00, 31.62it/s] 81%|########  | 21/26 [00:00<00:00, 33.08it/s] 96%|#########6| 25/26 [00:00<00:00, 33.91it/s]100%|##########| 26/26 [00:00<00:00, 27.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.004 (0.077)	train_nll   0.29 (  0.24)	train_penalty   0.00 (  0.00)	weight_norm  24.56 ( 24.40)	train_acc   0.86 (  0.89)	train_minacc   0.67 (  0.71)	train_majacc   0.89 (  0.93)	train_corr   0.00 (  0.00)	l1 6.9268 (8.0203)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.24it/s] 31%|###       | 8/26 [00:00<00:00, 38.15it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.15it/s] 50%|#####     | 13/26 [00:00<00:00, 41.70it/s] 69%|######9   | 18/26 [00:00<00:00, 41.26it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.26it/s] 88%|########8 | 23/26 [00:00<00:00, 42.83it/s]100%|##########| 26/26 [00:00<00:00, 39.14it/s]
Test: [   0/  26]	Loss 0.334 (0.334)	test_acc   0.84 (  0.84)	test_minacc   0.84 (  0.84)	test_majacc   0.83 (  0.83)	Loss_d 0.334 (0.334)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.336 (0.313)	test_acc   0.85 (  0.85)	test_minacc   0.76 (  0.80)	test_majacc   0.87 (  0.86)	Loss_d 0.336 (0.313)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.87 (  0.86)	test_corr_d   0.62 (  0.62)
Test: [  20/  26]	Loss 0.336 (0.316)	test_acc   0.82 (  0.85)	test_minacc   0.76 (  0.80)	test_majacc   0.82 (  0.86)	Loss_d 0.336 (0.316)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.82 (  0.86)	test_corr_d   0.63 (  0.62)
Test: [  26/  26]	Loss 0.317 (0.320)	test_acc   0.85 (  0.85)	test_minacc   0.67 (  0.78)	test_majacc   0.88 (  0.86)	Loss_d 0.317 (0.320)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.67 (  0.78)	test_majacc_d   0.88 (  0.86)	test_corr_d   0.66 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.63it/s]
Test: [  0/  1]	Loss 1.556 (1.556)	test_acc   0.55 (  0.55)	test_minacc   0.50 (  0.50)	test_majacc   0.93 (  0.93)	Loss_d 1.556 (1.556)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 1.556 (1.556)	test_acc   0.55 (  0.55)	test_minacc   0.50 (  0.50)	test_majacc   0.93 (  0.93)	Loss_d 1.556 (1.556)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.20 (  0.20)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0368 (0.0431)	validation_time 0.0003 (0.0008)	train_time 0.0365 (0.0422)
record: (train_acc, test_acc) (0.8464000217914581, 0.5470000505447388)
last accs (train_acc, test_acc) (0.8464000217914581, 0.5470000505447388)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.38it/s] 19%|#9        | 5/26 [00:00<00:00, 21.65it/s] 35%|###4      | 9/26 [00:00<00:00, 28.30it/s] 50%|#####     | 13/26 [00:00<00:00, 31.26it/s] 65%|######5   | 17/26 [00:00<00:00, 32.15it/s] 81%|########  | 21/26 [00:00<00:00, 33.15it/s] 96%|#########6| 25/26 [00:00<00:00, 34.04it/s]100%|##########| 26/26 [00:00<00:00, 28.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.001 (0.002)	train_nll   0.37 (  0.38)	train_penalty   0.00 (  0.00)	weight_norm  24.64 ( 24.62)	train_acc   0.77 (  0.80)	train_minacc   0.76 (  0.85)	train_majacc   0.77 (  0.80)	train_corr   0.00 (  0.00)	l1 5.9790 (6.2877)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 23%|##3       | 6/26 [00:00<00:00, 28.42it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.42it/s] 42%|####2     | 11/26 [00:00<00:00, 36.26it/s] 62%|######1   | 16/26 [00:00<00:00, 39.79it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.79it/s] 81%|########  | 21/26 [00:00<00:00, 38.40it/s]100%|##########| 26/26 [00:00<00:00, 41.66it/s]100%|##########| 26/26 [00:00<00:00, 34.66it/s]
Test: [   0/  26]	Loss 0.380 (0.380)	test_acc   0.80 (  0.80)	test_minacc   0.83 (  0.83)	test_majacc   0.80 (  0.80)	Loss_d 0.380 (0.380)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.353 (0.347)	test_acc   0.82 (  0.83)	test_minacc   0.76 (  0.84)	test_majacc   0.83 (  0.82)	Loss_d 0.353 (0.347)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.76 (  0.84)	test_majacc_d   0.83 (  0.82)	test_corr_d   0.59 (  0.59)
Test: [  20/  26]	Loss 0.366 (0.348)	test_acc   0.79 (  0.82)	test_minacc   0.81 (  0.85)	test_majacc   0.79 (  0.82)	Loss_d 0.366 (0.348)	test_acc_d   0.79 (  0.82)	test_minacc_d   0.81 (  0.85)	test_majacc_d   0.79 (  0.82)	test_corr_d   0.58 (  0.59)
Test: [  26/  26]	Loss 0.377 (0.351)	test_acc   0.76 (  0.82)	test_minacc   0.76 (  0.84)	test_majacc   0.76 (  0.82)	Loss_d 0.377 (0.351)	test_acc_d   0.76 (  0.82)	test_minacc_d   0.76 (  0.84)	test_majacc_d   0.76 (  0.82)	test_corr_d   0.59 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.76it/s]
Test: [  0/  1]	Loss 1.320 (1.320)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.92 (  0.92)	Loss_d 1.320 (1.320)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.320 (1.320)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.92 (  0.92)	Loss_d 1.320 (1.320)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.14 (  0.14)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0385 (0.0428)	validation_time 0.0004 (0.0008)	train_time 0.0381 (0.0419)
record: (train_acc, test_acc) (0.8207000257372856, 0.6040000319480896)
last accs (train_acc, test_acc) (0.8207000257372856, 0.6040000319480896)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.69it/s] 19%|#9        | 5/26 [00:00<00:01, 19.87it/s] 35%|###4      | 9/26 [00:00<00:00, 25.77it/s] 50%|#####     | 13/26 [00:00<00:00, 28.63it/s] 65%|######5   | 17/26 [00:00<00:00, 31.03it/s] 81%|########  | 21/26 [00:00<00:00, 32.33it/s] 96%|#########6| 25/26 [00:00<00:00, 32.91it/s]100%|##########| 26/26 [00:00<00:00, 27.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.001)	train_nll   0.35 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm  24.65 ( 24.65)	train_acc   0.81 (  0.82)	train_minacc   0.76 (  0.83)	train_majacc   0.82 (  0.81)	train_corr   0.00 (  0.00)	l1 6.0299 (6.1138)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.55it/s] 27%|##6       | 7/26 [00:00<00:00, 33.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.00it/s] 46%|####6     | 12/26 [00:00<00:00, 39.57it/s] 65%|######5   | 17/26 [00:00<00:00, 39.61it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.61it/s] 85%|########4 | 22/26 [00:00<00:00, 42.11it/s]100%|##########| 26/26 [00:00<00:00, 36.54it/s]
Test: [   0/  26]	Loss 0.351 (0.351)	test_acc   0.82 (  0.82)	test_minacc   0.79 (  0.79)	test_majacc   0.82 (  0.82)	Loss_d 0.351 (0.351)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.313 (0.315)	test_acc   0.84 (  0.85)	test_minacc   0.75 (  0.81)	test_majacc   0.86 (  0.85)	Loss_d 0.313 (0.315)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.75 (  0.81)	test_majacc_d   0.86 (  0.85)	test_corr_d   0.66 (  0.65)
Test: [  20/  26]	Loss 0.335 (0.317)	test_acc   0.83 (  0.84)	test_minacc   0.80 (  0.82)	test_majacc   0.84 (  0.85)	Loss_d 0.335 (0.317)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.80 (  0.82)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.64 (  0.65)
Test: [  26/  26]	Loss 0.341 (0.322)	test_acc   0.81 (  0.84)	test_minacc   0.76 (  0.82)	test_majacc   0.82 (  0.85)	Loss_d 0.341 (0.322)	test_acc_d   0.81 (  0.84)	test_minacc_d   0.76 (  0.82)	test_majacc_d   0.82 (  0.85)	test_corr_d   0.66 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.27it/s]
Test: [  0/  1]	Loss 1.454 (1.454)	test_acc   0.58 (  0.58)	test_minacc   0.54 (  0.54)	test_majacc   0.94 (  0.94)	Loss_d 1.454 (1.454)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.454 (1.454)	test_acc   0.58 (  0.58)	test_minacc   0.54 (  0.54)	test_majacc   0.94 (  0.94)	Loss_d 1.454 (1.454)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.22 (  0.22)
Overall Timing[ 17/  1]	epoch_time 0.0406 (0.0427)	validation_time 0.0003 (0.0007)	train_time 0.0402 (0.0418)
record: (train_acc, test_acc) (0.8207000257372856, 0.6040000319480896)
last accs (train_acc, test_acc) (0.8421000263094902, 0.5800000429153442)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.14it/s] 23%|##3       | 6/26 [00:00<00:00, 26.51it/s] 38%|###8      | 10/26 [00:00<00:00, 30.11it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.46it/s] 69%|######9   | 18/26 [00:00<00:00, 32.31it/s] 85%|########4 | 22/26 [00:00<00:00, 33.14it/s]100%|##########| 26/26 [00:00<00:00, 33.43it/s]100%|##########| 26/26 [00:00<00:00, 29.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.001 (0.002)	train_nll   0.38 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  24.67 ( 24.66)	train_acc   0.79 (  0.82)	train_minacc   0.76 (  0.82)	train_majacc   0.80 (  0.82)	train_corr   0.00 (  0.00)	l1 6.2005 (6.1161)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.82it/s] 27%|##6       | 7/26 [00:00<00:00, 22.99it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.99it/s] 46%|####6     | 12/26 [00:00<00:00, 31.11it/s] 65%|######5   | 17/26 [00:00<00:00, 35.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.80it/s] 85%|########4 | 22/26 [00:00<00:00, 38.72it/s]100%|##########| 26/26 [00:00<00:00, 30.93it/s]
Test: [   0/  26]	Loss 0.371 (0.371)	test_acc   0.78 (  0.78)	test_minacc   0.81 (  0.81)	test_majacc   0.78 (  0.78)	Loss_d 0.371 (0.371)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.340 (0.355)	test_acc   0.81 (  0.81)	test_minacc   0.79 (  0.82)	test_majacc   0.81 (  0.80)	Loss_d 0.340 (0.355)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.79 (  0.82)	test_majacc_d   0.81 (  0.80)	test_corr_d   0.59 (  0.61)
Test: [  20/  26]	Loss 0.367 (0.350)	test_acc   0.78 (  0.81)	test_minacc   0.81 (  0.84)	test_majacc   0.78 (  0.80)	Loss_d 0.367 (0.350)	test_acc_d   0.78 (  0.81)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.78 (  0.80)	test_corr_d   0.60 (  0.61)
Test: [  26/  26]	Loss 0.379 (0.351)	test_acc   0.79 (  0.81)	test_minacc   0.76 (  0.83)	test_majacc   0.79 (  0.81)	Loss_d 0.379 (0.351)	test_acc_d   0.79 (  0.81)	test_minacc_d   0.76 (  0.83)	test_majacc_d   0.79 (  0.81)	test_corr_d   0.61 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.26it/s]
Test: [  0/  1]	Loss 1.468 (1.468)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.93 (  0.93)	Loss_d 1.468 (1.468)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.468 (1.468)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.93 (  0.93)	Loss_d 1.468 (1.468)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.15 (  0.15)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0393 (0.0425)	validation_time 0.0004 (0.0007)	train_time 0.0389 (0.0417)
record: (train_acc, test_acc) (0.8091000238656998, 0.6240000128746033)
last accs (train_acc, test_acc) (0.8091000238656998, 0.6240000128746033)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.04it/s] 19%|#9        | 5/26 [00:00<00:00, 22.68it/s] 35%|###4      | 9/26 [00:00<00:00, 27.88it/s] 50%|#####     | 13/26 [00:00<00:00, 31.18it/s] 65%|######5   | 17/26 [00:00<00:00, 33.16it/s] 81%|########  | 21/26 [00:00<00:00, 33.99it/s] 96%|#########6| 25/26 [00:00<00:00, 34.57it/s]100%|##########| 26/26 [00:00<00:00, 29.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.001 (0.001)	train_nll   0.35 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm  24.67 ( 24.67)	train_acc   0.80 (  0.80)	train_minacc   0.88 (  0.86)	train_majacc   0.79 (  0.79)	train_corr   0.00 (  0.00)	l1 6.0143 (6.1723)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.30it/s] 31%|###       | 8/26 [00:00<00:00, 38.72it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.72it/s] 50%|#####     | 13/26 [00:00<00:00, 41.65it/s] 69%|######9   | 18/26 [00:00<00:00, 43.46it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.46it/s] 88%|########8 | 23/26 [00:00<00:00, 39.81it/s]100%|##########| 26/26 [00:00<00:00, 37.45it/s]
Test: [   0/  26]	Loss 0.352 (0.352)	test_acc   0.81 (  0.81)	test_minacc   0.83 (  0.83)	test_majacc   0.80 (  0.80)	Loss_d 0.352 (0.352)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.329 (0.333)	test_acc   0.81 (  0.82)	test_minacc   0.78 (  0.83)	test_majacc   0.82 (  0.82)	Loss_d 0.329 (0.333)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.78 (  0.83)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.62 (  0.63)
Test: [  20/  26]	Loss 0.351 (0.330)	test_acc   0.79 (  0.83)	test_minacc   0.80 (  0.85)	test_majacc   0.79 (  0.82)	Loss_d 0.351 (0.330)	test_acc_d   0.79 (  0.83)	test_minacc_d   0.80 (  0.85)	test_majacc_d   0.79 (  0.82)	test_corr_d   0.62 (  0.64)
Test: [  26/  26]	Loss 0.348 (0.332)	test_acc   0.80 (  0.82)	test_minacc   0.88 (  0.84)	test_majacc   0.78 (  0.82)	Loss_d 0.348 (0.332)	test_acc_d   0.80 (  0.82)	test_minacc_d   0.88 (  0.84)	test_majacc_d   0.78 (  0.82)	test_corr_d   0.62 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.05it/s]
Test: [  0/  1]	Loss 1.444 (1.444)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.93 (  0.93)	Loss_d 1.444 (1.444)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.444 (1.444)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.93 (  0.93)	Loss_d 1.444 (1.444)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.17 (  0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0412 (0.0425)	validation_time 0.0004 (0.0007)	train_time 0.0408 (0.0416)
record: (train_acc, test_acc) (0.8234000222682953, 0.625)
last accs (train_acc, test_acc) (0.8234000222682953, 0.625)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.73it/s] 19%|#9        | 5/26 [00:00<00:01, 16.78it/s] 35%|###4      | 9/26 [00:00<00:00, 23.54it/s] 50%|#####     | 13/26 [00:00<00:00, 27.78it/s] 65%|######5   | 17/26 [00:00<00:00, 29.71it/s] 81%|########  | 21/26 [00:00<00:00, 31.09it/s] 96%|#########6| 25/26 [00:00<00:00, 32.92it/s]100%|##########| 26/26 [00:00<00:00, 26.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.36 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  24.67 ( 24.67)	train_acc   0.79 (  0.81)	train_minacc   0.82 (  0.85)	train_majacc   0.78 (  0.80)	train_corr   0.00 (  0.00)	l1 6.1388 (6.2212)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.85it/s] 27%|##6       | 7/26 [00:00<00:00, 30.88it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.88it/s] 50%|#####     | 13/26 [00:00<00:00, 40.39it/s] 69%|######9   | 18/26 [00:00<00:00, 41.47it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.47it/s] 88%|########8 | 23/26 [00:00<00:00, 41.29it/s]100%|##########| 26/26 [00:00<00:00, 36.45it/s]
Test: [   0/  26]	Loss 0.361 (0.361)	test_acc   0.80 (  0.80)	test_minacc   0.83 (  0.83)	test_majacc   0.80 (  0.80)	Loss_d 0.361 (0.361)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.330 (0.338)	test_acc   0.81 (  0.82)	test_minacc   0.76 (  0.82)	test_majacc   0.82 (  0.82)	Loss_d 0.330 (0.338)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.76 (  0.82)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.63 (  0.64)
Test: [  20/  26]	Loss 0.345 (0.330)	test_acc   0.79 (  0.82)	test_minacc   0.81 (  0.84)	test_majacc   0.79 (  0.82)	Loss_d 0.345 (0.330)	test_acc_d   0.79 (  0.82)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.79 (  0.82)	test_corr_d   0.63 (  0.64)
Test: [  26/  26]	Loss 0.355 (0.332)	test_acc   0.79 (  0.82)	test_minacc   0.82 (  0.83)	test_majacc   0.79 (  0.82)	Loss_d 0.355 (0.332)	test_acc_d   0.79 (  0.82)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.79 (  0.82)	test_corr_d   0.62 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.52it/s]
Test: [  0/  1]	Loss 1.502 (1.502)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.92 (  0.92)	Loss_d 1.502 (1.502)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 1.502 (1.502)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.92 (  0.92)	Loss_d 1.502 (1.502)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.19 (  0.19)
Overall Timing[ 20/  1]	epoch_time 0.0414 (0.0424)	validation_time 0.0004 (0.0007)	train_time 0.0411 (0.0416)
record: (train_acc, test_acc) (0.8234000222682953, 0.625)
last accs (train_acc, test_acc) (0.8212000233530998, 0.6240000128746033)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.83it/s] 19%|#9        | 5/26 [00:00<00:00, 22.50it/s] 35%|###4      | 9/26 [00:00<00:00, 28.07it/s] 50%|#####     | 13/26 [00:00<00:00, 30.47it/s] 65%|######5   | 17/26 [00:00<00:00, 31.95it/s] 81%|########  | 21/26 [00:00<00:00, 32.73it/s] 96%|#########6| 25/26 [00:00<00:00, 33.63it/s]100%|##########| 26/26 [00:00<00:00, 28.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.37 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  24.68 ( 24.68)	train_acc   0.78 (  0.80)	train_minacc   0.82 (  0.84)	train_majacc   0.77 (  0.80)	train_corr   0.00 (  0.00)	l1 6.2055 (6.2418)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.98it/s] 19%|#9        | 5/26 [00:00<00:00, 23.14it/s] 38%|###8      | 10/26 [00:00<00:00, 33.35it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.35it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.93it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.08it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.08it/s] 96%|#########6| 25/26 [00:00<00:00, 40.71it/s]100%|##########| 26/26 [00:00<00:00, 33.95it/s]
Test: [   0/  26]	Loss 0.360 (0.360)	test_acc   0.80 (  0.80)	test_minacc   0.83 (  0.83)	test_majacc   0.80 (  0.80)	Loss_d 0.360 (0.360)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.336 (0.345)	test_acc   0.81 (  0.81)	test_minacc   0.76 (  0.81)	test_majacc   0.82 (  0.81)	Loss_d 0.336 (0.345)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.76 (  0.81)	test_majacc_d   0.82 (  0.81)	test_corr_d   0.63 (  0.64)
Test: [  20/  26]	Loss 0.336 (0.332)	test_acc   0.80 (  0.82)	test_minacc   0.81 (  0.83)	test_majacc   0.80 (  0.82)	Loss_d 0.336 (0.332)	test_acc_d   0.80 (  0.82)	test_minacc_d   0.81 (  0.83)	test_majacc_d   0.80 (  0.82)	test_corr_d   0.64 (  0.65)
Test: [  26/  26]	Loss 0.358 (0.333)	test_acc   0.78 (  0.82)	test_minacc   0.82 (  0.82)	test_majacc   0.78 (  0.82)	Loss_d 0.358 (0.333)	test_acc_d   0.78 (  0.82)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.78 (  0.82)	test_corr_d   0.63 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.75it/s]
Test: [  0/  1]	Loss 1.546 (1.546)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.93 (  0.93)	Loss_d 1.546 (1.546)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.546 (1.546)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.93 (  0.93)	Loss_d 1.546 (1.546)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.21 (  0.21)
Overall Timing[ 21/  1]	epoch_time 0.0391 (0.0423)	validation_time 0.0003 (0.0007)	train_time 0.0387 (0.0415)
record: (train_acc, test_acc) (0.8234000222682953, 0.625)
last accs (train_acc, test_acc) (0.8208000252842903, 0.6140000224113464)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 19%|#9        | 5/26 [00:00<00:00, 21.28it/s] 35%|###4      | 9/26 [00:00<00:00, 26.80it/s] 50%|#####     | 13/26 [00:00<00:00, 29.34it/s] 65%|######5   | 17/26 [00:00<00:00, 31.19it/s] 81%|########  | 21/26 [00:00<00:00, 32.31it/s] 96%|#########6| 25/26 [00:00<00:00, 32.66it/s]100%|##########| 26/26 [00:00<00:00, 27.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.001 (0.001)	train_nll   0.37 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  24.69 ( 24.68)	train_acc   0.78 (  0.81)	train_minacc   0.85 (  0.84)	train_majacc   0.76 (  0.80)	train_corr   0.00 (  0.00)	l1 6.3193 (6.2910)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.50it/s] 23%|##3       | 6/26 [00:00<00:00, 21.87it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.87it/s] 42%|####2     | 11/26 [00:00<00:00, 31.16it/s] 62%|######1   | 16/26 [00:00<00:00, 36.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.55it/s] 81%|########  | 21/26 [00:00<00:00, 36.38it/s]100%|##########| 26/26 [00:00<00:00, 39.20it/s]100%|##########| 26/26 [00:00<00:00, 30.85it/s]
Test: [   0/  26]	Loss 0.366 (0.366)	test_acc   0.79 (  0.79)	test_minacc   0.83 (  0.83)	test_majacc   0.79 (  0.79)	Loss_d 0.366 (0.366)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.353 (0.354)	test_acc   0.79 (  0.80)	test_minacc   0.78 (  0.82)	test_majacc   0.79 (  0.80)	Loss_d 0.353 (0.354)	test_acc_d   0.79 (  0.80)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.79 (  0.80)	test_corr_d   0.60 (  0.62)
Test: [  20/  26]	Loss 0.332 (0.339)	test_acc   0.80 (  0.81)	test_minacc   0.83 (  0.84)	test_majacc   0.80 (  0.81)	Loss_d 0.332 (0.339)	test_acc_d   0.80 (  0.81)	test_minacc_d   0.83 (  0.84)	test_majacc_d   0.80 (  0.81)	test_corr_d   0.63 (  0.63)
Test: [  26/  26]	Loss 0.359 (0.339)	test_acc   0.79 (  0.81)	test_minacc   0.85 (  0.83)	test_majacc   0.78 (  0.81)	Loss_d 0.359 (0.339)	test_acc_d   0.79 (  0.81)	test_minacc_d   0.85 (  0.83)	test_majacc_d   0.78 (  0.81)	test_corr_d   0.61 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.36it/s]
Test: [  0/  1]	Loss 1.546 (1.546)	test_acc   0.63 (  0.63)	test_minacc   0.59 (  0.59)	test_majacc   0.92 (  0.92)	Loss_d 1.546 (1.546)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.546 (1.546)	test_acc   0.63 (  0.63)	test_minacc   0.59 (  0.59)	test_majacc   0.92 (  0.92)	Loss_d 1.546 (1.546)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.17 (  0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[ 22/  1]	epoch_time 0.0427 (0.0423)	validation_time 0.0004 (0.0007)	train_time 0.0423 (0.0415)
record: (train_acc, test_acc) (0.8139000282287597, 0.6260000467300415)
last accs (train_acc, test_acc) (0.8139000282287597, 0.6260000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.38it/s] 19%|#9        | 5/26 [00:00<00:00, 22.01it/s] 35%|###4      | 9/26 [00:00<00:00, 27.07it/s] 50%|#####     | 13/26 [00:00<00:00, 27.05it/s] 65%|######5   | 17/26 [00:00<00:00, 29.49it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.53it/s] 88%|########8 | 23/26 [00:00<00:00, 29.65it/s]100%|##########| 26/26 [00:00<00:00, 26.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.144883632659912
set z to 6.083434796333313
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 387 tensor(-0.0081, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 252 tensor(-0.0121, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 215 tensor(-0.0060, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 207 tensor(-0.0023, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.011 (0.015)	train_nll   0.35 (  0.37)	train_penalty   0.01 (  0.02)	weight_norm  25.05 ( 24.77)	train_acc   0.86 (  0.80)	train_minacc   0.58 (  0.71)	train_majacc   0.91 (  0.82)	train_corr   0.00 (  0.00)	l1 7.3940 (6.8446)	zero_count 0.0000 (26.4810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.05it/s] 23%|##3       | 6/26 [00:00<00:00, 31.78it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.78it/s] 42%|####2     | 11/26 [00:00<00:00, 38.29it/s] 62%|######1   | 16/26 [00:00<00:00, 41.35it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.35it/s] 81%|########  | 21/26 [00:00<00:00, 39.70it/s]100%|##########| 26/26 [00:00<00:00, 42.46it/s]100%|##########| 26/26 [00:00<00:00, 35.83it/s]
Test: [   0/  26]	Loss 0.514 (0.514)	test_acc   0.80 (  0.80)	test_minacc   0.41 (  0.41)	test_majacc   0.87 (  0.87)	Loss_d 0.514 (0.514)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.553 (0.533)	test_acc   0.76 (  0.80)	test_minacc   0.46 (  0.45)	test_majacc   0.82 (  0.87)	Loss_d 0.553 (0.533)	test_acc_d   0.76 (  0.80)	test_minacc_d   0.46 (  0.45)	test_majacc_d   0.82 (  0.87)	test_corr_d   0.77 (  0.75)
Test: [  20/  26]	Loss 0.520 (0.519)	test_acc   0.78 (  0.80)	test_minacc   0.37 (  0.43)	test_majacc   0.86 (  0.86)	Loss_d 0.520 (0.519)	test_acc_d   0.78 (  0.80)	test_minacc_d   0.37 (  0.43)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.76 (  0.75)
Test: [  26/  26]	Loss 0.479 (0.516)	test_acc   0.77 (  0.79)	test_minacc   0.45 (  0.43)	test_majacc   0.82 (  0.86)	Loss_d 0.479 (0.516)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.45 (  0.43)	test_majacc_d   0.82 (  0.86)	test_corr_d   0.70 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.23it/s]
Test: [  0/  1]	Loss 2.224 (2.224)	test_acc   0.42 (  0.42)	test_minacc   0.38 (  0.38)	test_majacc   0.77 (  0.77)	Loss_d 2.224 (2.224)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 2.224 (2.224)	test_acc   0.42 (  0.42)	test_minacc   0.38 (  0.38)	test_majacc   0.77 (  0.77)	Loss_d 2.224 (2.224)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.45 (  0.45)
Overall Timing[ 23/  1]	epoch_time 0.0456 (0.0424)	validation_time 0.0004 (0.0007)	train_time 0.0452 (0.0417)
record: (train_acc, test_acc) (0.8139000282287597, 0.6260000467300415)
last accs (train_acc, test_acc) (0.7946000250577927, 0.4180000126361847)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.31it/s] 12%|#1        | 3/26 [00:00<00:02, 10.42it/s] 27%|##6       | 7/26 [00:00<00:00, 19.51it/s] 42%|####2     | 11/26 [00:00<00:00, 25.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.99it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.82it/s] 88%|########8 | 23/26 [00:00<00:00, 31.77it/s]100%|##########| 26/26 [00:01<00:00, 25.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 202 tensor(-0.0013, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 197 tensor(-0.0026, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 194 tensor(-0.0018, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 194 tensor(-0.0013, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 193 tensor(-0.0008, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 195 tensor(-0.0004, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.002 (0.002)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  25.45 ( 25.32)	train_acc   0.71 (  0.75)	train_minacc   0.85 (  0.73)	train_majacc   0.69 (  0.76)	train_corr   0.00 (  0.00)	l1 6.2944 (6.5075)	zero_count 0.0000 (73.2810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.13it/s] 27%|##6       | 7/26 [00:00<00:00, 36.31it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.31it/s] 50%|#####     | 13/26 [00:00<00:00, 40.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.58it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.58it/s] 96%|#########6| 25/26 [00:00<00:00, 46.77it/s]100%|##########| 26/26 [00:00<00:00, 40.33it/s]
Test: [   0/  26]	Loss 0.555 (0.555)	test_acc   0.64 (  0.64)	test_minacc   0.76 (  0.76)	test_majacc   0.62 (  0.62)	Loss_d 0.555 (0.555)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.526 (0.544)	test_acc   0.65 (  0.64)	test_minacc   0.81 (  0.81)	test_majacc   0.62 (  0.61)	Loss_d 0.526 (0.544)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.55 (  0.51)
Test: [  20/  26]	Loss 0.544 (0.540)	test_acc   0.61 (  0.64)	test_minacc   0.75 (  0.81)	test_majacc   0.58 (  0.61)	Loss_d 0.544 (0.540)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.75 (  0.81)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.50 (  0.51)
Test: [  26/  26]	Loss 0.526 (0.539)	test_acc   0.65 (  0.64)	test_minacc   0.85 (  0.81)	test_majacc   0.62 (  0.61)	Loss_d 0.526 (0.539)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.85 (  0.81)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.51 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.91it/s]
Test: [  0/  1]	Loss 1.635 (1.635)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.50 (  0.50)	Loss_d 1.635 (1.635)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.635 (1.635)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.50 (  0.50)	Loss_d 1.635 (1.635)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.08 (  0.08)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/111/checkpoints/model_best.pth
Overall Timing[ 24/  1]	epoch_time 0.0407 (0.0424)	validation_time 0.0003 (0.0006)	train_time 0.0404 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.82it/s] 19%|#9        | 5/26 [00:00<00:00, 24.85it/s] 35%|###4      | 9/26 [00:00<00:00, 28.86it/s] 50%|#####     | 13/26 [00:00<00:00, 30.30it/s] 65%|######5   | 17/26 [00:00<00:00, 31.06it/s] 81%|########  | 21/26 [00:00<00:00, 31.06it/s] 96%|#########6| 25/26 [00:00<00:00, 32.33it/s]100%|##########| 26/26 [00:00<00:00, 28.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 200 tensor(-9.1436e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 207 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 204 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 306 tensor(-5.8862e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 355 tensor(2.7966e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 364 tensor(0.0001, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 364 tensor(2.8610e-07, device='cuda:0')
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  25.50 ( 25.49)	train_acc   0.51 (  0.54)	train_minacc   0.64 (  0.81)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.1236 (6.1168)	zero_count 0.0000 (62.3610)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.30it/s] 23%|##3       | 6/26 [00:00<00:00, 26.85it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.85it/s] 42%|####2     | 11/26 [00:00<00:00, 35.89it/s] 65%|######5   | 17/26 [00:00<00:00, 39.06it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.06it/s] 88%|########8 | 23/26 [00:00<00:00, 43.64it/s]100%|##########| 26/26 [00:00<00:00, 35.01it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.50 (  0.50)	test_minacc   0.59 (  0.59)	test_majacc   0.48 (  0.48)	Loss_d 0.570 (0.570)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.567 (0.567)	test_acc   0.51 (  0.50)	test_minacc   0.68 (  0.59)	test_majacc   0.47 (  0.48)	Loss_d 0.567 (0.567)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.68 (  0.59)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.50 (  0.47)
Test: [  20/  26]	Loss 0.577 (0.568)	test_acc   0.47 (  0.49)	test_minacc   0.54 (  0.58)	test_majacc   0.46 (  0.47)	Loss_d 0.577 (0.568)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.54 (  0.58)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.44 (  0.47)
Test: [  26/  26]	Loss 0.567 (0.568)	test_acc   0.51 (  0.49)	test_minacc   0.64 (  0.57)	test_majacc   0.49 (  0.48)	Loss_d 0.567 (0.568)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.49 (  0.48)	test_corr_d   0.45 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.42it/s]
Test: [  0/  1]	Loss 1.444 (1.444)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.444 (1.444)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 1.444 (1.444)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.444 (1.444)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.06 (  0.06)
Overall Timing[ 25/  1]	epoch_time 0.0415 (0.0423)	validation_time 0.0003 (0.0006)	train_time 0.0411 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.49200000807642935, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.67it/s]  8%|7         | 2/26 [00:00<00:05,  4.04it/s] 19%|#9        | 5/26 [00:00<00:01, 10.56it/s] 38%|###8      | 10/26 [00:00<00:00, 18.73it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.91it/s] 65%|######5   | 17/26 [00:00<00:00, 25.15it/s] 81%|########  | 21/26 [00:01<00:00, 28.41it/s] 96%|#########6| 25/26 [00:01<00:00, 31.11it/s]100%|##########| 26/26 [00:01<00:00, 20.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 367 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 364 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 364 tensor(3.4385e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.50 ( 25.50)	train_acc   0.51 (  0.49)	train_minacc   0.58 (  0.53)	train_majacc   0.50 (  0.49)	train_corr   0.00 (  0.00)	l1 6.0552 (6.0928)	zero_count 0.0000 (22.8150)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.29it/s] 23%|##3       | 6/26 [00:00<00:00, 24.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.13it/s] 42%|####2     | 11/26 [00:00<00:00, 32.76it/s] 62%|######1   | 16/26 [00:00<00:00, 37.74it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.74it/s] 81%|########  | 21/26 [00:00<00:00, 37.15it/s]100%|##########| 26/26 [00:00<00:00, 32.59it/s]
Test: [   0/  26]	Loss 0.568 (0.568)	test_acc   0.50 (  0.50)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.568 (0.568)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.570 (0.570)	test_acc   0.50 (  0.49)	test_minacc   0.65 (  0.56)	test_majacc   0.47 (  0.48)	Loss_d 0.570 (0.570)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.65 (  0.56)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.52 (  0.49)
Test: [  20/  26]	Loss 0.580 (0.571)	test_acc   0.47 (  0.49)	test_minacc   0.49 (  0.55)	test_majacc   0.47 (  0.48)	Loss_d 0.580 (0.571)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.49 (  0.55)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.47 (  0.49)
Test: [  26/  26]	Loss 0.570 (0.571)	test_acc   0.51 (  0.49)	test_minacc   0.58 (  0.54)	test_majacc   0.50 (  0.48)	Loss_d 0.570 (0.571)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.50 (  0.48)	test_corr_d   0.47 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.67it/s]
Test: [  0/  1]	Loss 1.459 (1.459)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.459 (1.459)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.459 (1.459)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.459 (1.459)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 26/  1]	epoch_time 0.0432 (0.0424)	validation_time 0.0003 (0.0006)	train_time 0.0428 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.49030000913143157, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.50it/s] 19%|#9        | 5/26 [00:00<00:01, 20.35it/s] 35%|###4      | 9/26 [00:00<00:00, 25.63it/s] 50%|#####     | 13/26 [00:00<00:00, 29.25it/s] 65%|######5   | 17/26 [00:00<00:00, 31.57it/s] 81%|########  | 21/26 [00:00<00:00, 32.90it/s] 96%|#########6| 25/26 [00:00<00:00, 33.06it/s]100%|##########| 26/26 [00:00<00:00, 27.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.50 ( 25.50)	train_acc   0.50 (  0.49)	train_minacc   0.58 (  0.54)	train_majacc   0.49 (  0.48)	train_corr   0.00 (  0.00)	l1 6.0587 (6.0600)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 19%|#9        | 5/26 [00:00<00:00, 22.40it/s] 38%|###8      | 10/26 [00:00<00:00, 28.89it/s]                                                38%|###8      | 10/26 [00:00<00:00, 28.89it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.02it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.86it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.86it/s] 96%|#########6| 25/26 [00:00<00:00, 40.07it/s]100%|##########| 26/26 [00:00<00:00, 32.47it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.50 (  0.50)	test_minacc   0.57 (  0.57)	test_majacc   0.48 (  0.48)	Loss_d 0.570 (0.570)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.570 (0.571)	test_acc   0.50 (  0.49)	test_minacc   0.65 (  0.57)	test_majacc   0.47 (  0.47)	Loss_d 0.570 (0.571)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.65 (  0.57)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.581 (0.572)	test_acc   0.47 (  0.48)	test_minacc   0.53 (  0.56)	test_majacc   0.46 (  0.47)	Loss_d 0.581 (0.572)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.53 (  0.56)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.46 (  0.49)
Test: [  26/  26]	Loss 0.573 (0.572)	test_acc   0.50 (  0.49)	test_minacc   0.58 (  0.55)	test_majacc   0.49 (  0.47)	Loss_d 0.573 (0.572)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.49 (  0.47)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.55it/s]
Test: [  0/  1]	Loss 1.465 (1.465)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.465 (1.465)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.465 (1.465)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.465 (1.465)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 27/  1]	epoch_time 0.0391 (0.0422)	validation_time 0.0004 (0.0006)	train_time 0.0387 (0.0415)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.48650001031160356, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 19%|#9        | 5/26 [00:00<00:01, 20.63it/s] 35%|###4      | 9/26 [00:00<00:00, 26.10it/s] 50%|#####     | 13/26 [00:00<00:00, 28.42it/s] 65%|######5   | 17/26 [00:00<00:00, 30.76it/s] 81%|########  | 21/26 [00:00<00:00, 32.51it/s] 96%|#########6| 25/26 [00:00<00:00, 33.46it/s]100%|##########| 26/26 [00:00<00:00, 27.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.50 ( 25.50)	train_acc   0.49 (  0.48)	train_minacc   0.58 (  0.55)	train_majacc   0.47 (  0.47)	train_corr   0.00 (  0.00)	l1 6.0653 (6.0679)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.62it/s] 27%|##6       | 7/26 [00:00<00:00, 30.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.96it/s] 46%|####6     | 12/26 [00:00<00:00, 38.52it/s] 69%|######9   | 18/26 [00:00<00:00, 42.94it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.94it/s] 88%|########8 | 23/26 [00:00<00:00, 44.44it/s]100%|##########| 26/26 [00:00<00:00, 39.17it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.49 (  0.49)	test_minacc   0.59 (  0.59)	test_majacc   0.48 (  0.48)	Loss_d 0.570 (0.570)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.569 (0.570)	test_acc   0.50 (  0.49)	test_minacc   0.68 (  0.58)	test_majacc   0.47 (  0.47)	Loss_d 0.569 (0.570)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.68 (  0.58)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.51 (  0.48)
Test: [  20/  26]	Loss 0.581 (0.571)	test_acc   0.46 (  0.48)	test_minacc   0.54 (  0.57)	test_majacc   0.45 (  0.47)	Loss_d 0.581 (0.571)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.54 (  0.57)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.46 (  0.48)
Test: [  26/  26]	Loss 0.574 (0.572)	test_acc   0.49 (  0.48)	test_minacc   0.58 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.574 (0.572)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.58 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.45 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.49it/s]
Test: [  0/  1]	Loss 1.467 (1.467)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.467 (1.467)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.467 (1.467)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.467 (1.467)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 28/  1]	epoch_time 0.0392 (0.0421)	validation_time 0.0004 (0.0006)	train_time 0.0388 (0.0414)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.48270001003146173, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 18.42it/s] 27%|##6       | 7/26 [00:00<00:00, 27.29it/s] 42%|####2     | 11/26 [00:00<00:00, 31.72it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.75it/s] 88%|########8 | 23/26 [00:00<00:00, 35.07it/s]100%|##########| 26/26 [00:00<00:00, 30.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.50 ( 25.50)	train_acc   0.49 (  0.48)	train_minacc   0.61 (  0.56)	train_majacc   0.47 (  0.47)	train_corr   0.00 (  0.00)	l1 6.0729 (6.0742)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.88it/s] 12%|#1        | 3/26 [00:00<00:01, 12.27it/s] 35%|###4      | 9/26 [00:00<00:00, 30.54it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.03it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.03it/s] 96%|#########6| 25/26 [00:00<00:00, 42.74it/s]100%|##########| 26/26 [00:00<00:00, 32.71it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.49 (  0.49)	test_minacc   0.59 (  0.59)	test_majacc   0.47 (  0.47)	Loss_d 0.570 (0.570)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.569 (0.570)	test_acc   0.49 (  0.48)	test_minacc   0.68 (  0.59)	test_majacc   0.46 (  0.46)	Loss_d 0.569 (0.570)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.68 (  0.59)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.51 (  0.48)
Test: [  20/  26]	Loss 0.580 (0.571)	test_acc   0.46 (  0.48)	test_minacc   0.54 (  0.58)	test_majacc   0.44 (  0.46)	Loss_d 0.580 (0.571)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.54 (  0.58)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.45 (  0.48)
Test: [  26/  26]	Loss 0.575 (0.572)	test_acc   0.49 (  0.48)	test_minacc   0.61 (  0.57)	test_majacc   0.47 (  0.46)	Loss_d 0.575 (0.572)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.61 (  0.57)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.45 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.08it/s]
Test: [  0/  1]	Loss 1.470 (1.470)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.470 (1.470)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.470 (1.470)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.470 (1.470)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 29/  1]	epoch_time 0.0374 (0.0420)	validation_time 0.0004 (0.0006)	train_time 0.0370 (0.0413)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.4779000091552734, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.79it/s] 15%|#5        | 4/26 [00:00<00:01, 12.84it/s] 27%|##6       | 7/26 [00:00<00:01, 18.00it/s] 42%|####2     | 11/26 [00:00<00:00, 23.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.34it/s] 65%|######5   | 17/26 [00:00<00:00, 25.17it/s] 81%|########  | 21/26 [00:00<00:00, 28.48it/s] 96%|#########6| 25/26 [00:01<00:00, 29.92it/s]100%|##########| 26/26 [00:01<00:00, 23.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 418 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.50 ( 25.50)	train_acc   0.49 (  0.48)	train_minacc   0.61 (  0.56)	train_majacc   0.47 (  0.47)	train_corr   0.00 (  0.00)	l1 6.0554 (6.0757)	zero_count 0.0000 (3.6270)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.51it/s] 12%|#1        | 3/26 [00:00<00:01, 14.62it/s] 31%|###       | 8/26 [00:00<00:00, 29.30it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.30it/s] 50%|#####     | 13/26 [00:00<00:00, 36.08it/s] 69%|######9   | 18/26 [00:00<00:00, 36.35it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.35it/s] 88%|########8 | 23/26 [00:00<00:00, 39.52it/s]100%|##########| 26/26 [00:00<00:00, 33.11it/s]
Test: [   0/  26]	Loss 0.569 (0.569)	test_acc   0.49 (  0.49)	test_minacc   0.59 (  0.59)	test_majacc   0.48 (  0.48)	Loss_d 0.569 (0.569)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.567 (0.569)	test_acc   0.50 (  0.48)	test_minacc   0.68 (  0.59)	test_majacc   0.46 (  0.47)	Loss_d 0.567 (0.569)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.68 (  0.59)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.578 (0.569)	test_acc   0.46 (  0.48)	test_minacc   0.54 (  0.58)	test_majacc   0.44 (  0.46)	Loss_d 0.578 (0.569)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.54 (  0.58)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.46 (  0.49)
Test: [  26/  26]	Loss 0.573 (0.570)	test_acc   0.49 (  0.48)	test_minacc   0.64 (  0.57)	test_majacc   0.47 (  0.46)	Loss_d 0.573 (0.570)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.45 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.89it/s]
Test: [  0/  1]	Loss 1.481 (1.481)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.481 (1.481)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.481 (1.481)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.481 (1.481)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 30/  1]	epoch_time 0.0410 (0.0419)	validation_time 0.0004 (0.0006)	train_time 0.0406 (0.0413)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.47880000972747805, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.09it/s] 19%|#9        | 5/26 [00:00<00:01, 18.25it/s] 35%|###4      | 9/26 [00:00<00:00, 23.87it/s] 50%|#####     | 13/26 [00:00<00:00, 27.67it/s] 65%|######5   | 17/26 [00:00<00:00, 29.30it/s] 81%|########  | 21/26 [00:00<00:00, 30.92it/s] 96%|#########6| 25/26 [00:00<00:00, 32.24it/s]100%|##########| 26/26 [00:00<00:00, 26.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.50 (  0.48)	train_minacc   0.67 (  0.57)	train_majacc   0.47 (  0.46)	train_corr   0.00 (  0.00)	l1 6.0678 (6.0649)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 19%|#9        | 5/26 [00:00<00:00, 21.92it/s] 38%|###8      | 10/26 [00:00<00:00, 32.30it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.30it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.68it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.58it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.58it/s] 96%|#########6| 25/26 [00:00<00:00, 40.23it/s]100%|##########| 26/26 [00:00<00:00, 32.82it/s]
Test: [   0/  26]	Loss 0.571 (0.571)	test_acc   0.48 (  0.48)	test_minacc   0.59 (  0.59)	test_majacc   0.47 (  0.47)	Loss_d 0.571 (0.571)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.568 (0.570)	test_acc   0.49 (  0.48)	test_minacc   0.68 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 0.568 (0.570)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.68 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.51 (  0.48)
Test: [  20/  26]	Loss 0.579 (0.571)	test_acc   0.46 (  0.47)	test_minacc   0.56 (  0.58)	test_majacc   0.44 (  0.46)	Loss_d 0.579 (0.571)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.45 (  0.48)
Test: [  26/  26]	Loss 0.575 (0.572)	test_acc   0.50 (  0.48)	test_minacc   0.67 (  0.57)	test_majacc   0.47 (  0.46)	Loss_d 0.575 (0.572)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.45 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.46it/s]
Test: [  0/  1]	Loss 1.478 (1.478)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.478 (1.478)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.478 (1.478)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.478 (1.478)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 31/  1]	epoch_time 0.0437 (0.0420)	validation_time 0.0005 (0.0006)	train_time 0.0432 (0.0413)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.4759000089466572, 0.5090000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.67it/s] 19%|#9        | 5/26 [00:00<00:01, 19.54it/s] 35%|###4      | 9/26 [00:00<00:00, 25.69it/s] 50%|#####     | 13/26 [00:00<00:00, 29.07it/s] 65%|######5   | 17/26 [00:00<00:00, 29.93it/s] 81%|########  | 21/26 [00:00<00:00, 28.82it/s] 96%|#########6| 25/26 [00:00<00:00, 30.66it/s]100%|##########| 26/26 [00:00<00:00, 26.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 409 tensor(-7.0058e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.49 (  0.48)	train_minacc   0.64 (  0.57)	train_majacc   0.47 (  0.46)	train_corr   0.00 (  0.00)	l1 6.0652 (6.0747)	zero_count 0.0000 (3.9780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.24it/s] 23%|##3       | 6/26 [00:00<00:00, 21.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.18it/s] 42%|####2     | 11/26 [00:00<00:00, 30.30it/s] 62%|######1   | 16/26 [00:00<00:00, 35.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.68it/s] 81%|########  | 21/26 [00:00<00:00, 36.07it/s]100%|##########| 26/26 [00:00<00:00, 39.74it/s]100%|##########| 26/26 [00:00<00:00, 30.69it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.48 (  0.48)	test_minacc   0.59 (  0.59)	test_majacc   0.46 (  0.46)	Loss_d 0.570 (0.570)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.568 (0.570)	test_acc   0.49 (  0.48)	test_minacc   0.68 (  0.59)	test_majacc   0.46 (  0.46)	Loss_d 0.568 (0.570)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.68 (  0.59)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.51 (  0.48)
Test: [  20/  26]	Loss 0.579 (0.571)	test_acc   0.46 (  0.47)	test_minacc   0.56 (  0.58)	test_majacc   0.44 (  0.46)	Loss_d 0.579 (0.571)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.45 (  0.48)
Test: [  26/  26]	Loss 0.575 (0.571)	test_acc   0.50 (  0.48)	test_minacc   0.67 (  0.57)	test_majacc   0.47 (  0.46)	Loss_d 0.575 (0.571)	test_acc_d   0.50 (  0.48)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.45 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.17it/s]
Test: [  0/  1]	Loss 1.482 (1.482)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.482 (1.482)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.482 (1.482)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.482 (1.482)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 32/  1]	epoch_time 0.0421 (0.0420)	validation_time 0.0003 (0.0006)	train_time 0.0418 (0.0413)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.4755000066459179, 0.5080000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.41it/s] 23%|##3       | 6/26 [00:00<00:00, 24.42it/s] 38%|###8      | 10/26 [00:00<00:00, 29.25it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.08it/s] 69%|######9   | 18/26 [00:00<00:00, 32.68it/s] 85%|########4 | 22/26 [00:00<00:00, 32.96it/s]100%|##########| 26/26 [00:00<00:00, 33.88it/s]100%|##########| 26/26 [00:00<00:00, 29.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.49 (  0.47)	train_minacc   0.67 (  0.58)	train_majacc   0.46 (  0.46)	train_corr   0.00 (  0.00)	l1 6.0716 (6.0696)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.23it/s] 27%|##6       | 7/26 [00:00<00:00, 33.25it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.25it/s] 46%|####6     | 12/26 [00:00<00:00, 38.61it/s] 65%|######5   | 17/26 [00:00<00:00, 40.63it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.63it/s] 85%|########4 | 22/26 [00:00<00:00, 39.77it/s]100%|##########| 26/26 [00:00<00:00, 37.08it/s]
Test: [   0/  26]	Loss 0.571 (0.571)	test_acc   0.47 (  0.47)	test_minacc   0.60 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 0.571 (0.571)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.569 (0.571)	test_acc   0.49 (  0.48)	test_minacc   0.68 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 0.569 (0.571)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.68 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.580 (0.572)	test_acc   0.46 (  0.47)	test_minacc   0.58 (  0.59)	test_majacc   0.44 (  0.45)	Loss_d 0.580 (0.572)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.45 (  0.47)
Test: [  26/  26]	Loss 0.576 (0.572)	test_acc   0.49 (  0.47)	test_minacc   0.67 (  0.58)	test_majacc   0.46 (  0.45)	Loss_d 0.576 (0.572)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.44 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.90it/s]
Test: [  0/  1]	Loss 1.479 (1.479)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.479 (1.479)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.479 (1.479)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.479 (1.479)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 33/  1]	epoch_time 0.0411 (0.0420)	validation_time 0.0004 (0.0006)	train_time 0.0407 (0.0413)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.471600006043911, 0.5160000324249268)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.28it/s] 23%|##3       | 6/26 [00:00<00:00, 27.72it/s] 38%|###8      | 10/26 [00:00<00:00, 31.30it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.07it/s] 69%|######9   | 18/26 [00:00<00:00, 31.46it/s] 85%|########4 | 22/26 [00:00<00:00, 32.75it/s]100%|##########| 26/26 [00:00<00:00, 33.49it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 404 tensor(-4.5700e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.48 (  0.47)	train_minacc   0.64 (  0.58)	train_majacc   0.46 (  0.45)	train_corr   0.00 (  0.00)	l1 6.0675 (6.0749)	zero_count 0.0000 (4.1730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.25it/s]  8%|7         | 2/26 [00:00<00:03,  6.10it/s] 27%|##6       | 7/26 [00:00<00:00, 20.47it/s]                                               27%|##6       | 7/26 [00:00<00:00, 20.47it/s] 46%|####6     | 12/26 [00:00<00:00, 29.40it/s] 65%|######5   | 17/26 [00:00<00:00, 34.90it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.90it/s] 85%|########4 | 22/26 [00:00<00:00, 37.10it/s]100%|##########| 26/26 [00:00<00:00, 29.49it/s]
Test: [   0/  26]	Loss 0.571 (0.571)	test_acc   0.47 (  0.47)	test_minacc   0.60 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 0.571 (0.571)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.569 (0.571)	test_acc   0.49 (  0.48)	test_minacc   0.68 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 0.569 (0.571)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.68 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.50 (  0.47)
Test: [  20/  26]	Loss 0.579 (0.572)	test_acc   0.45 (  0.47)	test_minacc   0.58 (  0.59)	test_majacc   0.43 (  0.45)	Loss_d 0.579 (0.572)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.43 (  0.45)	test_corr_d   0.45 (  0.47)
Test: [  26/  26]	Loss 0.576 (0.572)	test_acc   0.49 (  0.47)	test_minacc   0.67 (  0.58)	test_majacc   0.46 (  0.45)	Loss_d 0.576 (0.572)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.44 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.23it/s]
Test: [  0/  1]	Loss 1.480 (1.480)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.480 (1.480)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.480 (1.480)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.480 (1.480)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 34/  1]	epoch_time 0.0443 (0.0420)	validation_time 0.0003 (0.0006)	train_time 0.0439 (0.0414)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.4709000060856342, 0.5160000324249268)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 15%|#5        | 4/26 [00:00<00:01, 14.79it/s] 31%|###       | 8/26 [00:00<00:00, 22.66it/s] 46%|####6     | 12/26 [00:00<00:00, 26.78it/s] 62%|######1   | 16/26 [00:00<00:00, 29.90it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.03it/s] 92%|#########2| 24/26 [00:00<00:00, 31.43it/s]100%|##########| 26/26 [00:00<00:00, 26.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 411 tensor(-3.1380e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.49 (  0.47)	train_minacc   0.64 (  0.58)	train_majacc   0.47 (  0.45)	train_corr   0.00 (  0.00)	l1 6.0757 (6.0716)	zero_count 0.0000 (3.9000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:11,  2.27it/s] 23%|##3       | 6/26 [00:00<00:01, 13.70it/s]                                               23%|##3       | 6/26 [00:00<00:01, 13.70it/s] 46%|####6     | 12/26 [00:00<00:00, 24.36it/s] 65%|######5   | 17/26 [00:00<00:00, 30.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 30.10it/s] 85%|########4 | 22/26 [00:00<00:00, 34.76it/s]100%|##########| 26/26 [00:01<00:00, 25.12it/s]
Test: [   0/  26]	Loss 0.571 (0.571)	test_acc   0.47 (  0.47)	test_minacc   0.59 (  0.59)	test_majacc   0.45 (  0.45)	Loss_d 0.571 (0.571)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.570 (0.572)	test_acc   0.49 (  0.48)	test_minacc   0.68 (  0.60)	test_majacc   0.45 (  0.46)	Loss_d 0.570 (0.572)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.68 (  0.60)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.580 (0.573)	test_acc   0.45 (  0.47)	test_minacc   0.56 (  0.58)	test_majacc   0.43 (  0.45)	Loss_d 0.580 (0.573)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.43 (  0.45)	test_corr_d   0.45 (  0.47)
Test: [  26/  26]	Loss 0.577 (0.573)	test_acc   0.49 (  0.47)	test_minacc   0.64 (  0.58)	test_majacc   0.47 (  0.45)	Loss_d 0.577 (0.573)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.64 (  0.58)	test_majacc_d   0.47 (  0.45)	test_corr_d   0.44 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.52it/s]
Test: [  0/  1]	Loss 1.488 (1.488)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.488 (1.488)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.488 (1.488)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.488 (1.488)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 35/  1]	epoch_time 0.0450 (0.0421)	validation_time 0.0004 (0.0006)	train_time 0.0446 (0.0415)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.47110000723600387, 0.51500004529953)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.88it/s] 19%|#9        | 5/26 [00:00<00:01, 17.24it/s] 35%|###4      | 9/26 [00:00<00:00, 22.62it/s] 50%|#####     | 13/26 [00:00<00:00, 26.76it/s] 62%|######1   | 16/26 [00:00<00:00, 27.67it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.65it/s] 92%|#########2| 24/26 [00:00<00:00, 29.90it/s]100%|##########| 26/26 [00:01<00:00, 24.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 412 tensor(-1.9804e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.48 (  0.47)	train_minacc   0.64 (  0.58)	train_majacc   0.46 (  0.45)	train_corr   0.00 (  0.00)	l1 6.0752 (6.0715)	zero_count 0.0000 (3.8610)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.76it/s] 23%|##3       | 6/26 [00:00<00:00, 31.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.50it/s] 42%|####2     | 11/26 [00:00<00:00, 37.99it/s] 62%|######1   | 16/26 [00:00<00:00, 38.34it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.34it/s] 81%|########  | 21/26 [00:00<00:00, 40.32it/s]100%|##########| 26/26 [00:00<00:00, 42.08it/s]100%|##########| 26/26 [00:00<00:00, 35.24it/s]
Test: [   0/  26]	Loss 0.572 (0.572)	test_acc   0.47 (  0.47)	test_minacc   0.60 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 0.572 (0.572)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.571 (0.573)	test_acc   0.49 (  0.47)	test_minacc   0.70 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 0.571 (0.573)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.70 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.50 (  0.47)
Test: [  20/  26]	Loss 0.581 (0.573)	test_acc   0.45 (  0.47)	test_minacc   0.58 (  0.59)	test_majacc   0.43 (  0.45)	Loss_d 0.581 (0.573)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.43 (  0.45)	test_corr_d   0.45 (  0.47)
Test: [  26/  26]	Loss 0.578 (0.574)	test_acc   0.48 (  0.47)	test_minacc   0.64 (  0.58)	test_majacc   0.46 (  0.45)	Loss_d 0.578 (0.574)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.64 (  0.58)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.35it/s]
Test: [  0/  1]	Loss 1.484 (1.484)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.484 (1.484)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.484 (1.484)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.484 (1.484)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 36/  1]	epoch_time 0.0403 (0.0421)	validation_time 0.0004 (0.0006)	train_time 0.0399 (0.0414)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.4682000046670437, 0.5180000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.26it/s] 15%|#5        | 4/26 [00:00<00:01, 14.45it/s] 31%|###       | 8/26 [00:00<00:00, 22.22it/s] 46%|####6     | 12/26 [00:00<00:00, 26.54it/s] 62%|######1   | 16/26 [00:00<00:00, 28.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.54it/s] 88%|########8 | 23/26 [00:00<00:00, 29.08it/s]100%|##########| 26/26 [00:01<00:00, 25.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 411 tensor(-7.4986e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.48 (  0.47)	train_minacc   0.64 (  0.58)	train_majacc   0.46 (  0.45)	train_corr   0.00 (  0.00)	l1 6.0786 (6.0728)	zero_count 0.0000 (3.9000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.21it/s] 19%|#9        | 5/26 [00:00<00:00, 21.82it/s]                                               19%|#9        | 5/26 [00:00<00:00, 21.82it/s] 42%|####2     | 11/26 [00:00<00:00, 34.55it/s] 62%|######1   | 16/26 [00:00<00:00, 36.05it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.05it/s] 81%|########  | 21/26 [00:00<00:00, 39.28it/s]100%|##########| 26/26 [00:00<00:00, 33.53it/s]
Test: [   0/  26]	Loss 0.572 (0.572)	test_acc   0.47 (  0.47)	test_minacc   0.60 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 0.572 (0.572)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.571 (0.574)	test_acc   0.49 (  0.47)	test_minacc   0.70 (  0.59)	test_majacc   0.45 (  0.45)	Loss_d 0.571 (0.574)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.50 (  0.47)
Test: [  20/  26]	Loss 0.581 (0.574)	test_acc   0.45 (  0.47)	test_minacc   0.58 (  0.59)	test_majacc   0.43 (  0.44)	Loss_d 0.581 (0.574)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.45 (  0.47)
Test: [  26/  26]	Loss 0.579 (0.575)	test_acc   0.48 (  0.47)	test_minacc   0.64 (  0.58)	test_majacc   0.46 (  0.45)	Loss_d 0.579 (0.575)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.64 (  0.58)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.59it/s]
Test: [  0/  1]	Loss 1.491 (1.491)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.491 (1.491)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.491 (1.491)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.491 (1.491)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 37/  1]	epoch_time 0.0455 (0.0422)	validation_time 0.0004 (0.0005)	train_time 0.0450 (0.0415)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.46620000478625295, 0.5190000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.92it/s] 23%|##3       | 6/26 [00:00<00:00, 26.12it/s] 38%|###8      | 10/26 [00:00<00:00, 29.17it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.58it/s] 69%|######9   | 18/26 [00:00<00:00, 32.81it/s] 85%|########4 | 22/26 [00:00<00:00, 33.36it/s]100%|##########| 26/26 [00:00<00:00, 31.73it/s]100%|##########| 26/26 [00:00<00:00, 28.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 403 tensor(-9.9463e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.48 (  0.46)	train_minacc   0.64 (  0.59)	train_majacc   0.46 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0811 (6.0710)	zero_count 0.0000 (4.2120)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.32it/s] 15%|#5        | 4/26 [00:00<00:01, 12.77it/s] 38%|###8      | 10/26 [00:00<00:00, 26.56it/s]                                                38%|###8      | 10/26 [00:00<00:00, 26.56it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.00it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.28it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 34.28it/s] 96%|#########6| 25/26 [00:00<00:00, 37.76it/s]100%|##########| 26/26 [00:00<00:00, 28.89it/s]
Test: [   0/  26]	Loss 0.573 (0.573)	test_acc   0.47 (  0.47)	test_minacc   0.57 (  0.57)	test_majacc   0.45 (  0.45)	Loss_d 0.573 (0.573)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.573 (0.575)	test_acc   0.49 (  0.47)	test_minacc   0.70 (  0.59)	test_majacc   0.45 (  0.45)	Loss_d 0.573 (0.575)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.49 (  0.47)
Test: [  20/  26]	Loss 0.583 (0.575)	test_acc   0.45 (  0.47)	test_minacc   0.54 (  0.58)	test_majacc   0.43 (  0.44)	Loss_d 0.583 (0.575)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.54 (  0.58)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.44 (  0.47)
Test: [  26/  26]	Loss 0.580 (0.576)	test_acc   0.48 (  0.47)	test_minacc   0.64 (  0.58)	test_majacc   0.46 (  0.45)	Loss_d 0.580 (0.576)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.64 (  0.58)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.05it/s]
Test: [  0/  1]	Loss 1.490 (1.490)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.490 (1.490)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.490 (1.490)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.490 (1.490)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 38/  1]	epoch_time 0.0427 (0.0422)	validation_time 0.0004 (0.0005)	train_time 0.0423 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.46620000594854355, 0.5139999985694885)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.45it/s] 19%|#9        | 5/26 [00:00<00:01, 17.21it/s] 35%|###4      | 9/26 [00:00<00:00, 23.82it/s] 50%|#####     | 13/26 [00:00<00:00, 27.47it/s] 65%|######5   | 17/26 [00:00<00:00, 29.92it/s] 81%|########  | 21/26 [00:00<00:00, 31.33it/s] 96%|#########6| 25/26 [00:00<00:00, 29.99it/s]100%|##########| 26/26 [00:01<00:00, 25.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 408 tensor(-5.4061e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.48 (  0.46)	train_minacc   0.64 (  0.58)	train_majacc   0.46 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0841 (6.0710)	zero_count 0.0000 (4.0170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.24it/s] 23%|##3       | 6/26 [00:00<00:00, 23.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.74it/s] 42%|####2     | 11/26 [00:00<00:00, 32.26it/s] 62%|######1   | 16/26 [00:00<00:00, 37.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.40it/s] 81%|########  | 21/26 [00:00<00:00, 36.50it/s]100%|##########| 26/26 [00:00<00:00, 40.11it/s]100%|##########| 26/26 [00:00<00:00, 31.77it/s]
Test: [   0/  26]	Loss 0.574 (0.574)	test_acc   0.47 (  0.47)	test_minacc   0.57 (  0.57)	test_majacc   0.45 (  0.45)	Loss_d 0.574 (0.574)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.574 (0.576)	test_acc   0.49 (  0.47)	test_minacc   0.70 (  0.59)	test_majacc   0.45 (  0.45)	Loss_d 0.574 (0.576)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.49 (  0.47)
Test: [  20/  26]	Loss 0.584 (0.576)	test_acc   0.45 (  0.46)	test_minacc   0.53 (  0.58)	test_majacc   0.43 (  0.44)	Loss_d 0.584 (0.576)	test_acc_d   0.45 (  0.46)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.44 (  0.47)
Test: [  26/  26]	Loss 0.580 (0.577)	test_acc   0.48 (  0.46)	test_minacc   0.64 (  0.57)	test_majacc   0.46 (  0.45)	Loss_d 0.580 (0.577)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 54.03it/s]
Test: [  0/  1]	Loss 1.498 (1.498)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.498 (1.498)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.498 (1.498)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.498 (1.498)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 39/  1]	epoch_time 0.0431 (0.0422)	validation_time 0.0004 (0.0005)	train_time 0.0427 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.46440000838041307, 0.5139999985694885)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.53it/s] 19%|#9        | 5/26 [00:00<00:01, 17.77it/s] 35%|###4      | 9/26 [00:00<00:00, 24.89it/s] 50%|#####     | 13/26 [00:00<00:00, 29.37it/s] 65%|######5   | 17/26 [00:00<00:00, 31.74it/s] 81%|########  | 21/26 [00:00<00:00, 32.80it/s] 96%|#########6| 25/26 [00:00<00:00, 33.57it/s]100%|##########| 26/26 [00:00<00:00, 26.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 401 tensor(-1.2502e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 401 tensor(-3.5585e-09, device='cuda:0')
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.48 (  0.46)	train_minacc   0.67 (  0.60)	train_majacc   0.45 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0916 (6.0684)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 23%|##3       | 6/26 [00:00<00:00, 29.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.72it/s] 42%|####2     | 11/26 [00:00<00:00, 36.81it/s] 62%|######1   | 16/26 [00:00<00:00, 41.00it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.00it/s] 81%|########  | 21/26 [00:00<00:00, 38.48it/s]100%|##########| 26/26 [00:00<00:00, 41.76it/s]100%|##########| 26/26 [00:00<00:00, 34.79it/s]
Test: [   0/  26]	Loss 0.575 (0.575)	test_acc   0.47 (  0.47)	test_minacc   0.57 (  0.57)	test_majacc   0.46 (  0.46)	Loss_d 0.575 (0.575)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.575 (0.577)	test_acc   0.49 (  0.47)	test_minacc   0.70 (  0.59)	test_majacc   0.45 (  0.45)	Loss_d 0.575 (0.577)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.49 (  0.46)
Test: [  20/  26]	Loss 0.585 (0.578)	test_acc   0.45 (  0.46)	test_minacc   0.53 (  0.58)	test_majacc   0.43 (  0.44)	Loss_d 0.585 (0.578)	test_acc_d   0.45 (  0.46)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.44 (  0.46)
Test: [  26/  26]	Loss 0.582 (0.578)	test_acc   0.48 (  0.46)	test_minacc   0.64 (  0.57)	test_majacc   0.46 (  0.45)	Loss_d 0.582 (0.578)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.24it/s]
Test: [  0/  1]	Loss 1.495 (1.495)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.495 (1.495)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.495 (1.495)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.495 (1.495)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.12 (  0.12)
Overall Timing[ 40/  1]	epoch_time 0.0420 (0.0422)	validation_time 0.0003 (0.0005)	train_time 0.0416 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.46450000604987146, 0.5130000114440918)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.74it/s] 19%|#9        | 5/26 [00:00<00:00, 21.14it/s] 35%|###4      | 9/26 [00:00<00:00, 27.11it/s] 50%|#####     | 13/26 [00:00<00:00, 29.73it/s] 65%|######5   | 17/26 [00:00<00:00, 31.31it/s] 81%|########  | 21/26 [00:00<00:00, 32.64it/s] 96%|#########6| 25/26 [00:00<00:00, 31.04it/s]100%|##########| 26/26 [00:00<00:00, 27.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 401 tensor(5.5655e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 413 tensor(1.2992e-06, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.48 (  0.46)	train_minacc   0.64 (  0.58)	train_majacc   0.46 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0834 (6.0681)	zero_count 110.0000 (2.7500)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.33it/s] 31%|###       | 8/26 [00:00<00:00, 33.40it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.40it/s] 50%|#####     | 13/26 [00:00<00:00, 38.10it/s] 69%|######9   | 18/26 [00:00<00:00, 41.62it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.62it/s] 88%|########8 | 23/26 [00:00<00:00, 43.34it/s]100%|##########| 26/26 [00:00<00:00, 37.60it/s]
Test: [   0/  26]	Loss 0.575 (0.575)	test_acc   0.47 (  0.47)	test_minacc   0.57 (  0.57)	test_majacc   0.46 (  0.46)	Loss_d 0.575 (0.575)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.576 (0.578)	test_acc   0.49 (  0.47)	test_minacc   0.70 (  0.59)	test_majacc   0.45 (  0.45)	Loss_d 0.576 (0.578)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.49 (  0.47)
Test: [  20/  26]	Loss 0.586 (0.578)	test_acc   0.45 (  0.46)	test_minacc   0.53 (  0.58)	test_majacc   0.43 (  0.44)	Loss_d 0.586 (0.578)	test_acc_d   0.45 (  0.46)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.44 (  0.46)
Test: [  26/  26]	Loss 0.582 (0.579)	test_acc   0.48 (  0.46)	test_minacc   0.64 (  0.57)	test_majacc   0.46 (  0.44)	Loss_d 0.582 (0.579)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.99it/s]
Test: [  0/  1]	Loss 1.505 (1.505)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.505 (1.505)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.505 (1.505)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.505 (1.505)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 41/  1]	epoch_time 0.0409 (0.0422)	validation_time 0.0004 (0.0005)	train_time 0.0405 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.46340000748634336, 0.5130000114440918)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 15%|#5        | 4/26 [00:00<00:01, 15.75it/s] 31%|###       | 8/26 [00:00<00:00, 23.12it/s] 46%|####6     | 12/26 [00:00<00:00, 27.03it/s] 62%|######1   | 16/26 [00:00<00:00, 29.83it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.99it/s] 92%|#########2| 24/26 [00:00<00:00, 30.87it/s]100%|##########| 26/26 [00:01<00:00, 25.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 401 tensor(-1.0944e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 408 tensor(1.5038e-05, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.49 (  0.46)	train_minacc   0.64 (  0.59)	train_majacc   0.47 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0879 (6.0623)	zero_count 0.0000 (8.1120)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.71it/s] 27%|##6       | 7/26 [00:00<00:00, 29.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.18it/s] 46%|####6     | 12/26 [00:00<00:00, 36.48it/s] 65%|######5   | 17/26 [00:00<00:00, 40.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.12it/s] 85%|########4 | 22/26 [00:00<00:00, 38.25it/s]100%|##########| 26/26 [00:00<00:00, 35.15it/s]
Test: [   0/  26]	Loss 0.576 (0.576)	test_acc   0.48 (  0.48)	test_minacc   0.57 (  0.57)	test_majacc   0.46 (  0.46)	Loss_d 0.576 (0.576)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.576 (0.578)	test_acc   0.48 (  0.47)	test_minacc   0.67 (  0.58)	test_majacc   0.45 (  0.45)	Loss_d 0.576 (0.578)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.49 (  0.46)
Test: [  20/  26]	Loss 0.588 (0.579)	test_acc   0.45 (  0.46)	test_minacc   0.53 (  0.57)	test_majacc   0.43 (  0.44)	Loss_d 0.588 (0.579)	test_acc_d   0.45 (  0.46)	test_minacc_d   0.53 (  0.57)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.44 (  0.46)
Test: [  26/  26]	Loss 0.583 (0.580)	test_acc   0.49 (  0.46)	test_minacc   0.64 (  0.56)	test_majacc   0.47 (  0.45)	Loss_d 0.583 (0.580)	test_acc_d   0.49 (  0.46)	test_minacc_d   0.64 (  0.56)	test_majacc_d   0.47 (  0.45)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.14it/s]
Test: [  0/  1]	Loss 1.502 (1.502)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.502 (1.502)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.502 (1.502)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.502 (1.502)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 42/  1]	epoch_time 0.0449 (0.0422)	validation_time 0.0004 (0.0005)	train_time 0.0445 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.46370000767707825, 0.5110000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.37it/s] 15%|#5        | 4/26 [00:00<00:01, 13.76it/s] 31%|###       | 8/26 [00:00<00:00, 20.98it/s] 46%|####6     | 12/26 [00:00<00:00, 25.58it/s] 62%|######1   | 16/26 [00:00<00:00, 28.46it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.29it/s] 92%|#########2| 24/26 [00:00<00:00, 31.81it/s]100%|##########| 26/26 [00:01<00:00, 25.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 401 tensor(-6.3578e-07, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.48 (  0.46)	train_minacc   0.64 (  0.58)	train_majacc   0.46 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0828 (6.0629)	zero_count 0.0000 (4.0170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.64it/s] 19%|#9        | 5/26 [00:00<00:01, 20.24it/s] 38%|###8      | 10/26 [00:00<00:00, 31.20it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.20it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.76it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.76it/s] 96%|#########6| 25/26 [00:00<00:00, 41.14it/s]100%|##########| 26/26 [00:00<00:00, 32.40it/s]
Test: [   0/  26]	Loss 0.575 (0.575)	test_acc   0.47 (  0.47)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 0.575 (0.575)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.576 (0.578)	test_acc   0.49 (  0.47)	test_minacc   0.67 (  0.58)	test_majacc   0.45 (  0.45)	Loss_d 0.576 (0.578)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.49 (  0.47)
Test: [  20/  26]	Loss 0.588 (0.579)	test_acc   0.45 (  0.46)	test_minacc   0.53 (  0.57)	test_majacc   0.43 (  0.44)	Loss_d 0.588 (0.579)	test_acc_d   0.45 (  0.46)	test_minacc_d   0.53 (  0.57)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.44 (  0.46)
Test: [  26/  26]	Loss 0.582 (0.579)	test_acc   0.49 (  0.46)	test_minacc   0.64 (  0.56)	test_majacc   0.47 (  0.45)	Loss_d 0.582 (0.579)	test_acc_d   0.49 (  0.46)	test_minacc_d   0.64 (  0.56)	test_majacc_d   0.47 (  0.45)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.36it/s]
Test: [  0/  1]	Loss 1.513 (1.513)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.513 (1.513)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.513 (1.513)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.513 (1.513)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 43/  1]	epoch_time 0.0424 (0.0422)	validation_time 0.0004 (0.0005)	train_time 0.0420 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.4641000071167946, 0.5120000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.84it/s] 12%|#1        | 3/26 [00:00<00:02,  9.13it/s] 27%|##6       | 7/26 [00:00<00:01, 18.29it/s] 42%|####2     | 11/26 [00:00<00:00, 23.88it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.65it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.30it/s] 88%|########8 | 23/26 [00:00<00:00, 32.08it/s]100%|##########| 26/26 [00:01<00:00, 24.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 401 tensor(3.5051e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.48 (  0.46)	train_minacc   0.64 (  0.59)	train_majacc   0.46 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0763 (6.0601)	zero_count 0.0000 (8.5800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.71it/s] 27%|##6       | 7/26 [00:00<00:00, 33.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.89it/s] 46%|####6     | 12/26 [00:00<00:00, 39.51it/s] 65%|######5   | 17/26 [00:00<00:00, 41.97it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.97it/s] 85%|########4 | 22/26 [00:00<00:00, 40.48it/s]100%|##########| 26/26 [00:00<00:00, 37.39it/s]
Test: [   0/  26]	Loss 0.575 (0.575)	test_acc   0.47 (  0.47)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 0.575 (0.575)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.575 (0.577)	test_acc   0.48 (  0.47)	test_minacc   0.68 (  0.58)	test_majacc   0.45 (  0.45)	Loss_d 0.575 (0.577)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.68 (  0.58)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.49 (  0.47)
Test: [  20/  26]	Loss 0.588 (0.578)	test_acc   0.44 (  0.46)	test_minacc   0.53 (  0.57)	test_majacc   0.43 (  0.44)	Loss_d 0.588 (0.578)	test_acc_d   0.44 (  0.46)	test_minacc_d   0.53 (  0.57)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.44 (  0.46)
Test: [  26/  26]	Loss 0.582 (0.579)	test_acc   0.48 (  0.46)	test_minacc   0.64 (  0.56)	test_majacc   0.46 (  0.44)	Loss_d 0.582 (0.579)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.64 (  0.56)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.07it/s]
Test: [  0/  1]	Loss 1.511 (1.511)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.511 (1.511)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.511 (1.511)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.511 (1.511)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.13 (  0.13)
Overall Timing[ 44/  1]	epoch_time 0.0409 (0.0422)	validation_time 0.0003 (0.0005)	train_time 0.0405 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.461000006467104, 0.5160000324249268)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.80it/s] 19%|#9        | 5/26 [00:00<00:01, 12.70it/s] 35%|###4      | 9/26 [00:00<00:00, 19.62it/s] 50%|#####     | 13/26 [00:00<00:00, 24.24it/s] 65%|######5   | 17/26 [00:00<00:00, 27.32it/s] 81%|########  | 21/26 [00:00<00:00, 29.58it/s] 96%|#########6| 25/26 [00:01<00:00, 32.27it/s]100%|##########| 26/26 [00:01<00:00, 23.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 396 tensor(-6.8114e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.47 (  0.46)	train_minacc   0.64 (  0.58)	train_majacc   0.44 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0698 (6.0649)	zero_count 0.0000 (4.4850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.98it/s] 19%|#9        | 5/26 [00:00<00:01, 13.72it/s] 38%|###8      | 10/26 [00:00<00:00, 21.83it/s]                                                38%|###8      | 10/26 [00:00<00:00, 21.83it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.43it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 29.43it/s] 81%|########  | 21/26 [00:00<00:00, 36.28it/s]100%|##########| 26/26 [00:00<00:00, 39.46it/s]100%|##########| 26/26 [00:00<00:00, 26.71it/s]
Test: [   0/  26]	Loss 0.573 (0.573)	test_acc   0.47 (  0.47)	test_minacc   0.57 (  0.57)	test_majacc   0.45 (  0.45)	Loss_d 0.573 (0.573)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.573 (0.575)	test_acc   0.48 (  0.47)	test_minacc   0.68 (  0.59)	test_majacc   0.44 (  0.44)	Loss_d 0.573 (0.575)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.68 (  0.59)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.49 (  0.47)
Test: [  20/  26]	Loss 0.587 (0.577)	test_acc   0.44 (  0.46)	test_minacc   0.53 (  0.58)	test_majacc   0.43 (  0.44)	Loss_d 0.587 (0.577)	test_acc_d   0.44 (  0.46)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.44 (  0.47)
Test: [  26/  26]	Loss 0.580 (0.577)	test_acc   0.47 (  0.46)	test_minacc   0.64 (  0.57)	test_majacc   0.45 (  0.44)	Loss_d 0.580 (0.577)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 26.18it/s]
Test: [  0/  1]	Loss 1.518 (1.518)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.518 (1.518)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.518 (1.518)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.518 (1.518)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 45/  1]	epoch_time 0.0423 (0.0422)	validation_time 0.0011 (0.0005)	train_time 0.0412 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.45850000673532487, 0.5190000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.76it/s] 19%|#9        | 5/26 [00:00<00:01, 15.77it/s] 35%|###4      | 9/26 [00:00<00:00, 22.03it/s] 50%|#####     | 13/26 [00:00<00:00, 25.91it/s] 65%|######5   | 17/26 [00:00<00:00, 27.68it/s] 81%|########  | 21/26 [00:00<00:00, 29.32it/s] 96%|#########6| 25/26 [00:00<00:00, 30.76it/s]100%|##########| 26/26 [00:01<00:00, 24.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 391 tensor(2.3100e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.47 (  0.46)	train_minacc   0.67 (  0.58)	train_majacc   0.44 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0578 (6.0644)	zero_count 0.0000 (4.6800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.96it/s] 35%|###4      | 9/26 [00:00<00:00, 38.55it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.35it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.64it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.64it/s] 92%|#########2| 24/26 [00:00<00:00, 42.23it/s]100%|##########| 26/26 [00:00<00:00, 37.97it/s]
Test: [   0/  26]	Loss 0.572 (0.572)	test_acc   0.47 (  0.47)	test_minacc   0.57 (  0.57)	test_majacc   0.45 (  0.45)	Loss_d 0.572 (0.572)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.571 (0.573)	test_acc   0.48 (  0.46)	test_minacc   0.70 (  0.59)	test_majacc   0.44 (  0.44)	Loss_d 0.571 (0.573)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.50 (  0.47)
Test: [  20/  26]	Loss 0.585 (0.575)	test_acc   0.44 (  0.46)	test_minacc   0.53 (  0.58)	test_majacc   0.43 (  0.43)	Loss_d 0.585 (0.575)	test_acc_d   0.44 (  0.46)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.44 (  0.47)
Test: [  26/  26]	Loss 0.578 (0.575)	test_acc   0.47 (  0.46)	test_minacc   0.67 (  0.58)	test_majacc   0.44 (  0.44)	Loss_d 0.578 (0.575)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.79it/s]
Test: [  0/  1]	Loss 1.518 (1.518)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 1.518 (1.518)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.518 (1.518)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 1.518 (1.518)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 46/  1]	epoch_time 0.0405 (0.0422)	validation_time 0.0003 (0.0005)	train_time 0.0402 (0.0416)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.45670000568032265, 0.5270000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s]  8%|7         | 2/26 [00:00<00:03,  6.92it/s] 19%|#9        | 5/26 [00:00<00:01, 14.67it/s] 35%|###4      | 9/26 [00:00<00:00, 20.14it/s] 50%|#####     | 13/26 [00:00<00:00, 24.97it/s] 65%|######5   | 17/26 [00:00<00:00, 27.33it/s] 81%|########  | 21/26 [00:00<00:00, 30.08it/s] 96%|#########6| 25/26 [00:01<00:00, 31.50it/s]100%|##########| 26/26 [00:01<00:00, 23.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 392 tensor(-2.5445e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 402 tensor(1.6214e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.47 (  0.46)	train_minacc   0.70 (  0.58)	train_majacc   0.43 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0503 (6.0660)	zero_count 0.0000 (8.8920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.26it/s] 23%|##3       | 6/26 [00:00<00:00, 21.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.00it/s] 42%|####2     | 11/26 [00:00<00:00, 29.22it/s] 65%|######5   | 17/26 [00:00<00:00, 34.51it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.51it/s] 85%|########4 | 22/26 [00:00<00:00, 37.97it/s]100%|##########| 26/26 [00:00<00:00, 30.50it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.47 (  0.47)	test_minacc   0.59 (  0.59)	test_majacc   0.45 (  0.45)	Loss_d 0.570 (0.570)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.569 (0.571)	test_acc   0.48 (  0.46)	test_minacc   0.70 (  0.61)	test_majacc   0.44 (  0.44)	Loss_d 0.569 (0.571)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.70 (  0.61)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.583 (0.572)	test_acc   0.44 (  0.46)	test_minacc   0.54 (  0.60)	test_majacc   0.42 (  0.43)	Loss_d 0.583 (0.572)	test_acc_d   0.44 (  0.46)	test_minacc_d   0.54 (  0.60)	test_majacc_d   0.42 (  0.43)	test_corr_d   0.44 (  0.47)
Test: [  26/  26]	Loss 0.576 (0.573)	test_acc   0.47 (  0.46)	test_minacc   0.70 (  0.59)	test_majacc   0.43 (  0.43)	Loss_d 0.576 (0.573)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.45 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.76it/s]
Test: [  0/  1]	Loss 1.519 (1.519)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 1.519 (1.519)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.519 (1.519)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 1.519 (1.519)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 47/  1]	epoch_time 0.0394 (0.0421)	validation_time 0.0004 (0.0005)	train_time 0.0390 (0.0415)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.45560000437498094, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.61it/s] 23%|##3       | 6/26 [00:00<00:00, 26.30it/s] 35%|###4      | 9/26 [00:00<00:00, 26.21it/s] 50%|#####     | 13/26 [00:00<00:00, 29.17it/s] 65%|######5   | 17/26 [00:00<00:00, 30.81it/s] 81%|########  | 21/26 [00:00<00:00, 32.13it/s] 96%|#########6| 25/26 [00:00<00:00, 32.87it/s]100%|##########| 26/26 [00:00<00:00, 28.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 379 tensor(-8.1301e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.47 (  0.46)	train_minacc   0.70 (  0.58)	train_majacc   0.43 (  0.43)	train_corr   0.00 (  0.00)	l1 6.0457 (6.0669)	zero_count 0.0000 (5.1480)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.54it/s] 27%|##6       | 7/26 [00:00<00:00, 34.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.32it/s] 46%|####6     | 12/26 [00:00<00:00, 38.71it/s] 65%|######5   | 17/26 [00:00<00:00, 41.27it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.27it/s] 85%|########4 | 22/26 [00:00<00:00, 39.16it/s]100%|##########| 26/26 [00:00<00:00, 37.21it/s]
Test: [   0/  26]	Loss 0.568 (0.568)	test_acc   0.46 (  0.46)	test_minacc   0.60 (  0.60)	test_majacc   0.44 (  0.44)	Loss_d 0.568 (0.568)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.566 (0.569)	test_acc   0.47 (  0.46)	test_minacc   0.70 (  0.62)	test_majacc   0.43 (  0.43)	Loss_d 0.566 (0.569)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.70 (  0.62)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.51 (  0.48)
Test: [  20/  26]	Loss 0.580 (0.570)	test_acc   0.44 (  0.46)	test_minacc   0.56 (  0.61)	test_majacc   0.42 (  0.43)	Loss_d 0.580 (0.570)	test_acc_d   0.44 (  0.46)	test_minacc_d   0.56 (  0.61)	test_majacc_d   0.42 (  0.43)	test_corr_d   0.44 (  0.47)
Test: [  26/  26]	Loss 0.575 (0.571)	test_acc   0.46 (  0.46)	test_minacc   0.70 (  0.60)	test_majacc   0.43 (  0.43)	Loss_d 0.575 (0.571)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.70 (  0.60)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.45 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.09it/s]
Test: [  0/  1]	Loss 1.519 (1.519)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 1.519 (1.519)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.519 (1.519)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 1.519 (1.519)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Overall Timing[ 48/  1]	epoch_time 0.0416 (0.0421)	validation_time 0.0005 (0.0005)	train_time 0.0411 (0.0415)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.4561000052988529, 0.5390000343322754)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.37it/s] 15%|#5        | 4/26 [00:00<00:01, 20.01it/s] 31%|###       | 8/26 [00:00<00:00, 26.67it/s] 46%|####6     | 12/26 [00:00<00:00, 27.01it/s] 62%|######1   | 16/26 [00:00<00:00, 29.51it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.69it/s] 92%|#########2| 24/26 [00:00<00:00, 32.11it/s]100%|##########| 26/26 [00:00<00:00, 27.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 376 tensor(-2.4302e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.51)	train_acc   0.48 (  0.45)	train_minacc   0.67 (  0.58)	train_majacc   0.45 (  0.43)	train_corr   0.00 (  0.00)	l1 6.0491 (6.0687)	zero_count 0.0000 (5.2650)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.37it/s] 23%|##3       | 6/26 [00:00<00:00, 30.98it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.98it/s] 42%|####2     | 11/26 [00:00<00:00, 37.71it/s] 62%|######1   | 16/26 [00:00<00:00, 41.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.52it/s] 81%|########  | 21/26 [00:00<00:00, 39.03it/s]100%|##########| 26/26 [00:00<00:00, 41.82it/s]100%|##########| 26/26 [00:00<00:00, 35.15it/s]
Test: [   0/  26]	Loss 0.567 (0.567)	test_acc   0.47 (  0.47)	test_minacc   0.60 (  0.60)	test_majacc   0.44 (  0.44)	Loss_d 0.567 (0.567)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.565 (0.567)	test_acc   0.47 (  0.46)	test_minacc   0.70 (  0.61)	test_majacc   0.43 (  0.44)	Loss_d 0.565 (0.567)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.70 (  0.61)	test_majacc_d   0.43 (  0.44)	test_corr_d   0.51 (  0.48)
Test: [  20/  26]	Loss 0.578 (0.569)	test_acc   0.44 (  0.46)	test_minacc   0.58 (  0.61)	test_majacc   0.42 (  0.43)	Loss_d 0.578 (0.569)	test_acc_d   0.44 (  0.46)	test_minacc_d   0.58 (  0.61)	test_majacc_d   0.42 (  0.43)	test_corr_d   0.45 (  0.48)
Test: [  26/  26]	Loss 0.574 (0.569)	test_acc   0.47 (  0.46)	test_minacc   0.67 (  0.60)	test_majacc   0.44 (  0.43)	Loss_d 0.574 (0.569)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.67 (  0.60)	test_majacc_d   0.44 (  0.43)	test_corr_d   0.45 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.38it/s]
Test: [  0/  1]	Loss 1.521 (1.521)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 1.521 (1.521)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.521 (1.521)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 1.521 (1.521)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Overall Timing[ 49/  1]	epoch_time 0.0385 (0.0420)	validation_time 0.0003 (0.0005)	train_time 0.0382 (0.0414)
record: (train_acc, test_acc) (0.6393000165820122, 0.64000004529953)
last accs (train_acc, test_acc) (0.45740000542998316, 0.5390000343322754)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.168 MB of 0.168 MB uploadedwandb: \ 0.168 MB of 0.168 MB uploadedwandb: | 0.168 MB of 0.168 MB uploadedwandb: / 0.168 MB of 0.168 MB uploadedwandb: - 0.190 MB of 0.199 MB uploaded (0.003 MB deduped)wandb: \ 0.500 MB of 0.500 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/diagnostics/epoch_time_val █▂▂▂▁▂▃▁▂▂▁▂▁▁▂▁▂▁▂▂▂▂▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/diagnostics/train_time_val █▂▂▂▂▂▃▁▂▂▂▂▁▁▂▂▂▁▂▃▂▂▁▁▂▂▂▂▃▂▃▂▂▂▃▂▂▂▂▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/Loss_avg ▃▄▄▄▃▃▄▄▅▅▇█▃▁▂▂▂▂▂▇▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/Loss_d_avg ▃▄▄▄▃▃▄▄▅▅▇█▃▁▂▂▂▂▂▇▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/Loss_d_val ▃▄▄▄▃▃▄▄▅▅▇█▃▁▂▂▂▂▂▇▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/Loss_val ▃▄▄▄▃▃▄▄▅▅▇█▃▁▂▂▂▂▂▇▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_acc_avg ▁▁▁▂▃▄▄▄▃▅▅▅▇█▇████▅▆▆▆▆▆▆▆▇▇▇▇▇▆▆▆▆▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_acc_d_avg ▁▁▁▂▃▄▄▄▃▅▅▅▇█▇████▅▆▆▆▆▆▆▆▇▇▇▇▇▆▆▆▆▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_acc_d_val ▁▁▁▂▃▄▄▄▃▅▅▅▇█▇████▅▆▆▆▆▆▆▆▇▇▇▇▇▆▆▆▆▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_acc_val ▁▁▁▂▃▄▄▄▃▅▅▅▇█▇████▅▆▆▆▆▆▆▆▇▇▇▇▇▆▆▆▆▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_corr_d_avg ███▇▆▅▅▅▆▄▄▄▂▂▂▂▂▂▂▄▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_corr_d_val ███▇▆▅▅▅▆▄▄▄▂▂▂▂▂▂▂▄▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_majacc_avg █████▇▇▇██▇▇▇▇▇▇▇▇▇▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_majacc_d_avg █████▇▇▇██▇▇▇▇▇▇▇▇▇▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_majacc_d_val █████▇▇▇██▇▇▇▇▇▇▇▇▇▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_majacc_val █████▇▇▇██▇▇▇▇▇▇▇▇▇▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_minacc_avg ▁▁▁▂▃▄▄▄▃▅▅▅▇█▇████▅▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_minacc_d_avg ▁▁▁▂▃▄▄▄▃▅▅▅▇█▇████▅▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_minacc_d_val ▁▁▁▂▃▄▄▄▃▅▅▅▇█▇████▅▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_minacc_val ▁▁▁▂▃▄▄▄▃▅▅▅▇█▇████▅▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/Loss_avg █▆▆▅▅▅▅▄▄▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/Loss_val █▇▇▇▆▆▆▅▅▅▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/l1_avg ▆▁▁▁▂▂▃▃▄▄▅▆█▃▃▃▃▃▃▅▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/l1_val ▁▁▁▂▂▃▃▄▃▅██▆▂▃▃▃▃▄▇▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_acc_avg ▆▇▇▇▇▇▇██████▇▇▇▇▇▇▇▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_acc_val ▇▇▇▇▇▇▇▇▇▇██▇▅▆▆▆▅▅▇▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_majacc_avg ▇███████▇█▇▇▇▆▆▆▆▆▆▆▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_majacc_val ████▇▇▇██▇▇█▇▅▆▅▅▅▅▇▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_minacc_avg ▂▁▁▁▂▃▃▄▄▅▅▆▇██████▇█▅▅▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_minacc_val ▁▁▁▂▃▅▅▅▄▇█▇▇▇▇▇███▆▆▆▆▆▆▇▆▇▆▆▆▆▇▆▆▆▆▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_nll_avg █▄▄▄▃▃▂▂▂▂▁▁▁▄▃▃▃▃▃▃▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_nll_val ▅▄▄▄▄▃▃▂▂▂▂▁▃▅▄▅▄▄▅▄████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_penalty_avg █▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_penalty_val ██▇▅▄▃▂▂▂▂▁▁▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/weight_norm_avg ▁▄▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇▇▇▇████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/weight_norm_val ▁▃▃▃▃▃▃▄▄▅▅▅▇▇▇▇▇▇▇▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▄█▄▁▁▁▁▁▁▁▁▁▁▁▁▂▁▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/diagnostics/epoch_time_val 0.03849
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/diagnostics/train_time_val 0.03815
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/diagnostics/validation_time_val 0.00032
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/Loss_avg 1.52108
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/Loss_d_avg 1.52108
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/Loss_d_val 1.52108
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/Loss_val 1.52108
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_acc_avg 0.539
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_acc_d_avg 0.539
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_acc_d_val 0.539
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_acc_val 0.539
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_corr_d_avg 0.13622
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_corr_d_val 0.13622
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_majacc_avg 0.48
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_majacc_d_avg 0.48
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_majacc_d_val 0.48
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_majacc_val 0.48
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_minacc_avg 0.54556
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_minacc_d_avg 0.54556
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_minacc_d_val 0.54556
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/test/test_minacc_val 0.54556
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/Loss_avg 7e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/Loss_val 8e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/l1_avg 6.0687
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/l1_val 6.04906
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_acc_avg 0.4529
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_acc_val 0.476
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_majacc_avg 0.43025
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_majacc_val 0.447
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_minacc_avg 0.58017
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_minacc_val 0.66667
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_nll_avg 0.5752
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_nll_val 0.57333
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_penalty_avg 1e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/train_penalty_val 2e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/weight_norm_avg 25.51224
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/weight_norm_val 25.51219
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/zero_count_avg 5.265
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/111/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/jd1ulmch
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_190744-jd1ulmch/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_191036-pbn3dxkv
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/pbn3dxkv
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1155
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6049, 3, 32, 32) (5951, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:02<00:51,  2.06s/it] 19%|#9        | 5/26 [00:02<00:06,  3.02it/s] 35%|###4      | 9/26 [00:02<00:02,  6.08it/s] 50%|#####     | 13/26 [00:02<00:01,  9.53it/s] 65%|######5   | 17/26 [00:02<00:00, 13.09it/s] 81%|########  | 21/26 [00:02<00:00, 16.81it/s] 96%|#########6| 25/26 [00:02<00:00, 20.26it/s]100%|##########| 26/26 [00:03<00:00,  8.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.396 (0.615)	train_nll   0.40 (  0.61)	train_penalty   0.06 (  0.39)	weight_norm  20.94 ( 18.12)	train_acc   0.86 (  0.79)	train_minacc   0.03 (  0.10)	train_majacc   1.00 (  0.91)	train_corr   0.00 (  0.00)	l1 6.7133 (7.2975)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.32it/s] 23%|##3       | 6/26 [00:00<00:00, 30.28it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.28it/s] 42%|####2     | 11/26 [00:00<00:00, 37.20it/s] 62%|######1   | 16/26 [00:00<00:00, 40.54it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.54it/s] 81%|########  | 21/26 [00:00<00:00, 38.67it/s]100%|##########| 26/26 [00:00<00:00, 40.93it/s]100%|##########| 26/26 [00:00<00:00, 35.04it/s]
Test: [   0/  26]	Loss 0.402 (0.402)	test_acc   0.86 (  0.86)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.402 (0.402)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.414 (0.409)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.414 (0.409)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.397 (0.420)	test_acc   0.85 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.397 (0.420)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.392 (0.413)	test_acc   0.86 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.392 (0.413)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]100%|##########| 1/1 [00:00<00:00,  2.53it/s]
Test: [  0/  1]	Loss 1.771 (1.771)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.98 (  0.98)	Loss_d 1.771 (1.771)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.771 (1.771)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.98 (  0.98)	Loss_d 1.771 (1.771)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/113/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0859 (0.0859)	validation_time 0.0067 (0.0067)	train_time 0.0774 (0.0774)
record: (train_acc, test_acc) (0.8450000235438346, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8450000235438346, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.37it/s] 19%|#9        | 5/26 [00:00<00:01, 16.70it/s] 35%|###4      | 9/26 [00:00<00:00, 22.77it/s] 50%|#####     | 13/26 [00:00<00:00, 26.14it/s] 65%|######5   | 17/26 [00:00<00:00, 28.27it/s] 81%|########  | 21/26 [00:00<00:00, 29.11it/s] 96%|#########6| 25/26 [00:00<00:00, 30.40it/s]100%|##########| 26/26 [00:01<00:00, 24.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.372 (0.410)	train_nll   0.37 (  0.41)	train_penalty   0.06 (  0.05)	weight_norm  22.11 ( 21.74)	train_acc   0.87 (  0.85)	train_minacc   0.03 (  0.02)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.9447 (6.7261)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 23%|##3       | 6/26 [00:00<00:00, 28.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.73it/s] 42%|####2     | 11/26 [00:00<00:00, 36.24it/s] 62%|######1   | 16/26 [00:00<00:00, 40.23it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.23it/s] 81%|########  | 21/26 [00:00<00:00, 38.14it/s]100%|##########| 26/26 [00:00<00:00, 41.28it/s]100%|##########| 26/26 [00:00<00:00, 34.54it/s]
Test: [   0/  26]	Loss 0.399 (0.399)	test_acc   0.86 (  0.86)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.399 (0.399)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.394 (0.396)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.394 (0.396)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.97)
Test: [  20/  26]	Loss 0.391 (0.409)	test_acc   0.85 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.391 (0.409)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.367 (0.402)	test_acc   0.87 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.367 (0.402)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.50it/s]
Test: [  0/  1]	Loss 1.977 (1.977)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.977 (1.977)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.977 (1.977)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.977 (1.977)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Overall Timing[  1/  1]	epoch_time 0.0464 (0.0661)	validation_time 0.0004 (0.0036)	train_time 0.0459 (0.0616)
record: (train_acc, test_acc) (0.8450000235438346, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8480000247359276, 0.10400000214576721)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.03it/s] 19%|#9        | 5/26 [00:00<00:01, 19.47it/s] 35%|###4      | 9/26 [00:00<00:00, 24.99it/s] 50%|#####     | 13/26 [00:00<00:00, 28.31it/s] 65%|######5   | 17/26 [00:00<00:00, 30.27it/s] 81%|########  | 21/26 [00:00<00:00, 31.19it/s] 96%|#########6| 25/26 [00:00<00:00, 32.16it/s]100%|##########| 26/26 [00:00<00:00, 27.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.332 (0.390)	train_nll   0.33 (  0.39)	train_penalty   0.04 (  0.05)	weight_norm  22.24 ( 22.19)	train_acc   0.87 (  0.85)	train_minacc   0.09 (  0.06)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 6.9013 (6.7401)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.08it/s] 23%|##3       | 6/26 [00:00<00:01, 17.25it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.25it/s] 42%|####2     | 11/26 [00:00<00:00, 25.71it/s] 62%|######1   | 16/26 [00:00<00:00, 32.57it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.57it/s] 81%|########  | 21/26 [00:00<00:00, 34.13it/s]100%|##########| 26/26 [00:00<00:00, 38.01it/s]100%|##########| 26/26 [00:00<00:00, 27.74it/s]
Test: [   0/  26]	Loss 0.376 (0.376)	test_acc   0.86 (  0.86)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.376 (0.376)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.373 (0.369)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.06)	test_majacc   0.98 (  0.99)	Loss_d 0.373 (0.369)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.06)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.359 (0.380)	test_acc   0.86 (  0.85)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.359 (0.380)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.96)
Test: [  26/  26]	Loss 0.314 (0.373)	test_acc   0.87 (  0.85)	test_minacc   0.12 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.314 (0.373)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.12 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.63it/s]
Test: [  0/  1]	Loss 1.890 (1.890)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.890 (1.890)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.890 (1.890)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.890 (1.890)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/113/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0456 (0.0593)	validation_time 0.0004 (0.0025)	train_time 0.0451 (0.0561)
record: (train_acc, test_acc) (0.8514000235795974, 0.13600000739097595)
last accs (train_acc, test_acc) (0.8514000235795974, 0.13600000739097595)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.53it/s] 15%|#5        | 4/26 [00:00<00:01, 18.91it/s] 31%|###       | 8/26 [00:00<00:00, 24.95it/s] 46%|####6     | 12/26 [00:00<00:00, 28.03it/s] 62%|######1   | 16/26 [00:00<00:00, 30.01it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.53it/s] 92%|#########2| 24/26 [00:00<00:00, 32.71it/s]100%|##########| 26/26 [00:00<00:00, 27.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.322 (0.368)	train_nll   0.32 (  0.37)	train_penalty   0.04 (  0.04)	weight_norm  22.30 ( 22.27)	train_acc   0.86 (  0.85)	train_minacc   0.09 (  0.12)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 6.7322 (6.6414)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.13it/s] 27%|##6       | 7/26 [00:00<00:00, 34.52it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.52it/s] 46%|####6     | 12/26 [00:00<00:00, 38.41it/s] 65%|######5   | 17/26 [00:00<00:00, 38.88it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.88it/s] 85%|########4 | 22/26 [00:00<00:00, 41.68it/s]100%|##########| 26/26 [00:00<00:00, 36.61it/s]
Test: [   0/  26]	Loss 0.352 (0.352)	test_acc   0.86 (  0.86)	test_minacc   0.15 (  0.15)	test_majacc   0.98 (  0.98)	Loss_d 0.352 (0.352)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.349 (0.345)	test_acc   0.85 (  0.85)	test_minacc   0.09 (  0.13)	test_majacc   0.97 (  0.98)	Loss_d 0.349 (0.345)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.09 (  0.13)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.95 (  0.94)
Test: [  20/  26]	Loss 0.337 (0.356)	test_acc   0.86 (  0.85)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 0.337 (0.356)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.309 (0.350)	test_acc   0.86 (  0.85)	test_minacc   0.12 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 0.309 (0.350)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.12 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.95 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.71it/s]
Test: [  0/  1]	Loss 1.855 (1.855)	test_acc   0.15 (  0.15)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 1.855 (1.855)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.855 (1.855)	test_acc   0.15 (  0.15)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 1.855 (1.855)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/113/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0395 (0.0543)	validation_time 0.0003 (0.0020)	train_time 0.0391 (0.0519)
record: (train_acc, test_acc) (0.8539000241756439, 0.14800000190734863)
last accs (train_acc, test_acc) (0.8539000241756439, 0.14800000190734863)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.15it/s] 15%|#5        | 4/26 [00:00<00:01, 12.49it/s] 31%|###       | 8/26 [00:00<00:00, 20.48it/s] 46%|####6     | 12/26 [00:00<00:00, 25.53it/s] 62%|######1   | 16/26 [00:00<00:00, 28.81it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.72it/s] 92%|#########2| 24/26 [00:00<00:00, 32.21it/s]100%|##########| 26/26 [00:01<00:00, 25.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.277 (0.339)	train_nll   0.28 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.36 ( 22.33)	train_acc   0.87 (  0.85)	train_minacc   0.18 (  0.21)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 6.7031 (6.6315)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.53it/s] 23%|##3       | 6/26 [00:00<00:00, 29.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.95it/s] 42%|####2     | 11/26 [00:00<00:00, 37.53it/s] 62%|######1   | 16/26 [00:00<00:00, 41.37it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.37it/s] 81%|########  | 21/26 [00:00<00:00, 39.50it/s]100%|##########| 26/26 [00:00<00:00, 42.47it/s]100%|##########| 26/26 [00:00<00:00, 35.97it/s]
Test: [   0/  26]	Loss 0.331 (0.331)	test_acc   0.86 (  0.86)	test_minacc   0.24 (  0.24)	test_majacc   0.96 (  0.96)	Loss_d 0.331 (0.331)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.305 (0.313)	test_acc   0.86 (  0.85)	test_minacc   0.25 (  0.22)	test_majacc   0.96 (  0.97)	Loss_d 0.305 (0.313)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.25 (  0.22)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.321 (0.325)	test_acc   0.85 (  0.85)	test_minacc   0.16 (  0.21)	test_majacc   0.96 (  0.97)	Loss_d 0.321 (0.325)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.16 (  0.21)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.92 (  0.92)
Test: [  26/  26]	Loss 0.256 (0.319)	test_acc   0.89 (  0.86)	test_minacc   0.35 (  0.22)	test_majacc   0.97 (  0.97)	Loss_d 0.256 (0.319)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.35 (  0.22)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.92 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.70it/s]
Test: [  0/  1]	Loss 1.830 (1.830)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 1.830 (1.830)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.830 (1.830)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 1.830 (1.830)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/113/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0411 (0.0517)	validation_time 0.0006 (0.0017)	train_time 0.0404 (0.0496)
record: (train_acc, test_acc) (0.8564000217914581, 0.1770000010728836)
last accs (train_acc, test_acc) (0.8564000217914581, 0.1770000010728836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.63it/s] 19%|#9        | 5/26 [00:00<00:00, 22.44it/s] 35%|###4      | 9/26 [00:00<00:00, 27.72it/s] 50%|#####     | 13/26 [00:00<00:00, 30.48it/s] 65%|######5   | 17/26 [00:00<00:00, 32.14it/s] 81%|########  | 21/26 [00:00<00:00, 33.04it/s] 96%|#########6| 25/26 [00:00<00:00, 33.36it/s]100%|##########| 26/26 [00:00<00:00, 28.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.257 (0.326)	train_nll   0.26 (  0.33)	train_penalty   0.01 (  0.02)	weight_norm  22.45 ( 22.40)	train_acc   0.90 (  0.86)	train_minacc   0.47 (  0.29)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7972 (6.7138)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.83it/s] 19%|#9        | 5/26 [00:00<00:01, 18.89it/s] 38%|###8      | 10/26 [00:00<00:00, 29.33it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.33it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.23it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.66it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.66it/s] 96%|#########6| 25/26 [00:00<00:00, 38.35it/s]100%|##########| 26/26 [00:00<00:00, 30.91it/s]
Test: [   0/  26]	Loss 0.313 (0.313)	test_acc   0.86 (  0.86)	test_minacc   0.35 (  0.35)	test_majacc   0.95 (  0.95)	Loss_d 0.313 (0.313)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.274 (0.292)	test_acc   0.86 (  0.87)	test_minacc   0.31 (  0.39)	test_majacc   0.96 (  0.95)	Loss_d 0.274 (0.292)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.31 (  0.39)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.89 (  0.87)
Test: [  20/  26]	Loss 0.302 (0.305)	test_acc   0.88 (  0.86)	test_minacc   0.44 (  0.39)	test_majacc   0.95 (  0.95)	Loss_d 0.302 (0.305)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.44 (  0.39)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  26/  26]	Loss 0.227 (0.299)	test_acc   0.90 (  0.87)	test_minacc   0.50 (  0.40)	test_majacc   0.97 (  0.95)	Loss_d 0.227 (0.299)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.50 (  0.40)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.95it/s]
Test: [  0/  1]	Loss 1.784 (1.784)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 1.784 (1.784)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 1.784 (1.784)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 1.784 (1.784)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.79 (  0.79)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/113/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0425 (0.0502)	validation_time 0.0004 (0.0015)	train_time 0.0420 (0.0483)
record: (train_acc, test_acc) (0.8673000286221504, 0.23400001227855682)
last accs (train_acc, test_acc) (0.8673000286221504, 0.23400001227855682)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 19%|#9        | 5/26 [00:00<00:00, 21.50it/s] 35%|###4      | 9/26 [00:00<00:00, 26.93it/s] 50%|#####     | 13/26 [00:00<00:00, 29.82it/s] 65%|######5   | 17/26 [00:00<00:00, 31.73it/s] 81%|########  | 21/26 [00:00<00:00, 33.14it/s] 96%|#########6| 25/26 [00:00<00:00, 33.72it/s]100%|##########| 26/26 [00:00<00:00, 28.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.284 (0.315)	train_nll   0.28 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.55 ( 22.50)	train_acc   0.88 (  0.86)	train_minacc   0.21 (  0.33)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7699 (6.7541)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.80it/s] 27%|##6       | 7/26 [00:00<00:00, 28.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.34it/s] 46%|####6     | 12/26 [00:00<00:00, 35.29it/s] 65%|######5   | 17/26 [00:00<00:00, 39.74it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.74it/s] 85%|########4 | 22/26 [00:00<00:00, 40.68it/s]100%|##########| 26/26 [00:00<00:00, 34.75it/s]
Test: [   0/  26]	Loss 0.304 (0.304)	test_acc   0.86 (  0.86)	test_minacc   0.22 (  0.22)	test_majacc   0.97 (  0.97)	Loss_d 0.304 (0.304)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.290 (0.291)	test_acc   0.86 (  0.87)	test_minacc   0.24 (  0.32)	test_majacc   0.97 (  0.96)	Loss_d 0.290 (0.291)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.24 (  0.32)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.91 (  0.90)
Test: [  20/  26]	Loss 0.292 (0.302)	test_acc   0.87 (  0.86)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 0.292 (0.302)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.235 (0.297)	test_acc   0.89 (  0.87)	test_minacc   0.35 (  0.32)	test_majacc   0.97 (  0.96)	Loss_d 0.235 (0.297)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.35 (  0.32)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.91it/s]
Test: [  0/  1]	Loss 1.876 (1.876)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   0.99 (  0.99)	Loss_d 1.876 (1.876)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.876 (1.876)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   0.99 (  0.99)	Loss_d 1.876 (1.876)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
Overall Timing[  6/  1]	epoch_time 0.0430 (0.0491)	validation_time 0.0006 (0.0014)	train_time 0.0424 (0.0475)
record: (train_acc, test_acc) (0.8673000286221504, 0.23400001227855682)
last accs (train_acc, test_acc) (0.8657000200748444, 0.18800000846385956)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.55it/s]  8%|7         | 2/26 [00:00<00:05,  4.60it/s] 23%|##3       | 6/26 [00:00<00:01, 13.40it/s] 38%|###8      | 10/26 [00:00<00:00, 19.64it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.64it/s] 69%|######9   | 18/26 [00:00<00:00, 26.58it/s] 85%|########4 | 22/26 [00:01<00:00, 29.14it/s]100%|##########| 26/26 [00:01<00:00, 31.31it/s]100%|##########| 26/26 [00:01<00:00, 20.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.263 (0.310)	train_nll   0.26 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.69 ( 22.62)	train_acc   0.88 (  0.86)	train_minacc   0.32 (  0.35)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 6.8907 (6.6590)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.09it/s] 31%|###       | 8/26 [00:00<00:00, 27.11it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.11it/s] 50%|#####     | 13/26 [00:00<00:00, 31.78it/s] 69%|######9   | 18/26 [00:00<00:00, 36.62it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.62it/s] 88%|########8 | 23/26 [00:00<00:00, 37.36it/s]100%|##########| 26/26 [00:00<00:00, 32.02it/s]
Test: [   0/  26]	Loss 0.296 (0.296)	test_acc   0.88 (  0.88)	test_minacc   0.35 (  0.35)	test_majacc   0.97 (  0.97)	Loss_d 0.296 (0.296)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.295 (0.295)	test_acc   0.86 (  0.87)	test_minacc   0.27 (  0.33)	test_majacc   0.96 (  0.96)	Loss_d 0.295 (0.295)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.27 (  0.33)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.88)
Test: [  20/  26]	Loss 0.283 (0.303)	test_acc   0.87 (  0.86)	test_minacc   0.33 (  0.33)	test_majacc   0.96 (  0.96)	Loss_d 0.283 (0.303)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  26/  26]	Loss 0.223 (0.295)	test_acc   0.91 (  0.87)	test_minacc   0.53 (  0.34)	test_majacc   0.97 (  0.96)	Loss_d 0.223 (0.295)	test_acc_d   0.91 (  0.87)	test_minacc_d   0.53 (  0.34)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.06it/s]
Test: [  0/  1]	Loss 2.131 (2.131)	test_acc   0.21 (  0.21)	test_minacc   0.12 (  0.12)	test_majacc   0.99 (  0.99)	Loss_d 2.131 (2.131)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.83 (  0.83)
Test: [  1/  1]	Loss 2.131 (2.131)	test_acc   0.21 (  0.21)	test_minacc   0.12 (  0.12)	test_majacc   0.99 (  0.99)	Loss_d 2.131 (2.131)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.83 (  0.83)
Overall Timing[  7/  1]	epoch_time 0.0425 (0.0483)	validation_time 0.0004 (0.0013)	train_time 0.0421 (0.0468)
record: (train_acc, test_acc) (0.8673000286221504, 0.23400001227855682)
last accs (train_acc, test_acc) (0.8687000289559365, 0.20800000429153442)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.02it/s] 15%|#5        | 4/26 [00:00<00:01, 18.31it/s] 31%|###       | 8/26 [00:00<00:00, 24.39it/s] 46%|####6     | 12/26 [00:00<00:00, 28.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.72it/s] 88%|########8 | 23/26 [00:00<00:00, 31.53it/s]100%|##########| 26/26 [00:00<00:00, 26.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.237 (0.288)	train_nll   0.24 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.84 ( 22.76)	train_acc   0.89 (  0.88)	train_minacc   0.32 (  0.44)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 6.6867 (6.7516)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.99it/s] 23%|##3       | 6/26 [00:00<00:00, 33.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 33.29it/s] 42%|####2     | 11/26 [00:00<00:00, 38.86it/s] 62%|######1   | 16/26 [00:00<00:00, 41.98it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.98it/s] 81%|########  | 21/26 [00:00<00:00, 39.76it/s]100%|##########| 26/26 [00:00<00:00, 42.78it/s]100%|##########| 26/26 [00:00<00:00, 36.93it/s]
Test: [   0/  26]	Loss 0.274 (0.274)	test_acc   0.89 (  0.89)	test_minacc   0.40 (  0.40)	test_majacc   0.97 (  0.97)	Loss_d 0.274 (0.274)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.269 (0.275)	test_acc   0.89 (  0.88)	test_minacc   0.40 (  0.39)	test_majacc   0.97 (  0.97)	Loss_d 0.269 (0.275)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.40 (  0.39)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.89)
Test: [  20/  26]	Loss 0.267 (0.281)	test_acc   0.88 (  0.87)	test_minacc   0.40 (  0.38)	test_majacc   0.96 (  0.97)	Loss_d 0.267 (0.281)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.40 (  0.38)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  26/  26]	Loss 0.199 (0.273)	test_acc   0.91 (  0.88)	test_minacc   0.50 (  0.39)	test_majacc   0.98 (  0.97)	Loss_d 0.199 (0.273)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.50 (  0.39)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.56it/s]
Test: [  0/  1]	Loss 2.069 (2.069)	test_acc   0.19 (  0.19)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 2.069 (2.069)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.85 (  0.85)
Test: [  1/  1]	Loss 2.069 (2.069)	test_acc   0.19 (  0.19)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 2.069 (2.069)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.85 (  0.85)
Overall Timing[  8/  1]	epoch_time 0.0418 (0.0476)	validation_time 0.0004 (0.0012)	train_time 0.0414 (0.0462)
record: (train_acc, test_acc) (0.8673000286221504, 0.23400001227855682)
last accs (train_acc, test_acc) (0.8792000225186348, 0.1940000057220459)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.78it/s] 19%|#9        | 5/26 [00:00<00:00, 22.69it/s] 35%|###4      | 9/26 [00:00<00:00, 28.38it/s] 50%|#####     | 13/26 [00:00<00:00, 31.02it/s] 65%|######5   | 17/26 [00:00<00:00, 32.52it/s] 81%|########  | 21/26 [00:00<00:00, 33.29it/s] 96%|#########6| 25/26 [00:00<00:00, 34.08it/s]100%|##########| 26/26 [00:00<00:00, 29.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.251 (0.277)	train_nll   0.25 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  23.04 ( 22.94)	train_acc   0.87 (  0.88)	train_minacc   0.24 (  0.47)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5873 (6.7420)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.33it/s] 27%|##6       | 7/26 [00:00<00:00, 26.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.13it/s] 46%|####6     | 12/26 [00:00<00:00, 32.50it/s] 65%|######5   | 17/26 [00:00<00:00, 37.30it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.30it/s] 85%|########4 | 22/26 [00:00<00:00, 39.86it/s]100%|##########| 26/26 [00:00<00:00, 33.67it/s]
Test: [   0/  26]	Loss 0.273 (0.273)	test_acc   0.87 (  0.87)	test_minacc   0.36 (  0.36)	test_majacc   0.96 (  0.96)	Loss_d 0.273 (0.273)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.242 (0.263)	test_acc   0.89 (  0.88)	test_minacc   0.42 (  0.42)	test_majacc   0.97 (  0.96)	Loss_d 0.242 (0.263)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  20/  26]	Loss 0.265 (0.266)	test_acc   0.89 (  0.88)	test_minacc   0.44 (  0.42)	test_majacc   0.96 (  0.96)	Loss_d 0.265 (0.266)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.44 (  0.42)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.214 (0.260)	test_acc   0.89 (  0.88)	test_minacc   0.41 (  0.44)	test_majacc   0.97 (  0.96)	Loss_d 0.214 (0.260)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.41 (  0.44)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.90 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.31it/s]
Test: [  0/  1]	Loss 1.958 (1.958)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 1.958 (1.958)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
Test: [  1/  1]	Loss 1.958 (1.958)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 1.958 (1.958)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
Overall Timing[  9/  1]	epoch_time 0.0383 (0.0467)	validation_time 0.0004 (0.0011)	train_time 0.0379 (0.0454)
record: (train_acc, test_acc) (0.8673000286221504, 0.23400001227855682)
last accs (train_acc, test_acc) (0.8849000234603882, 0.2160000056028366)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 19%|#9        | 5/26 [00:00<00:01, 19.46it/s] 35%|###4      | 9/26 [00:00<00:00, 25.17it/s] 50%|#####     | 13/26 [00:00<00:00, 28.51it/s] 65%|######5   | 17/26 [00:00<00:00, 30.68it/s] 81%|########  | 21/26 [00:00<00:00, 32.16it/s] 96%|#########6| 25/26 [00:00<00:00, 32.96it/s]100%|##########| 26/26 [00:00<00:00, 27.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.213 (0.266)	train_nll   0.21 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.25 ( 23.15)	train_acc   0.90 (  0.89)	train_minacc   0.47 (  0.51)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5643 (6.7185)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.54it/s] 23%|##3       | 6/26 [00:00<00:00, 25.31it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.31it/s] 42%|####2     | 11/26 [00:00<00:00, 33.49it/s] 62%|######1   | 16/26 [00:00<00:00, 37.87it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.87it/s] 81%|########  | 21/26 [00:00<00:00, 40.29it/s]100%|##########| 26/26 [00:00<00:00, 42.68it/s]100%|##########| 26/26 [00:00<00:00, 34.32it/s]
Test: [   0/  26]	Loss 0.244 (0.244)	test_acc   0.87 (  0.87)	test_minacc   0.40 (  0.40)	test_majacc   0.95 (  0.95)	Loss_d 0.244 (0.244)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.243 (0.244)	test_acc   0.89 (  0.89)	test_minacc   0.45 (  0.50)	test_majacc   0.96 (  0.96)	Loss_d 0.243 (0.244)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.45 (  0.50)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.87)
Test: [  20/  26]	Loss 0.226 (0.244)	test_acc   0.92 (  0.89)	test_minacc   0.55 (  0.51)	test_majacc   0.98 (  0.97)	Loss_d 0.226 (0.244)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.88 (  0.87)
Test: [  26/  26]	Loss 0.171 (0.236)	test_acc   0.94 (  0.90)	test_minacc   0.71 (  0.54)	test_majacc   0.98 (  0.97)	Loss_d 0.171 (0.236)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.71 (  0.54)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.87 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.10it/s]
Test: [  0/  1]	Loss 2.090 (2.090)	test_acc   0.25 (  0.25)	test_minacc   0.16 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 2.090 (2.090)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 2.090 (2.090)	test_acc   0.25 (  0.25)	test_minacc   0.16 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 2.090 (2.090)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/113/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0417 (0.0462)	validation_time 0.0004 (0.0010)	train_time 0.0412 (0.0450)
record: (train_acc, test_acc) (0.9012000213861465, 0.24500000476837158)
last accs (train_acc, test_acc) (0.9012000213861465, 0.24500000476837158)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 19%|#9        | 5/26 [00:00<00:00, 21.87it/s] 31%|###       | 8/26 [00:00<00:00, 24.01it/s] 46%|####6     | 12/26 [00:00<00:00, 28.18it/s] 62%|######1   | 16/26 [00:00<00:00, 30.50it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.37it/s] 92%|#########2| 24/26 [00:00<00:00, 33.43it/s]100%|##########| 26/26 [00:00<00:00, 28.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.181 (0.252)	train_nll   0.18 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.51 ( 23.38)	train_acc   0.93 (  0.89)	train_minacc   0.56 (  0.57)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 6.8083 (6.7630)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.52it/s] 27%|##6       | 7/26 [00:00<00:00, 27.91it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.91it/s] 46%|####6     | 12/26 [00:00<00:00, 35.20it/s] 65%|######5   | 17/26 [00:00<00:00, 37.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.12it/s] 85%|########4 | 22/26 [00:00<00:00, 40.24it/s]100%|##########| 26/26 [00:00<00:00, 33.75it/s]
Test: [   0/  26]	Loss 0.246 (0.246)	test_acc   0.89 (  0.89)	test_minacc   0.47 (  0.47)	test_majacc   0.96 (  0.96)	Loss_d 0.246 (0.246)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.224 (0.226)	test_acc   0.90 (  0.90)	test_minacc   0.49 (  0.53)	test_majacc   0.96 (  0.97)	Loss_d 0.224 (0.226)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.49 (  0.53)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.88 (  0.86)
Test: [  20/  26]	Loss 0.202 (0.226)	test_acc   0.91 (  0.90)	test_minacc   0.53 (  0.54)	test_majacc   0.98 (  0.97)	Loss_d 0.202 (0.226)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.53 (  0.54)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.87 (  0.86)
Test: [  26/  26]	Loss 0.140 (0.218)	test_acc   0.95 (  0.91)	test_minacc   0.71 (  0.56)	test_majacc   0.99 (  0.97)	Loss_d 0.140 (0.218)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.71 (  0.56)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.86 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.41it/s]
Test: [  0/  1]	Loss 2.132 (2.132)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.99 (  0.99)	Loss_d 2.132 (2.132)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 2.132 (2.132)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.99 (  0.99)	Loss_d 2.132 (2.132)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.79 (  0.79)
Overall Timing[ 11/  1]	epoch_time 0.0417 (0.0458)	validation_time 0.0005 (0.0010)	train_time 0.0412 (0.0447)
record: (train_acc, test_acc) (0.9012000213861465, 0.24500000476837158)
last accs (train_acc, test_acc) (0.908700021147728, 0.24400001764297485)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.87it/s] 19%|#9        | 5/26 [00:00<00:00, 24.76it/s] 35%|###4      | 9/26 [00:00<00:00, 28.47it/s] 50%|#####     | 13/26 [00:00<00:00, 30.83it/s] 65%|######5   | 17/26 [00:00<00:00, 32.08it/s] 81%|########  | 21/26 [00:00<00:00, 32.96it/s] 96%|#########6| 25/26 [00:00<00:00, 33.49it/s]100%|##########| 26/26 [00:00<00:00, 29.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.186 (0.241)	train_nll   0.19 (  0.24)	train_penalty   0.01 (  0.01)	weight_norm  23.82 ( 23.66)	train_acc   0.92 (  0.90)	train_minacc   0.56 (  0.58)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.6307 (6.8997)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.17it/s] 23%|##3       | 6/26 [00:00<00:00, 30.64it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.64it/s] 42%|####2     | 11/26 [00:00<00:00, 37.26it/s] 62%|######1   | 16/26 [00:00<00:00, 41.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.08it/s] 81%|########  | 21/26 [00:00<00:00, 42.34it/s]100%|##########| 26/26 [00:00<00:00, 44.12it/s]100%|##########| 26/26 [00:00<00:00, 36.98it/s]
Test: [   0/  26]	Loss 0.255 (0.255)	test_acc   0.89 (  0.89)	test_minacc   0.38 (  0.38)	test_majacc   0.98 (  0.98)	Loss_d 0.255 (0.255)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.210 (0.225)	test_acc   0.91 (  0.90)	test_minacc   0.47 (  0.51)	test_majacc   0.99 (  0.97)	Loss_d 0.210 (0.225)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.89 (  0.87)
Test: [  20/  26]	Loss 0.208 (0.225)	test_acc   0.92 (  0.91)	test_minacc   0.56 (  0.52)	test_majacc   0.98 (  0.98)	Loss_d 0.208 (0.225)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.56 (  0.52)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.87)
Test: [  26/  26]	Loss 0.151 (0.219)	test_acc   0.95 (  0.91)	test_minacc   0.74 (  0.53)	test_majacc   0.98 (  0.98)	Loss_d 0.151 (0.219)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.74 (  0.53)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.90it/s]
Test: [  0/  1]	Loss 2.041 (2.041)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   0.99 (  0.99)	Loss_d 2.041 (2.041)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 2.041 (2.041)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   0.99 (  0.99)	Loss_d 2.041 (2.041)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.80 (  0.80)
Overall Timing[ 12/  1]	epoch_time 0.0396 (0.0453)	validation_time 0.0004 (0.0009)	train_time 0.0392 (0.0443)
record: (train_acc, test_acc) (0.9012000213861465, 0.24500000476837158)
last accs (train_acc, test_acc) (0.909200019955635, 0.22700001299381256)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 19%|#9        | 5/26 [00:00<00:01, 20.39it/s] 35%|###4      | 9/26 [00:00<00:00, 26.12it/s] 50%|#####     | 13/26 [00:00<00:00, 29.41it/s] 65%|######5   | 17/26 [00:00<00:00, 31.51it/s] 81%|########  | 21/26 [00:00<00:00, 32.84it/s] 96%|#########6| 25/26 [00:00<00:00, 33.66it/s]100%|##########| 26/26 [00:00<00:00, 28.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.203 (0.224)	train_nll   0.20 (  0.22)	train_penalty   0.01 (  0.01)	weight_norm  24.17 ( 24.00)	train_acc   0.91 (  0.91)	train_minacc   0.44 (  0.61)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7523 (7.2400)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.14it/s] 23%|##3       | 6/26 [00:00<00:00, 27.87it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.87it/s] 42%|####2     | 11/26 [00:00<00:00, 35.09it/s] 62%|######1   | 16/26 [00:00<00:00, 40.05it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.05it/s] 81%|########  | 21/26 [00:00<00:00, 38.98it/s]100%|##########| 26/26 [00:00<00:00, 41.40it/s]100%|##########| 26/26 [00:00<00:00, 34.36it/s]
Test: [   0/  26]	Loss 0.248 (0.248)	test_acc   0.89 (  0.89)	test_minacc   0.44 (  0.44)	test_majacc   0.97 (  0.97)	Loss_d 0.248 (0.248)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.227 (0.230)	test_acc   0.90 (  0.90)	test_minacc   0.45 (  0.47)	test_majacc   0.97 (  0.98)	Loss_d 0.227 (0.230)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.204 (0.227)	test_acc   0.92 (  0.90)	test_minacc   0.51 (  0.48)	test_majacc   0.99 (  0.98)	Loss_d 0.204 (0.227)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.51 (  0.48)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.163 (0.219)	test_acc   0.95 (  0.91)	test_minacc   0.68 (  0.49)	test_majacc   0.99 (  0.98)	Loss_d 0.163 (0.219)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.68 (  0.49)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.88 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.86it/s]
Test: [  0/  1]	Loss 2.164 (2.164)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 2.164 (2.164)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 2.164 (2.164)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 2.164 (2.164)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.84 (  0.84)
Overall Timing[ 13/  1]	epoch_time 0.0382 (0.0448)	validation_time 0.0004 (0.0009)	train_time 0.0378 (0.0438)
record: (train_acc, test_acc) (0.9012000213861465, 0.24500000476837158)
last accs (train_acc, test_acc) (0.9068000200986862, 0.1990000158548355)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 15%|#5        | 4/26 [00:00<00:01, 19.82it/s] 27%|##6       | 7/26 [00:00<00:00, 24.15it/s] 42%|####2     | 11/26 [00:00<00:00, 27.33it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.90it/s] 88%|########8 | 23/26 [00:00<00:00, 33.10it/s]100%|##########| 26/26 [00:00<00:00, 28.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.174 (0.195)	train_nll   0.17 (  0.20)	train_penalty   0.00 (  0.01)	weight_norm  24.56 ( 24.37)	train_acc   0.92 (  0.92)	train_minacc   0.65 (  0.69)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.4505 (7.4270)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.56it/s] 23%|##3       | 6/26 [00:00<00:00, 30.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.77it/s] 42%|####2     | 11/26 [00:00<00:00, 37.99it/s] 62%|######1   | 16/26 [00:00<00:00, 41.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.95it/s] 81%|########  | 21/26 [00:00<00:00, 42.89it/s]100%|##########| 26/26 [00:00<00:00, 44.68it/s]100%|##########| 26/26 [00:00<00:00, 37.06it/s]
Test: [   0/  26]	Loss 0.221 (0.221)	test_acc   0.89 (  0.89)	test_minacc   0.60 (  0.60)	test_majacc   0.94 (  0.94)	Loss_d 0.221 (0.221)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.190 (0.210)	test_acc   0.91 (  0.91)	test_minacc   0.67 (  0.66)	test_majacc   0.95 (  0.95)	Loss_d 0.190 (0.210)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.67 (  0.66)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.80 (  0.79)
Test: [  20/  26]	Loss 0.127 (0.191)	test_acc   0.96 (  0.92)	test_minacc   0.78 (  0.70)	test_majacc   0.99 (  0.96)	Loss_d 0.127 (0.191)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.78 (  0.70)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.79 (  0.79)
Test: [  26/  26]	Loss 0.083 (0.178)	test_acc   0.98 (  0.93)	test_minacc   0.85 (  0.72)	test_majacc   1.00 (  0.97)	Loss_d 0.083 (0.178)	test_acc_d   0.98 (  0.93)	test_minacc_d   0.85 (  0.72)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.80 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.81it/s]
Test: [  0/  1]	Loss 2.439 (2.439)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.95 (  0.95)	Loss_d 2.439 (2.439)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 2.439 (2.439)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.95 (  0.95)	Loss_d 2.439 (2.439)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.65 (  0.65)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/113/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0396 (0.0445)	validation_time 0.0005 (0.0009)	train_time 0.0391 (0.0435)
record: (train_acc, test_acc) (0.9286000221371651, 0.3140000104904175)
last accs (train_acc, test_acc) (0.9286000221371651, 0.3140000104904175)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.36it/s] 19%|#9        | 5/26 [00:00<00:01, 14.22it/s] 35%|###4      | 9/26 [00:00<00:00, 21.10it/s] 50%|#####     | 13/26 [00:00<00:00, 25.59it/s] 65%|######5   | 17/26 [00:00<00:00, 28.28it/s] 81%|########  | 21/26 [00:00<00:00, 30.36it/s] 96%|#########6| 25/26 [00:00<00:00, 32.25it/s]100%|##########| 26/26 [00:01<00:00, 24.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.006 (0.076)	train_nll   0.32 (  0.24)	train_penalty   0.01 (  0.00)	weight_norm  24.94 ( 24.79)	train_acc   0.85 (  0.89)	train_minacc   1.00 (  0.75)	train_majacc   0.82 (  0.92)	train_corr   0.00 (  0.00)	l1 6.2375 (7.0155)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.19it/s] 23%|##3       | 6/26 [00:00<00:00, 26.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.18it/s] 42%|####2     | 11/26 [00:00<00:00, 34.17it/s] 62%|######1   | 16/26 [00:00<00:00, 39.35it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.35it/s] 81%|########  | 21/26 [00:00<00:00, 38.24it/s]100%|##########| 26/26 [00:00<00:00, 41.36it/s]100%|##########| 26/26 [00:00<00:00, 33.72it/s]
Test: [   0/  26]	Loss 0.446 (0.446)	test_acc   0.76 (  0.76)	test_minacc   0.93 (  0.93)	test_majacc   0.73 (  0.73)	Loss_d 0.446 (0.446)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.355 (0.382)	test_acc   0.82 (  0.81)	test_minacc   0.93 (  0.95)	test_majacc   0.80 (  0.79)	Loss_d 0.355 (0.382)	test_acc_d   0.82 (  0.81)	test_minacc_d   0.93 (  0.95)	test_majacc_d   0.80 (  0.79)	test_corr_d   0.52 (  0.45)
Test: [  20/  26]	Loss 0.399 (0.375)	test_acc   0.82 (  0.82)	test_minacc   0.93 (  0.94)	test_majacc   0.80 (  0.80)	Loss_d 0.399 (0.375)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.93 (  0.94)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.50 (  0.46)
Test: [  26/  26]	Loss 0.364 (0.382)	test_acc   0.81 (  0.81)	test_minacc   1.00 (  0.94)	test_majacc   0.78 (  0.79)	Loss_d 0.364 (0.382)	test_acc_d   0.81 (  0.81)	test_minacc_d   1.00 (  0.94)	test_majacc_d   0.78 (  0.79)	test_corr_d   0.47 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.22it/s]
Test: [  0/  1]	Loss 0.973 (0.973)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.83 (  0.83)	Loss_d 0.973 (0.973)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.973 (0.973)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.83 (  0.83)	Loss_d 0.973 (0.973)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.03 (  0.03)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/113/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0415 (0.0443)	validation_time 0.0006 (0.0009)	train_time 0.0408 (0.0433)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.97it/s] 19%|#9        | 5/26 [00:00<00:00, 21.96it/s] 35%|###4      | 9/26 [00:00<00:00, 27.41it/s] 50%|#####     | 13/26 [00:00<00:00, 29.09it/s] 65%|######5   | 17/26 [00:00<00:00, 30.06it/s] 81%|########  | 21/26 [00:00<00:00, 31.43it/s] 96%|#########6| 25/26 [00:00<00:00, 32.38it/s]100%|##########| 26/26 [00:00<00:00, 28.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.003 (0.003)	train_nll   0.40 (  0.42)	train_penalty   0.00 (  0.00)	weight_norm  25.03 ( 25.00)	train_acc   0.80 (  0.79)	train_minacc   0.85 (  0.87)	train_majacc   0.80 (  0.78)	train_corr   0.00 (  0.00)	l1 5.6419 (5.9101)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.93it/s] 23%|##3       | 6/26 [00:00<00:00, 32.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.84it/s] 42%|####2     | 11/26 [00:00<00:00, 38.13it/s] 62%|######1   | 16/26 [00:00<00:00, 41.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.99it/s] 81%|########  | 21/26 [00:00<00:00, 40.32it/s]100%|##########| 26/26 [00:00<00:00, 42.95it/s]100%|##########| 26/26 [00:00<00:00, 36.42it/s]
Test: [   0/  26]	Loss 0.371 (0.371)	test_acc   0.83 (  0.83)	test_minacc   0.78 (  0.78)	test_majacc   0.84 (  0.84)	Loss_d 0.371 (0.371)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.355 (0.362)	test_acc   0.84 (  0.83)	test_minacc   0.73 (  0.82)	test_majacc   0.86 (  0.83)	Loss_d 0.355 (0.362)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.73 (  0.82)	test_majacc_d   0.86 (  0.83)	test_corr_d   0.66 (  0.60)
Test: [  20/  26]	Loss 0.384 (0.368)	test_acc   0.81 (  0.83)	test_minacc   0.71 (  0.79)	test_majacc   0.82 (  0.83)	Loss_d 0.384 (0.368)	test_acc_d   0.81 (  0.83)	test_minacc_d   0.71 (  0.79)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.63 (  0.61)
Test: [  26/  26]	Loss 0.391 (0.372)	test_acc   0.81 (  0.82)	test_minacc   0.85 (  0.78)	test_majacc   0.80 (  0.83)	Loss_d 0.391 (0.372)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.85 (  0.78)	test_majacc_d   0.80 (  0.83)	test_corr_d   0.59 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.20it/s]
Test: [  0/  1]	Loss 1.123 (1.123)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.85 (  0.85)	Loss_d 1.123 (1.123)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 1.123 (1.123)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.85 (  0.85)	Loss_d 1.123 (1.123)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.37 (  0.37)
Overall Timing[ 16/  1]	epoch_time 0.0405 (0.0441)	validation_time 0.0003 (0.0008)	train_time 0.0402 (0.0431)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.8241000213623046, 0.4480000138282776)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.01it/s] 12%|#1        | 3/26 [00:00<00:02, 10.89it/s] 19%|#9        | 5/26 [00:00<00:01, 14.18it/s] 35%|###4      | 9/26 [00:00<00:00, 22.47it/s] 50%|#####     | 13/26 [00:00<00:00, 25.96it/s] 65%|######5   | 17/26 [00:00<00:00, 29.05it/s] 81%|########  | 21/26 [00:00<00:00, 31.29it/s] 96%|#########6| 25/26 [00:00<00:00, 32.59it/s]100%|##########| 26/26 [00:01<00:00, 24.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.002 (0.002)	train_nll   0.45 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  25.04 ( 25.04)	train_acc   0.76 (  0.79)	train_minacc   0.85 (  0.81)	train_majacc   0.74 (  0.79)	train_corr   0.00 (  0.00)	l1 5.6690 (5.7022)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.41it/s] 23%|##3       | 6/26 [00:00<00:00, 26.46it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.46it/s] 42%|####2     | 11/26 [00:00<00:00, 34.38it/s] 62%|######1   | 16/26 [00:00<00:00, 39.13it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.13it/s] 81%|########  | 21/26 [00:00<00:00, 37.63it/s]100%|##########| 26/26 [00:00<00:00, 40.58it/s]100%|##########| 26/26 [00:00<00:00, 33.41it/s]
Test: [   0/  26]	Loss 0.439 (0.439)	test_acc   0.76 (  0.76)	test_minacc   0.84 (  0.84)	test_majacc   0.75 (  0.75)	Loss_d 0.439 (0.439)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.375 (0.406)	test_acc   0.81 (  0.78)	test_minacc   0.84 (  0.85)	test_majacc   0.81 (  0.77)	Loss_d 0.375 (0.406)	test_acc_d   0.81 (  0.78)	test_minacc_d   0.84 (  0.85)	test_majacc_d   0.81 (  0.77)	test_corr_d   0.57 (  0.50)
Test: [  20/  26]	Loss 0.428 (0.410)	test_acc   0.78 (  0.78)	test_minacc   0.80 (  0.84)	test_majacc   0.78 (  0.77)	Loss_d 0.428 (0.410)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.80 (  0.84)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.53 (  0.51)
Test: [  26/  26]	Loss 0.434 (0.414)	test_acc   0.78 (  0.78)	test_minacc   0.85 (  0.83)	test_majacc   0.77 (  0.77)	Loss_d 0.434 (0.414)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.85 (  0.83)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.49 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.53it/s]
Test: [  0/  1]	Loss 1.062 (1.062)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.82 (  0.82)	Loss_d 1.062 (1.062)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 1.062 (1.062)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.82 (  0.82)	Loss_d 1.062 (1.062)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.19 (  0.19)
Overall Timing[ 17/  1]	epoch_time 0.0401 (0.0439)	validation_time 0.0004 (0.0008)	train_time 0.0397 (0.0429)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.7818000285625458, 0.5440000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.19it/s] 23%|##3       | 6/26 [00:00<00:00, 26.56it/s] 38%|###8      | 10/26 [00:00<00:00, 30.07it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.64it/s] 69%|######9   | 18/26 [00:00<00:00, 32.73it/s] 85%|########4 | 22/26 [00:00<00:00, 33.37it/s]100%|##########| 26/26 [00:00<00:00, 33.85it/s]100%|##########| 26/26 [00:00<00:00, 29.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.003)	train_nll   0.37 (  0.39)	train_penalty   0.00 (  0.00)	weight_norm  25.06 ( 25.05)	train_acc   0.81 (  0.80)	train_minacc   0.82 (  0.83)	train_majacc   0.81 (  0.79)	train_corr   0.00 (  0.00)	l1 5.7137 (5.5987)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s]  8%|7         | 2/26 [00:00<00:03,  6.61it/s] 27%|##6       | 7/26 [00:00<00:00, 21.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.17it/s] 50%|#####     | 13/26 [00:00<00:00, 33.74it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.46it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.46it/s] 96%|#########6| 25/26 [00:00<00:00, 44.32it/s]100%|##########| 26/26 [00:00<00:00, 31.93it/s]
Test: [   0/  26]	Loss 0.372 (0.372)	test_acc   0.81 (  0.81)	test_minacc   0.82 (  0.82)	test_majacc   0.81 (  0.81)	Loss_d 0.372 (0.372)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.322 (0.364)	test_acc   0.85 (  0.82)	test_minacc   0.78 (  0.82)	test_majacc   0.86 (  0.81)	Loss_d 0.322 (0.364)	test_acc_d   0.85 (  0.82)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.86 (  0.81)	test_corr_d   0.65 (  0.59)
Test: [  20/  26]	Loss 0.387 (0.368)	test_acc   0.80 (  0.82)	test_minacc   0.73 (  0.80)	test_majacc   0.81 (  0.82)	Loss_d 0.387 (0.368)	test_acc_d   0.80 (  0.82)	test_minacc_d   0.73 (  0.80)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.61 (  0.59)
Test: [  26/  26]	Loss 0.385 (0.369)	test_acc   0.81 (  0.81)	test_minacc   0.82 (  0.79)	test_majacc   0.81 (  0.82)	Loss_d 0.385 (0.369)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.82 (  0.79)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.59 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.92it/s]
Test: [  0/  1]	Loss 1.373 (1.373)	test_acc   0.46 (  0.46)	test_minacc   0.42 (  0.42)	test_majacc   0.85 (  0.85)	Loss_d 1.373 (1.373)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.373 (1.373)	test_acc   0.46 (  0.46)	test_minacc   0.42 (  0.42)	test_majacc   0.85 (  0.85)	Loss_d 1.373 (1.373)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Overall Timing[ 18/  1]	epoch_time 0.0408 (0.0437)	validation_time 0.0004 (0.0008)	train_time 0.0404 (0.0428)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.8144000314474106, 0.4620000123977661)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.77it/s] 19%|#9        | 5/26 [00:00<00:01, 15.41it/s] 35%|###4      | 9/26 [00:00<00:00, 22.05it/s] 50%|#####     | 13/26 [00:00<00:00, 26.57it/s] 65%|######5   | 17/26 [00:00<00:00, 29.18it/s] 81%|########  | 21/26 [00:00<00:00, 31.36it/s] 96%|#########6| 25/26 [00:00<00:00, 33.03it/s]100%|##########| 26/26 [00:01<00:00, 25.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.005 (0.002)	train_nll   0.33 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm  25.07 ( 25.07)	train_acc   0.84 (  0.82)	train_minacc   0.94 (  0.82)	train_majacc   0.82 (  0.83)	train_corr   0.00 (  0.00)	l1 5.3883 (5.6896)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.83it/s] 23%|##3       | 6/26 [00:00<00:00, 30.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.47it/s] 42%|####2     | 11/26 [00:00<00:00, 36.94it/s] 62%|######1   | 16/26 [00:00<00:00, 40.70it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.70it/s] 81%|########  | 21/26 [00:00<00:00, 38.88it/s]100%|##########| 26/26 [00:00<00:00, 42.05it/s]100%|##########| 26/26 [00:00<00:00, 35.41it/s]
Test: [   0/  26]	Loss 0.347 (0.347)	test_acc   0.82 (  0.82)	test_minacc   0.91 (  0.91)	test_majacc   0.80 (  0.80)	Loss_d 0.347 (0.347)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.332 (0.349)	test_acc   0.85 (  0.82)	test_minacc   0.85 (  0.90)	test_majacc   0.84 (  0.81)	Loss_d 0.332 (0.349)	test_acc_d   0.85 (  0.82)	test_minacc_d   0.85 (  0.90)	test_majacc_d   0.84 (  0.81)	test_corr_d   0.61 (  0.56)
Test: [  20/  26]	Loss 0.363 (0.345)	test_acc   0.81 (  0.83)	test_minacc   0.89 (  0.89)	test_majacc   0.79 (  0.82)	Loss_d 0.363 (0.345)	test_acc_d   0.81 (  0.83)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.79 (  0.82)	test_corr_d   0.59 (  0.56)
Test: [  26/  26]	Loss 0.342 (0.350)	test_acc   0.82 (  0.83)	test_minacc   0.94 (  0.89)	test_majacc   0.81 (  0.82)	Loss_d 0.342 (0.350)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.94 (  0.89)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.56 (  0.57)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.74it/s]
Test: [  0/  1]	Loss 1.115 (1.115)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.89 (  0.89)	Loss_d 1.115 (1.115)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.115 (1.115)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.89 (  0.89)	Loss_d 1.115 (1.115)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.30 (  0.30)
Overall Timing[ 19/  1]	epoch_time 0.0389 (0.0435)	validation_time 0.0003 (0.0008)	train_time 0.0386 (0.0426)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.8259000267386436, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.30it/s] 19%|#9        | 5/26 [00:00<00:01, 18.45it/s] 35%|###4      | 9/26 [00:00<00:00, 24.63it/s] 50%|#####     | 13/26 [00:00<00:00, 28.02it/s] 65%|######5   | 17/26 [00:00<00:00, 30.12it/s] 81%|########  | 21/26 [00:00<00:00, 31.90it/s] 96%|#########6| 25/26 [00:00<00:00, 33.27it/s]100%|##########| 26/26 [00:00<00:00, 26.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.003 (0.002)	train_nll   0.36 (  0.39)	train_penalty   0.00 (  0.00)	weight_norm  25.09 ( 25.08)	train_acc   0.81 (  0.80)	train_minacc   0.79 (  0.87)	train_majacc   0.81 (  0.79)	train_corr   0.00 (  0.00)	l1 5.3514 (5.5414)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.12it/s] 27%|##6       | 7/26 [00:00<00:00, 31.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.66it/s] 46%|####6     | 12/26 [00:00<00:00, 39.13it/s] 65%|######5   | 17/26 [00:00<00:00, 42.28it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.28it/s] 85%|########4 | 22/26 [00:00<00:00, 43.71it/s]100%|##########| 26/26 [00:00<00:00, 37.58it/s]
Test: [   0/  26]	Loss 0.356 (0.356)	test_acc   0.82 (  0.82)	test_minacc   0.84 (  0.84)	test_majacc   0.82 (  0.82)	Loss_d 0.356 (0.356)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.343 (0.342)	test_acc   0.85 (  0.83)	test_minacc   0.76 (  0.82)	test_majacc   0.86 (  0.84)	Loss_d 0.343 (0.342)	test_acc_d   0.85 (  0.83)	test_minacc_d   0.76 (  0.82)	test_majacc_d   0.86 (  0.84)	test_corr_d   0.67 (  0.63)
Test: [  20/  26]	Loss 0.346 (0.341)	test_acc   0.82 (  0.83)	test_minacc   0.78 (  0.80)	test_majacc   0.82 (  0.84)	Loss_d 0.346 (0.341)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.82 (  0.84)	test_corr_d   0.65 (  0.63)
Test: [  26/  26]	Loss 0.359 (0.345)	test_acc   0.82 (  0.83)	test_minacc   0.79 (  0.79)	test_majacc   0.82 (  0.84)	Loss_d 0.359 (0.345)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.82 (  0.84)	test_corr_d   0.63 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.61it/s]
Test: [  0/  1]	Loss 1.274 (1.274)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 1.274 (1.274)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 1.274 (1.274)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 1.274 (1.274)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.47 (  0.47)
Overall Timing[ 20/  1]	epoch_time 0.0439 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0435 (0.0426)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.8297000260949134, 0.4480000138282776)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.77it/s] 19%|#9        | 5/26 [00:00<00:00, 23.89it/s] 35%|###4      | 9/26 [00:00<00:00, 28.68it/s] 50%|#####     | 13/26 [00:00<00:00, 31.25it/s] 65%|######5   | 17/26 [00:00<00:00, 32.34it/s] 81%|########  | 21/26 [00:00<00:00, 33.38it/s] 96%|#########6| 25/26 [00:00<00:00, 34.16it/s]100%|##########| 26/26 [00:00<00:00, 29.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.001)	train_nll   0.40 (  0.38)	train_penalty   0.00 (  0.00)	weight_norm  25.10 ( 25.09)	train_acc   0.78 (  0.80)	train_minacc   0.88 (  0.85)	train_majacc   0.77 (  0.79)	train_corr   0.00 (  0.00)	l1 5.4986 (5.4729)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.14it/s] 23%|##3       | 6/26 [00:00<00:01, 17.49it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.49it/s] 42%|####2     | 11/26 [00:00<00:00, 26.38it/s] 62%|######1   | 16/26 [00:00<00:00, 33.04it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.04it/s] 81%|########  | 21/26 [00:00<00:00, 34.05it/s]100%|##########| 26/26 [00:00<00:00, 38.16it/s]100%|##########| 26/26 [00:00<00:00, 28.11it/s]
Test: [   0/  26]	Loss 0.404 (0.404)	test_acc   0.78 (  0.78)	test_minacc   0.84 (  0.84)	test_majacc   0.77 (  0.77)	Loss_d 0.404 (0.404)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.349 (0.378)	test_acc   0.83 (  0.80)	test_minacc   0.87 (  0.87)	test_majacc   0.82 (  0.78)	Loss_d 0.349 (0.378)	test_acc_d   0.83 (  0.80)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.82 (  0.78)	test_corr_d   0.60 (  0.54)
Test: [  20/  26]	Loss 0.374 (0.374)	test_acc   0.81 (  0.80)	test_minacc   0.85 (  0.86)	test_majacc   0.80 (  0.79)	Loss_d 0.374 (0.374)	test_acc_d   0.81 (  0.80)	test_minacc_d   0.85 (  0.86)	test_majacc_d   0.80 (  0.79)	test_corr_d   0.58 (  0.55)
Test: [  26/  26]	Loss 0.388 (0.377)	test_acc   0.79 (  0.80)	test_minacc   0.88 (  0.86)	test_majacc   0.77 (  0.79)	Loss_d 0.388 (0.377)	test_acc_d   0.79 (  0.80)	test_minacc_d   0.88 (  0.86)	test_majacc_d   0.77 (  0.79)	test_corr_d   0.54 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.97it/s]
Test: [  0/  1]	Loss 1.191 (1.191)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.84 (  0.84)	Loss_d 1.191 (1.191)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 1.191 (1.191)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.84 (  0.84)	Loss_d 1.191 (1.191)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.28 (  0.28)
Overall Timing[ 21/  1]	epoch_time 0.0392 (0.0433)	validation_time 0.0007 (0.0007)	train_time 0.0385 (0.0424)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.8001000337004661, 0.5250000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.75it/s] 19%|#9        | 5/26 [00:00<00:00, 22.48it/s] 35%|###4      | 9/26 [00:00<00:00, 28.08it/s] 50%|#####     | 13/26 [00:00<00:00, 30.59it/s] 65%|######5   | 17/26 [00:00<00:00, 31.97it/s] 81%|########  | 21/26 [00:00<00:00, 32.98it/s] 96%|#########6| 25/26 [00:00<00:00, 34.52it/s]100%|##########| 26/26 [00:00<00:00, 29.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.001 (0.001)	train_nll   0.35 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  25.10 ( 25.10)	train_acc   0.82 (  0.81)	train_minacc   0.91 (  0.84)	train_majacc   0.81 (  0.80)	train_corr   0.00 (  0.00)	l1 5.3646 (5.4866)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.22it/s] 27%|##6       | 7/26 [00:00<00:00, 29.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.92it/s] 46%|####6     | 12/26 [00:00<00:00, 37.25it/s] 65%|######5   | 17/26 [00:00<00:00, 41.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.10it/s] 85%|########4 | 22/26 [00:00<00:00, 39.38it/s]100%|##########| 26/26 [00:00<00:00, 36.68it/s]
Test: [   0/  26]	Loss 0.365 (0.365)	test_acc   0.80 (  0.80)	test_minacc   0.84 (  0.84)	test_majacc   0.79 (  0.79)	Loss_d 0.365 (0.365)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.326 (0.356)	test_acc   0.83 (  0.81)	test_minacc   0.82 (  0.84)	test_majacc   0.84 (  0.81)	Loss_d 0.326 (0.356)	test_acc_d   0.83 (  0.81)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.84 (  0.81)	test_corr_d   0.64 (  0.59)
Test: [  20/  26]	Loss 0.342 (0.347)	test_acc   0.82 (  0.82)	test_minacc   0.85 (  0.84)	test_majacc   0.81 (  0.82)	Loss_d 0.342 (0.347)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.85 (  0.84)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.62 (  0.60)
Test: [  26/  26]	Loss 0.350 (0.349)	test_acc   0.82 (  0.82)	test_minacc   0.91 (  0.84)	test_majacc   0.81 (  0.82)	Loss_d 0.350 (0.349)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.91 (  0.84)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.59 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.24it/s]
Test: [  0/  1]	Loss 1.272 (1.272)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.85 (  0.85)	Loss_d 1.272 (1.272)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 1.272 (1.272)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.85 (  0.85)	Loss_d 1.272 (1.272)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Overall Timing[ 22/  1]	epoch_time 0.0409 (0.0432)	validation_time 0.0004 (0.0007)	train_time 0.0404 (0.0424)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.8194000222682953, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.77it/s] 23%|##3       | 6/26 [00:00<00:00, 26.83it/s] 35%|###4      | 9/26 [00:00<00:00, 25.67it/s] 50%|#####     | 13/26 [00:00<00:00, 27.33it/s] 65%|######5   | 17/26 [00:00<00:00, 30.21it/s] 81%|########  | 21/26 [00:00<00:00, 30.51it/s] 96%|#########6| 25/26 [00:00<00:00, 30.50it/s]100%|##########| 26/26 [00:00<00:00, 27.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 5.4269866943359375
set z to 5.372716827392578
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 413 tensor(-0.0069, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 289 tensor(-0.0064, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 224 tensor(0.0216, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 209 tensor(0.0119, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 205 tensor(0.0043, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.035 (0.093)	train_nll   0.71 (  0.52)	train_penalty   0.03 (  0.09)	weight_norm  27.48 ( 25.73)	train_acc   0.63 (  0.75)	train_minacc   0.68 (  0.64)	train_majacc   0.62 (  0.77)	train_corr   0.00 (  0.00)	l1 6.6826 (6.8765)	zero_count 0.0000 (35.4510)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.91it/s] 31%|###       | 8/26 [00:00<00:00, 37.11it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.11it/s] 50%|#####     | 13/26 [00:00<00:00, 40.81it/s] 69%|######9   | 18/26 [00:00<00:00, 43.59it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.59it/s] 88%|########8 | 23/26 [00:00<00:00, 41.28it/s]100%|##########| 26/26 [00:00<00:00, 39.02it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.53 (  0.53)	Loss_d 0.595 (0.595)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.587 (0.603)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.587 (0.603)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.49 (  0.47)
Test: [  20/  26]	Loss 0.598 (0.606)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.598 (0.606)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.603 (0.607)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.603 (0.607)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.56it/s]
Test: [  0/  1]	Loss 1.767 (1.767)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.767 (1.767)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.767 (1.767)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.767 (1.767)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 23/  1]	epoch_time 0.0416 (0.0431)	validation_time 0.0003 (0.0007)	train_time 0.0412 (0.0423)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.5000000135600566, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.59it/s] 19%|#9        | 5/26 [00:00<00:01, 16.71it/s] 35%|###4      | 9/26 [00:00<00:00, 22.47it/s] 50%|#####     | 13/26 [00:00<00:00, 25.65it/s] 65%|######5   | 17/26 [00:00<00:00, 27.44it/s] 81%|########  | 21/26 [00:00<00:00, 29.79it/s] 96%|#########6| 25/26 [00:00<00:00, 30.32it/s]100%|##########| 26/26 [00:01<00:00, 24.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 202 tensor(0.0021, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 197 tensor(0.0036, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 195 tensor(0.0022, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 192 tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 195 tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 204 tensor(0.0002, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.002)	train_nll   0.64 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  29.22 ( 28.68)	train_acc   0.49 (  0.59)	train_minacc   0.44 (  0.63)	train_majacc   0.50 (  0.59)	train_corr   0.00 (  0.00)	l1 5.5213 (5.7159)	zero_count 0.0000 (73.3200)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.37it/s] 27%|##6       | 7/26 [00:00<00:00, 35.01it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.01it/s] 50%|#####     | 13/26 [00:00<00:00, 39.77it/s] 69%|######9   | 18/26 [00:00<00:00, 42.47it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.47it/s] 88%|########8 | 23/26 [00:00<00:00, 42.61it/s]100%|##########| 26/26 [00:00<00:00, 38.09it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.53 (  0.53)	Loss_d 0.639 (0.639)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.654 (0.654)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.51 (  0.50)	Loss_d 0.654 (0.654)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.31 (  0.32)
Test: [  20/  26]	Loss 0.646 (0.652)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.646 (0.652)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.35 (  0.31)
Test: [  26/  26]	Loss 0.649 (0.653)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.649 (0.653)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.28 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.67it/s]
Test: [  0/  1]	Loss 1.087 (1.087)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.087 (1.087)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.087 (1.087)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.087 (1.087)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 24/  1]	epoch_time 0.0407 (0.0430)	validation_time 0.0004 (0.0007)	train_time 0.0402 (0.0422)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.49990001451969146, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.02it/s] 19%|#9        | 5/26 [00:00<00:01, 18.46it/s] 31%|###       | 8/26 [00:00<00:00, 22.23it/s] 42%|####2     | 11/26 [00:00<00:00, 23.85it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.10it/s] 69%|######9   | 18/26 [00:00<00:00, 26.36it/s] 81%|########  | 21/26 [00:00<00:00, 27.09it/s] 96%|#########6| 25/26 [00:00<00:00, 29.75it/s]100%|##########| 26/26 [00:01<00:00, 23.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 203 tensor(4.2546e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 199 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 215 tensor(7.6095e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 237 tensor(8.8461e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 238 tensor(1.5867e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 341 tensor(-1.4332e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.38 ( 29.34)	train_acc   0.46 (  0.50)	train_minacc   0.76 (  0.61)	train_majacc   0.41 (  0.48)	train_corr   0.00 (  0.00)	l1 5.3838 (5.4057)	zero_count 0.0000 (69.0300)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.28it/s] 19%|#9        | 5/26 [00:00<00:01, 18.88it/s] 38%|###8      | 10/26 [00:00<00:00, 29.61it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.61it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.02it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.65it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.65it/s] 96%|#########6| 25/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 31.93it/s]
Test: [   0/  26]	Loss 0.615 (0.615)	test_acc   0.50 (  0.50)	test_minacc   0.73 (  0.73)	test_majacc   0.47 (  0.47)	Loss_d 0.615 (0.615)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.617 (0.621)	test_acc   0.49 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.46 (  0.45)	Loss_d 0.617 (0.621)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.36 (  0.35)
Test: [  20/  26]	Loss 0.623 (0.622)	test_acc   0.47 (  0.49)	test_minacc   0.62 (  0.66)	test_majacc   0.45 (  0.46)	Loss_d 0.623 (0.622)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.62 (  0.66)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.616 (0.624)	test_acc   0.49 (  0.49)	test_minacc   0.76 (  0.66)	test_majacc   0.44 (  0.46)	Loss_d 0.616 (0.624)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.76 (  0.66)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.34 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.86it/s]
Test: [  0/  1]	Loss 1.173 (1.173)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.173 (1.173)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.173 (1.173)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.173 (1.173)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Overall Timing[ 25/  1]	epoch_time 0.0415 (0.0430)	validation_time 0.0003 (0.0007)	train_time 0.0411 (0.0422)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4910000130236149, 0.5190000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.51it/s] 19%|#9        | 5/26 [00:00<00:01, 17.22it/s] 35%|###4      | 9/26 [00:00<00:00, 23.84it/s] 46%|####6     | 12/26 [00:00<00:00, 24.78it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.37it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.66it/s] 85%|########4 | 22/26 [00:00<00:00, 27.85it/s] 96%|#########6| 25/26 [00:01<00:00, 27.01it/s]100%|##########| 26/26 [00:01<00:00, 23.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 379 tensor(1.1282e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 401 tensor(4.1567e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 346 tensor(7.0683e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 335 tensor(3.0757e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 467 tensor(-2.1804e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 470 tensor(2.8549e-07, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.39)	train_acc   0.46 (  0.50)	train_minacc   0.29 (  0.59)	train_majacc   0.49 (  0.48)	train_corr   0.00 (  0.00)	l1 5.3727 (5.3783)	zero_count 44.0000 (30.4670)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.59it/s] 19%|#9        | 5/26 [00:00<00:01, 20.05it/s] 38%|###8      | 10/26 [00:00<00:00, 30.06it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.06it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.88it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.28it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.28it/s] 96%|#########6| 25/26 [00:00<00:00, 39.35it/s]100%|##########| 26/26 [00:00<00:00, 31.56it/s]
Test: [   0/  26]	Loss 0.621 (0.621)	test_acc   0.52 (  0.52)	test_minacc   0.45 (  0.45)	test_majacc   0.53 (  0.53)	Loss_d 0.621 (0.621)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.625 (0.627)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.52)	test_majacc   0.50 (  0.49)	Loss_d 0.625 (0.627)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.52)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.34 (  0.33)
Test: [  20/  26]	Loss 0.630 (0.628)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.630 (0.628)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.46 (  0.50)	test_minacc   0.29 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.624 (0.630)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.29 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.32 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.30it/s]
Test: [  0/  1]	Loss 1.160 (1.160)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.160 (1.160)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 1.160 (1.160)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.160 (1.160)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 26/  1]	epoch_time 0.0432 (0.0430)	validation_time 0.0005 (0.0007)	train_time 0.0427 (0.0422)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4982000097632408, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.65it/s] 19%|#9        | 5/26 [00:00<00:01, 20.79it/s] 35%|###4      | 9/26 [00:00<00:00, 24.01it/s] 50%|#####     | 13/26 [00:00<00:00, 27.28it/s] 62%|######1   | 16/26 [00:00<00:00, 26.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.29it/s] 88%|########8 | 23/26 [00:00<00:00, 29.31it/s]100%|##########| 26/26 [00:00<00:00, 29.46it/s]100%|##########| 26/26 [00:01<00:00, 25.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 449 tensor(7.6824e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 441 tensor(1.3541e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 424 tensor(4.0988e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 417 tensor(3.9339e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 406 tensor(1.7649e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 455 tensor(1.3050e-06, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.51)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3729 (5.3772)	zero_count 0.0000 (17.9010)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.85it/s] 27%|##6       | 7/26 [00:00<00:00, 28.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.19it/s] 46%|####6     | 12/26 [00:00<00:00, 35.12it/s] 65%|######5   | 17/26 [00:00<00:00, 39.18it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.18it/s] 85%|########4 | 22/26 [00:00<00:00, 38.09it/s]100%|##########| 26/26 [00:00<00:00, 34.91it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.53 (  0.53)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.628 (0.630)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.628 (0.630)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.632 (0.631)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.632 (0.631)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.33 (  0.32)
Test: [  26/  26]	Loss 0.627 (0.632)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.627 (0.632)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.77it/s]
Test: [  0/  1]	Loss 1.157 (1.157)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.157 (1.157)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.157 (1.157)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.157 (1.157)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Overall Timing[ 27/  1]	epoch_time 0.0440 (0.0430)	validation_time 0.0004 (0.0007)	train_time 0.0435 (0.0422)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4998000110387802, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.77it/s] 19%|#9        | 5/26 [00:00<00:00, 21.37it/s] 31%|###       | 8/26 [00:00<00:00, 22.80it/s] 42%|####2     | 11/26 [00:00<00:00, 25.28it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.30it/s] 69%|######9   | 18/26 [00:00<00:00, 25.99it/s] 85%|########4 | 22/26 [00:00<00:00, 28.64it/s] 96%|#########6| 25/26 [00:00<00:00, 27.81it/s]100%|##########| 26/26 [00:01<00:00, 24.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 445 tensor(4.2007e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 465 tensor(-1.1307e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 430 tensor(1.7338e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 427 tensor(2.4132e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 405 tensor(1.9937e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 461 tensor(1.5379e-07, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3727 (5.3752)	zero_count 0.0000 (17.1210)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.97it/s] 19%|#9        | 5/26 [00:00<00:00, 24.45it/s]                                               19%|#9        | 5/26 [00:00<00:00, 24.45it/s] 42%|####2     | 11/26 [00:00<00:00, 35.92it/s] 62%|######1   | 16/26 [00:00<00:00, 40.36it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.36it/s] 81%|########  | 21/26 [00:00<00:00, 39.75it/s]100%|##########| 26/26 [00:00<00:00, 42.74it/s]100%|##########| 26/26 [00:00<00:00, 35.20it/s]
Test: [   0/  26]	Loss 0.624 (0.624)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.53 (  0.53)	Loss_d 0.624 (0.624)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.628 (0.630)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.628 (0.630)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.632 (0.631)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.632 (0.631)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.34 (  0.33)
Test: [  26/  26]	Loss 0.627 (0.632)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.627 (0.632)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.01it/s]
Test: [  0/  1]	Loss 1.160 (1.160)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.160 (1.160)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.160 (1.160)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.160 (1.160)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 28/  1]	epoch_time 0.0422 (0.0430)	validation_time 0.0005 (0.0007)	train_time 0.0417 (0.0422)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.5000000112354755, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 12%|#1        | 3/26 [00:00<00:01, 14.06it/s] 27%|##6       | 7/26 [00:00<00:00, 23.18it/s] 42%|####2     | 11/26 [00:00<00:00, 28.03it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.83it/s] 69%|######9   | 18/26 [00:00<00:00, 27.88it/s] 85%|########4 | 22/26 [00:00<00:00, 27.82it/s]100%|##########| 26/26 [00:00<00:00, 29.88it/s]100%|##########| 26/26 [00:01<00:00, 25.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 449 tensor(1.7209e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 428 tensor(6.9936e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 422 tensor(1.5687e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 423 tensor(7.7823e-07, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3732 (5.3733)	zero_count 0.0000 (11.0760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.05it/s] 27%|##6       | 7/26 [00:00<00:00, 27.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.36it/s] 50%|#####     | 13/26 [00:00<00:00, 36.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.42it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.42it/s] 92%|#########2| 24/26 [00:00<00:00, 43.69it/s]100%|##########| 26/26 [00:00<00:00, 35.87it/s]
Test: [   0/  26]	Loss 0.624 (0.624)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.53 (  0.53)	Loss_d 0.624 (0.624)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.628 (0.630)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.628 (0.630)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.631 (0.631)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.631 (0.631)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.34 (  0.33)
Test: [  26/  26]	Loss 0.626 (0.632)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.626 (0.632)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.50it/s]
Test: [  0/  1]	Loss 1.162 (1.162)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.162 (1.162)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.162 (1.162)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.162 (1.162)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 29/  1]	epoch_time 0.0416 (0.0429)	validation_time 0.0003 (0.0007)	train_time 0.0412 (0.0422)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.499900011241436, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 19%|#9        | 5/26 [00:00<00:00, 21.40it/s] 35%|###4      | 9/26 [00:00<00:00, 27.54it/s] 50%|#####     | 13/26 [00:00<00:00, 30.77it/s] 65%|######5   | 17/26 [00:00<00:00, 29.63it/s] 81%|########  | 21/26 [00:00<00:00, 29.14it/s] 96%|#########6| 25/26 [00:00<00:00, 30.33it/s]100%|##########| 26/26 [00:00<00:00, 26.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 424 tensor(7.7192e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 449 tensor(-8.6361e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 434 tensor(9.0522e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 426 tensor(1.4763e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 426 tensor(4.4669e-09, device='cuda:0')
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3737 (5.3727)	zero_count 0.0000 (12.2460)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.64it/s] 12%|#1        | 3/26 [00:00<00:01, 15.20it/s] 35%|###4      | 9/26 [00:00<00:00, 33.10it/s]                                               35%|###4      | 9/26 [00:00<00:00, 33.10it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.74it/s] 77%|#######6  | 20/26 [00:00<00:00, 42.76it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 42.76it/s]100%|##########| 26/26 [00:00<00:00, 46.93it/s]100%|##########| 26/26 [00:00<00:00, 36.46it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.53 (  0.53)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.628 (0.629)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.628 (0.629)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.631 (0.630)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.631 (0.630)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.34 (  0.33)
Test: [  26/  26]	Loss 0.626 (0.632)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.626 (0.632)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.40it/s]
Test: [  0/  1]	Loss 1.163 (1.163)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.163 (1.163)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.163 (1.163)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.163 (1.163)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 30/  1]	epoch_time 0.0439 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0434 (0.0422)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.499900011241436, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.95it/s] 19%|#9        | 5/26 [00:00<00:00, 23.19it/s] 35%|###4      | 9/26 [00:00<00:00, 29.86it/s] 50%|#####     | 13/26 [00:00<00:00, 32.32it/s] 65%|######5   | 17/26 [00:00<00:00, 31.72it/s] 81%|########  | 21/26 [00:00<00:00, 30.49it/s] 96%|#########6| 25/26 [00:00<00:00, 30.28it/s]100%|##########| 26/26 [00:00<00:00, 28.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 465 tensor(-2.8140e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 454 tensor(-1.9178e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 446 tensor(4.5529e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 432 tensor(1.6607e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 429 tensor(3.6816e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3727 (5.3727)	zero_count 79.0000 (11.8420)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.48it/s] 19%|#9        | 5/26 [00:00<00:01, 19.53it/s] 38%|###8      | 10/26 [00:00<00:00, 30.69it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.69it/s] 65%|######5   | 17/26 [00:00<00:00, 37.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.14it/s] 85%|########4 | 22/26 [00:00<00:00, 40.30it/s]100%|##########| 26/26 [00:00<00:00, 32.49it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.53 (  0.53)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.628 (0.629)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.628 (0.629)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.630 (0.630)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.630 (0.630)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.34 (  0.33)
Test: [  26/  26]	Loss 0.625 (0.631)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.625 (0.631)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.90it/s]
Test: [  0/  1]	Loss 1.163 (1.163)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.163 (1.163)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.163 (1.163)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.163 (1.163)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 31/  1]	epoch_time 0.0429 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0422)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4995000124275684, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.02it/s] 15%|#5        | 4/26 [00:00<00:01, 14.37it/s] 31%|###       | 8/26 [00:00<00:00, 22.26it/s] 46%|####6     | 12/26 [00:00<00:00, 26.71it/s] 62%|######1   | 16/26 [00:00<00:00, 29.24it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.59it/s] 92%|#########2| 24/26 [00:00<00:00, 28.92it/s]100%|##########| 26/26 [00:01<00:00, 24.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 428 tensor(1.3583e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 445 tensor(-1.4326e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 440 tensor(2.3334e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 449 tensor(-3.6769e-07, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3725 (5.3726)	zero_count 0.0000 (11.7780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.28it/s] 23%|##3       | 6/26 [00:00<00:00, 30.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.71it/s] 42%|####2     | 11/26 [00:00<00:00, 37.11it/s] 62%|######1   | 16/26 [00:00<00:00, 40.82it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.82it/s] 81%|########  | 21/26 [00:00<00:00, 38.69it/s]100%|##########| 26/26 [00:00<00:00, 41.70it/s]100%|##########| 26/26 [00:00<00:00, 35.26it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.53 (  0.53)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.628 (0.629)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.628 (0.629)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.630 (0.630)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.630 (0.630)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.34 (  0.33)
Test: [  26/  26]	Loss 0.625 (0.631)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.625 (0.631)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.44it/s]
Test: [  0/  1]	Loss 1.164 (1.164)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.164 (1.164)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.164 (1.164)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.164 (1.164)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 32/  1]	epoch_time 0.0400 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0396 (0.0422)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4992000124454498, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.50it/s] 15%|#5        | 4/26 [00:00<00:01, 15.19it/s] 31%|###       | 8/26 [00:00<00:00, 23.27it/s] 46%|####6     | 12/26 [00:00<00:00, 27.61it/s] 62%|######1   | 16/26 [00:00<00:00, 30.21it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.13it/s] 92%|#########2| 24/26 [00:00<00:00, 28.34it/s]100%|##########| 26/26 [00:01<00:00, 24.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 430 tensor(1.5743e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 444 tensor(-2.4763e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 437 tensor(3.2464e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3722 (5.3727)	zero_count 0.0000 (11.0760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.08it/s] 35%|###4      | 9/26 [00:00<00:00, 40.70it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.70it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.26it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.26it/s] 92%|#########2| 24/26 [00:00<00:00, 43.96it/s]100%|##########| 26/26 [00:00<00:00, 39.62it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.53 (  0.53)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.628 (0.629)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.628 (0.629)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.630 (0.630)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.630 (0.630)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.625 (0.631)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.625 (0.631)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.04it/s]
Test: [  0/  1]	Loss 1.165 (1.165)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.165 (1.165)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.165 (1.165)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.165 (1.165)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 33/  1]	epoch_time 0.0404 (0.0428)	validation_time 0.0003 (0.0006)	train_time 0.0400 (0.0421)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.49900001361966134, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.89it/s] 15%|#5        | 4/26 [00:00<00:01, 16.98it/s] 27%|##6       | 7/26 [00:00<00:00, 21.78it/s] 42%|####2     | 11/26 [00:00<00:00, 27.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.37it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.57it/s] 85%|########4 | 22/26 [00:00<00:00, 28.09it/s]100%|##########| 26/26 [00:00<00:00, 29.68it/s]100%|##########| 26/26 [00:01<00:00, 25.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 435 tensor(4.4840e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 440 tensor(-2.3885e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 435 tensor(2.7495e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3721 (5.3726)	zero_count 0.0000 (8.6970)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.60it/s] 31%|###       | 8/26 [00:00<00:00, 41.45it/s]                                               31%|###       | 8/26 [00:00<00:00, 41.45it/s] 50%|#####     | 13/26 [00:00<00:00, 44.31it/s] 69%|######9   | 18/26 [00:00<00:00, 44.65it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.65it/s] 88%|########8 | 23/26 [00:00<00:00, 40.87it/s]100%|##########| 26/26 [00:00<00:00, 39.08it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.628 (0.629)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.628 (0.629)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.630 (0.630)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.630 (0.630)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.625 (0.631)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.625 (0.631)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.50it/s]
Test: [  0/  1]	Loss 1.166 (1.166)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.166 (1.166)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.166 (1.166)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.166 (1.166)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 34/  1]	epoch_time 0.0412 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0407 (0.0421)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.49850001364946367, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 19%|#9        | 5/26 [00:00<00:01, 20.68it/s] 35%|###4      | 9/26 [00:00<00:00, 26.68it/s] 50%|#####     | 13/26 [00:00<00:00, 30.16it/s] 65%|######5   | 17/26 [00:00<00:00, 29.00it/s] 81%|########  | 21/26 [00:00<00:00, 28.22it/s] 96%|#########6| 25/26 [00:00<00:00, 30.13it/s]100%|##########| 26/26 [00:00<00:00, 26.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 426 tensor(-1.5701e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 438 tensor(9.5150e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3722 (5.3727)	zero_count 0.0000 (6.1620)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.59it/s] 27%|##6       | 7/26 [00:00<00:00, 34.10it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.10it/s] 42%|####2     | 11/26 [00:00<00:00, 35.81it/s] 65%|######5   | 17/26 [00:00<00:00, 39.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.34it/s] 85%|########4 | 22/26 [00:00<00:00, 42.75it/s]100%|##########| 26/26 [00:00<00:00, 37.66it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.628 (0.629)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.628 (0.629)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.629 (0.630)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.629 (0.630)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.625 (0.631)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.625 (0.631)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.54it/s]
Test: [  0/  1]	Loss 1.167 (1.167)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.167 (1.167)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.167 (1.167)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.167 (1.167)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 35/  1]	epoch_time 0.0432 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0427 (0.0421)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.49840001365542413, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.89it/s] 19%|#9        | 5/26 [00:00<00:01, 15.14it/s] 35%|###4      | 9/26 [00:00<00:00, 21.33it/s] 50%|#####     | 13/26 [00:00<00:00, 24.70it/s] 62%|######1   | 16/26 [00:00<00:00, 25.15it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.18it/s] 92%|#########2| 24/26 [00:00<00:00, 29.46it/s]100%|##########| 26/26 [00:01<00:00, 23.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 435 tensor(-1.2271e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 431 tensor(-9.0511e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 433 tensor(-3.5818e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3724 (5.3727)	zero_count 0.0000 (9.1260)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 23%|##3       | 6/26 [00:00<00:00, 22.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.51it/s] 42%|####2     | 11/26 [00:00<00:00, 31.41it/s] 62%|######1   | 16/26 [00:00<00:00, 37.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.08it/s] 81%|########  | 21/26 [00:00<00:00, 36.89it/s]100%|##########| 26/26 [00:00<00:00, 40.05it/s]100%|##########| 26/26 [00:00<00:00, 31.26it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.627 (0.628)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.627 (0.628)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.629 (0.630)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.629 (0.630)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.625 (0.631)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.625 (0.631)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.07it/s]
Test: [  0/  1]	Loss 1.168 (1.168)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.168 (1.168)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.168 (1.168)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.168 (1.168)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 36/  1]	epoch_time 0.0439 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0435 (0.0421)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.498000013679266, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 15%|#5        | 4/26 [00:00<00:01, 16.94it/s] 31%|###       | 8/26 [00:00<00:00, 24.30it/s] 46%|####6     | 12/26 [00:00<00:00, 27.30it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.38it/s] 88%|########8 | 23/26 [00:00<00:00, 30.28it/s]100%|##########| 26/26 [00:01<00:00, 25.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 432 tensor(-4.3939e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 430 tensor(-8.4083e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 435 tensor(-1.9883e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3725 (5.3726)	zero_count 0.0000 (9.2040)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.89it/s] 23%|##3       | 6/26 [00:00<00:00, 30.08it/s] 38%|###8      | 10/26 [00:00<00:00, 31.75it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.75it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.60it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.60it/s] 96%|#########6| 25/26 [00:00<00:00, 42.02it/s]100%|##########| 26/26 [00:00<00:00, 35.05it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.627 (0.628)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.627 (0.628)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.629 (0.630)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.629 (0.630)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.625 (0.631)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.625 (0.631)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.53it/s]
Test: [  0/  1]	Loss 1.169 (1.169)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.169 (1.169)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.169 (1.169)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.169 (1.169)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 37/  1]	epoch_time 0.0429 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0421)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4977000125348568, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.74it/s] 15%|#5        | 4/26 [00:00<00:01, 16.84it/s] 31%|###       | 8/26 [00:00<00:00, 24.65it/s] 46%|####6     | 12/26 [00:00<00:00, 28.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.09it/s] 88%|########8 | 23/26 [00:00<00:00, 29.07it/s]100%|##########| 26/26 [00:01<00:00, 25.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 430 tensor(6.3283e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 427 tensor(-3.2086e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 427 tensor(-1.2511e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3722 (5.3726)	zero_count 0.0000 (9.7110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.49it/s] 27%|##6       | 7/26 [00:00<00:00, 34.84it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.84it/s] 46%|####6     | 12/26 [00:00<00:00, 40.01it/s] 65%|######5   | 17/26 [00:00<00:00, 38.57it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.57it/s] 85%|########4 | 22/26 [00:00<00:00, 40.60it/s]100%|##########| 26/26 [00:00<00:00, 36.96it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.627 (0.628)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.628)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.629 (0.630)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.629 (0.630)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.625 (0.631)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.625 (0.631)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.76it/s]
Test: [  0/  1]	Loss 1.170 (1.170)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.170 (1.170)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.170 (1.170)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.170 (1.170)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 38/  1]	epoch_time 0.0414 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0409 (0.0421)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.49760001254081726, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.63it/s] 23%|##3       | 6/26 [00:00<00:00, 24.65it/s] 35%|###4      | 9/26 [00:00<00:00, 26.10it/s] 46%|####6     | 12/26 [00:00<00:00, 25.37it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.72it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.61it/s] 85%|########4 | 22/26 [00:00<00:00, 28.41it/s]100%|##########| 26/26 [00:00<00:00, 30.79it/s]100%|##########| 26/26 [00:00<00:00, 26.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 420 tensor(-2.4352e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 425 tensor(-7.0966e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 419 tensor(-8.5036e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3722 (5.3727)	zero_count 0.0000 (10.4910)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.48it/s] 27%|##6       | 7/26 [00:00<00:00, 33.77it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.77it/s] 46%|####6     | 12/26 [00:00<00:00, 39.63it/s] 65%|######5   | 17/26 [00:00<00:00, 41.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.11it/s] 85%|########4 | 22/26 [00:00<00:00, 40.20it/s]100%|##########| 26/26 [00:00<00:00, 37.90it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.628)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.628)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.629 (0.629)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.629 (0.629)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.625 (0.631)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.625 (0.631)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.85it/s]
Test: [  0/  1]	Loss 1.171 (1.171)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.171 (1.171)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.171 (1.171)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.171 (1.171)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 39/  1]	epoch_time 0.0444 (0.0428)	validation_time 0.0007 (0.0006)	train_time 0.0436 (0.0421)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4972000123560429, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.66it/s] 23%|##3       | 6/26 [00:00<00:00, 21.97it/s] 38%|###8      | 10/26 [00:00<00:00, 27.69it/s] 50%|#####     | 13/26 [00:00<00:00, 28.45it/s] 65%|######5   | 17/26 [00:00<00:00, 29.98it/s] 81%|########  | 21/26 [00:00<00:00, 29.07it/s] 96%|#########6| 25/26 [00:00<00:00, 30.92it/s]100%|##########| 26/26 [00:00<00:00, 27.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 420 tensor(-1.2300e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 427 tensor(-1.2367e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 423 tensor(3.1264e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 425 tensor(-5.9325e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3722 (5.3727)	zero_count 0.0000 (13.6110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.80it/s] 31%|###       | 8/26 [00:00<00:00, 39.34it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.34it/s] 50%|#####     | 13/26 [00:00<00:00, 42.78it/s] 69%|######9   | 18/26 [00:00<00:00, 40.05it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.05it/s] 88%|########8 | 23/26 [00:00<00:00, 41.27it/s]100%|##########| 26/26 [00:00<00:00, 38.68it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.628)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.628)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.629 (0.629)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.629 (0.629)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.631)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.624 (0.631)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.04it/s]
Test: [  0/  1]	Loss 1.172 (1.172)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.172 (1.172)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.172 (1.172)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.172 (1.172)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 40/  1]	epoch_time 0.0468 (0.0429)	validation_time 0.0008 (0.0006)	train_time 0.0459 (0.0422)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.49670001238584516, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.62it/s]  8%|7         | 2/26 [00:00<00:05,  4.18it/s] 19%|#9        | 5/26 [00:00<00:02, 10.18it/s] 35%|###4      | 9/26 [00:00<00:00, 17.14it/s] 50%|#####     | 13/26 [00:00<00:00, 22.15it/s] 62%|######1   | 16/26 [00:00<00:00, 23.02it/s] 77%|#######6  | 20/26 [00:01<00:00, 26.02it/s] 92%|#########2| 24/26 [00:01<00:00, 28.21it/s]100%|##########| 26/26 [00:01<00:00, 20.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 421 tensor(-1.1107e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 421 tensor(2.8475e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3723 (5.3726)	zero_count 0.0000 (7.0200)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.45it/s] 27%|##6       | 7/26 [00:00<00:00, 35.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.93it/s] 46%|####6     | 12/26 [00:00<00:00, 40.93it/s] 65%|######5   | 17/26 [00:00<00:00, 39.25it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.25it/s] 85%|########4 | 22/26 [00:00<00:00, 41.30it/s]100%|##########| 26/26 [00:00<00:00, 37.19it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.628)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.628)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.629 (0.629)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.629 (0.629)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.624 (0.630)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.86it/s]
Test: [  0/  1]	Loss 1.173 (1.173)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.173 (1.173)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.173 (1.173)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.173 (1.173)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 41/  1]	epoch_time 0.0475 (0.0430)	validation_time 0.0005 (0.0006)	train_time 0.0470 (0.0423)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4965000123977661, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.94it/s] 19%|#9        | 5/26 [00:00<00:00, 21.07it/s] 35%|###4      | 9/26 [00:00<00:00, 26.65it/s] 50%|#####     | 13/26 [00:00<00:00, 29.41it/s] 62%|######1   | 16/26 [00:00<00:00, 28.04it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.08it/s] 92%|#########2| 24/26 [00:00<00:00, 31.35it/s]100%|##########| 26/26 [00:00<00:00, 27.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 421 tensor(-1.8102e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 421 tensor(4.9266e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.50)	train_corr   0.00 (  0.00)	l1 5.3722 (5.3726)	zero_count 0.0000 (7.0200)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s]  8%|7         | 2/26 [00:00<00:02,  8.54it/s] 27%|##6       | 7/26 [00:00<00:00, 24.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.89it/s] 46%|####6     | 12/26 [00:00<00:00, 32.68it/s] 65%|######5   | 17/26 [00:00<00:00, 37.20it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.20it/s] 85%|########4 | 22/26 [00:00<00:00, 38.64it/s]100%|##########| 26/26 [00:00<00:00, 31.84it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.628)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.628)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.629 (0.629)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.48 (  0.49)	Loss_d 0.629 (0.629)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.624 (0.630)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.20it/s]
Test: [  0/  1]	Loss 1.174 (1.174)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.174 (1.174)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.174 (1.174)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.174 (1.174)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 42/  1]	epoch_time 0.0451 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0446 (0.0424)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4959000089466572, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.48it/s] 15%|#5        | 4/26 [00:00<00:02,  9.33it/s] 31%|###       | 8/26 [00:00<00:01, 16.82it/s] 46%|####6     | 12/26 [00:00<00:00, 22.06it/s] 58%|#####7    | 15/26 [00:00<00:00, 22.95it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.56it/s] 88%|########8 | 23/26 [00:01<00:00, 29.02it/s]100%|##########| 26/26 [00:01<00:00, 21.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 421 tensor(-2.0938e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 430 tensor(4.7131e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.49)	train_corr   0.00 (  0.00)	l1 5.3722 (5.3726)	zero_count 0.0000 (6.6690)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.66it/s] 23%|##3       | 6/26 [00:00<00:01, 19.19it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.19it/s] 42%|####2     | 11/26 [00:00<00:00, 28.35it/s] 65%|######5   | 17/26 [00:00<00:00, 34.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.12it/s] 88%|########8 | 23/26 [00:00<00:00, 39.80it/s]100%|##########| 26/26 [00:00<00:00, 30.32it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.628)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.628)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.628 (0.629)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.48 (  0.49)	Loss_d 0.628 (0.629)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.624 (0.630)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.42it/s]
Test: [  0/  1]	Loss 1.175 (1.175)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.175 (1.175)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.175 (1.175)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.175 (1.175)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 43/  1]	epoch_time 0.0456 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0453 (0.0425)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.49600000894069673, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.90it/s]  8%|7         | 2/26 [00:00<00:02,  8.43it/s] 23%|##3       | 6/26 [00:00<00:00, 20.31it/s] 38%|###8      | 10/26 [00:00<00:00, 25.84it/s] 50%|#####     | 13/26 [00:00<00:00, 24.45it/s] 62%|######1   | 16/26 [00:00<00:00, 26.01it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.50it/s] 88%|########8 | 23/26 [00:00<00:00, 28.71it/s]100%|##########| 26/26 [00:01<00:00, 24.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 421 tensor(-1.8576e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 436 tensor(1.4622e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.49)	train_corr   0.00 (  0.00)	l1 5.3723 (5.3726)	zero_count 0.0000 (6.4350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.60it/s]  8%|7         | 2/26 [00:00<00:02,  8.07it/s] 27%|##6       | 7/26 [00:00<00:00, 24.81it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.81it/s] 46%|####6     | 12/26 [00:00<00:00, 32.70it/s] 65%|######5   | 17/26 [00:00<00:00, 37.90it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.90it/s] 85%|########4 | 22/26 [00:00<00:00, 38.04it/s]100%|##########| 26/26 [00:00<00:00, 31.70it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.51 (  0.51)	test_minacc   0.44 (  0.44)	test_majacc   0.52 (  0.52)	Loss_d 0.623 (0.623)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.628)	test_acc   0.51 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.628)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.628 (0.629)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.48 (  0.49)	Loss_d 0.628 (0.629)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.624 (0.630)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.48it/s]
Test: [  0/  1]	Loss 1.176 (1.176)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.176 (1.176)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.176 (1.176)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.176 (1.176)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 44/  1]	epoch_time 0.0414 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0424)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.495600007802248, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.93it/s] 23%|##3       | 6/26 [00:00<00:00, 25.26it/s] 38%|###8      | 10/26 [00:00<00:00, 28.38it/s] 50%|#####     | 13/26 [00:00<00:00, 27.25it/s] 62%|######1   | 16/26 [00:00<00:00, 26.85it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.44it/s] 92%|#########2| 24/26 [00:00<00:00, 31.52it/s]100%|##########| 26/26 [00:00<00:00, 27.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 422 tensor(-1.8183e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 422 tensor(2.3109e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.49)	train_corr   0.00 (  0.00)	l1 5.3723 (5.3727)	zero_count 0.0000 (6.9420)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.34it/s]  8%|7         | 2/26 [00:00<00:02,  8.21it/s] 15%|#5        | 4/26 [00:00<00:01, 11.21it/s] 35%|###4      | 9/26 [00:00<00:00, 23.84it/s]                                               35%|###4      | 9/26 [00:00<00:00, 23.84it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.61it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.35it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.35it/s] 92%|#########2| 24/26 [00:00<00:00, 36.46it/s]100%|##########| 26/26 [00:00<00:00, 27.94it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.44)	test_majacc   0.51 (  0.51)	Loss_d 0.623 (0.623)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.628)	test_acc   0.51 (  0.49)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.628)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.628 (0.629)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.51)	test_majacc   0.48 (  0.49)	Loss_d 0.628 (0.629)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.47 (  0.50)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.624 (0.630)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.46it/s]
Test: [  0/  1]	Loss 1.177 (1.177)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.177 (1.177)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.177 (1.177)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.177 (1.177)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 45/  1]	epoch_time 0.0462 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0457 (0.0425)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4951000089943409, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.85it/s] 23%|##3       | 6/26 [00:00<00:00, 25.78it/s] 38%|###8      | 10/26 [00:00<00:00, 30.03it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.98it/s] 69%|######9   | 18/26 [00:00<00:00, 30.22it/s] 85%|########4 | 22/26 [00:00<00:00, 31.75it/s]100%|##########| 26/26 [00:00<00:00, 32.94it/s]100%|##########| 26/26 [00:00<00:00, 28.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 415 tensor(-9.4107e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.50)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.49)	train_corr   0.00 (  0.00)	l1 5.3723 (5.3726)	zero_count 0.0000 (3.7440)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.65it/s] 27%|##6       | 7/26 [00:00<00:00, 31.97it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.97it/s] 46%|####6     | 12/26 [00:00<00:00, 38.30it/s] 65%|######5   | 17/26 [00:00<00:00, 39.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.11it/s] 85%|########4 | 22/26 [00:00<00:00, 41.69it/s]100%|##########| 26/26 [00:00<00:00, 36.87it/s]
Test: [   0/  26]	Loss 0.622 (0.622)	test_acc   0.50 (  0.50)	test_minacc   0.42 (  0.42)	test_majacc   0.51 (  0.51)	Loss_d 0.622 (0.622)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.627)	test_acc   0.51 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.627)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.628 (0.629)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.51)	test_majacc   0.48 (  0.49)	Loss_d 0.628 (0.629)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.47 (  0.49)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.624 (0.630)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 1.178 (1.178)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.178 (1.178)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.178 (1.178)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.178 (1.178)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 46/  1]	epoch_time 0.0391 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0386 (0.0424)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4948000078499317, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.97it/s] 15%|#5        | 4/26 [00:00<00:01, 12.85it/s] 31%|###       | 8/26 [00:00<00:00, 20.76it/s] 46%|####6     | 12/26 [00:00<00:00, 25.14it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.23it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.91it/s] 88%|########8 | 23/26 [00:00<00:00, 29.83it/s]100%|##########| 26/26 [00:01<00:00, 23.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 419 tensor(-1.6508e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 438 tensor(8.2985e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.49)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.49)	train_corr   0.00 (  0.00)	l1 5.3721 (5.3725)	zero_count 0.0000 (6.4350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.10it/s] 23%|##3       | 6/26 [00:00<00:00, 20.89it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.89it/s] 42%|####2     | 11/26 [00:00<00:00, 30.13it/s] 62%|######1   | 16/26 [00:00<00:00, 36.07it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.07it/s] 81%|########  | 21/26 [00:00<00:00, 36.08it/s]100%|##########| 26/26 [00:00<00:00, 40.01it/s]100%|##########| 26/26 [00:00<00:00, 30.56it/s]
Test: [   0/  26]	Loss 0.622 (0.622)	test_acc   0.50 (  0.50)	test_minacc   0.42 (  0.42)	test_majacc   0.51 (  0.51)	Loss_d 0.622 (0.622)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.627)	test_acc   0.51 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.627)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.628 (0.629)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.51)	test_majacc   0.48 (  0.49)	Loss_d 0.628 (0.629)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.47 (  0.49)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.624 (0.630)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.22it/s]
Test: [  0/  1]	Loss 1.179 (1.179)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.179 (1.179)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.179 (1.179)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.179 (1.179)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 47/  1]	epoch_time 0.0442 (0.0431)	validation_time 0.0005 (0.0006)	train_time 0.0437 (0.0424)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.4943000080883503, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.65it/s] 15%|#5        | 4/26 [00:00<00:01, 17.21it/s] 31%|###       | 8/26 [00:00<00:00, 24.46it/s] 46%|####6     | 12/26 [00:00<00:00, 28.30it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.93it/s] 88%|########8 | 23/26 [00:00<00:00, 31.65it/s]100%|##########| 26/26 [00:00<00:00, 26.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 420 tensor(-1.0420e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.49)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.49)	train_corr   0.00 (  0.00)	l1 5.3723 (5.3725)	zero_count 0.0000 (3.5490)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.56it/s] 27%|##6       | 7/26 [00:00<00:00, 33.28it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.28it/s] 46%|####6     | 12/26 [00:00<00:00, 38.93it/s] 65%|######5   | 17/26 [00:00<00:00, 41.54it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.54it/s] 85%|########4 | 22/26 [00:00<00:00, 40.79it/s]100%|##########| 26/26 [00:00<00:00, 36.46it/s]
Test: [   0/  26]	Loss 0.622 (0.622)	test_acc   0.50 (  0.50)	test_minacc   0.42 (  0.42)	test_majacc   0.51 (  0.51)	Loss_d 0.622 (0.622)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.627)	test_acc   0.51 (  0.49)	test_minacc   0.51 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.627)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.628 (0.629)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.51)	test_majacc   0.48 (  0.49)	Loss_d 0.628 (0.629)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.47 (  0.49)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.624 (0.630)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.99it/s]
Test: [  0/  1]	Loss 1.180 (1.180)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.180 (1.180)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.180 (1.180)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.180 (1.180)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 48/  1]	epoch_time 0.0417 (0.0431)	validation_time 0.0005 (0.0006)	train_time 0.0412 (0.0424)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.49370000579953194, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 15%|#5        | 4/26 [00:00<00:01, 16.43it/s] 31%|###       | 8/26 [00:00<00:00, 23.83it/s] 46%|####6     | 12/26 [00:00<00:00, 25.45it/s] 62%|######1   | 16/26 [00:00<00:00, 28.15it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.15it/s] 92%|#########2| 24/26 [00:00<00:00, 30.76it/s]100%|##########| 26/26 [00:01<00:00, 25.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 420 tensor(-1.4498e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 435 tensor(2.9091e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.40 ( 29.40)	train_acc   0.47 (  0.49)	train_minacc   0.29 (  0.50)	train_majacc   0.50 (  0.49)	train_corr   0.00 (  0.00)	l1 5.3723 (5.3726)	zero_count 0.0000 (6.5130)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.50it/s] 23%|##3       | 6/26 [00:00<00:00, 26.92it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.92it/s] 42%|####2     | 11/26 [00:00<00:00, 35.16it/s] 65%|######5   | 17/26 [00:00<00:00, 38.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.45it/s] 85%|########4 | 22/26 [00:00<00:00, 41.89it/s]100%|##########| 26/26 [00:00<00:00, 35.10it/s]
Test: [   0/  26]	Loss 0.622 (0.622)	test_acc   0.50 (  0.50)	test_minacc   0.42 (  0.42)	test_majacc   0.51 (  0.51)	Loss_d 0.622 (0.622)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.627 (0.627)	test_acc   0.51 (  0.49)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.49)	Loss_d 0.627 (0.627)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.628 (0.629)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.51)	test_majacc   0.48 (  0.49)	Loss_d 0.628 (0.629)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.35 (  0.33)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.47 (  0.49)	test_minacc   0.29 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.624 (0.630)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.29 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.43it/s]
Test: [  0/  1]	Loss 1.181 (1.181)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.181 (1.181)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.181 (1.181)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.181 (1.181)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 49/  1]	epoch_time 0.0430 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0427 (0.0424)
record: (train_acc, test_acc) (0.813900023341179, 0.5910000205039978)
last accs (train_acc, test_acc) (0.49360000813007354, 0.5010000467300415)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.167 MB of 0.167 MB uploadedwandb: \ 0.167 MB of 0.167 MB uploadedwandb: | 0.167 MB of 0.167 MB uploadedwandb: / 0.038 MB of 0.211 MB uploaded (0.003 MB deduped)wandb: - 0.201 MB of 0.501 MB uploaded (0.003 MB deduped)wandb: \ 0.201 MB of 0.501 MB uploaded (0.003 MB deduped)wandb: | 0.201 MB of 0.501 MB uploaded (0.003 MB deduped)wandb: / 0.201 MB of 0.501 MB uploaded (0.003 MB deduped)wandb: - 0.201 MB of 0.501 MB uploaded (0.003 MB deduped)wandb: \ 0.201 MB of 0.501 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/diagnostics/epoch_time_val █▂▂▁▂▂▂▂▂▂▁▁▁▁▁▁▂▁▁▁▁▂▂▂▂▂▁▁▂▂▂▁▂▂▂▂▂▁▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/diagnostics/train_time_val █▂▂▁▂▂▂▂▂▂▁▁▂▁▁▁▂▁▁▂▂▂▂▂▂▂▁▁▂▂▂▂▂▃▂▂▂▁▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/Loss_avg ▆▇▆▆▆▆█▇██▇█▁▂▂▃▃▂▃▆▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/Loss_d_avg ▆▇▆▆▆▆█▇██▇█▁▂▂▃▃▂▃▆▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/Loss_d_val ▆▇▆▆▆▆█▇██▇█▁▂▂▃▃▂▃▆▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/Loss_val ▆▇▆▆▆▆█▇██▇█▁▂▂▃▃▂▃▆▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_acc_avg ▁▁▁▂▃▂▂▂▃▃▃▂█▆▇▆▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_acc_d_avg ▁▁▁▂▃▂▂▂▃▃▃▂█▆▇▆▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_acc_d_val ▁▁▁▂▃▂▂▂▃▃▃▂█▆▇▆▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_acc_val ▁▁▁▂▃▂▂▂▃▃▃▂█▆▇▆▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_corr_d_avg ███▇▇▇▇▇▇▇▇▇▁▄▂▃▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_corr_d_val ███▇▇▇▇▇▇▇▇▇▁▄▂▃▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_majacc_avg ████████████▆▆▅▆▇▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_majacc_d_avg ████████████▆▆▅▆▇▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_majacc_d_val ████████████▆▆▅▆▇▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_majacc_val ████████████▆▆▅▆▇▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_minacc_avg ▁▁▁▂▃▂▂▂▃▃▃▂█▆▇▆▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_minacc_d_avg ▁▁▁▂▃▂▂▂▃▃▃▂█▆▇▆▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_minacc_d_val ▁▁▁▂▃▂▂▂▃▃▃▂█▆▇▆▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_minacc_val ▁▁▁▂▃▂▂▂▃▃▃▂█▆▇▆▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/Loss_avg █▆▅▅▅▅▅▄▄▄▄▄▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/Loss_val ██▇▇▆▆▆▅▅▄▄▅▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/l1_avg █▆▆▆▆▆▆▆▆▆▇█▇▃▂▂▂▁▁▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/l1_val ▇██▇▇▇█▇▆▇▇▇▅▂▂▃▁▂▁▇▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇█████▆▆▆▆▆▆▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_acc_val ▇▇▇▇█▇▇▇████▇▆▅▆▆▆▆▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_majacc_avg ▇████▇▇▇▇▇▇█▇▅▅▅▅▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_majacc_val ████████████▆▆▅▆▆▅▆▄▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_minacc_avg ▂▁▁▂▃▄▄▄▅▆▆▆▇█▇████▆▆▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_minacc_val ▁▁▁▁▄▂▃▃▄▅▅▄█▇▇▇▇▇▇▆▆▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_nll_avg █▄▄▃▃▃▂▂▂▁▁▁▁▄▄▄▄▄▄▆████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_nll_val ▄▄▃▃▂▂▂▂▁▁▁▁▃▄▅▄▃▄▃█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_penalty_avg █▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_penalty_val ██▅▅▂▃▃▂▂▂▂▂▂▁▁▁▁▁▁▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/weight_norm_avg ▁▃▄▄▄▄▄▄▄▄▄▅▅▅▅▅▅▅▅▆████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/weight_norm_val ▁▂▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▄▄▆████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▅█▄▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▅▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/diagnostics/epoch_time_val 0.04304
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/diagnostics/train_time_val 0.04265
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/diagnostics/validation_time_val 0.00035
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/Loss_avg 1.1811
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/Loss_d_avg 1.1811
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/Loss_d_val 1.1811
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/Loss_val 1.1811
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_acc_avg 0.501
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_acc_d_avg 0.501
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_acc_d_val 0.501
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_acc_val 0.501
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_corr_d_avg 0.22217
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_corr_d_val 0.22217
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_minacc_avg 0.50111
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_minacc_d_avg 0.50111
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_minacc_d_val 0.50111
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/test/test_minacc_val 0.50111
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/Loss_val 6e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/l1_avg 5.37257
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/l1_val 5.37232
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_acc_avg 0.4936
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_acc_val 0.472
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_majacc_avg 0.49157
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_majacc_val 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_minacc_avg 0.50319
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_minacc_val 0.29412
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_nll_avg 0.62995
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_nll_val 0.62432
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/weight_norm_avg 29.39655
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/weight_norm_val 29.39655
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/zero_count_avg 6.513
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/113/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/pbn3dxkv
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_191036-pbn3dxkv/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_191338-v0dmaq77
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/v0dmaq77
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1198
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6032, 3, 32, 32) (5968, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:45,  1.81s/it] 19%|#9        | 5/26 [00:01<00:06,  3.41it/s] 35%|###4      | 9/26 [00:02<00:02,  6.80it/s] 50%|#####     | 13/26 [00:02<00:01, 10.57it/s] 65%|######5   | 17/26 [00:02<00:00, 14.46it/s] 81%|########  | 21/26 [00:02<00:00, 18.36it/s] 96%|#########6| 25/26 [00:02<00:00, 21.67it/s]100%|##########| 26/26 [00:02<00:00,  9.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.410 (0.590)	train_nll   0.41 (  0.59)	train_penalty   0.06 (  0.32)	weight_norm  20.88 ( 18.10)	train_acc   0.85 (  0.79)	train_minacc   0.00 (  0.10)	train_majacc   0.99 (  0.91)	train_corr   0.00 (  0.00)	l1 6.1372 (7.1418)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.64it/s] 19%|#9        | 5/26 [00:00<00:00, 22.50it/s] 38%|###8      | 10/26 [00:00<00:00, 32.70it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.70it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.49it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.49it/s] 96%|#########6| 25/26 [00:00<00:00, 39.84it/s]100%|##########| 26/26 [00:00<00:00, 32.77it/s]
Test: [   0/  26]	Loss 0.461 (0.461)	test_acc   0.83 (  0.83)	test_minacc   0.06 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.461 (0.461)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.422 (0.427)	test_acc   0.84 (  0.84)	test_minacc   0.08 (  0.04)	test_majacc   0.98 (  0.99)	Loss_d 0.422 (0.427)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.08 (  0.04)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.95 (  0.96)
Test: [  20/  26]	Loss 0.424 (0.430)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.03)	test_majacc   0.97 (  0.98)	Loss_d 0.424 (0.430)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.03)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.97 (  0.96)
Test: [  26/  26]	Loss 0.404 (0.430)	test_acc   0.86 (  0.84)	test_minacc   0.03 (  0.04)	test_majacc   0.99 (  0.98)	Loss_d 0.404 (0.430)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.03 (  0.04)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.97 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.55it/s]100%|##########| 1/1 [00:00<00:00,  2.55it/s]
Test: [  0/  1]	Loss 1.786 (1.786)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.98 (  0.98)	Loss_d 1.786 (1.786)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.786 (1.786)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.98 (  0.98)	Loss_d 1.786 (1.786)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0822 (0.0822)	validation_time 0.0067 (0.0067)	train_time 0.0735 (0.0735)
record: (train_acc, test_acc) (0.8409000282287598, 0.12200000882148743)
last accs (train_acc, test_acc) (0.8409000282287598, 0.12200000882148743)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 19%|#9        | 5/26 [00:00<00:01, 19.66it/s] 35%|###4      | 9/26 [00:00<00:00, 25.69it/s] 50%|#####     | 13/26 [00:00<00:00, 28.71it/s] 65%|######5   | 17/26 [00:00<00:00, 31.89it/s] 81%|########  | 21/26 [00:00<00:00, 33.92it/s]100%|##########| 26/26 [00:00<00:00, 36.28it/s]100%|##########| 26/26 [00:00<00:00, 28.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.367 (0.406)	train_nll   0.37 (  0.41)	train_penalty   0.04 (  0.05)	weight_norm  22.01 ( 21.66)	train_acc   0.86 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.0126 (6.0135)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.28it/s] 23%|##3       | 6/26 [00:00<00:00, 20.89it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.89it/s] 42%|####2     | 11/26 [00:00<00:00, 29.39it/s] 62%|######1   | 16/26 [00:00<00:00, 35.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.62it/s] 81%|########  | 21/26 [00:00<00:00, 35.74it/s]100%|##########| 26/26 [00:00<00:00, 39.46it/s]100%|##########| 26/26 [00:00<00:00, 30.58it/s]
Test: [   0/  26]	Loss 0.407 (0.407)	test_acc   0.83 (  0.83)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.407 (0.407)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.384 (0.394)	test_acc   0.84 (  0.85)	test_minacc   0.10 (  0.08)	test_majacc   0.98 (  0.98)	Loss_d 0.384 (0.394)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.10 (  0.08)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.391 (0.393)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.07)	test_majacc   0.97 (  0.98)	Loss_d 0.391 (0.393)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.07)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.361 (0.394)	test_acc   0.86 (  0.85)	test_minacc   0.09 (  0.07)	test_majacc   0.99 (  0.98)	Loss_d 0.361 (0.394)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.09 (  0.07)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.13it/s]
Test: [  0/  1]	Loss 1.542 (1.542)	test_acc   0.14 (  0.14)	test_minacc   0.05 (  0.05)	test_majacc   0.98 (  0.98)	Loss_d 1.542 (1.542)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.542 (1.542)	test_acc   0.14 (  0.14)	test_minacc   0.05 (  0.05)	test_majacc   0.98 (  0.98)	Loss_d 1.542 (1.542)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0434 (0.0628)	validation_time 0.0003 (0.0035)	train_time 0.0430 (0.0582)
record: (train_acc, test_acc) (0.8450000235438346, 0.14400000870227814)
last accs (train_acc, test_acc) (0.8450000235438346, 0.14400000870227814)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.49it/s] 19%|#9        | 5/26 [00:00<00:01, 14.74it/s] 35%|###4      | 9/26 [00:00<00:00, 21.14it/s] 50%|#####     | 13/26 [00:00<00:00, 26.12it/s] 69%|######9   | 18/26 [00:00<00:00, 31.19it/s] 88%|########8 | 23/26 [00:00<00:00, 34.48it/s]100%|##########| 26/26 [00:01<00:00, 25.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.364 (0.375)	train_nll   0.36 (  0.38)	train_penalty   0.03 (  0.04)	weight_norm  22.14 ( 22.10)	train_acc   0.86 (  0.85)	train_minacc   0.18 (  0.08)	train_majacc   0.96 (  0.98)	train_corr   0.00 (  0.00)	l1 6.1976 (6.1851)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.67it/s] 23%|##3       | 6/26 [00:00<00:00, 31.87it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.87it/s] 42%|####2     | 11/26 [00:00<00:00, 36.85it/s] 62%|######1   | 16/26 [00:00<00:00, 40.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.06it/s] 81%|########  | 21/26 [00:00<00:00, 39.06it/s]100%|##########| 26/26 [00:00<00:00, 41.51it/s]100%|##########| 26/26 [00:00<00:00, 35.30it/s]
Test: [   0/  26]	Loss 0.379 (0.379)	test_acc   0.84 (  0.84)	test_minacc   0.19 (  0.19)	test_majacc   0.97 (  0.97)	Loss_d 0.379 (0.379)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.338 (0.360)	test_acc   0.87 (  0.86)	test_minacc   0.30 (  0.20)	test_majacc   0.98 (  0.97)	Loss_d 0.338 (0.360)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.30 (  0.20)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.91)
Test: [  20/  26]	Loss 0.360 (0.359)	test_acc   0.85 (  0.86)	test_minacc   0.17 (  0.20)	test_majacc   0.96 (  0.97)	Loss_d 0.360 (0.359)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.17 (  0.20)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  26/  26]	Loss 0.344 (0.359)	test_acc   0.87 (  0.85)	test_minacc   0.24 (  0.21)	test_majacc   0.97 (  0.97)	Loss_d 0.344 (0.359)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.24 (  0.21)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.20it/s]
Test: [  0/  1]	Loss 1.507 (1.507)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.96 (  0.96)	Loss_d 1.507 (1.507)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.82)
Test: [  1/  1]	Loss 1.507 (1.507)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.96 (  0.96)	Loss_d 1.507 (1.507)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.82)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0406 (0.0554)	validation_time 0.0004 (0.0025)	train_time 0.0401 (0.0522)
record: (train_acc, test_acc) (0.8545000222325325, 0.21300001442432404)
last accs (train_acc, test_acc) (0.8545000222325325, 0.21300001442432404)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.88it/s]  8%|7         | 2/26 [00:00<00:02,  8.81it/s] 23%|##3       | 6/26 [00:00<00:00, 20.48it/s] 38%|###8      | 10/26 [00:00<00:00, 26.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.31it/s] 69%|######9   | 18/26 [00:00<00:00, 31.10it/s] 85%|########4 | 22/26 [00:00<00:00, 32.04it/s]100%|##########| 26/26 [00:00<00:00, 33.34it/s]100%|##########| 26/26 [00:00<00:00, 26.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.371 (0.351)	train_nll   0.37 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.20 ( 22.17)	train_acc   0.84 (  0.85)	train_minacc   0.32 (  0.18)	train_majacc   0.93 (  0.97)	train_corr   0.00 (  0.00)	l1 6.3480 (6.4197)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.66it/s] 27%|##6       | 7/26 [00:00<00:00, 27.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.96it/s] 46%|####6     | 12/26 [00:00<00:00, 35.54it/s] 69%|######9   | 18/26 [00:00<00:00, 40.15it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.15it/s] 88%|########8 | 23/26 [00:00<00:00, 40.38it/s]100%|##########| 26/26 [00:00<00:00, 34.98it/s]
Test: [   0/  26]	Loss 0.365 (0.365)	test_acc   0.85 (  0.85)	test_minacc   0.37 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 0.365 (0.365)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.334 (0.356)	test_acc   0.85 (  0.85)	test_minacc   0.43 (  0.33)	test_majacc   0.93 (  0.94)	Loss_d 0.334 (0.356)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.43 (  0.33)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.85 (  0.86)
Test: [  20/  26]	Loss 0.345 (0.354)	test_acc   0.85 (  0.84)	test_minacc   0.40 (  0.34)	test_majacc   0.92 (  0.93)	Loss_d 0.345 (0.354)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.40 (  0.34)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.84 (  0.85)
Test: [  26/  26]	Loss 0.340 (0.352)	test_acc   0.85 (  0.85)	test_minacc   0.32 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 0.340 (0.352)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.32 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.87 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.31it/s]
Test: [  0/  1]	Loss 1.364 (1.364)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.94 (  0.94)	Loss_d 1.364 (1.364)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 1.364 (1.364)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.94 (  0.94)	Loss_d 1.364 (1.364)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.66 (  0.66)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0413 (0.0519)	validation_time 0.0003 (0.0020)	train_time 0.0409 (0.0494)
record: (train_acc, test_acc) (0.8467000196576119, 0.31700000166893005)
last accs (train_acc, test_acc) (0.8467000196576119, 0.31700000166893005)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 19%|#9        | 5/26 [00:00<00:01, 19.26it/s] 35%|###4      | 9/26 [00:00<00:00, 24.69it/s] 50%|#####     | 13/26 [00:00<00:00, 28.19it/s] 65%|######5   | 17/26 [00:00<00:00, 30.77it/s] 81%|########  | 21/26 [00:00<00:00, 32.72it/s] 96%|#########6| 25/26 [00:00<00:00, 33.85it/s]100%|##########| 26/26 [00:00<00:00, 27.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.325 (0.334)	train_nll   0.33 (  0.33)	train_penalty   0.01 (  0.03)	weight_norm  22.26 ( 22.23)	train_acc   0.85 (  0.86)	train_minacc   0.44 (  0.23)	train_majacc   0.91 (  0.97)	train_corr   0.00 (  0.00)	l1 6.4340 (6.5546)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.00it/s] 23%|##3       | 6/26 [00:00<00:00, 29.94it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.94it/s] 42%|####2     | 11/26 [00:00<00:00, 37.06it/s] 62%|######1   | 16/26 [00:00<00:00, 40.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.90it/s] 81%|########  | 21/26 [00:00<00:00, 37.81it/s]100%|##########| 26/26 [00:00<00:00, 40.90it/s]100%|##########| 26/26 [00:00<00:00, 34.20it/s]
Test: [   0/  26]	Loss 0.345 (0.345)	test_acc   0.86 (  0.86)	test_minacc   0.43 (  0.43)	test_majacc   0.96 (  0.96)	Loss_d 0.345 (0.345)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.316 (0.344)	test_acc   0.87 (  0.85)	test_minacc   0.57 (  0.43)	test_majacc   0.92 (  0.93)	Loss_d 0.316 (0.344)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.57 (  0.43)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.80 (  0.82)
Test: [  20/  26]	Loss 0.332 (0.344)	test_acc   0.86 (  0.85)	test_minacc   0.49 (  0.44)	test_majacc   0.91 (  0.92)	Loss_d 0.332 (0.344)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.49 (  0.44)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.81 (  0.81)
Test: [  26/  26]	Loss 0.314 (0.342)	test_acc   0.85 (  0.85)	test_minacc   0.44 (  0.45)	test_majacc   0.91 (  0.92)	Loss_d 0.314 (0.342)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.44 (  0.45)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.82 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.91it/s]
Test: [  0/  1]	Loss 1.323 (1.323)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.90 (  0.90)	Loss_d 1.323 (1.323)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 1.323 (1.323)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.90 (  0.90)	Loss_d 1.323 (1.323)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.54 (  0.54)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0409 (0.0497)	validation_time 0.0004 (0.0016)	train_time 0.0405 (0.0476)
record: (train_acc, test_acc) (0.8486000263094902, 0.3720000088214874)
last accs (train_acc, test_acc) (0.8486000263094902, 0.3720000088214874)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.49it/s] 23%|##3       | 6/26 [00:00<00:00, 24.91it/s] 38%|###8      | 10/26 [00:00<00:00, 28.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.32it/s] 69%|######9   | 18/26 [00:00<00:00, 31.61it/s] 85%|########4 | 22/26 [00:00<00:00, 32.39it/s]100%|##########| 26/26 [00:00<00:00, 32.80it/s]100%|##########| 26/26 [00:00<00:00, 28.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.294 (0.315)	train_nll   0.29 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.32 ( 22.29)	train_acc   0.88 (  0.86)	train_minacc   0.53 (  0.32)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 6.4714 (6.6179)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.78it/s] 31%|###       | 8/26 [00:00<00:00, 37.90it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.90it/s] 50%|#####     | 13/26 [00:00<00:00, 40.19it/s] 69%|######9   | 18/26 [00:00<00:00, 39.71it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.71it/s] 88%|########8 | 23/26 [00:00<00:00, 41.19it/s]100%|##########| 26/26 [00:00<00:00, 37.51it/s]
Test: [   0/  26]	Loss 0.309 (0.309)	test_acc   0.87 (  0.87)	test_minacc   0.47 (  0.47)	test_majacc   0.95 (  0.95)	Loss_d 0.309 (0.309)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.278 (0.315)	test_acc   0.86 (  0.86)	test_minacc   0.54 (  0.48)	test_majacc   0.92 (  0.93)	Loss_d 0.278 (0.315)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.80 (  0.81)
Test: [  20/  26]	Loss 0.296 (0.313)	test_acc   0.87 (  0.86)	test_minacc   0.60 (  0.51)	test_majacc   0.92 (  0.92)	Loss_d 0.296 (0.313)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.81 (  0.81)
Test: [  26/  26]	Loss 0.275 (0.310)	test_acc   0.88 (  0.86)	test_minacc   0.53 (  0.52)	test_majacc   0.94 (  0.92)	Loss_d 0.275 (0.310)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.53 (  0.52)	test_majacc_d   0.94 (  0.92)	test_corr_d   0.82 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.39it/s]
Test: [  0/  1]	Loss 1.362 (1.362)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.92 (  0.92)	Loss_d 1.362 (1.362)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 1.362 (1.362)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.92 (  0.92)	Loss_d 1.362 (1.362)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.48 (  0.48)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0392 (0.0479)	validation_time 0.0006 (0.0015)	train_time 0.0386 (0.0461)
record: (train_acc, test_acc) (0.8639000281095505, 0.4230000078678131)
last accs (train_acc, test_acc) (0.8639000281095505, 0.4230000078678131)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.49it/s] 23%|##3       | 6/26 [00:00<00:00, 25.37it/s] 38%|###8      | 10/26 [00:00<00:00, 28.67it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.54it/s] 69%|######9   | 18/26 [00:00<00:00, 31.51it/s] 85%|########4 | 22/26 [00:00<00:00, 32.24it/s]100%|##########| 26/26 [00:00<00:00, 32.66it/s]100%|##########| 26/26 [00:00<00:00, 28.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.244 (0.295)	train_nll   0.24 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.41 ( 22.37)	train_acc   0.90 (  0.87)	train_minacc   0.56 (  0.39)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7642 (6.6032)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.72it/s] 23%|##3       | 6/26 [00:00<00:00, 25.04it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.04it/s] 42%|####2     | 11/26 [00:00<00:00, 32.73it/s] 62%|######1   | 16/26 [00:00<00:00, 37.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.27it/s] 81%|########  | 21/26 [00:00<00:00, 36.64it/s]100%|##########| 26/26 [00:00<00:00, 40.39it/s]100%|##########| 26/26 [00:00<00:00, 31.94it/s]
Test: [   0/  26]	Loss 0.281 (0.281)	test_acc   0.86 (  0.86)	test_minacc   0.49 (  0.49)	test_majacc   0.94 (  0.94)	Loss_d 0.281 (0.281)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.266 (0.291)	test_acc   0.89 (  0.87)	test_minacc   0.61 (  0.54)	test_majacc   0.95 (  0.93)	Loss_d 0.266 (0.291)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.82 (  0.82)
Test: [  20/  26]	Loss 0.259 (0.287)	test_acc   0.89 (  0.87)	test_minacc   0.62 (  0.56)	test_majacc   0.93 (  0.92)	Loss_d 0.259 (0.287)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.93 (  0.92)	test_corr_d   0.81 (  0.81)
Test: [  26/  26]	Loss 0.214 (0.282)	test_acc   0.90 (  0.87)	test_minacc   0.65 (  0.58)	test_majacc   0.94 (  0.93)	Loss_d 0.214 (0.282)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.65 (  0.58)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.83 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.14it/s]
Test: [  0/  1]	Loss 1.535 (1.535)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.92 (  0.92)	Loss_d 1.535 (1.535)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 1.535 (1.535)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.92 (  0.92)	Loss_d 1.535 (1.535)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.45 (  0.45)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0419 (0.0471)	validation_time 0.0003 (0.0013)	train_time 0.0415 (0.0455)
record: (train_acc, test_acc) (0.8743000198602676, 0.4410000145435333)
last accs (train_acc, test_acc) (0.8743000198602676, 0.4410000145435333)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.92it/s] 19%|#9        | 5/26 [00:00<00:01, 20.88it/s] 35%|###4      | 9/26 [00:00<00:00, 26.38it/s] 50%|#####     | 13/26 [00:00<00:00, 29.63it/s] 65%|######5   | 17/26 [00:00<00:00, 32.19it/s] 81%|########  | 21/26 [00:00<00:00, 33.29it/s] 96%|#########6| 25/26 [00:00<00:00, 33.69it/s]100%|##########| 26/26 [00:00<00:00, 28.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.238 (0.283)	train_nll   0.24 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.51 ( 22.46)	train_acc   0.94 (  0.88)	train_minacc   0.71 (  0.45)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5896 (6.7362)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s] 23%|##3       | 6/26 [00:00<00:00, 26.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.63it/s] 42%|####2     | 11/26 [00:00<00:00, 32.90it/s] 65%|######5   | 17/26 [00:00<00:00, 38.99it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.99it/s] 85%|########4 | 22/26 [00:00<00:00, 39.67it/s]100%|##########| 26/26 [00:00<00:00, 34.59it/s]
Test: [   0/  26]	Loss 0.289 (0.289)	test_acc   0.86 (  0.86)	test_minacc   0.37 (  0.37)	test_majacc   0.96 (  0.96)	Loss_d 0.289 (0.289)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.240 (0.287)	test_acc   0.90 (  0.87)	test_minacc   0.61 (  0.48)	test_majacc   0.95 (  0.94)	Loss_d 0.240 (0.287)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.61 (  0.48)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.84 (  0.85)
Test: [  20/  26]	Loss 0.262 (0.283)	test_acc   0.89 (  0.87)	test_minacc   0.55 (  0.51)	test_majacc   0.95 (  0.94)	Loss_d 0.262 (0.283)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.86 (  0.84)
Test: [  26/  26]	Loss 0.209 (0.279)	test_acc   0.94 (  0.88)	test_minacc   0.65 (  0.52)	test_majacc   0.98 (  0.94)	Loss_d 0.209 (0.279)	test_acc_d   0.94 (  0.88)	test_minacc_d   0.65 (  0.52)	test_majacc_d   0.98 (  0.94)	test_corr_d   0.86 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.00it/s]
Test: [  0/  1]	Loss 1.566 (1.566)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.90 (  0.90)	Loss_d 1.566 (1.566)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 1.566 (1.566)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.90 (  0.90)	Loss_d 1.566 (1.566)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.54 (  0.54)
Overall Timing[  7/  1]	epoch_time 0.0431 (0.0466)	validation_time 0.0005 (0.0012)	train_time 0.0426 (0.0451)
record: (train_acc, test_acc) (0.8743000198602676, 0.4410000145435333)
last accs (train_acc, test_acc) (0.8781000235080719, 0.40800002217292786)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.82it/s] 19%|#9        | 5/26 [00:00<00:01, 18.62it/s] 35%|###4      | 9/26 [00:00<00:00, 26.09it/s] 50%|#####     | 13/26 [00:00<00:00, 29.91it/s] 65%|######5   | 17/26 [00:00<00:00, 31.23it/s] 81%|########  | 21/26 [00:00<00:00, 32.07it/s] 96%|#########6| 25/26 [00:00<00:00, 33.49it/s]100%|##########| 26/26 [00:00<00:00, 27.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.260 (0.275)	train_nll   0.26 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  22.65 ( 22.58)	train_acc   0.88 (  0.88)	train_minacc   0.41 (  0.46)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 6.7227 (6.7798)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.79it/s] 23%|##3       | 6/26 [00:00<00:00, 31.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.20it/s] 42%|####2     | 11/26 [00:00<00:00, 37.90it/s] 62%|######1   | 16/26 [00:00<00:00, 41.03it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.03it/s] 81%|########  | 21/26 [00:00<00:00, 38.72it/s]100%|##########| 26/26 [00:00<00:00, 41.82it/s]100%|##########| 26/26 [00:00<00:00, 35.38it/s]
Test: [   0/  26]	Loss 0.268 (0.268)	test_acc   0.88 (  0.88)	test_minacc   0.50 (  0.50)	test_majacc   0.96 (  0.96)	Loss_d 0.268 (0.268)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.241 (0.277)	test_acc   0.91 (  0.88)	test_minacc   0.62 (  0.55)	test_majacc   0.96 (  0.94)	Loss_d 0.241 (0.277)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.82 (  0.82)
Test: [  20/  26]	Loss 0.227 (0.269)	test_acc   0.92 (  0.88)	test_minacc   0.70 (  0.58)	test_majacc   0.95 (  0.93)	Loss_d 0.227 (0.269)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.70 (  0.58)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.83 (  0.81)
Test: [  26/  26]	Loss 0.206 (0.263)	test_acc   0.93 (  0.89)	test_minacc   0.65 (  0.60)	test_majacc   0.97 (  0.94)	Loss_d 0.206 (0.263)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.65 (  0.60)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.85 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.79it/s]
Test: [  0/  1]	Loss 1.513 (1.513)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.90 (  0.90)	Loss_d 1.513 (1.513)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 1.513 (1.513)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.90 (  0.90)	Loss_d 1.513 (1.513)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.44 (  0.44)
Overall Timing[  8/  1]	epoch_time 0.0398 (0.0458)	validation_time 0.0003 (0.0011)	train_time 0.0395 (0.0445)
record: (train_acc, test_acc) (0.8743000198602676, 0.4410000145435333)
last accs (train_acc, test_acc) (0.8868000237345696, 0.4390000104904175)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.36it/s] 12%|#1        | 3/26 [00:00<00:02, 11.49it/s] 27%|##6       | 7/26 [00:00<00:00, 20.14it/s] 42%|####2     | 11/26 [00:00<00:00, 24.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.56it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.92it/s] 88%|########8 | 23/26 [00:00<00:00, 31.39it/s]100%|##########| 26/26 [00:01<00:00, 25.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.219 (0.256)	train_nll   0.22 (  0.26)	train_penalty   0.01 (  0.01)	weight_norm  22.84 ( 22.75)	train_acc   0.90 (  0.89)	train_minacc   0.47 (  0.52)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.8261 (6.9812)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.71it/s] 27%|##6       | 7/26 [00:00<00:00, 31.51it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.51it/s] 46%|####6     | 12/26 [00:00<00:00, 37.45it/s] 65%|######5   | 17/26 [00:00<00:00, 41.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.14it/s] 85%|########4 | 22/26 [00:00<00:00, 39.92it/s]100%|##########| 26/26 [00:00<00:00, 36.31it/s]
Test: [   0/  26]	Loss 0.272 (0.272)	test_acc   0.86 (  0.86)	test_minacc   0.47 (  0.47)	test_majacc   0.95 (  0.95)	Loss_d 0.272 (0.272)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.219 (0.265)	test_acc   0.91 (  0.88)	test_minacc   0.62 (  0.50)	test_majacc   0.96 (  0.95)	Loss_d 0.219 (0.265)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.62 (  0.50)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.82 (  0.83)
Test: [  20/  26]	Loss 0.229 (0.259)	test_acc   0.89 (  0.89)	test_minacc   0.58 (  0.52)	test_majacc   0.94 (  0.95)	Loss_d 0.229 (0.259)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  26/  26]	Loss 0.201 (0.254)	test_acc   0.92 (  0.89)	test_minacc   0.59 (  0.54)	test_majacc   0.97 (  0.95)	Loss_d 0.201 (0.254)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.59 (  0.54)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.85 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.87it/s]
Test: [  0/  1]	Loss 1.581 (1.581)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.89 (  0.89)	Loss_d 1.581 (1.581)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 1.581 (1.581)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.89 (  0.89)	Loss_d 1.581 (1.581)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.49 (  0.49)
Overall Timing[  9/  1]	epoch_time 0.0429 (0.0455)	validation_time 0.0007 (0.0011)	train_time 0.0422 (0.0442)
record: (train_acc, test_acc) (0.8743000198602676, 0.4410000145435333)
last accs (train_acc, test_acc) (0.8890000162124634, 0.4140000343322754)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.90it/s] 19%|#9        | 5/26 [00:00<00:01, 19.32it/s] 38%|###8      | 10/26 [00:00<00:00, 27.81it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.24it/s] 69%|######9   | 18/26 [00:00<00:00, 31.45it/s] 85%|########4 | 22/26 [00:00<00:00, 32.72it/s]100%|##########| 26/26 [00:00<00:00, 33.74it/s]100%|##########| 26/26 [00:00<00:00, 27.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.241 (0.250)	train_nll   0.24 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.07 ( 22.96)	train_acc   0.91 (  0.89)	train_minacc   0.59 (  0.53)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0700 (7.0659)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 23%|##3       | 6/26 [00:00<00:00, 29.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.10it/s] 42%|####2     | 11/26 [00:00<00:00, 36.49it/s] 62%|######1   | 16/26 [00:00<00:00, 39.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.76it/s] 81%|########  | 21/26 [00:00<00:00, 38.45it/s]100%|##########| 26/26 [00:00<00:00, 40.87it/s]100%|##########| 26/26 [00:00<00:00, 34.13it/s]
Test: [   0/  26]	Loss 0.280 (0.280)	test_acc   0.89 (  0.89)	test_minacc   0.38 (  0.38)	test_majacc   0.99 (  0.99)	Loss_d 0.280 (0.280)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.223 (0.271)	test_acc   0.91 (  0.89)	test_minacc   0.56 (  0.40)	test_majacc   0.97 (  0.98)	Loss_d 0.223 (0.271)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.56 (  0.40)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.86 (  0.89)
Test: [  20/  26]	Loss 0.226 (0.261)	test_acc   0.92 (  0.89)	test_minacc   0.53 (  0.40)	test_majacc   0.98 (  0.98)	Loss_d 0.226 (0.261)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.53 (  0.40)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.89)
Test: [  26/  26]	Loss 0.217 (0.259)	test_acc   0.90 (  0.89)	test_minacc   0.41 (  0.40)	test_majacc   0.98 (  0.98)	Loss_d 0.217 (0.259)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.41 (  0.40)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.78it/s]
Test: [  0/  1]	Loss 1.859 (1.859)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.96 (  0.96)	Loss_d 1.859 (1.859)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 1.859 (1.859)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.96 (  0.96)	Loss_d 1.859 (1.859)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.65 (  0.65)
Overall Timing[ 10/  1]	epoch_time 0.0407 (0.0451)	validation_time 0.0004 (0.0010)	train_time 0.0402 (0.0439)
record: (train_acc, test_acc) (0.8743000198602676, 0.4410000145435333)
last accs (train_acc, test_acc) (0.8897000133395195, 0.30800002813339233)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.32it/s] 19%|#9        | 5/26 [00:00<00:00, 22.44it/s] 35%|###4      | 9/26 [00:00<00:00, 28.06it/s] 50%|#####     | 13/26 [00:00<00:00, 30.67it/s] 65%|######5   | 17/26 [00:00<00:00, 32.82it/s] 85%|########4 | 22/26 [00:00<00:00, 35.71it/s]100%|##########| 26/26 [00:00<00:00, 35.45it/s]100%|##########| 26/26 [00:00<00:00, 29.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.178 (0.255)	train_nll   0.18 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.35 ( 23.22)	train_acc   0.91 (  0.89)	train_minacc   0.76 (  0.51)	train_majacc   0.93 (  0.95)	train_corr   0.00 (  0.00)	l1 7.2232 (6.7797)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.32it/s] 15%|#5        | 4/26 [00:00<00:01, 18.44it/s] 35%|###4      | 9/26 [00:00<00:00, 30.31it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.31it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.71it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.71it/s] 92%|#########2| 24/26 [00:00<00:00, 38.80it/s]100%|##########| 26/26 [00:00<00:00, 32.81it/s]
Test: [   0/  26]	Loss 0.251 (0.251)	test_acc   0.89 (  0.89)	test_minacc   0.63 (  0.63)	test_majacc   0.94 (  0.94)	Loss_d 0.251 (0.251)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.186 (0.261)	test_acc   0.92 (  0.89)	test_minacc   0.79 (  0.68)	test_majacc   0.94 (  0.92)	Loss_d 0.186 (0.261)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.79 (  0.68)	test_majacc_d   0.94 (  0.92)	test_corr_d   0.76 (  0.76)
Test: [  20/  26]	Loss 0.233 (0.253)	test_acc   0.90 (  0.89)	test_minacc   0.68 (  0.70)	test_majacc   0.93 (  0.93)	Loss_d 0.233 (0.253)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.68 (  0.70)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.77 (  0.76)
Test: [  26/  26]	Loss 0.144 (0.244)	test_acc   0.95 (  0.90)	test_minacc   0.82 (  0.71)	test_majacc   0.97 (  0.93)	Loss_d 0.144 (0.244)	test_acc_d   0.95 (  0.90)	test_minacc_d   0.82 (  0.71)	test_majacc_d   0.97 (  0.93)	test_corr_d   0.79 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 53.43it/s]
Test: [  0/  1]	Loss 1.835 (1.835)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.92 (  0.92)	Loss_d 1.835 (1.835)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.835 (1.835)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.92 (  0.92)	Loss_d 1.835 (1.835)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.33 (  0.33)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0446 (0.0450)	validation_time 0.0005 (0.0010)	train_time 0.0441 (0.0439)
record: (train_acc, test_acc) (0.8961000217795372, 0.47700002789497375)
last accs (train_acc, test_acc) (0.8961000217795372, 0.47700002789497375)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.65it/s] 19%|#9        | 5/26 [00:00<00:00, 23.08it/s] 35%|###4      | 9/26 [00:00<00:00, 27.86it/s] 50%|#####     | 13/26 [00:00<00:00, 30.74it/s] 65%|######5   | 17/26 [00:00<00:00, 32.39it/s] 81%|########  | 21/26 [00:00<00:00, 33.15it/s] 96%|#########6| 25/26 [00:00<00:00, 33.56it/s]100%|##########| 26/26 [00:00<00:00, 29.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.135 (0.226)	train_nll   0.13 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.62 ( 23.49)	train_acc   0.94 (  0.91)	train_minacc   0.82 (  0.61)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3833 (7.1905)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.85it/s] 19%|#9        | 5/26 [00:00<00:01, 13.08it/s] 38%|###8      | 10/26 [00:00<00:00, 23.18it/s]                                                38%|###8      | 10/26 [00:00<00:00, 23.18it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.83it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.65it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 32.65it/s] 92%|#########2| 24/26 [00:00<00:00, 36.22it/s]100%|##########| 26/26 [00:01<00:00, 25.61it/s]
Test: [   0/  26]	Loss 0.226 (0.226)	test_acc   0.91 (  0.91)	test_minacc   0.66 (  0.66)	test_majacc   0.97 (  0.97)	Loss_d 0.226 (0.226)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.169 (0.241)	test_acc   0.94 (  0.90)	test_minacc   0.80 (  0.67)	test_majacc   0.97 (  0.94)	Loss_d 0.169 (0.241)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.80 (  0.67)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.77 (  0.77)
Test: [  20/  26]	Loss 0.204 (0.235)	test_acc   0.92 (  0.90)	test_minacc   0.77 (  0.68)	test_majacc   0.94 (  0.94)	Loss_d 0.204 (0.235)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.77 (  0.68)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.76 (  0.76)
Test: [  26/  26]	Loss 0.103 (0.222)	test_acc   0.96 (  0.91)	test_minacc   0.85 (  0.71)	test_majacc   0.97 (  0.94)	Loss_d 0.103 (0.222)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.85 (  0.71)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.78 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.45it/s]
Test: [  0/  1]	Loss 1.883 (1.883)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.90 (  0.90)	Loss_d 1.883 (1.883)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.883 (1.883)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.90 (  0.90)	Loss_d 1.883 (1.883)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.29 (  0.29)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0492 (0.0454)	validation_time 0.0004 (0.0009)	train_time 0.0487 (0.0443)
record: (train_acc, test_acc) (0.907000023663044, 0.4820000231266022)
last accs (train_acc, test_acc) (0.907000023663044, 0.4820000231266022)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.40it/s] 19%|#9        | 5/26 [00:00<00:01, 18.55it/s] 35%|###4      | 9/26 [00:00<00:00, 24.29it/s] 50%|#####     | 13/26 [00:00<00:00, 27.36it/s] 65%|######5   | 17/26 [00:00<00:00, 29.47it/s] 81%|########  | 21/26 [00:00<00:00, 30.41it/s] 96%|#########6| 25/26 [00:00<00:00, 31.57it/s]100%|##########| 26/26 [00:01<00:00, 25.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.154 (0.205)	train_nll   0.15 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm  23.93 ( 23.78)	train_acc   0.93 (  0.92)	train_minacc   0.94 (  0.67)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5512 (7.2853)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.34it/s] 12%|#1        | 3/26 [00:00<00:01, 15.01it/s] 27%|##6       | 7/26 [00:00<00:00, 25.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.87it/s] 46%|####6     | 12/26 [00:00<00:00, 30.74it/s] 65%|######5   | 17/26 [00:00<00:00, 36.05it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.05it/s] 85%|########4 | 22/26 [00:00<00:00, 39.37it/s]100%|##########| 26/26 [00:00<00:00, 31.76it/s]
Test: [   0/  26]	Loss 0.238 (0.238)	test_acc   0.90 (  0.90)	test_minacc   0.60 (  0.60)	test_majacc   0.96 (  0.96)	Loss_d 0.238 (0.238)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.153 (0.206)	test_acc   0.93 (  0.92)	test_minacc   0.72 (  0.70)	test_majacc   0.97 (  0.96)	Loss_d 0.153 (0.206)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.72 (  0.70)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.80 (  0.79)
Test: [  20/  26]	Loss 0.134 (0.200)	test_acc   0.95 (  0.92)	test_minacc   0.83 (  0.72)	test_majacc   0.97 (  0.96)	Loss_d 0.134 (0.200)	test_acc_d   0.95 (  0.92)	test_minacc_d   0.83 (  0.72)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.79 (  0.78)
Test: [  26/  26]	Loss 0.081 (0.192)	test_acc   0.98 (  0.92)	test_minacc   0.91 (  0.73)	test_majacc   1.00 (  0.96)	Loss_d 0.081 (0.192)	test_acc_d   0.98 (  0.92)	test_minacc_d   0.91 (  0.73)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.80 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.12it/s]
Test: [  0/  1]	Loss 2.160 (2.160)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 2.160 (2.160)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 2.160 (2.160)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 2.160 (2.160)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.35 (  0.35)
Overall Timing[ 13/  1]	epoch_time 0.0439 (0.0453)	validation_time 0.0004 (0.0009)	train_time 0.0434 (0.0442)
record: (train_acc, test_acc) (0.907000023663044, 0.4820000231266022)
last accs (train_acc, test_acc) (0.923900020301342, 0.45000001788139343)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.33it/s] 23%|##3       | 6/26 [00:00<00:00, 27.25it/s] 38%|###8      | 10/26 [00:00<00:00, 30.83it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.93it/s] 69%|######9   | 18/26 [00:00<00:00, 32.44it/s] 85%|########4 | 22/26 [00:00<00:00, 32.83it/s]100%|##########| 26/26 [00:00<00:00, 33.59it/s]100%|##########| 26/26 [00:00<00:00, 29.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.144 (0.206)	train_nll   0.14 (  0.21)	train_penalty   0.00 (  0.01)	weight_norm  24.36 ( 24.15)	train_acc   0.95 (  0.91)	train_minacc   0.91 (  0.65)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.6670 (7.2847)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 27%|##6       | 7/26 [00:00<00:00, 29.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.79it/s] 50%|#####     | 13/26 [00:00<00:00, 37.96it/s] 69%|######9   | 18/26 [00:00<00:00, 39.04it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.04it/s] 88%|########8 | 23/26 [00:00<00:00, 41.20it/s]100%|##########| 26/26 [00:00<00:00, 35.82it/s]
Test: [   0/  26]	Loss 0.172 (0.172)	test_acc   0.93 (  0.93)	test_minacc   0.72 (  0.72)	test_majacc   0.97 (  0.97)	Loss_d 0.172 (0.172)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.133 (0.185)	test_acc   0.96 (  0.93)	test_minacc   0.90 (  0.77)	test_majacc   0.97 (  0.96)	Loss_d 0.133 (0.185)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.90 (  0.77)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.74 (  0.76)
Test: [  20/  26]	Loss 0.121 (0.177)	test_acc   0.95 (  0.93)	test_minacc   0.91 (  0.79)	test_majacc   0.96 (  0.95)	Loss_d 0.121 (0.177)	test_acc_d   0.95 (  0.93)	test_minacc_d   0.91 (  0.79)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.74 (  0.75)
Test: [  26/  26]	Loss 0.084 (0.164)	test_acc   0.98 (  0.93)	test_minacc   1.00 (  0.82)	test_majacc   0.98 (  0.96)	Loss_d 0.084 (0.164)	test_acc_d   0.98 (  0.93)	test_minacc_d   1.00 (  0.82)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.75 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.53it/s]
Test: [  0/  1]	Loss 2.309 (2.309)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.87 (  0.87)	Loss_d 2.309 (2.309)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 2.309 (2.309)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.87 (  0.87)	Loss_d 2.309 (2.309)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.35 (  0.35)
Overall Timing[ 14/  1]	epoch_time 0.0441 (0.0452)	validation_time 0.0003 (0.0009)	train_time 0.0438 (0.0442)
record: (train_acc, test_acc) (0.907000023663044, 0.4820000231266022)
last accs (train_acc, test_acc) (0.9341000136733055, 0.43800002336502075)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.15it/s] 19%|#9        | 5/26 [00:00<00:01, 19.25it/s] 35%|###4      | 9/26 [00:00<00:00, 25.78it/s] 50%|#####     | 13/26 [00:00<00:00, 28.95it/s] 65%|######5   | 17/26 [00:00<00:00, 30.48it/s] 81%|########  | 21/26 [00:00<00:00, 29.83it/s] 96%|#########6| 25/26 [00:00<00:00, 31.29it/s]100%|##########| 26/26 [00:00<00:00, 26.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.002 (0.079)	train_nll   0.35 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  24.73 ( 24.56)	train_acc   0.83 (  0.89)	train_minacc   0.94 (  0.70)	train_majacc   0.81 (  0.93)	train_corr   0.00 (  0.00)	l1 6.1463 (7.2152)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.81it/s] 31%|###       | 8/26 [00:00<00:00, 36.86it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.86it/s] 50%|#####     | 13/26 [00:00<00:00, 40.55it/s] 69%|######9   | 18/26 [00:00<00:00, 43.26it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.26it/s] 88%|########8 | 23/26 [00:00<00:00, 40.78it/s]100%|##########| 26/26 [00:00<00:00, 38.15it/s]
Test: [   0/  26]	Loss 0.397 (0.397)	test_acc   0.80 (  0.80)	test_minacc   0.82 (  0.82)	test_majacc   0.80 (  0.80)	Loss_d 0.397 (0.397)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.393 (0.390)	test_acc   0.78 (  0.80)	test_minacc   0.87 (  0.84)	test_majacc   0.77 (  0.79)	Loss_d 0.393 (0.390)	test_acc_d   0.78 (  0.80)	test_minacc_d   0.87 (  0.84)	test_majacc_d   0.77 (  0.79)	test_corr_d   0.50 (  0.52)
Test: [  20/  26]	Loss 0.463 (0.408)	test_acc   0.76 (  0.78)	test_minacc   0.79 (  0.83)	test_majacc   0.75 (  0.78)	Loss_d 0.463 (0.408)	test_acc_d   0.76 (  0.78)	test_minacc_d   0.79 (  0.83)	test_majacc_d   0.75 (  0.78)	test_corr_d   0.48 (  0.51)
Test: [  26/  26]	Loss 0.414 (0.410)	test_acc   0.79 (  0.78)	test_minacc   0.94 (  0.83)	test_majacc   0.76 (  0.78)	Loss_d 0.414 (0.410)	test_acc_d   0.79 (  0.78)	test_minacc_d   0.94 (  0.83)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.45 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.22it/s]
Test: [  0/  1]	Loss 1.102 (1.102)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.83 (  0.83)	Loss_d 1.102 (1.102)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.102 (1.102)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.83 (  0.83)	Loss_d 1.102 (1.102)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.03 (  0.03)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0418 (0.0450)	validation_time 0.0005 (0.0008)	train_time 0.0412 (0.0440)
record: (train_acc, test_acc) (0.7836000311970711, 0.6100000143051147)
last accs (train_acc, test_acc) (0.7836000311970711, 0.6100000143051147)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.95it/s] 19%|#9        | 5/26 [00:00<00:01, 17.61it/s] 35%|###4      | 9/26 [00:00<00:00, 23.65it/s] 50%|#####     | 13/26 [00:00<00:00, 27.04it/s] 65%|######5   | 17/26 [00:00<00:00, 29.69it/s] 81%|########  | 21/26 [00:00<00:00, 31.55it/s] 96%|#########6| 25/26 [00:00<00:00, 31.74it/s]100%|##########| 26/26 [00:01<00:00, 25.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.003)	train_nll   0.44 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  24.81 ( 24.78)	train_acc   0.76 (  0.79)	train_minacc   0.85 (  0.79)	train_majacc   0.74 (  0.79)	train_corr   0.00 (  0.00)	l1 5.6868 (5.8584)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.18it/s] 31%|###       | 8/26 [00:00<00:00, 37.20it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.20it/s] 50%|#####     | 13/26 [00:00<00:00, 37.17it/s] 69%|######9   | 18/26 [00:00<00:00, 41.22it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.22it/s] 88%|########8 | 23/26 [00:00<00:00, 43.02it/s]100%|##########| 26/26 [00:00<00:00, 37.34it/s]
Test: [   0/  26]	Loss 0.376 (0.376)	test_acc   0.80 (  0.80)	test_minacc   0.82 (  0.82)	test_majacc   0.79 (  0.79)	Loss_d 0.376 (0.376)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.376 (0.392)	test_acc   0.80 (  0.80)	test_minacc   0.80 (  0.82)	test_majacc   0.80 (  0.79)	Loss_d 0.376 (0.392)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.80 (  0.82)	test_majacc_d   0.80 (  0.79)	test_corr_d   0.55 (  0.54)
Test: [  20/  26]	Loss 0.451 (0.406)	test_acc   0.77 (  0.79)	test_minacc   0.81 (  0.83)	test_majacc   0.77 (  0.78)	Loss_d 0.451 (0.406)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.81 (  0.83)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.51 (  0.52)
Test: [  26/  26]	Loss 0.435 (0.409)	test_acc   0.76 (  0.79)	test_minacc   0.85 (  0.83)	test_majacc   0.74 (  0.78)	Loss_d 0.435 (0.409)	test_acc_d   0.76 (  0.79)	test_minacc_d   0.85 (  0.83)	test_majacc_d   0.74 (  0.78)	test_corr_d   0.47 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.17it/s]
Test: [  0/  1]	Loss 0.942 (0.942)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.81 (  0.81)	Loss_d 0.942 (0.942)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.81 (  0.81)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.942 (0.942)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.81 (  0.81)	Loss_d 0.942 (0.942)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.81 (  0.81)	test_corr_d  -0.01 ( -0.01)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/115/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0447 (0.0450)	validation_time 0.0003 (0.0008)	train_time 0.0444 (0.0440)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.41it/s] 27%|##6       | 7/26 [00:00<00:00, 29.93it/s] 42%|####2     | 11/26 [00:00<00:00, 32.23it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.05it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.27it/s] 88%|########8 | 23/26 [00:00<00:00, 34.24it/s]100%|##########| 26/26 [00:00<00:00, 31.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.001 (0.001)	train_nll   0.40 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  24.82 ( 24.82)	train_acc   0.78 (  0.78)	train_minacc   0.71 (  0.81)	train_majacc   0.79 (  0.78)	train_corr   0.00 (  0.00)	l1 5.4958 (5.6395)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.08it/s] 27%|##6       | 7/26 [00:00<00:00, 34.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.36it/s] 46%|####6     | 12/26 [00:00<00:00, 39.78it/s] 65%|######5   | 17/26 [00:00<00:00, 38.18it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.18it/s] 85%|########4 | 22/26 [00:00<00:00, 40.59it/s]100%|##########| 26/26 [00:00<00:00, 35.60it/s]
Test: [   0/  26]	Loss 0.382 (0.382)	test_acc   0.81 (  0.81)	test_minacc   0.74 (  0.74)	test_majacc   0.82 (  0.82)	Loss_d 0.382 (0.382)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.380 (0.388)	test_acc   0.82 (  0.80)	test_minacc   0.75 (  0.75)	test_majacc   0.83 (  0.81)	Loss_d 0.380 (0.388)	test_acc_d   0.82 (  0.80)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.83 (  0.81)	test_corr_d   0.61 (  0.60)
Test: [  20/  26]	Loss 0.430 (0.398)	test_acc   0.78 (  0.80)	test_minacc   0.74 (  0.76)	test_majacc   0.79 (  0.80)	Loss_d 0.430 (0.398)	test_acc_d   0.78 (  0.80)	test_minacc_d   0.74 (  0.76)	test_majacc_d   0.79 (  0.80)	test_corr_d   0.59 (  0.59)
Test: [  26/  26]	Loss 0.406 (0.399)	test_acc   0.77 (  0.79)	test_minacc   0.71 (  0.75)	test_majacc   0.78 (  0.80)	Loss_d 0.406 (0.399)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.71 (  0.75)	test_majacc_d   0.78 (  0.80)	test_corr_d   0.56 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.44it/s]
Test: [  0/  1]	Loss 1.005 (1.005)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.84 (  0.84)	Loss_d 1.005 (1.005)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.005 (1.005)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.84 (  0.84)	Loss_d 1.005 (1.005)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.11 (  0.11)
Overall Timing[ 17/  1]	epoch_time 0.0487 (0.0452)	validation_time 0.0004 (0.0008)	train_time 0.0482 (0.0442)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.7946000306606292, 0.6010000109672546)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.85it/s] 23%|##3       | 6/26 [00:00<00:00, 24.91it/s] 38%|###8      | 10/26 [00:00<00:00, 28.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.77it/s] 69%|######9   | 18/26 [00:00<00:00, 32.37it/s] 85%|########4 | 22/26 [00:00<00:00, 33.98it/s]100%|##########| 26/26 [00:00<00:00, 35.35it/s]100%|##########| 26/26 [00:00<00:00, 29.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.001)	train_nll   0.42 (  0.42)	train_penalty   0.00 (  0.00)	weight_norm  24.82 ( 24.82)	train_acc   0.76 (  0.78)	train_minacc   0.76 (  0.79)	train_majacc   0.75 (  0.78)	train_corr   0.00 (  0.00)	l1 5.4605 (5.6082)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.93it/s] 12%|#1        | 3/26 [00:00<00:03,  7.37it/s] 31%|###       | 8/26 [00:00<00:00, 19.00it/s]                                               31%|###       | 8/26 [00:00<00:00, 19.00it/s] 50%|#####     | 13/26 [00:00<00:00, 26.79it/s] 69%|######9   | 18/26 [00:00<00:00, 32.76it/s]                                                69%|######9   | 18/26 [00:00<00:00, 32.76it/s] 88%|########8 | 23/26 [00:00<00:00, 33.89it/s]100%|##########| 26/26 [00:01<00:00, 25.90it/s]
Test: [   0/  26]	Loss 0.393 (0.393)	test_acc   0.79 (  0.79)	test_minacc   0.75 (  0.75)	test_majacc   0.80 (  0.80)	Loss_d 0.393 (0.393)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.385 (0.387)	test_acc   0.81 (  0.80)	test_minacc   0.75 (  0.77)	test_majacc   0.82 (  0.80)	Loss_d 0.385 (0.387)	test_acc_d   0.81 (  0.80)	test_minacc_d   0.75 (  0.77)	test_majacc_d   0.82 (  0.80)	test_corr_d   0.60 (  0.59)
Test: [  20/  26]	Loss 0.427 (0.397)	test_acc   0.78 (  0.79)	test_minacc   0.77 (  0.79)	test_majacc   0.78 (  0.79)	Loss_d 0.427 (0.397)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.77 (  0.79)	test_majacc_d   0.78 (  0.79)	test_corr_d   0.57 (  0.57)
Test: [  26/  26]	Loss 0.423 (0.401)	test_acc   0.75 (  0.79)	test_minacc   0.76 (  0.78)	test_majacc   0.75 (  0.79)	Loss_d 0.423 (0.401)	test_acc_d   0.75 (  0.79)	test_minacc_d   0.76 (  0.78)	test_majacc_d   0.75 (  0.79)	test_corr_d   0.53 (  0.57)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.30it/s]
Test: [  0/  1]	Loss 0.974 (0.974)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 0.974 (0.974)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.974 (0.974)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 0.974 (0.974)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.08 (  0.08)
Overall Timing[ 18/  1]	epoch_time 0.0421 (0.0450)	validation_time 0.0004 (0.0008)	train_time 0.0416 (0.0441)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.7867000306248665, 0.6190000176429749)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.01it/s] 19%|#9        | 5/26 [00:00<00:00, 21.89it/s] 35%|###4      | 9/26 [00:00<00:00, 27.00it/s] 50%|#####     | 13/26 [00:00<00:00, 29.96it/s] 65%|######5   | 17/26 [00:00<00:00, 31.80it/s] 81%|########  | 21/26 [00:00<00:00, 32.65it/s] 96%|#########6| 25/26 [00:00<00:00, 32.49it/s]100%|##########| 26/26 [00:00<00:00, 27.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.43 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  24.83 ( 24.83)	train_acc   0.75 (  0.77)	train_minacc   0.76 (  0.79)	train_majacc   0.75 (  0.77)	train_corr   0.00 (  0.00)	l1 5.5312 (5.6057)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 23%|##3       | 6/26 [00:00<00:00, 27.44it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.44it/s] 42%|####2     | 11/26 [00:00<00:00, 36.23it/s] 65%|######5   | 17/26 [00:00<00:00, 38.30it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.30it/s] 85%|########4 | 22/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 33.96it/s]
Test: [   0/  26]	Loss 0.401 (0.401)	test_acc   0.78 (  0.78)	test_minacc   0.75 (  0.75)	test_majacc   0.78 (  0.78)	Loss_d 0.401 (0.401)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.379 (0.384)	test_acc   0.81 (  0.80)	test_minacc   0.75 (  0.77)	test_majacc   0.82 (  0.80)	Loss_d 0.379 (0.384)	test_acc_d   0.81 (  0.80)	test_minacc_d   0.75 (  0.77)	test_majacc_d   0.82 (  0.80)	test_corr_d   0.60 (  0.59)
Test: [  20/  26]	Loss 0.418 (0.395)	test_acc   0.78 (  0.79)	test_minacc   0.77 (  0.79)	test_majacc   0.78 (  0.79)	Loss_d 0.418 (0.395)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.77 (  0.79)	test_majacc_d   0.78 (  0.79)	test_corr_d   0.58 (  0.57)
Test: [  26/  26]	Loss 0.427 (0.399)	test_acc   0.75 (  0.79)	test_minacc   0.76 (  0.78)	test_majacc   0.75 (  0.79)	Loss_d 0.427 (0.399)	test_acc_d   0.75 (  0.79)	test_minacc_d   0.76 (  0.78)	test_majacc_d   0.75 (  0.79)	test_corr_d   0.53 (  0.57)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.97it/s]
Test: [  0/  1]	Loss 0.995 (0.995)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 0.995 (0.995)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.995 (0.995)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 0.995 (0.995)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.08 (  0.08)
Overall Timing[ 19/  1]	epoch_time 0.0413 (0.0448)	validation_time 0.0003 (0.0007)	train_time 0.0409 (0.0440)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.78570002835989, 0.6180000305175781)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.14it/s] 19%|#9        | 5/26 [00:00<00:00, 23.28it/s] 35%|###4      | 9/26 [00:00<00:00, 27.87it/s] 50%|#####     | 13/26 [00:00<00:00, 30.16it/s] 65%|######5   | 17/26 [00:00<00:00, 31.69it/s] 81%|########  | 21/26 [00:00<00:00, 32.63it/s] 96%|#########6| 25/26 [00:00<00:00, 34.50it/s]100%|##########| 26/26 [00:00<00:00, 29.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.001)	train_nll   0.42 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  24.83 ( 24.83)	train_acc   0.76 (  0.78)	train_minacc   0.79 (  0.80)	train_majacc   0.75 (  0.77)	train_corr   0.00 (  0.00)	l1 5.6138 (5.6109)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.68it/s] 23%|##3       | 6/26 [00:00<00:00, 21.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.97it/s] 42%|####2     | 11/26 [00:00<00:00, 31.44it/s] 62%|######1   | 16/26 [00:00<00:00, 35.77it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.77it/s] 81%|########  | 21/26 [00:00<00:00, 36.41it/s]100%|##########| 26/26 [00:00<00:00, 39.10it/s]100%|##########| 26/26 [00:00<00:00, 30.79it/s]
Test: [   0/  26]	Loss 0.401 (0.401)	test_acc   0.79 (  0.79)	test_minacc   0.78 (  0.78)	test_majacc   0.79 (  0.79)	Loss_d 0.401 (0.401)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.364 (0.381)	test_acc   0.82 (  0.80)	test_minacc   0.80 (  0.78)	test_majacc   0.82 (  0.80)	Loss_d 0.364 (0.381)	test_acc_d   0.82 (  0.80)	test_minacc_d   0.80 (  0.78)	test_majacc_d   0.82 (  0.80)	test_corr_d   0.61 (  0.58)
Test: [  20/  26]	Loss 0.412 (0.390)	test_acc   0.79 (  0.79)	test_minacc   0.79 (  0.80)	test_majacc   0.80 (  0.79)	Loss_d 0.412 (0.390)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.79 (  0.80)	test_majacc_d   0.80 (  0.79)	test_corr_d   0.58 (  0.57)
Test: [  26/  26]	Loss 0.423 (0.395)	test_acc   0.77 (  0.79)	test_minacc   0.82 (  0.79)	test_majacc   0.76 (  0.79)	Loss_d 0.423 (0.395)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.82 (  0.79)	test_majacc_d   0.76 (  0.79)	test_corr_d   0.53 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.44it/s]
Test: [  0/  1]	Loss 1.025 (1.025)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.79 (  0.79)	Loss_d 1.025 (1.025)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.025 (1.025)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.79 (  0.79)	Loss_d 1.025 (1.025)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.05 (  0.05)
Overall Timing[ 20/  1]	epoch_time 0.0411 (0.0446)	validation_time 0.0008 (0.0007)	train_time 0.0403 (0.0438)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.7868000264763833, 0.6240000128746033)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.89it/s] 19%|#9        | 5/26 [00:00<00:00, 21.03it/s] 35%|###4      | 9/26 [00:00<00:00, 26.99it/s] 50%|#####     | 13/26 [00:00<00:00, 29.27it/s] 65%|######5   | 17/26 [00:00<00:00, 31.08it/s] 81%|########  | 21/26 [00:00<00:00, 32.23it/s] 96%|#########6| 25/26 [00:00<00:00, 33.13it/s]100%|##########| 26/26 [00:00<00:00, 28.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.001)	train_nll   0.37 (  0.40)	train_penalty   0.00 (  0.00)	weight_norm  24.83 ( 24.83)	train_acc   0.80 (  0.79)	train_minacc   0.79 (  0.79)	train_majacc   0.80 (  0.79)	train_corr   0.00 (  0.00)	l1 5.5820 (5.6753)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.77it/s] 23%|##3       | 6/26 [00:00<00:00, 22.44it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.44it/s] 42%|####2     | 11/26 [00:00<00:00, 30.45it/s] 62%|######1   | 16/26 [00:00<00:00, 36.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.50it/s] 81%|########  | 21/26 [00:00<00:00, 39.34it/s]100%|##########| 26/26 [00:00<00:00, 41.38it/s]100%|##########| 26/26 [00:00<00:00, 32.53it/s]
Test: [   0/  26]	Loss 0.381 (0.381)	test_acc   0.81 (  0.81)	test_minacc   0.76 (  0.76)	test_majacc   0.81 (  0.81)	Loss_d 0.381 (0.381)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.345 (0.363)	test_acc   0.85 (  0.81)	test_minacc   0.75 (  0.76)	test_majacc   0.87 (  0.82)	Loss_d 0.345 (0.363)	test_acc_d   0.85 (  0.81)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.87 (  0.82)	test_corr_d   0.65 (  0.62)
Test: [  20/  26]	Loss 0.397 (0.370)	test_acc   0.80 (  0.81)	test_minacc   0.72 (  0.77)	test_majacc   0.81 (  0.82)	Loss_d 0.397 (0.370)	test_acc_d   0.80 (  0.81)	test_minacc_d   0.72 (  0.77)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.62 (  0.61)
Test: [  26/  26]	Loss 0.382 (0.374)	test_acc   0.78 (  0.81)	test_minacc   0.79 (  0.76)	test_majacc   0.78 (  0.81)	Loss_d 0.382 (0.374)	test_acc_d   0.78 (  0.81)	test_minacc_d   0.79 (  0.76)	test_majacc_d   0.78 (  0.81)	test_corr_d   0.58 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.23it/s]
Test: [  0/  1]	Loss 1.067 (1.067)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.82 (  0.82)	Loss_d 1.067 (1.067)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.067 (1.067)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.82 (  0.82)	Loss_d 1.067 (1.067)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.11 (  0.11)
Overall Timing[ 21/  1]	epoch_time 0.0410 (0.0445)	validation_time 0.0006 (0.0007)	train_time 0.0404 (0.0436)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.8066000261306763, 0.6050000190734863)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.23it/s] 23%|##3       | 6/26 [00:00<00:00, 26.76it/s] 38%|###8      | 10/26 [00:00<00:00, 30.18it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.65it/s] 69%|######9   | 18/26 [00:00<00:00, 32.39it/s] 85%|########4 | 22/26 [00:00<00:00, 33.47it/s]100%|##########| 26/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:00<00:00, 29.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.002 (0.000)	train_nll   0.37 (  0.39)	train_penalty   0.00 (  0.00)	weight_norm  24.84 ( 24.84)	train_acc   0.81 (  0.79)	train_minacc   0.79 (  0.78)	train_majacc   0.81 (  0.79)	train_corr   0.00 (  0.00)	l1 5.4919 (5.7725)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.51it/s] 19%|#9        | 5/26 [00:00<00:01, 20.23it/s] 38%|###8      | 10/26 [00:00<00:00, 29.02it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.02it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.68it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.68it/s] 96%|#########6| 25/26 [00:00<00:00, 40.32it/s]100%|##########| 26/26 [00:00<00:00, 31.76it/s]
Test: [   0/  26]	Loss 0.370 (0.370)	test_acc   0.81 (  0.81)	test_minacc   0.79 (  0.79)	test_majacc   0.82 (  0.82)	Loss_d 0.370 (0.370)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.335 (0.347)	test_acc   0.86 (  0.82)	test_minacc   0.75 (  0.76)	test_majacc   0.88 (  0.83)	Loss_d 0.335 (0.347)	test_acc_d   0.86 (  0.82)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.88 (  0.83)	test_corr_d   0.67 (  0.65)
Test: [  20/  26]	Loss 0.383 (0.352)	test_acc   0.80 (  0.82)	test_minacc   0.72 (  0.78)	test_majacc   0.82 (  0.83)	Loss_d 0.383 (0.352)	test_acc_d   0.80 (  0.82)	test_minacc_d   0.72 (  0.78)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.64 (  0.64)
Test: [  26/  26]	Loss 0.380 (0.359)	test_acc   0.79 (  0.82)	test_minacc   0.79 (  0.77)	test_majacc   0.79 (  0.83)	Loss_d 0.380 (0.359)	test_acc_d   0.79 (  0.82)	test_minacc_d   0.79 (  0.77)	test_majacc_d   0.79 (  0.83)	test_corr_d   0.60 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.71it/s]
Test: [  0/  1]	Loss 1.073 (1.073)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.82 (  0.82)	Loss_d 1.073 (1.073)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.073 (1.073)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.82 (  0.82)	Loss_d 1.073 (1.073)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.15 (  0.15)
Overall Timing[ 22/  1]	epoch_time 0.0385 (0.0442)	validation_time 0.0004 (0.0007)	train_time 0.0381 (0.0434)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.8174000282287598, 0.593000054359436)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.80it/s] 19%|#9        | 5/26 [00:00<00:00, 24.31it/s] 31%|###       | 8/26 [00:00<00:00, 24.18it/s] 46%|####6     | 12/26 [00:00<00:00, 27.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.59it/s] 69%|######9   | 18/26 [00:00<00:00, 27.71it/s] 85%|########4 | 22/26 [00:00<00:00, 30.43it/s]100%|##########| 26/26 [00:00<00:00, 32.06it/s]100%|##########| 26/26 [00:00<00:00, 26.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 5.626796722412109
set z to 5.570528755187988
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 377 tensor(-0.0072, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 266 tensor(-0.0027, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 221 tensor(0.0312, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 201 tensor(0.0187, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 199 tensor(0.0074, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.002 (0.105)	train_nll   0.53 (  0.56)	train_penalty   0.00 (  0.10)	weight_norm  28.20 ( 25.80)	train_acc   0.88 (  0.74)	train_minacc   0.50 (  0.54)	train_majacc   0.94 (  0.77)	train_corr   0.00 (  0.00)	l1 7.3097 (7.4896)	zero_count 0.0000 (38.1810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.90it/s] 23%|##3       | 6/26 [00:00<00:00, 32.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.72it/s] 42%|####2     | 11/26 [00:00<00:00, 38.91it/s] 62%|######1   | 16/26 [00:00<00:00, 40.84it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.84it/s] 81%|########  | 21/26 [00:00<00:00, 39.46it/s]100%|##########| 26/26 [00:00<00:00, 41.72it/s]100%|##########| 26/26 [00:00<00:00, 35.82it/s]
Test: [   0/  26]	Loss 0.537 (0.537)	test_acc   0.86 (  0.86)	test_minacc   0.29 (  0.29)	test_majacc   0.98 (  0.98)	Loss_d 0.537 (0.537)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.559 (0.560)	test_acc   0.85 (  0.87)	test_minacc   0.15 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 0.559 (0.560)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.15 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.53 (  0.55)
Test: [  20/  26]	Loss 0.547 (0.560)	test_acc   0.88 (  0.87)	test_minacc   0.15 (  0.19)	test_majacc   0.99 (  0.98)	Loss_d 0.547 (0.560)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.15 (  0.19)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.50 (  0.54)
Test: [  26/  26]	Loss 0.532 (0.559)	test_acc   0.88 (  0.86)	test_minacc   0.21 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 0.532 (0.559)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.21 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.56 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.70it/s]
Test: [  0/  1]	Loss 2.238 (2.238)	test_acc   0.43 (  0.43)	test_minacc   0.40 (  0.40)	test_majacc   0.68 (  0.68)	Loss_d 2.238 (2.238)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 2.238 (2.238)	test_acc   0.43 (  0.43)	test_minacc   0.40 (  0.40)	test_majacc   0.68 (  0.68)	Loss_d 2.238 (2.238)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.47 (  0.47)
Overall Timing[ 23/  1]	epoch_time 0.0462 (0.0443)	validation_time 0.0004 (0.0007)	train_time 0.0457 (0.0435)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.862300023138523, 0.4310000240802765)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 15%|#5        | 4/26 [00:00<00:01, 15.82it/s] 27%|##6       | 7/26 [00:00<00:00, 20.67it/s] 42%|####2     | 11/26 [00:00<00:00, 25.65it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.87it/s] 65%|######5   | 17/26 [00:00<00:00, 27.52it/s] 81%|########  | 21/26 [00:00<00:00, 29.85it/s] 96%|#########6| 25/26 [00:00<00:00, 30.13it/s]100%|##########| 26/26 [00:01<00:00, 24.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 197 tensor(0.0038, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 193 tensor(0.0066, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 190 tensor(0.0039, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 191 tensor(0.0022, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 194 tensor(0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 305 tensor(4.5703e-05, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.013 (0.005)	train_nll   0.56 (  0.61)	train_penalty   0.01 (  0.00)	weight_norm  30.21 ( 29.56)	train_acc   0.85 (  0.63)	train_minacc   0.44 (  0.45)	train_majacc   0.91 (  0.67)	train_corr   0.00 (  0.00)	l1 5.7174 (6.0101)	zero_count 0.0000 (74.1780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.94it/s] 27%|##6       | 7/26 [00:00<00:00, 33.27it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.27it/s] 46%|####6     | 12/26 [00:00<00:00, 39.09it/s] 65%|######5   | 17/26 [00:00<00:00, 39.70it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.70it/s] 85%|########4 | 22/26 [00:00<00:00, 40.77it/s]100%|##########| 26/26 [00:00<00:00, 36.22it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.85 (  0.85)	test_minacc   0.37 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 0.635 (0.635)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.518 (0.598)	test_acc   0.86 (  0.84)	test_minacc   0.44 (  0.34)	test_majacc   0.94 (  0.92)	Loss_d 0.518 (0.598)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.44 (  0.34)	test_majacc_d   0.94 (  0.92)	test_corr_d   0.70 (  0.72)
Test: [  20/  26]	Loss 0.658 (0.599)	test_acc   0.83 (  0.83)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.92)	Loss_d 0.658 (0.599)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.68 (  0.71)
Test: [  26/  26]	Loss 0.551 (0.600)	test_acc   0.86 (  0.83)	test_minacc   0.47 (  0.33)	test_majacc   0.93 (  0.92)	Loss_d 0.551 (0.600)	test_acc_d   0.86 (  0.83)	test_minacc_d   0.47 (  0.33)	test_majacc_d   0.93 (  0.92)	test_corr_d   0.70 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.97it/s]
Test: [  0/  1]	Loss 3.060 (3.060)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.94 (  0.94)	Loss_d 3.060 (3.060)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 3.060 (3.060)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.94 (  0.94)	Loss_d 3.060 (3.060)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.51 (  0.51)
Overall Timing[ 24/  1]	epoch_time 0.0444 (0.0443)	validation_time 0.0004 (0.0007)	train_time 0.0439 (0.0435)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.8308000267148018, 0.328000009059906)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.93it/s] 19%|#9        | 5/26 [00:00<00:01, 17.36it/s] 31%|###       | 8/26 [00:00<00:00, 20.80it/s] 42%|####2     | 11/26 [00:00<00:00, 22.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.19it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.78it/s] 88%|########8 | 23/26 [00:00<00:00, 30.56it/s]100%|##########| 26/26 [00:01<00:00, 24.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 336 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 346 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 366 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.011)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.01)	weight_norm  31.07 ( 30.73)	train_acc   0.53 (  0.64)	train_minacc   0.79 (  0.48)	train_majacc   0.49 (  0.67)	train_corr   0.00 (  0.00)	l1 5.2965 (5.4979)	zero_count 0.0000 (26.9490)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.65it/s] 23%|##3       | 6/26 [00:00<00:00, 31.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.08it/s] 42%|####2     | 11/26 [00:00<00:00, 37.23it/s] 62%|######1   | 16/26 [00:00<00:00, 37.17it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.17it/s] 81%|########  | 21/26 [00:00<00:00, 39.72it/s]100%|##########| 26/26 [00:00<00:00, 42.53it/s]100%|##########| 26/26 [00:00<00:00, 35.57it/s]
Test: [   0/  26]	Loss 0.599 (0.599)	test_acc   0.59 (  0.59)	test_minacc   0.69 (  0.69)	test_majacc   0.57 (  0.57)	Loss_d 0.599 (0.599)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.603 (0.605)	test_acc   0.59 (  0.60)	test_minacc   0.74 (  0.65)	test_majacc   0.57 (  0.59)	Loss_d 0.603 (0.605)	test_acc_d   0.59 (  0.60)	test_minacc_d   0.74 (  0.65)	test_majacc_d   0.57 (  0.59)	test_corr_d   0.43 (  0.46)
Test: [  20/  26]	Loss 0.604 (0.606)	test_acc   0.58 (  0.59)	test_minacc   0.58 (  0.66)	test_majacc   0.58 (  0.58)	Loss_d 0.604 (0.606)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.58 (  0.66)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.45 (  0.45)
Test: [  26/  26]	Loss 0.595 (0.606)	test_acc   0.58 (  0.59)	test_minacc   0.74 (  0.67)	test_majacc   0.56 (  0.58)	Loss_d 0.595 (0.606)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.74 (  0.67)	test_majacc_d   0.56 (  0.58)	test_corr_d   0.43 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.05it/s]
Test: [  0/  1]	Loss 1.428 (1.428)	test_acc   0.56 (  0.56)	test_minacc   0.58 (  0.58)	test_majacc   0.45 (  0.45)	Loss_d 1.428 (1.428)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 1.428 (1.428)	test_acc   0.56 (  0.56)	test_minacc   0.58 (  0.58)	test_majacc   0.45 (  0.45)	Loss_d 1.428 (1.428)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.27 (  0.27)
Overall Timing[ 25/  1]	epoch_time 0.0421 (0.0442)	validation_time 0.0004 (0.0007)	train_time 0.0417 (0.0434)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.5894000144600868, 0.5649999976158142)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.69it/s] 23%|##3       | 6/26 [00:00<00:00, 23.27it/s] 38%|###8      | 10/26 [00:00<00:00, 27.18it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.04it/s] 88%|########8 | 23/26 [00:00<00:00, 33.68it/s]100%|##########| 26/26 [00:00<00:00, 28.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.001)	train_nll   0.65 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  31.23 ( 31.18)	train_acc   0.38 (  0.51)	train_minacc   0.94 (  0.77)	train_majacc   0.29 (  0.47)	train_corr   0.00 (  0.00)	l1 5.2128 (5.2595)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  8.66it/s] 27%|##6       | 7/26 [00:00<00:00, 23.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.54it/s] 46%|####6     | 12/26 [00:00<00:00, 31.70it/s] 65%|######5   | 17/26 [00:00<00:00, 37.08it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.08it/s] 85%|########4 | 22/26 [00:00<00:00, 36.70it/s]100%|##########| 26/26 [00:00<00:00, 31.72it/s]
Test: [   0/  26]	Loss 0.646 (0.646)	test_acc   0.41 (  0.41)	test_minacc   0.94 (  0.94)	test_majacc   0.30 (  0.30)	Loss_d 0.646 (0.646)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.648 (0.647)	test_acc   0.39 (  0.41)	test_minacc   0.89 (  0.91)	test_majacc   0.30 (  0.32)	Loss_d 0.648 (0.647)	test_acc_d   0.39 (  0.41)	test_minacc_d   0.89 (  0.91)	test_majacc_d   0.30 (  0.32)	test_corr_d   0.21 (  0.24)
Test: [  20/  26]	Loss 0.650 (0.646)	test_acc   0.39 (  0.40)	test_minacc   0.81 (  0.90)	test_majacc   0.33 (  0.31)	Loss_d 0.650 (0.646)	test_acc_d   0.39 (  0.40)	test_minacc_d   0.81 (  0.90)	test_majacc_d   0.33 (  0.31)	test_corr_d   0.22 (  0.23)
Test: [  26/  26]	Loss 0.649 (0.647)	test_acc   0.38 (  0.40)	test_minacc   0.94 (  0.91)	test_majacc   0.29 (  0.31)	Loss_d 0.649 (0.647)	test_acc_d   0.38 (  0.40)	test_minacc_d   0.94 (  0.91)	test_majacc_d   0.29 (  0.31)	test_corr_d   0.19 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.14it/s]
Test: [  0/  1]	Loss 1.058 (1.058)	test_acc   0.70 (  0.70)	test_minacc   0.74 (  0.74)	test_majacc   0.35 (  0.35)	Loss_d 1.058 (1.058)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.35 (  0.35)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 1.058 (1.058)	test_acc   0.70 (  0.70)	test_minacc   0.74 (  0.74)	test_majacc   0.35 (  0.35)	Loss_d 1.058 (1.058)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.35 (  0.35)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 26/  1]	epoch_time 0.0416 (0.0441)	validation_time 0.0004 (0.0007)	train_time 0.0412 (0.0433)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.40180000630021095, 0.7040000557899475)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.83it/s] 19%|#9        | 5/26 [00:00<00:01, 18.92it/s] 35%|###4      | 9/26 [00:00<00:00, 24.72it/s] 50%|#####     | 13/26 [00:00<00:00, 28.41it/s] 65%|######5   | 17/26 [00:00<00:00, 30.79it/s] 81%|########  | 21/26 [00:00<00:00, 31.32it/s] 96%|#########6| 25/26 [00:00<00:00, 32.27it/s]100%|##########| 26/26 [00:00<00:00, 26.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.24)	train_acc   0.40 (  0.43)	train_minacc   0.88 (  0.88)	train_majacc   0.33 (  0.35)	train_corr   0.00 (  0.00)	l1 5.1655 (5.1821)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.05it/s] 23%|##3       | 6/26 [00:00<00:00, 28.19it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.19it/s] 42%|####2     | 11/26 [00:00<00:00, 35.63it/s] 62%|######1   | 16/26 [00:00<00:00, 40.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.11it/s] 81%|########  | 21/26 [00:00<00:00, 42.48it/s]100%|##########| 26/26 [00:00<00:00, 44.52it/s]100%|##########| 26/26 [00:00<00:00, 35.21it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.45 (  0.45)	test_minacc   0.94 (  0.94)	test_majacc   0.35 (  0.35)	Loss_d 0.644 (0.644)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.646 (0.645)	test_acc   0.41 (  0.43)	test_minacc   0.85 (  0.88)	test_majacc   0.33 (  0.36)	Loss_d 0.646 (0.645)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.85 (  0.88)	test_majacc_d   0.33 (  0.36)	test_corr_d   0.23 (  0.26)
Test: [  20/  26]	Loss 0.650 (0.645)	test_acc   0.42 (  0.43)	test_minacc   0.77 (  0.88)	test_majacc   0.37 (  0.35)	Loss_d 0.650 (0.645)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.77 (  0.88)	test_majacc_d   0.37 (  0.35)	test_corr_d   0.23 (  0.24)
Test: [  26/  26]	Loss 0.647 (0.645)	test_acc   0.42 (  0.43)	test_minacc   0.88 (  0.88)	test_majacc   0.34 (  0.35)	Loss_d 0.647 (0.645)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.34 (  0.35)	test_corr_d   0.21 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.07it/s]
Test: [  0/  1]	Loss 1.032 (1.032)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.39 (  0.39)	Loss_d 1.032 (1.032)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.39 (  0.39)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 1.032 (1.032)	test_acc   0.69 (  0.69)	test_minacc   0.72 (  0.72)	test_majacc   0.39 (  0.39)	Loss_d 1.032 (1.032)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.39 (  0.39)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 27/  1]	epoch_time 0.0413 (0.0440)	validation_time 0.0005 (0.0007)	train_time 0.0407 (0.0433)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.43270000410079956, 0.6910000443458557)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.98it/s] 19%|#9        | 5/26 [00:00<00:00, 21.41it/s] 35%|###4      | 9/26 [00:00<00:00, 26.36it/s] 50%|#####     | 13/26 [00:00<00:00, 28.59it/s] 65%|######5   | 17/26 [00:00<00:00, 30.03it/s] 81%|########  | 21/26 [00:00<00:00, 31.31it/s] 96%|#########6| 25/26 [00:00<00:00, 32.45it/s]100%|##########| 26/26 [00:00<00:00, 27.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.38 (  0.42)	train_minacc   0.91 (  0.88)	train_majacc   0.29 (  0.34)	train_corr   0.00 (  0.00)	l1 5.1467 (5.1547)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.48it/s] 23%|##3       | 6/26 [00:00<00:00, 31.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.77it/s] 42%|####2     | 11/26 [00:00<00:00, 37.91it/s] 62%|######1   | 16/26 [00:00<00:00, 41.35it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.35it/s] 81%|########  | 21/26 [00:00<00:00, 39.85it/s]100%|##########| 26/26 [00:00<00:00, 42.32it/s]100%|##########| 26/26 [00:00<00:00, 35.83it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.42 (  0.42)	test_minacc   0.94 (  0.94)	test_majacc   0.31 (  0.31)	Loss_d 0.645 (0.645)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.647 (0.646)	test_acc   0.36 (  0.40)	test_minacc   0.89 (  0.90)	test_majacc   0.26 (  0.31)	Loss_d 0.647 (0.646)	test_acc_d   0.36 (  0.40)	test_minacc_d   0.89 (  0.90)	test_majacc_d   0.26 (  0.31)	test_corr_d   0.23 (  0.25)
Test: [  20/  26]	Loss 0.652 (0.646)	test_acc   0.39 (  0.40)	test_minacc   0.81 (  0.89)	test_majacc   0.32 (  0.31)	Loss_d 0.652 (0.646)	test_acc_d   0.39 (  0.40)	test_minacc_d   0.81 (  0.89)	test_majacc_d   0.32 (  0.31)	test_corr_d   0.22 (  0.24)
Test: [  26/  26]	Loss 0.648 (0.647)	test_acc   0.38 (  0.40)	test_minacc   0.91 (  0.89)	test_majacc   0.30 (  0.31)	Loss_d 0.648 (0.647)	test_acc_d   0.38 (  0.40)	test_minacc_d   0.91 (  0.89)	test_majacc_d   0.30 (  0.31)	test_corr_d   0.21 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.99it/s]
Test: [  0/  1]	Loss 1.042 (1.042)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.39 (  0.39)	Loss_d 1.042 (1.042)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.39 (  0.39)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 1.042 (1.042)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.39 (  0.39)	Loss_d 1.042 (1.042)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.39 (  0.39)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 28/  1]	epoch_time 0.0409 (0.0439)	validation_time 0.0003 (0.0007)	train_time 0.0406 (0.0432)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3993000064492226, 0.6820000410079956)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 19%|#9        | 5/26 [00:00<00:01, 20.63it/s] 35%|###4      | 9/26 [00:00<00:00, 26.58it/s] 50%|#####     | 13/26 [00:00<00:00, 28.78it/s] 65%|######5   | 17/26 [00:00<00:00, 30.41it/s] 81%|########  | 21/26 [00:00<00:00, 31.73it/s] 96%|#########6| 25/26 [00:00<00:00, 33.03it/s]100%|##########| 26/26 [00:00<00:00, 27.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.35 (  0.40)	train_minacc   0.91 (  0.89)	train_majacc   0.26 (  0.32)	train_corr   0.00 (  0.00)	l1 5.1328 (5.1382)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.27it/s] 27%|##6       | 7/26 [00:00<00:00, 34.30it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.30it/s] 46%|####6     | 12/26 [00:00<00:00, 39.21it/s] 65%|######5   | 17/26 [00:00<00:00, 42.21it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.21it/s] 85%|########4 | 22/26 [00:00<00:00, 39.41it/s]100%|##########| 26/26 [00:00<00:00, 37.33it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.39 (  0.39)	test_minacc   0.94 (  0.94)	test_majacc   0.28 (  0.28)	Loss_d 0.645 (0.645)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.646 (0.645)	test_acc   0.35 (  0.38)	test_minacc   0.90 (  0.91)	test_majacc   0.24 (  0.29)	Loss_d 0.646 (0.645)	test_acc_d   0.35 (  0.38)	test_minacc_d   0.90 (  0.91)	test_majacc_d   0.24 (  0.29)	test_corr_d   0.24 (  0.26)
Test: [  20/  26]	Loss 0.652 (0.646)	test_acc   0.36 (  0.38)	test_minacc   0.83 (  0.90)	test_majacc   0.29 (  0.29)	Loss_d 0.652 (0.646)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.83 (  0.90)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.23 (  0.24)
Test: [  26/  26]	Loss 0.647 (0.646)	test_acc   0.35 (  0.38)	test_minacc   0.91 (  0.90)	test_majacc   0.26 (  0.29)	Loss_d 0.647 (0.646)	test_acc_d   0.35 (  0.38)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.26 (  0.29)	test_corr_d   0.21 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.83it/s]
Test: [  0/  1]	Loss 1.055 (1.055)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.40 (  0.40)	Loss_d 1.055 (1.055)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 1.055 (1.055)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.40 (  0.40)	Loss_d 1.055 (1.055)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.00 (  0.00)
Overall Timing[ 29/  1]	epoch_time 0.0440 (0.0439)	validation_time 0.0004 (0.0007)	train_time 0.0436 (0.0432)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.38430000737309455, 0.6610000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.58it/s] 19%|#9        | 5/26 [00:00<00:01, 14.44it/s] 35%|###4      | 9/26 [00:00<00:00, 20.30it/s] 50%|#####     | 13/26 [00:00<00:00, 24.12it/s] 65%|######5   | 17/26 [00:00<00:00, 26.88it/s] 81%|########  | 21/26 [00:00<00:00, 28.94it/s] 96%|#########6| 25/26 [00:01<00:00, 30.85it/s]100%|##########| 26/26 [00:01<00:00, 23.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.35 (  0.39)	train_minacc   0.91 (  0.89)	train_majacc   0.26 (  0.30)	train_corr   0.00 (  0.00)	l1 5.1221 (5.1260)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.07it/s] 23%|##3       | 6/26 [00:00<00:00, 20.81it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.81it/s] 42%|####2     | 11/26 [00:00<00:00, 29.08it/s] 62%|######1   | 16/26 [00:00<00:00, 34.98it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.98it/s] 81%|########  | 21/26 [00:00<00:00, 35.34it/s]100%|##########| 26/26 [00:00<00:00, 30.40it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.38 (  0.38)	test_minacc   0.94 (  0.94)	test_majacc   0.27 (  0.27)	Loss_d 0.644 (0.644)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.644 (0.644)	test_acc   0.34 (  0.37)	test_minacc   0.92 (  0.91)	test_majacc   0.24 (  0.28)	Loss_d 0.644 (0.644)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.92 (  0.91)	test_majacc_d   0.24 (  0.28)	test_corr_d   0.24 (  0.26)
Test: [  20/  26]	Loss 0.652 (0.645)	test_acc   0.36 (  0.37)	test_minacc   0.85 (  0.90)	test_majacc   0.28 (  0.28)	Loss_d 0.652 (0.645)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.85 (  0.90)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.23 (  0.25)
Test: [  26/  26]	Loss 0.646 (0.645)	test_acc   0.35 (  0.38)	test_minacc   0.91 (  0.90)	test_majacc   0.26 (  0.29)	Loss_d 0.646 (0.645)	test_acc_d   0.35 (  0.38)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.26 (  0.29)	test_corr_d   0.22 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.82it/s]
Test: [  0/  1]	Loss 1.064 (1.064)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.42 (  0.42)	Loss_d 1.064 (1.064)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 1.064 (1.064)	test_acc   0.65 (  0.65)	test_minacc   0.68 (  0.68)	test_majacc   0.42 (  0.42)	Loss_d 1.064 (1.064)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.02 (  0.02)
Overall Timing[ 30/  1]	epoch_time 0.0424 (0.0439)	validation_time 0.0004 (0.0006)	train_time 0.0420 (0.0431)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3785000077188015, 0.6520000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.45it/s] 19%|#9        | 5/26 [00:00<00:01, 14.12it/s] 35%|###4      | 9/26 [00:00<00:00, 20.63it/s] 50%|#####     | 13/26 [00:00<00:00, 25.15it/s] 65%|######5   | 17/26 [00:00<00:00, 28.32it/s] 81%|########  | 21/26 [00:00<00:00, 30.66it/s] 96%|#########6| 25/26 [00:00<00:00, 32.30it/s]100%|##########| 26/26 [00:01<00:00, 24.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.36 (  0.38)	train_minacc   0.91 (  0.89)	train_majacc   0.27 (  0.29)	train_corr   0.00 (  0.00)	l1 5.1135 (5.1164)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 27%|##6       | 7/26 [00:00<00:00, 31.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.34it/s] 46%|####6     | 12/26 [00:00<00:00, 37.32it/s] 65%|######5   | 17/26 [00:00<00:00, 40.99it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.99it/s] 85%|########4 | 22/26 [00:00<00:00, 42.62it/s]100%|##########| 26/26 [00:00<00:00, 35.45it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.38 (  0.38)	test_minacc   0.94 (  0.94)	test_majacc   0.26 (  0.26)	Loss_d 0.644 (0.644)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.644 (0.643)	test_acc   0.34 (  0.37)	test_minacc   0.92 (  0.91)	test_majacc   0.24 (  0.27)	Loss_d 0.644 (0.643)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.92 (  0.91)	test_majacc_d   0.24 (  0.27)	test_corr_d   0.25 (  0.27)
Test: [  20/  26]	Loss 0.652 (0.645)	test_acc   0.34 (  0.37)	test_minacc   0.83 (  0.90)	test_majacc   0.26 (  0.28)	Loss_d 0.652 (0.645)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.83 (  0.90)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.23 (  0.25)
Test: [  26/  26]	Loss 0.645 (0.645)	test_acc   0.36 (  0.37)	test_minacc   0.91 (  0.90)	test_majacc   0.27 (  0.28)	Loss_d 0.645 (0.645)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.91 (  0.90)	test_majacc_d   0.27 (  0.28)	test_corr_d   0.23 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.87it/s]
Test: [  0/  1]	Loss 1.070 (1.070)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.43 (  0.43)	Loss_d 1.070 (1.070)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.070 (1.070)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.43 (  0.43)	Loss_d 1.070 (1.070)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.04 (  0.04)
Overall Timing[ 31/  1]	epoch_time 0.0390 (0.0437)	validation_time 0.0003 (0.0006)	train_time 0.0387 (0.0430)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.37410000744462013, 0.6440000534057617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.90it/s] 19%|#9        | 5/26 [00:00<00:01, 15.85it/s] 35%|###4      | 9/26 [00:00<00:00, 22.74it/s] 50%|#####     | 13/26 [00:00<00:00, 26.87it/s] 65%|######5   | 17/26 [00:00<00:00, 29.35it/s] 81%|########  | 21/26 [00:00<00:00, 31.06it/s] 96%|#########6| 25/26 [00:00<00:00, 32.36it/s]100%|##########| 26/26 [00:01<00:00, 24.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.36 (  0.38)	train_minacc   0.88 (  0.89)	train_majacc   0.27 (  0.29)	train_corr   0.00 (  0.00)	l1 5.1064 (5.1087)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.56it/s] 19%|#9        | 5/26 [00:00<00:00, 21.74it/s] 38%|###8      | 10/26 [00:00<00:00, 28.96it/s]                                                38%|###8      | 10/26 [00:00<00:00, 28.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.14it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.14it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.14it/s] 96%|#########6| 25/26 [00:00<00:00, 41.46it/s]100%|##########| 26/26 [00:00<00:00, 32.93it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.38 (  0.38)	test_minacc   0.94 (  0.94)	test_majacc   0.27 (  0.27)	Loss_d 0.644 (0.644)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.643 (0.643)	test_acc   0.34 (  0.36)	test_minacc   0.93 (  0.91)	test_majacc   0.23 (  0.27)	Loss_d 0.643 (0.643)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.93 (  0.91)	test_majacc_d   0.23 (  0.27)	test_corr_d   0.25 (  0.27)
Test: [  20/  26]	Loss 0.651 (0.645)	test_acc   0.34 (  0.37)	test_minacc   0.81 (  0.89)	test_majacc   0.26 (  0.28)	Loss_d 0.651 (0.645)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.81 (  0.89)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.24 (  0.25)
Test: [  26/  26]	Loss 0.645 (0.645)	test_acc   0.36 (  0.37)	test_minacc   0.88 (  0.89)	test_majacc   0.27 (  0.28)	Loss_d 0.645 (0.645)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.27 (  0.28)	test_corr_d   0.23 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.38it/s]
Test: [  0/  1]	Loss 1.074 (1.074)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.43 (  0.43)	Loss_d 1.074 (1.074)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.074 (1.074)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.43 (  0.43)	Loss_d 1.074 (1.074)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.05 (  0.05)
Overall Timing[ 32/  1]	epoch_time 0.0413 (0.0436)	validation_time 0.0004 (0.0006)	train_time 0.0409 (0.0429)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.37240000754594804, 0.6310000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.18it/s] 19%|#9        | 5/26 [00:00<00:00, 21.92it/s] 35%|###4      | 9/26 [00:00<00:00, 28.11it/s] 50%|#####     | 13/26 [00:00<00:00, 31.41it/s] 65%|######5   | 17/26 [00:00<00:00, 33.67it/s] 81%|########  | 21/26 [00:00<00:00, 35.02it/s] 96%|#########6| 25/26 [00:00<00:00, 34.48it/s]100%|##########| 26/26 [00:00<00:00, 29.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.36 (  0.38)	train_minacc   0.88 (  0.89)	train_majacc   0.28 (  0.29)	train_corr   0.00 (  0.00)	l1 5.1005 (5.1023)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.50it/s] 23%|##3       | 6/26 [00:00<00:00, 22.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.10it/s] 42%|####2     | 11/26 [00:00<00:00, 30.89it/s] 62%|######1   | 16/26 [00:00<00:00, 36.42it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.42it/s] 81%|########  | 21/26 [00:00<00:00, 36.43it/s]100%|##########| 26/26 [00:00<00:00, 39.92it/s]100%|##########| 26/26 [00:00<00:00, 30.94it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.38 (  0.38)	test_minacc   0.93 (  0.93)	test_majacc   0.26 (  0.26)	Loss_d 0.644 (0.644)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.642 (0.643)	test_acc   0.34 (  0.36)	test_minacc   0.93 (  0.90)	test_majacc   0.23 (  0.27)	Loss_d 0.642 (0.643)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.93 (  0.90)	test_majacc_d   0.23 (  0.27)	test_corr_d   0.25 (  0.27)
Test: [  20/  26]	Loss 0.651 (0.645)	test_acc   0.33 (  0.37)	test_minacc   0.79 (  0.89)	test_majacc   0.26 (  0.28)	Loss_d 0.651 (0.645)	test_acc_d   0.33 (  0.37)	test_minacc_d   0.79 (  0.89)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.24 (  0.25)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.36 (  0.37)	test_minacc   0.88 (  0.89)	test_majacc   0.28 (  0.28)	Loss_d 0.644 (0.645)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.23 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.51it/s]
Test: [  0/  1]	Loss 1.077 (1.077)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.43 (  0.43)	Loss_d 1.077 (1.077)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 1.077 (1.077)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.43 (  0.43)	Loss_d 1.077 (1.077)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.06 (  0.06)
Overall Timing[ 33/  1]	epoch_time 0.0425 (0.0436)	validation_time 0.0003 (0.0006)	train_time 0.0422 (0.0429)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3704000078737736, 0.6150000095367432)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.32it/s] 19%|#9        | 5/26 [00:00<00:01, 14.05it/s] 35%|###4      | 9/26 [00:00<00:00, 20.68it/s] 50%|#####     | 13/26 [00:00<00:00, 24.78it/s] 65%|######5   | 17/26 [00:00<00:00, 27.89it/s] 81%|########  | 21/26 [00:00<00:00, 30.06it/s] 96%|#########6| 25/26 [00:01<00:00, 31.84it/s]100%|##########| 26/26 [00:01<00:00, 23.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.36 (  0.38)	train_minacc   0.88 (  0.88)	train_majacc   0.28 (  0.29)	train_corr   0.00 (  0.00)	l1 5.0954 (5.0970)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.94it/s] 23%|##3       | 6/26 [00:00<00:00, 28.36it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.36it/s] 46%|####6     | 12/26 [00:00<00:00, 35.10it/s] 65%|######5   | 17/26 [00:00<00:00, 38.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.81it/s] 85%|########4 | 22/26 [00:00<00:00, 41.33it/s]100%|##########| 26/26 [00:00<00:00, 35.31it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.38 (  0.38)	test_minacc   0.93 (  0.93)	test_majacc   0.27 (  0.27)	Loss_d 0.644 (0.644)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.642 (0.643)	test_acc   0.34 (  0.36)	test_minacc   0.93 (  0.90)	test_majacc   0.23 (  0.27)	Loss_d 0.642 (0.643)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.93 (  0.90)	test_majacc_d   0.23 (  0.27)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.651 (0.644)	test_acc   0.33 (  0.36)	test_minacc   0.79 (  0.89)	test_majacc   0.25 (  0.27)	Loss_d 0.651 (0.644)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.79 (  0.89)	test_majacc_d   0.25 (  0.27)	test_corr_d   0.24 (  0.26)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.36 (  0.37)	test_minacc   0.88 (  0.89)	test_majacc   0.28 (  0.28)	Loss_d 0.644 (0.645)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.86it/s]
Test: [  0/  1]	Loss 1.080 (1.080)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.43 (  0.43)	Loss_d 1.080 (1.080)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 1.080 (1.080)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.43 (  0.43)	Loss_d 1.080 (1.080)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.07 (  0.07)
Overall Timing[ 34/  1]	epoch_time 0.0411 (0.0435)	validation_time 0.0005 (0.0006)	train_time 0.0406 (0.0428)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.36880000796914103, 0.609000027179718)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.47it/s] 19%|#9        | 5/26 [00:00<00:01, 18.73it/s] 35%|###4      | 9/26 [00:00<00:00, 25.77it/s] 50%|#####     | 13/26 [00:00<00:00, 29.43it/s] 65%|######5   | 17/26 [00:00<00:00, 29.26it/s] 81%|########  | 21/26 [00:00<00:00, 29.46it/s] 96%|#########6| 25/26 [00:00<00:00, 31.15it/s]100%|##########| 26/26 [00:00<00:00, 26.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.36 (  0.37)	train_minacc   0.88 (  0.88)	train_majacc   0.28 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0910 (5.0923)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.38it/s] 27%|##6       | 7/26 [00:00<00:00, 30.25it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.25it/s] 46%|####6     | 12/26 [00:00<00:00, 36.29it/s] 65%|######5   | 17/26 [00:00<00:00, 39.39it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.39it/s] 85%|########4 | 22/26 [00:00<00:00, 38.33it/s]100%|##########| 26/26 [00:00<00:00, 35.04it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.38 (  0.38)	test_minacc   0.93 (  0.93)	test_majacc   0.27 (  0.27)	Loss_d 0.644 (0.644)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.641 (0.643)	test_acc   0.34 (  0.36)	test_minacc   0.93 (  0.90)	test_majacc   0.23 (  0.27)	Loss_d 0.641 (0.643)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.93 (  0.90)	test_majacc_d   0.23 (  0.27)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.651 (0.644)	test_acc   0.33 (  0.36)	test_minacc   0.81 (  0.89)	test_majacc   0.25 (  0.27)	Loss_d 0.651 (0.644)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.81 (  0.89)	test_majacc_d   0.25 (  0.27)	test_corr_d   0.24 (  0.26)
Test: [  26/  26]	Loss 0.643 (0.645)	test_acc   0.36 (  0.37)	test_minacc   0.88 (  0.89)	test_majacc   0.28 (  0.28)	Loss_d 0.643 (0.645)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.68it/s]
Test: [  0/  1]	Loss 1.083 (1.083)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.43 (  0.43)	Loss_d 1.083 (1.083)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 1.083 (1.083)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.43 (  0.43)	Loss_d 1.083 (1.083)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.07 (  0.07)
Overall Timing[ 35/  1]	epoch_time 0.0409 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0405 (0.0428)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3687000079751015, 0.5990000367164612)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.13it/s] 19%|#9        | 5/26 [00:00<00:00, 22.98it/s] 35%|###4      | 9/26 [00:00<00:00, 28.15it/s] 50%|#####     | 13/26 [00:00<00:00, 30.83it/s] 65%|######5   | 17/26 [00:00<00:00, 32.44it/s] 81%|########  | 21/26 [00:00<00:00, 33.24it/s] 96%|#########6| 25/26 [00:00<00:00, 34.08it/s]100%|##########| 26/26 [00:00<00:00, 29.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.36 (  0.37)	train_minacc   0.88 (  0.89)	train_majacc   0.28 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0870 (5.0882)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.50it/s] 23%|##3       | 6/26 [00:00<00:00, 24.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.18it/s] 42%|####2     | 11/26 [00:00<00:00, 32.56it/s] 62%|######1   | 16/26 [00:00<00:00, 38.00it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.00it/s] 81%|########  | 21/26 [00:00<00:00, 40.72it/s]100%|##########| 26/26 [00:00<00:00, 42.92it/s]100%|##########| 26/26 [00:00<00:00, 34.00it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.38 (  0.38)	test_minacc   0.93 (  0.93)	test_majacc   0.26 (  0.26)	Loss_d 0.644 (0.644)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.641 (0.642)	test_acc   0.34 (  0.36)	test_minacc   0.92 (  0.90)	test_majacc   0.23 (  0.26)	Loss_d 0.641 (0.642)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.23 (  0.26)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.650 (0.644)	test_acc   0.33 (  0.36)	test_minacc   0.81 (  0.89)	test_majacc   0.25 (  0.27)	Loss_d 0.650 (0.644)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.81 (  0.89)	test_majacc_d   0.25 (  0.27)	test_corr_d   0.24 (  0.26)
Test: [  26/  26]	Loss 0.643 (0.644)	test_acc   0.36 (  0.37)	test_minacc   0.88 (  0.89)	test_majacc   0.28 (  0.28)	Loss_d 0.643 (0.644)	test_acc_d   0.36 (  0.37)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.64it/s]
Test: [  0/  1]	Loss 1.086 (1.086)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.43 (  0.43)	Loss_d 1.086 (1.086)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.086 (1.086)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.43 (  0.43)	Loss_d 1.086 (1.086)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.08 (  0.08)
Overall Timing[ 36/  1]	epoch_time 0.0448 (0.0435)	validation_time 0.0003 (0.0006)	train_time 0.0444 (0.0428)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3672000080645084, 0.5960000157356262)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.40it/s] 19%|#9        | 5/26 [00:00<00:01, 16.55it/s] 35%|###4      | 9/26 [00:00<00:00, 23.10it/s] 50%|#####     | 13/26 [00:00<00:00, 27.18it/s] 65%|######5   | 17/26 [00:00<00:00, 29.81it/s] 81%|########  | 21/26 [00:00<00:00, 31.58it/s] 96%|#########6| 25/26 [00:00<00:00, 32.67it/s]100%|##########| 26/26 [00:01<00:00, 25.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.36 (  0.37)	train_minacc   0.88 (  0.89)	train_majacc   0.28 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0832 (5.0844)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.20it/s] 27%|##6       | 7/26 [00:00<00:00, 32.74it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.74it/s] 50%|#####     | 13/26 [00:00<00:00, 39.91it/s] 69%|######9   | 18/26 [00:00<00:00, 41.65it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.65it/s] 88%|########8 | 23/26 [00:00<00:00, 43.00it/s]100%|##########| 26/26 [00:00<00:00, 37.55it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.38 (  0.38)	test_minacc   0.93 (  0.93)	test_majacc   0.26 (  0.26)	Loss_d 0.644 (0.644)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.640 (0.642)	test_acc   0.34 (  0.36)	test_minacc   0.92 (  0.90)	test_majacc   0.23 (  0.26)	Loss_d 0.640 (0.642)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.23 (  0.26)	test_corr_d   0.26 (  0.27)
Test: [  20/  26]	Loss 0.650 (0.644)	test_acc   0.33 (  0.36)	test_minacc   0.81 (  0.89)	test_majacc   0.26 (  0.27)	Loss_d 0.650 (0.644)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.81 (  0.89)	test_majacc_d   0.26 (  0.27)	test_corr_d   0.24 (  0.26)
Test: [  26/  26]	Loss 0.642 (0.644)	test_acc   0.35 (  0.37)	test_minacc   0.88 (  0.89)	test_majacc   0.27 (  0.27)	Loss_d 0.642 (0.644)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.24 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.16it/s]
Test: [  0/  1]	Loss 1.089 (1.089)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.44 (  0.44)	Loss_d 1.089 (1.089)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.089 (1.089)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.44 (  0.44)	Loss_d 1.089 (1.089)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.09 (  0.09)
Overall Timing[ 37/  1]	epoch_time 0.0400 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0395 (0.0427)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3667000084221363, 0.5910000205039978)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.00it/s] 19%|#9        | 5/26 [00:00<00:01, 15.72it/s] 35%|###4      | 9/26 [00:00<00:00, 21.97it/s] 50%|#####     | 13/26 [00:00<00:00, 25.93it/s] 65%|######5   | 17/26 [00:00<00:00, 28.52it/s] 81%|########  | 21/26 [00:00<00:00, 30.59it/s] 96%|#########6| 25/26 [00:00<00:00, 31.82it/s]100%|##########| 26/26 [00:01<00:00, 24.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.36 (  0.37)	train_minacc   0.88 (  0.89)	train_majacc   0.28 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0797 (5.0809)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 23%|##3       | 6/26 [00:00<00:00, 29.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.29it/s] 42%|####2     | 11/26 [00:00<00:00, 35.73it/s] 62%|######1   | 16/26 [00:00<00:00, 39.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.65it/s] 81%|########  | 21/26 [00:00<00:00, 40.87it/s]100%|##########| 26/26 [00:00<00:00, 43.27it/s]100%|##########| 26/26 [00:00<00:00, 35.33it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.38 (  0.38)	test_minacc   0.93 (  0.93)	test_majacc   0.26 (  0.26)	Loss_d 0.644 (0.644)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.640 (0.642)	test_acc   0.34 (  0.36)	test_minacc   0.92 (  0.90)	test_majacc   0.23 (  0.27)	Loss_d 0.640 (0.642)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.23 (  0.27)	test_corr_d   0.26 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.644)	test_acc   0.33 (  0.36)	test_minacc   0.81 (  0.89)	test_majacc   0.26 (  0.27)	Loss_d 0.650 (0.644)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.81 (  0.89)	test_majacc_d   0.26 (  0.27)	test_corr_d   0.25 (  0.26)
Test: [  26/  26]	Loss 0.642 (0.644)	test_acc   0.35 (  0.37)	test_minacc   0.88 (  0.89)	test_majacc   0.26 (  0.28)	Loss_d 0.642 (0.644)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.25 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.19it/s]
Test: [  0/  1]	Loss 1.092 (1.092)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.44 (  0.44)	Loss_d 1.092 (1.092)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.092 (1.092)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.44 (  0.44)	Loss_d 1.092 (1.092)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.10 (  0.10)
Overall Timing[ 38/  1]	epoch_time 0.0400 (0.0433)	validation_time 0.0004 (0.0006)	train_time 0.0396 (0.0427)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.36700000819563866, 0.581000030040741)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.34it/s] 19%|#9        | 5/26 [00:00<00:01, 18.50it/s] 35%|###4      | 9/26 [00:00<00:00, 24.78it/s] 50%|#####     | 13/26 [00:00<00:00, 28.09it/s] 65%|######5   | 17/26 [00:00<00:00, 30.23it/s] 81%|########  | 21/26 [00:00<00:00, 32.06it/s] 96%|#########6| 25/26 [00:00<00:00, 33.16it/s]100%|##########| 26/26 [00:00<00:00, 26.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.35 (  0.37)	train_minacc   0.88 (  0.89)	train_majacc   0.27 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0762 (5.0775)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.12it/s] 27%|##6       | 7/26 [00:00<00:00, 31.91it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.91it/s] 46%|####6     | 12/26 [00:00<00:00, 38.20it/s] 65%|######5   | 17/26 [00:00<00:00, 40.96it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.96it/s] 85%|########4 | 22/26 [00:00<00:00, 43.11it/s]100%|##########| 26/26 [00:00<00:00, 36.44it/s]
Test: [   0/  26]	Loss 0.643 (0.643)	test_acc   0.38 (  0.38)	test_minacc   0.93 (  0.93)	test_majacc   0.26 (  0.26)	Loss_d 0.643 (0.643)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.26 (  0.26)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.639 (0.642)	test_acc   0.33 (  0.36)	test_minacc   0.92 (  0.90)	test_majacc   0.22 (  0.27)	Loss_d 0.639 (0.642)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.22 (  0.27)	test_corr_d   0.27 (  0.28)
Test: [  20/  26]	Loss 0.649 (0.643)	test_acc   0.34 (  0.36)	test_minacc   0.83 (  0.89)	test_majacc   0.26 (  0.27)	Loss_d 0.649 (0.643)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.83 (  0.89)	test_majacc_d   0.26 (  0.27)	test_corr_d   0.25 (  0.26)
Test: [  26/  26]	Loss 0.641 (0.644)	test_acc   0.35 (  0.37)	test_minacc   0.88 (  0.89)	test_majacc   0.26 (  0.28)	Loss_d 0.641 (0.644)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.25 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.28it/s]
Test: [  0/  1]	Loss 1.095 (1.095)	test_acc   0.58 (  0.58)	test_minacc   0.59 (  0.59)	test_majacc   0.44 (  0.44)	Loss_d 1.095 (1.095)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.095 (1.095)	test_acc   0.58 (  0.58)	test_minacc   0.59 (  0.59)	test_majacc   0.44 (  0.44)	Loss_d 1.095 (1.095)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.11 (  0.11)
Overall Timing[ 39/  1]	epoch_time 0.0397 (0.0432)	validation_time 0.0003 (0.0006)	train_time 0.0393 (0.0426)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3671000081896782, 0.5760000348091125)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.56it/s] 15%|#5        | 4/26 [00:00<00:01, 17.63it/s] 27%|##6       | 7/26 [00:00<00:00, 22.26it/s] 42%|####2     | 11/26 [00:00<00:00, 25.34it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.76it/s] 88%|########8 | 23/26 [00:00<00:00, 30.59it/s]100%|##########| 26/26 [00:01<00:00, 26.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.35 (  0.37)	train_minacc   0.88 (  0.89)	train_majacc   0.27 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0727 (5.0742)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.35it/s] 19%|#9        | 5/26 [00:00<00:01, 14.59it/s] 38%|###8      | 10/26 [00:00<00:00, 24.73it/s]                                                38%|###8      | 10/26 [00:00<00:00, 24.73it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.64it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 33.64it/s] 96%|#########6| 25/26 [00:00<00:00, 37.06it/s]100%|##########| 26/26 [00:00<00:00, 27.36it/s]
Test: [   0/  26]	Loss 0.643 (0.643)	test_acc   0.38 (  0.38)	test_minacc   0.93 (  0.93)	test_majacc   0.27 (  0.27)	Loss_d 0.643 (0.643)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.639 (0.641)	test_acc   0.34 (  0.36)	test_minacc   0.92 (  0.90)	test_majacc   0.23 (  0.27)	Loss_d 0.639 (0.641)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.23 (  0.27)	test_corr_d   0.27 (  0.28)
Test: [  20/  26]	Loss 0.649 (0.643)	test_acc   0.34 (  0.36)	test_minacc   0.83 (  0.89)	test_majacc   0.26 (  0.27)	Loss_d 0.649 (0.643)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.83 (  0.89)	test_majacc_d   0.26 (  0.27)	test_corr_d   0.25 (  0.26)
Test: [  26/  26]	Loss 0.641 (0.643)	test_acc   0.34 (  0.37)	test_minacc   0.88 (  0.89)	test_majacc   0.26 (  0.28)	Loss_d 0.641 (0.643)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.25 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.38it/s]
Test: [  0/  1]	Loss 1.098 (1.098)	test_acc   0.57 (  0.57)	test_minacc   0.59 (  0.59)	test_majacc   0.44 (  0.44)	Loss_d 1.098 (1.098)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.098 (1.098)	test_acc   0.57 (  0.57)	test_minacc   0.59 (  0.59)	test_majacc   0.44 (  0.44)	Loss_d 1.098 (1.098)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.11 (  0.11)
Overall Timing[ 40/  1]	epoch_time 0.0413 (0.0432)	validation_time 0.0006 (0.0006)	train_time 0.0407 (0.0425)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3672000079751015, 0.5730000138282776)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.88it/s] 23%|##3       | 6/26 [00:00<00:00, 24.46it/s] 38%|###8      | 10/26 [00:00<00:00, 28.34it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.37it/s] 69%|######9   | 18/26 [00:00<00:00, 31.91it/s] 85%|########4 | 22/26 [00:00<00:00, 33.04it/s]100%|##########| 26/26 [00:00<00:00, 33.77it/s]100%|##########| 26/26 [00:00<00:00, 29.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.35 (  0.37)	train_minacc   0.88 (  0.88)	train_majacc   0.26 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0691 (5.0709)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.99it/s] 23%|##3       | 6/26 [00:00<00:00, 25.40it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.40it/s] 42%|####2     | 11/26 [00:00<00:00, 33.35it/s] 62%|######1   | 16/26 [00:00<00:00, 38.15it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.15it/s] 81%|########  | 21/26 [00:00<00:00, 37.51it/s]100%|##########| 26/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 32.98it/s]
Test: [   0/  26]	Loss 0.643 (0.643)	test_acc   0.39 (  0.39)	test_minacc   0.93 (  0.93)	test_majacc   0.28 (  0.28)	Loss_d 0.643 (0.643)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.638 (0.641)	test_acc   0.34 (  0.36)	test_minacc   0.92 (  0.90)	test_majacc   0.23 (  0.27)	Loss_d 0.638 (0.641)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.23 (  0.27)	test_corr_d   0.27 (  0.28)
Test: [  20/  26]	Loss 0.648 (0.643)	test_acc   0.33 (  0.36)	test_minacc   0.81 (  0.88)	test_majacc   0.26 (  0.27)	Loss_d 0.648 (0.643)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.81 (  0.88)	test_majacc_d   0.26 (  0.27)	test_corr_d   0.25 (  0.27)
Test: [  26/  26]	Loss 0.640 (0.643)	test_acc   0.34 (  0.37)	test_minacc   0.85 (  0.88)	test_majacc   0.25 (  0.28)	Loss_d 0.640 (0.643)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.85 (  0.88)	test_majacc_d   0.25 (  0.28)	test_corr_d   0.25 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 1.101 (1.101)	test_acc   0.56 (  0.56)	test_minacc   0.58 (  0.58)	test_majacc   0.44 (  0.44)	Loss_d 1.101 (1.101)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.101 (1.101)	test_acc   0.56 (  0.56)	test_minacc   0.58 (  0.58)	test_majacc   0.44 (  0.44)	Loss_d 1.101 (1.101)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.12 (  0.12)
Overall Timing[ 41/  1]	epoch_time 0.0409 (0.0431)	validation_time 0.0003 (0.0006)	train_time 0.0406 (0.0425)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3676000082790852, 0.5649999976158142)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.99it/s] 23%|##3       | 6/26 [00:00<00:00, 25.79it/s] 38%|###8      | 10/26 [00:00<00:00, 29.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.55it/s] 69%|######9   | 18/26 [00:00<00:00, 32.81it/s] 85%|########4 | 22/26 [00:00<00:00, 33.48it/s]100%|##########| 26/26 [00:00<00:00, 33.72it/s]100%|##########| 26/26 [00:00<00:00, 29.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.25 ( 31.25)	train_acc   0.35 (  0.37)	train_minacc   0.85 (  0.88)	train_majacc   0.27 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0655 (5.0675)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.72it/s] 27%|##6       | 7/26 [00:00<00:00, 29.27it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.27it/s] 46%|####6     | 12/26 [00:00<00:00, 36.33it/s] 65%|######5   | 17/26 [00:00<00:00, 39.72it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.72it/s] 85%|########4 | 22/26 [00:00<00:00, 37.91it/s]100%|##########| 26/26 [00:00<00:00, 35.38it/s]
Test: [   0/  26]	Loss 0.642 (0.642)	test_acc   0.39 (  0.39)	test_minacc   0.93 (  0.93)	test_majacc   0.28 (  0.28)	Loss_d 0.642 (0.642)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.637 (0.640)	test_acc   0.34 (  0.36)	test_minacc   0.92 (  0.89)	test_majacc   0.23 (  0.27)	Loss_d 0.637 (0.640)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.92 (  0.89)	test_majacc_d   0.23 (  0.27)	test_corr_d   0.27 (  0.29)
Test: [  20/  26]	Loss 0.648 (0.642)	test_acc   0.33 (  0.37)	test_minacc   0.79 (  0.88)	test_majacc   0.26 (  0.28)	Loss_d 0.648 (0.642)	test_acc_d   0.33 (  0.37)	test_minacc_d   0.79 (  0.88)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.25 (  0.27)
Test: [  26/  26]	Loss 0.640 (0.642)	test_acc   0.34 (  0.37)	test_minacc   0.85 (  0.88)	test_majacc   0.25 (  0.28)	Loss_d 0.640 (0.642)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.85 (  0.88)	test_majacc_d   0.25 (  0.28)	test_corr_d   0.26 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.51it/s]
Test: [  0/  1]	Loss 1.104 (1.104)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.46 (  0.46)	Loss_d 1.104 (1.104)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.104 (1.104)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.46 (  0.46)	Loss_d 1.104 (1.104)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.13 (  0.13)
Overall Timing[ 42/  1]	epoch_time 0.0399 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0394 (0.0424)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3689000082015991, 0.5610000491142273)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.04it/s] 19%|#9        | 5/26 [00:00<00:00, 23.47it/s] 35%|###4      | 9/26 [00:00<00:00, 27.75it/s] 50%|#####     | 13/26 [00:00<00:00, 29.69it/s] 65%|######5   | 17/26 [00:00<00:00, 31.22it/s] 81%|########  | 21/26 [00:00<00:00, 32.97it/s] 96%|#########6| 25/26 [00:00<00:00, 33.25it/s]100%|##########| 26/26 [00:00<00:00, 28.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.26 ( 31.26)	train_acc   0.35 (  0.37)	train_minacc   0.85 (  0.88)	train_majacc   0.27 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0619 (5.0642)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.78it/s] 27%|##6       | 7/26 [00:00<00:00, 31.40it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.40it/s] 46%|####6     | 12/26 [00:00<00:00, 37.43it/s] 65%|######5   | 17/26 [00:00<00:00, 41.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.77it/s] 85%|########4 | 22/26 [00:00<00:00, 43.56it/s]100%|##########| 26/26 [00:00<00:00, 37.70it/s]
Test: [   0/  26]	Loss 0.642 (0.642)	test_acc   0.39 (  0.39)	test_minacc   0.91 (  0.91)	test_majacc   0.28 (  0.28)	Loss_d 0.642 (0.642)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.637 (0.640)	test_acc   0.33 (  0.37)	test_minacc   0.89 (  0.88)	test_majacc   0.23 (  0.27)	Loss_d 0.637 (0.640)	test_acc_d   0.33 (  0.37)	test_minacc_d   0.89 (  0.88)	test_majacc_d   0.23 (  0.27)	test_corr_d   0.28 (  0.29)
Test: [  20/  26]	Loss 0.647 (0.641)	test_acc   0.34 (  0.37)	test_minacc   0.81 (  0.88)	test_majacc   0.26 (  0.28)	Loss_d 0.647 (0.641)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.81 (  0.88)	test_majacc_d   0.26 (  0.28)	test_corr_d   0.26 (  0.27)
Test: [  26/  26]	Loss 0.639 (0.642)	test_acc   0.34 (  0.37)	test_minacc   0.85 (  0.88)	test_majacc   0.25 (  0.28)	Loss_d 0.639 (0.642)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.85 (  0.88)	test_majacc_d   0.25 (  0.28)	test_corr_d   0.26 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.55it/s]
Test: [  0/  1]	Loss 1.107 (1.107)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.46 (  0.46)	Loss_d 1.107 (1.107)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.107 (1.107)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.46 (  0.46)	Loss_d 1.107 (1.107)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Overall Timing[ 43/  1]	epoch_time 0.0417 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0413 (0.0424)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3712000080645084, 0.5509999990463257)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 19%|#9        | 5/26 [00:00<00:01, 20.63it/s] 35%|###4      | 9/26 [00:00<00:00, 26.76it/s] 50%|#####     | 13/26 [00:00<00:00, 29.98it/s] 65%|######5   | 17/26 [00:00<00:00, 30.72it/s] 81%|########  | 21/26 [00:00<00:00, 32.00it/s] 96%|#########6| 25/26 [00:00<00:00, 32.58it/s]100%|##########| 26/26 [00:00<00:00, 27.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.26 ( 31.26)	train_acc   0.35 (  0.37)	train_minacc   0.85 (  0.88)	train_majacc   0.27 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0583 (5.0609)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.05it/s] 27%|##6       | 7/26 [00:00<00:00, 26.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.66it/s] 50%|#####     | 13/26 [00:00<00:00, 37.32it/s] 69%|######9   | 18/26 [00:00<00:00, 35.85it/s]                                                69%|######9   | 18/26 [00:00<00:00, 35.85it/s] 88%|########8 | 23/26 [00:00<00:00, 39.93it/s]100%|##########| 26/26 [00:00<00:00, 34.15it/s]
Test: [   0/  26]	Loss 0.642 (0.642)	test_acc   0.39 (  0.39)	test_minacc   0.90 (  0.90)	test_majacc   0.28 (  0.28)	Loss_d 0.642 (0.642)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.28 (  0.28)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.636 (0.639)	test_acc   0.34 (  0.37)	test_minacc   0.87 (  0.88)	test_majacc   0.24 (  0.28)	Loss_d 0.636 (0.639)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.87 (  0.88)	test_majacc_d   0.24 (  0.28)	test_corr_d   0.28 (  0.29)
Test: [  20/  26]	Loss 0.647 (0.641)	test_acc   0.34 (  0.37)	test_minacc   0.81 (  0.87)	test_majacc   0.27 (  0.28)	Loss_d 0.647 (0.641)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.81 (  0.87)	test_majacc_d   0.27 (  0.28)	test_corr_d   0.26 (  0.28)
Test: [  26/  26]	Loss 0.638 (0.641)	test_acc   0.34 (  0.37)	test_minacc   0.85 (  0.87)	test_majacc   0.26 (  0.29)	Loss_d 0.638 (0.641)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.85 (  0.87)	test_majacc_d   0.26 (  0.29)	test_corr_d   0.26 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.14it/s]
Test: [  0/  1]	Loss 1.110 (1.110)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.47 (  0.47)	Loss_d 1.110 (1.110)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.110 (1.110)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.47 (  0.47)	Loss_d 1.110 (1.110)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.15 (  0.15)
Overall Timing[ 44/  1]	epoch_time 0.0395 (0.0429)	validation_time 0.0003 (0.0006)	train_time 0.0392 (0.0423)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.37350000739097594, 0.5450000166893005)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 15%|#5        | 4/26 [00:00<00:01, 14.69it/s] 31%|###       | 8/26 [00:00<00:00, 22.50it/s] 46%|####6     | 12/26 [00:00<00:00, 25.95it/s] 62%|######1   | 16/26 [00:00<00:00, 28.78it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.70it/s] 92%|#########2| 24/26 [00:00<00:00, 31.83it/s]100%|##########| 26/26 [00:01<00:00, 25.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.26 ( 31.26)	train_acc   0.35 (  0.37)	train_minacc   0.85 (  0.88)	train_majacc   0.27 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0546 (5.0576)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.85it/s] 15%|#5        | 4/26 [00:00<00:01, 19.22it/s] 35%|###4      | 9/26 [00:00<00:00, 31.14it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.14it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.72it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.80it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.80it/s] 92%|#########2| 24/26 [00:00<00:00, 40.61it/s]100%|##########| 26/26 [00:00<00:00, 33.11it/s]
Test: [   0/  26]	Loss 0.641 (0.641)	test_acc   0.40 (  0.40)	test_minacc   0.90 (  0.90)	test_majacc   0.29 (  0.29)	Loss_d 0.641 (0.641)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.635 (0.639)	test_acc   0.34 (  0.37)	test_minacc   0.87 (  0.87)	test_majacc   0.25 (  0.28)	Loss_d 0.635 (0.639)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.25 (  0.28)	test_corr_d   0.28 (  0.29)
Test: [  20/  26]	Loss 0.646 (0.640)	test_acc   0.35 (  0.37)	test_minacc   0.81 (  0.87)	test_majacc   0.27 (  0.29)	Loss_d 0.646 (0.640)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.81 (  0.87)	test_majacc_d   0.27 (  0.29)	test_corr_d   0.26 (  0.28)
Test: [  26/  26]	Loss 0.638 (0.640)	test_acc   0.34 (  0.38)	test_minacc   0.85 (  0.87)	test_majacc   0.26 (  0.29)	Loss_d 0.638 (0.640)	test_acc_d   0.34 (  0.38)	test_minacc_d   0.85 (  0.87)	test_majacc_d   0.26 (  0.29)	test_corr_d   0.27 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.20it/s]
Test: [  0/  1]	Loss 1.114 (1.114)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 1.114 (1.114)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.114 (1.114)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 1.114 (1.114)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.16 (  0.16)
Overall Timing[ 45/  1]	epoch_time 0.0463 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0459 (0.0424)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3766000074148178, 0.5370000004768372)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.28it/s] 19%|#9        | 5/26 [00:00<00:01, 18.70it/s] 35%|###4      | 9/26 [00:00<00:00, 25.01it/s] 50%|#####     | 13/26 [00:00<00:00, 28.02it/s] 65%|######5   | 17/26 [00:00<00:00, 31.21it/s] 81%|########  | 21/26 [00:00<00:00, 33.49it/s] 96%|#########6| 25/26 [00:00<00:00, 34.52it/s]100%|##########| 26/26 [00:00<00:00, 27.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.26 ( 31.26)	train_acc   0.35 (  0.37)	train_minacc   0.82 (  0.87)	train_majacc   0.27 (  0.28)	train_corr   0.00 (  0.00)	l1 5.0510 (5.0543)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.49it/s] 23%|##3       | 6/26 [00:00<00:01, 18.93it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.93it/s] 42%|####2     | 11/26 [00:00<00:00, 25.86it/s] 65%|######5   | 17/26 [00:00<00:00, 33.86it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.86it/s] 85%|########4 | 22/26 [00:00<00:00, 36.96it/s]100%|##########| 26/26 [00:00<00:00, 28.84it/s]
Test: [   0/  26]	Loss 0.641 (0.641)	test_acc   0.40 (  0.40)	test_minacc   0.90 (  0.90)	test_majacc   0.30 (  0.30)	Loss_d 0.641 (0.641)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.634 (0.638)	test_acc   0.35 (  0.38)	test_minacc   0.87 (  0.87)	test_majacc   0.25 (  0.29)	Loss_d 0.634 (0.638)	test_acc_d   0.35 (  0.38)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.25 (  0.29)	test_corr_d   0.29 (  0.30)
Test: [  20/  26]	Loss 0.645 (0.640)	test_acc   0.35 (  0.38)	test_minacc   0.79 (  0.86)	test_majacc   0.28 (  0.29)	Loss_d 0.645 (0.640)	test_acc_d   0.35 (  0.38)	test_minacc_d   0.79 (  0.86)	test_majacc_d   0.28 (  0.29)	test_corr_d   0.26 (  0.28)
Test: [  26/  26]	Loss 0.637 (0.640)	test_acc   0.34 (  0.38)	test_minacc   0.82 (  0.86)	test_majacc   0.27 (  0.29)	Loss_d 0.637 (0.640)	test_acc_d   0.34 (  0.38)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.27 (  0.29)	test_corr_d   0.27 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.82it/s]
Test: [  0/  1]	Loss 1.117 (1.117)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 1.117 (1.117)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.117 (1.117)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 1.117 (1.117)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.17 (  0.17)
Overall Timing[ 46/  1]	epoch_time 0.0463 (0.0431)	validation_time 0.0003 (0.0006)	train_time 0.0459 (0.0425)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.37970000723004343, 0.531000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.12it/s] 19%|#9        | 5/26 [00:00<00:01, 19.82it/s] 35%|###4      | 9/26 [00:00<00:00, 26.38it/s] 50%|#####     | 13/26 [00:00<00:00, 29.11it/s] 65%|######5   | 17/26 [00:00<00:00, 30.88it/s] 81%|########  | 21/26 [00:00<00:00, 31.81it/s] 96%|#########6| 25/26 [00:00<00:00, 32.51it/s]100%|##########| 26/26 [00:00<00:00, 27.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.26 ( 31.26)	train_acc   0.35 (  0.37)	train_minacc   0.82 (  0.87)	train_majacc   0.28 (  0.29)	train_corr   0.00 (  0.00)	l1 5.0473 (5.0510)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 15%|#5        | 4/26 [00:00<00:01, 16.76it/s] 35%|###4      | 9/26 [00:00<00:00, 28.29it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.29it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.41it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.41it/s] 96%|#########6| 25/26 [00:00<00:00, 41.09it/s]100%|##########| 26/26 [00:00<00:00, 31.49it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.40 (  0.40)	test_minacc   0.90 (  0.90)	test_majacc   0.30 (  0.30)	Loss_d 0.640 (0.640)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.633 (0.637)	test_acc   0.36 (  0.38)	test_minacc   0.87 (  0.86)	test_majacc   0.26 (  0.29)	Loss_d 0.633 (0.637)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.87 (  0.86)	test_majacc_d   0.26 (  0.29)	test_corr_d   0.29 (  0.30)
Test: [  20/  26]	Loss 0.645 (0.639)	test_acc   0.35 (  0.38)	test_minacc   0.79 (  0.85)	test_majacc   0.28 (  0.30)	Loss_d 0.645 (0.639)	test_acc_d   0.35 (  0.38)	test_minacc_d   0.79 (  0.85)	test_majacc_d   0.28 (  0.30)	test_corr_d   0.27 (  0.29)
Test: [  26/  26]	Loss 0.636 (0.639)	test_acc   0.34 (  0.38)	test_minacc   0.82 (  0.85)	test_majacc   0.27 (  0.30)	Loss_d 0.636 (0.639)	test_acc_d   0.34 (  0.38)	test_minacc_d   0.82 (  0.85)	test_majacc_d   0.27 (  0.30)	test_corr_d   0.27 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 51.30it/s]
Test: [  0/  1]	Loss 1.121 (1.121)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 1.121 (1.121)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 1.121 (1.121)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 1.121 (1.121)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.18 (  0.18)
Overall Timing[ 47/  1]	epoch_time 0.0423 (0.0431)	validation_time 0.0005 (0.0006)	train_time 0.0418 (0.0424)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3822000070810318, 0.5230000019073486)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.54it/s] 19%|#9        | 5/26 [00:00<00:01, 17.60it/s] 35%|###4      | 9/26 [00:00<00:00, 24.41it/s] 50%|#####     | 13/26 [00:00<00:00, 28.07it/s] 65%|######5   | 17/26 [00:00<00:00, 30.48it/s] 81%|########  | 21/26 [00:00<00:00, 32.22it/s] 96%|#########6| 25/26 [00:00<00:00, 32.73it/s]100%|##########| 26/26 [00:00<00:00, 26.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.26 ( 31.26)	train_acc   0.35 (  0.37)	train_minacc   0.82 (  0.86)	train_majacc   0.28 (  0.29)	train_corr   0.00 (  0.00)	l1 5.0435 (5.0477)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.80it/s] 23%|##3       | 6/26 [00:00<00:00, 22.78it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.78it/s] 42%|####2     | 11/26 [00:00<00:00, 31.57it/s] 62%|######1   | 16/26 [00:00<00:00, 37.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.11it/s] 81%|########  | 21/26 [00:00<00:00, 37.51it/s]100%|##########| 26/26 [00:00<00:00, 40.48it/s]100%|##########| 26/26 [00:00<00:00, 31.63it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.39 (  0.39)	test_minacc   0.87 (  0.87)	test_majacc   0.29 (  0.29)	Loss_d 0.640 (0.640)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.633 (0.637)	test_acc   0.36 (  0.38)	test_minacc   0.87 (  0.86)	test_majacc   0.26 (  0.30)	Loss_d 0.633 (0.637)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.87 (  0.86)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.30 (  0.31)
Test: [  20/  26]	Loss 0.644 (0.638)	test_acc   0.35 (  0.38)	test_minacc   0.75 (  0.84)	test_majacc   0.28 (  0.30)	Loss_d 0.644 (0.638)	test_acc_d   0.35 (  0.38)	test_minacc_d   0.75 (  0.84)	test_majacc_d   0.28 (  0.30)	test_corr_d   0.27 (  0.29)
Test: [  26/  26]	Loss 0.636 (0.638)	test_acc   0.34 (  0.39)	test_minacc   0.82 (  0.84)	test_majacc   0.27 (  0.30)	Loss_d 0.636 (0.638)	test_acc_d   0.34 (  0.39)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.27 (  0.30)	test_corr_d   0.27 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.60it/s]
Test: [  0/  1]	Loss 1.125 (1.125)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.125 (1.125)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 1.125 (1.125)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.125 (1.125)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.18 (  0.18)
Overall Timing[ 48/  1]	epoch_time 0.0436 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0432 (0.0425)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3858000068664551, 0.5180000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.40it/s] 15%|#5        | 4/26 [00:00<00:01, 16.00it/s] 31%|###       | 8/26 [00:00<00:00, 22.68it/s] 46%|####6     | 12/26 [00:00<00:00, 27.15it/s] 62%|######1   | 16/26 [00:00<00:00, 29.81it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.65it/s] 92%|#########2| 24/26 [00:00<00:00, 32.75it/s]100%|##########| 26/26 [00:00<00:00, 26.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.26 ( 31.26)	train_acc   0.35 (  0.37)	train_minacc   0.82 (  0.85)	train_majacc   0.28 (  0.29)	train_corr   0.00 (  0.00)	l1 5.0397 (5.0444)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 23%|##3       | 6/26 [00:00<00:00, 27.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.74it/s] 42%|####2     | 11/26 [00:00<00:00, 35.49it/s] 62%|######1   | 16/26 [00:00<00:00, 39.98it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.98it/s] 81%|########  | 21/26 [00:00<00:00, 37.94it/s]100%|##########| 26/26 [00:00<00:00, 41.34it/s]100%|##########| 26/26 [00:00<00:00, 34.16it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.40 (  0.40)	test_minacc   0.87 (  0.87)	test_majacc   0.30 (  0.30)	Loss_d 0.639 (0.639)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.632 (0.636)	test_acc   0.36 (  0.39)	test_minacc   0.85 (  0.84)	test_majacc   0.26 (  0.30)	Loss_d 0.632 (0.636)	test_acc_d   0.36 (  0.39)	test_minacc_d   0.85 (  0.84)	test_majacc_d   0.26 (  0.30)	test_corr_d   0.30 (  0.31)
Test: [  20/  26]	Loss 0.643 (0.637)	test_acc   0.35 (  0.39)	test_minacc   0.74 (  0.83)	test_majacc   0.29 (  0.31)	Loss_d 0.643 (0.637)	test_acc_d   0.35 (  0.39)	test_minacc_d   0.74 (  0.83)	test_majacc_d   0.29 (  0.31)	test_corr_d   0.27 (  0.29)
Test: [  26/  26]	Loss 0.635 (0.638)	test_acc   0.35 (  0.39)	test_minacc   0.82 (  0.83)	test_majacc   0.27 (  0.31)	Loss_d 0.635 (0.638)	test_acc_d   0.35 (  0.39)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.27 (  0.31)	test_corr_d   0.28 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.77it/s]
Test: [  0/  1]	Loss 1.129 (1.129)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.129 (1.129)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 1.129 (1.129)	test_acc   0.51 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.129 (1.129)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.19 (  0.19)
Overall Timing[ 49/  1]	epoch_time 0.0406 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0403 (0.0424)
record: (train_acc, test_acc) (0.785700032055378, 0.6440000534057617)
last accs (train_acc, test_acc) (0.3898000068366528, 0.5139999985694885)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.164 MB of 0.164 MB uploadedwandb: \ 0.164 MB of 0.164 MB uploadedwandb: | 0.164 MB of 0.164 MB uploadedwandb: / 0.187 MB of 0.195 MB uploaded (0.003 MB deduped)wandb: - 0.379 MB of 0.379 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/diagnostics/epoch_time_val █▂▁▁▁▂▂▁▁▂▃▂▂▂▃▂▁▁▁▂▂▁▁▁▂▁▁▂▁▂▁▁▁▁▁▂▂▂▂▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/diagnostics/train_time_val █▂▁▂▁▂▂▁▁▂▃▂▂▂▃▂▁▁▁▃▂▂▂▁▂▁▂▂▁▂▁▁▂▁▁▂▃▃▂▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/Loss_avg ▆▄▄▃▃▄▄▄▆▆▆█▂▁▁▁▁▂▂█▄▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/Loss_d_avg ▆▄▄▃▃▄▄▄▆▆▆█▂▁▁▁▁▂▂█▄▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/Loss_d_val ▆▄▄▃▃▄▄▄▆▆▆█▂▁▁▁▁▂▂█▄▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/Loss_val ▆▄▄▃▃▄▄▄▆▆▆█▂▁▁▁▁▂▂█▄▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_acc_avg ▁▁▂▃▅▅▄▅▃▅▅▅▇▇▇▇▇▇▇▅▆███▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_acc_d_avg ▁▁▂▃▅▅▄▅▃▅▅▅▇▇▇▇▇▇▇▅▆███▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_acc_d_val ▁▁▂▃▅▅▄▅▃▅▅▅▇▇▇▇▇▇▇▅▆███▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_acc_val ▁▁▂▃▅▅▄▅▃▅▅▅▇▇▇▇▇▇▇▅▆███▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_corr_d_avg ██▇▆▅▅▅▅▆▄▄▄▂▂▂▂▂▂▃▅▃▁▁▁▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_corr_d_val ██▇▆▅▅▅▅▆▄▄▄▂▂▂▂▂▂▃▅▃▁▁▁▂▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_majacc_avg ████▇▇▇▇█▇▇▇▆▆▆▆▆▆▆▅▂▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_majacc_d_avg ████▇▇▇▇█▇▇▇▆▆▆▆▆▆▆▅▂▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_majacc_d_val ████▇▇▇▇█▇▇▇▆▆▆▆▆▆▆▅▂▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_majacc_val ████▇▇▇▇█▇▇▇▆▆▆▆▆▆▆▅▂▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_minacc_avg ▁▁▂▃▄▅▄▅▃▅▅▅▆▇▆▇▇▆▆▅▆███▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_minacc_d_avg ▁▁▂▃▄▅▄▅▃▅▅▅▆▇▆▇▇▆▆▅▆███▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_minacc_d_val ▁▁▂▃▄▅▄▅▃▅▅▅▆▇▆▇▇▆▆▅▆███▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_minacc_val ▁▁▂▃▄▅▄▅▃▅▅▅▆▇▆▇▇▆▆▅▆███▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/Loss_avg █▆▅▅▅▄▄▄▄▄▄▃▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/Loss_val █▇▇▇▆▅▅▅▅▄▃▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/l1_avg ▇▄▄▅▆▅▆▆▇▆▇▇▇▃▃▃▃▃▃█▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/l1_val ▄▄▄▅▅▆▅▆▇▇██▄▃▂▂▃▃▂▇▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_acc_avg ▆▇▇▇▇▇▇██████▆▆▆▆▆▆▆▄▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_acc_val ▇▇▇▇▇▇█▇████▇▆▆▆▆▆▆▇▃▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_majacc_avg ▇███████████▇▆▆▆▆▆▆▆▅▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_majacc_val ███▇▇████▇█▇▆▆▆▆▆▆▆▇▃▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_minacc_avg ▂▁▂▂▃▄▄▅▅▅▆▆▆▇▇▇▇▇▇▅▅▇██████████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_minacc_val ▁▁▂▃▅▅▆▄▅▇▇██▇▆▇▇▇▇▅▇█████████████▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_nll_avg ▇▄▄▃▃▂▂▂▂▂▁▁▂▄▄▄▄▄▄▇▇███████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_nll_val ▅▄▄▄▃▂▂▃▂▂▁▁▄▅▅▅▅▄▄▆▇███████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_penalty_avg █▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_penalty_val █▅▄▃▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/weight_norm_avg ▁▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▅████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/weight_norm_val ▁▂▂▂▂▂▂▂▂▃▃▃▄▄▄▄▄▄▄▆████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/diagnostics/epoch_time_val 0.04063
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/diagnostics/train_time_val 0.04026
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/diagnostics/validation_time_val 0.00035
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/Loss_avg 1.1291
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/Loss_d_avg 1.1291
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/Loss_d_val 1.1291
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/Loss_val 1.1291
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_acc_avg 0.514
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_acc_d_avg 0.514
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_acc_d_val 0.514
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_acc_val 0.514
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_corr_d_avg 0.19396
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_corr_d_val 0.19396
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_majacc_avg 0.49
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_majacc_d_avg 0.49
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_majacc_d_val 0.49
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_majacc_val 0.49
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_minacc_avg 0.51667
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_minacc_d_avg 0.51667
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_minacc_d_val 0.51667
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/test/test_minacc_val 0.51667
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/Loss_avg 7e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/Loss_val 7e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/l1_avg 5.04442
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/l1_val 5.0397
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_acc_avg 0.3747
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_acc_val 0.352
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_majacc_avg 0.28982
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_majacc_val 0.27778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_minacc_avg 0.85442
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_minacc_val 0.82353
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_nll_avg 0.64199
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_nll_val 0.6349
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_penalty_avg 1e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/train_penalty_val 1e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/weight_norm_avg 31.25739
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/weight_norm_val 31.25724
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/115/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/v0dmaq77
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_191338-v0dmaq77/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_191635-aqthux69
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/aqthux69
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1197
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6039, 3, 32, 32) (5961, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:42,  1.72s/it] 19%|#9        | 5/26 [00:01<00:05,  3.58it/s] 35%|###4      | 9/26 [00:01<00:02,  7.06it/s] 50%|#####     | 13/26 [00:02<00:01, 10.89it/s] 65%|######5   | 17/26 [00:02<00:00, 14.62it/s] 81%|########  | 21/26 [00:02<00:00, 18.30it/s] 96%|#########6| 25/26 [00:02<00:00, 21.68it/s]100%|##########| 26/26 [00:02<00:00,  9.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.430 (0.557)	train_nll   0.43 (  0.56)	train_penalty   0.07 (  0.29)	weight_norm  20.87 ( 18.15)	train_acc   0.85 (  0.81)	train_minacc   0.00 (  0.06)	train_majacc   1.00 (  0.94)	train_corr   0.00 (  0.00)	l1 7.4006 (8.7122)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.43it/s] 31%|###       | 8/26 [00:00<00:00, 33.22it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.22it/s] 50%|#####     | 13/26 [00:00<00:00, 37.90it/s] 69%|######9   | 18/26 [00:00<00:00, 40.41it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.41it/s] 88%|########8 | 23/26 [00:00<00:00, 40.18it/s]100%|##########| 26/26 [00:00<00:00, 34.52it/s]
Test: [   0/  26]	Loss 0.371 (0.371)	test_acc   0.86 (  0.86)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.371 (0.371)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.381 (0.397)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.381 (0.397)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.98)
Test: [  20/  26]	Loss 0.400 (0.413)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.400 (0.413)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.427 (0.413)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.427 (0.413)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.56it/s]100%|##########| 1/1 [00:00<00:00,  2.56it/s]
Test: [  0/  1]	Loss 1.958 (1.958)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.958 (1.958)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.958 (1.958)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.958 (1.958)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0786 (0.0786)	validation_time 0.0067 (0.0067)	train_time 0.0699 (0.0699)
record: (train_acc, test_acc) (0.8474000277519226, 0.10500000417232513)
last accs (train_acc, test_acc) (0.8474000277519226, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.27it/s] 15%|#5        | 4/26 [00:00<00:01, 15.64it/s] 31%|###       | 8/26 [00:00<00:00, 22.71it/s] 46%|####6     | 12/26 [00:00<00:00, 26.40it/s] 62%|######1   | 16/26 [00:00<00:00, 28.68it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.86it/s] 92%|#########2| 24/26 [00:00<00:00, 32.00it/s]100%|##########| 26/26 [00:00<00:00, 26.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.412 (0.403)	train_nll   0.41 (  0.40)	train_penalty   0.06 (  0.06)	weight_norm  21.97 ( 21.63)	train_acc   0.86 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.9803 (7.0746)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.71it/s] 23%|##3       | 6/26 [00:00<00:00, 21.92it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.92it/s] 42%|####2     | 11/26 [00:00<00:00, 30.21it/s] 62%|######1   | 16/26 [00:00<00:00, 36.04it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.04it/s] 81%|########  | 21/26 [00:00<00:00, 35.30it/s]100%|##########| 26/26 [00:00<00:00, 38.38it/s]100%|##########| 26/26 [00:00<00:00, 29.95it/s]
Test: [   0/  26]	Loss 0.353 (0.353)	test_acc   0.87 (  0.87)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.353 (0.353)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.368 (0.383)	test_acc   0.87 (  0.86)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.368 (0.383)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.388 (0.396)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.388 (0.396)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.407 (0.394)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.407 (0.394)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.14it/s]
Test: [  0/  1]	Loss 1.821 (1.821)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.821 (1.821)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.821 (1.821)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.821 (1.821)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Overall Timing[  1/  1]	epoch_time 0.0439 (0.0613)	validation_time 0.0004 (0.0035)	train_time 0.0434 (0.0567)
record: (train_acc, test_acc) (0.8474000277519226, 0.10500000417232513)
last accs (train_acc, test_acc) (0.8490000267028809, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.80it/s] 15%|#5        | 4/26 [00:00<00:01, 18.98it/s] 31%|###       | 8/26 [00:00<00:00, 25.98it/s] 46%|####6     | 12/26 [00:00<00:00, 28.76it/s] 62%|######1   | 16/26 [00:00<00:00, 30.62it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.47it/s] 92%|#########2| 24/26 [00:00<00:00, 32.41it/s]100%|##########| 26/26 [00:00<00:00, 27.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.393 (0.385)	train_nll   0.39 (  0.38)	train_penalty   0.07 (  0.04)	weight_norm  22.09 ( 22.05)	train_acc   0.86 (  0.85)	train_minacc   0.00 (  0.03)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.1644 (6.9731)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 23%|##3       | 6/26 [00:00<00:00, 29.04it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.04it/s] 42%|####2     | 11/26 [00:00<00:00, 36.15it/s] 65%|######5   | 17/26 [00:00<00:00, 41.22it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.22it/s] 85%|########4 | 22/26 [00:00<00:00, 39.86it/s]100%|##########| 26/26 [00:00<00:00, 35.64it/s]
Test: [   0/  26]	Loss 0.344 (0.344)	test_acc   0.87 (  0.87)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.344 (0.344)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.364 (0.378)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.364 (0.378)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.374 (0.389)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.374 (0.389)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.392 (0.387)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.392 (0.387)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.29it/s]
Test: [  0/  1]	Loss 2.087 (2.087)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 2.087 (2.087)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 2.087 (2.087)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 2.087 (2.087)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0432 (0.0553)	validation_time 0.0003 (0.0025)	train_time 0.0429 (0.0521)
record: (train_acc, test_acc) (0.8490000267028809, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8490000267028809, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.35it/s] 15%|#5        | 4/26 [00:00<00:01, 14.44it/s] 31%|###       | 8/26 [00:00<00:00, 21.68it/s] 46%|####6     | 12/26 [00:00<00:00, 26.54it/s] 62%|######1   | 16/26 [00:00<00:00, 29.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.08it/s] 92%|#########2| 24/26 [00:00<00:00, 31.98it/s]100%|##########| 26/26 [00:01<00:00, 25.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.364 (0.365)	train_nll   0.36 (  0.37)	train_penalty   0.05 (  0.04)	weight_norm  22.17 ( 22.13)	train_acc   0.86 (  0.85)	train_minacc   0.08 (  0.09)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 7.1674 (6.9422)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.71it/s] 15%|#5        | 4/26 [00:00<00:01, 15.84it/s] 35%|###4      | 9/26 [00:00<00:00, 27.80it/s]                                               35%|###4      | 9/26 [00:00<00:00, 27.80it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.56it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.56it/s] 92%|#########2| 24/26 [00:00<00:00, 36.89it/s]100%|##########| 26/26 [00:00<00:00, 31.15it/s]
Test: [   0/  26]	Loss 0.292 (0.292)	test_acc   0.88 (  0.88)	test_minacc   0.08 (  0.08)	test_majacc   1.00 (  1.00)	Loss_d 0.292 (0.292)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.08 (  0.08)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.314 (0.329)	test_acc   0.87 (  0.86)	test_minacc   0.00 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.314 (0.329)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.00 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.95)
Test: [  20/  26]	Loss 0.315 (0.337)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.315 (0.337)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.95)
Test: [  26/  26]	Loss 0.352 (0.335)	test_acc   0.86 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.352 (0.335)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.65it/s]
Test: [  0/  1]	Loss 2.044 (2.044)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 2.044 (2.044)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 2.044 (2.044)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 2.044 (2.044)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0437 (0.0524)	validation_time 0.0007 (0.0020)	train_time 0.0430 (0.0498)
record: (train_acc, test_acc) (0.8515000229477883, 0.11800000816583633)
last accs (train_acc, test_acc) (0.8515000229477883, 0.11800000816583633)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.75it/s] 19%|#9        | 5/26 [00:00<00:01, 17.31it/s] 35%|###4      | 9/26 [00:00<00:00, 24.32it/s] 50%|#####     | 13/26 [00:00<00:00, 28.76it/s] 65%|######5   | 17/26 [00:00<00:00, 31.42it/s] 81%|########  | 21/26 [00:00<00:00, 32.79it/s] 96%|#########6| 25/26 [00:00<00:00, 33.19it/s]100%|##########| 26/26 [00:00<00:00, 26.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.347 (0.340)	train_nll   0.35 (  0.34)	train_penalty   0.04 (  0.03)	weight_norm  22.25 ( 22.21)	train_acc   0.85 (  0.85)	train_minacc   0.14 (  0.20)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 7.1863 (7.1030)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.51it/s] 23%|##3       | 6/26 [00:00<00:00, 24.05it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.05it/s] 42%|####2     | 11/26 [00:00<00:00, 31.50it/s] 62%|######1   | 16/26 [00:00<00:00, 36.02it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.02it/s] 81%|########  | 21/26 [00:00<00:00, 35.84it/s]100%|##########| 26/26 [00:00<00:00, 38.74it/s]100%|##########| 26/26 [00:00<00:00, 30.79it/s]
Test: [   0/  26]	Loss 0.281 (0.281)	test_acc   0.88 (  0.88)	test_minacc   0.18 (  0.18)	test_majacc   0.99 (  0.99)	Loss_d 0.281 (0.281)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.310 (0.327)	test_acc   0.87 (  0.86)	test_minacc   0.08 (  0.12)	test_majacc   0.99 (  0.99)	Loss_d 0.310 (0.327)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.08 (  0.12)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.94)
Test: [  20/  26]	Loss 0.313 (0.337)	test_acc   0.86 (  0.86)	test_minacc   0.07 (  0.12)	test_majacc   0.99 (  0.99)	Loss_d 0.313 (0.337)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.07 (  0.12)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.94)
Test: [  26/  26]	Loss 0.350 (0.335)	test_acc   0.86 (  0.86)	test_minacc   0.11 (  0.12)	test_majacc   0.98 (  0.99)	Loss_d 0.350 (0.335)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.11 (  0.12)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.85it/s]
Test: [  0/  1]	Loss 2.023 (2.023)	test_acc   0.17 (  0.17)	test_minacc   0.07 (  0.07)	test_majacc   1.00 (  1.00)	Loss_d 2.023 (2.023)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.07 (  0.07)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.87 (  0.87)
Test: [  1/  1]	Loss 2.023 (2.023)	test_acc   0.17 (  0.17)	test_minacc   0.07 (  0.07)	test_majacc   1.00 (  1.00)	Loss_d 2.023 (2.023)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.07 (  0.07)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.87 (  0.87)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0444 (0.0508)	validation_time 0.0005 (0.0017)	train_time 0.0439 (0.0486)
record: (train_acc, test_acc) (0.8560000239610672, 0.16600000858306885)
last accs (train_acc, test_acc) (0.8560000239610672, 0.16600000858306885)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.35it/s] 15%|#5        | 4/26 [00:00<00:02, 10.18it/s] 31%|###       | 8/26 [00:00<00:01, 17.92it/s] 46%|####6     | 12/26 [00:00<00:00, 22.99it/s] 62%|######1   | 16/26 [00:00<00:00, 26.55it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.42it/s] 92%|#########2| 24/26 [00:00<00:00, 31.43it/s]100%|##########| 26/26 [00:01<00:00, 23.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.321 (0.325)	train_nll   0.32 (  0.32)	train_penalty   0.04 (  0.02)	weight_norm  22.34 ( 22.29)	train_acc   0.87 (  0.86)	train_minacc   0.19 (  0.26)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3301 (7.1445)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.58it/s] 27%|##6       | 7/26 [00:00<00:00, 27.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.09it/s] 46%|####6     | 12/26 [00:00<00:00, 34.52it/s] 65%|######5   | 17/26 [00:00<00:00, 38.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.41it/s] 85%|########4 | 22/26 [00:00<00:00, 40.48it/s]100%|##########| 26/26 [00:00<00:00, 34.10it/s]
Test: [   0/  26]	Loss 0.293 (0.293)	test_acc   0.88 (  0.88)	test_minacc   0.16 (  0.16)	test_majacc   0.99 (  0.99)	Loss_d 0.293 (0.293)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.318 (0.346)	test_acc   0.87 (  0.86)	test_minacc   0.08 (  0.15)	test_majacc   0.99 (  0.98)	Loss_d 0.318 (0.346)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.08 (  0.15)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.93)
Test: [  20/  26]	Loss 0.335 (0.351)	test_acc   0.86 (  0.86)	test_minacc   0.11 (  0.16)	test_majacc   0.99 (  0.98)	Loss_d 0.335 (0.351)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.11 (  0.16)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.93)
Test: [  26/  26]	Loss 0.320 (0.345)	test_acc   0.86 (  0.86)	test_minacc   0.17 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 0.320 (0.345)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.17 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.68it/s]
Test: [  0/  1]	Loss 2.079 (2.079)	test_acc   0.16 (  0.16)	test_minacc   0.06 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 2.079 (2.079)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.88 (  0.88)
Test: [  1/  1]	Loss 2.079 (2.079)	test_acc   0.16 (  0.16)	test_minacc   0.06 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 2.079 (2.079)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.88 (  0.88)
Overall Timing[  5/  1]	epoch_time 0.0486 (0.0504)	validation_time 0.0003 (0.0015)	train_time 0.0482 (0.0485)
record: (train_acc, test_acc) (0.8560000239610672, 0.16600000858306885)
last accs (train_acc, test_acc) (0.8578000227808953, 0.15700000524520874)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.52it/s] 23%|##3       | 6/26 [00:00<00:00, 27.14it/s] 38%|###8      | 10/26 [00:00<00:00, 29.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.09it/s] 69%|######9   | 18/26 [00:00<00:00, 31.95it/s] 85%|########4 | 22/26 [00:00<00:00, 33.14it/s]100%|##########| 26/26 [00:00<00:00, 33.65it/s]100%|##########| 26/26 [00:00<00:00, 29.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.302 (0.313)	train_nll   0.30 (  0.31)	train_penalty   0.03 (  0.02)	weight_norm  22.44 ( 22.39)	train_acc   0.88 (  0.87)	train_minacc   0.31 (  0.32)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.4059 (7.2547)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.36it/s] 31%|###       | 8/26 [00:00<00:00, 36.34it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.34it/s] 50%|#####     | 13/26 [00:00<00:00, 39.52it/s] 69%|######9   | 18/26 [00:00<00:00, 42.03it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.03it/s] 88%|########8 | 23/26 [00:00<00:00, 38.92it/s]100%|##########| 26/26 [00:00<00:00, 36.68it/s]
Test: [   0/  26]	Loss 0.258 (0.258)	test_acc   0.88 (  0.88)	test_minacc   0.33 (  0.33)	test_majacc   0.97 (  0.97)	Loss_d 0.258 (0.258)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.291 (0.316)	test_acc   0.88 (  0.87)	test_minacc   0.21 (  0.27)	test_majacc   0.99 (  0.97)	Loss_d 0.291 (0.316)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.21 (  0.27)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.94 (  0.92)
Test: [  20/  26]	Loss 0.281 (0.316)	test_acc   0.87 (  0.87)	test_minacc   0.24 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 0.281 (0.316)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.24 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.93 (  0.91)
Test: [  26/  26]	Loss 0.295 (0.310)	test_acc   0.89 (  0.87)	test_minacc   0.36 (  0.28)	test_majacc   0.98 (  0.97)	Loss_d 0.295 (0.310)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.36 (  0.28)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.92 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.60it/s]
Test: [  0/  1]	Loss 2.087 (2.087)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 2.087 (2.087)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.83)
Test: [  1/  1]	Loss 2.087 (2.087)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 2.087 (2.087)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.83)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0416 (0.0491)	validation_time 0.0004 (0.0013)	train_time 0.0412 (0.0475)
record: (train_acc, test_acc) (0.8657000270485878, 0.21700000762939453)
last accs (train_acc, test_acc) (0.8657000270485878, 0.21700000762939453)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 19%|#9        | 5/26 [00:00<00:00, 23.73it/s] 35%|###4      | 9/26 [00:00<00:00, 28.81it/s] 50%|#####     | 13/26 [00:00<00:00, 31.39it/s] 65%|######5   | 17/26 [00:00<00:00, 32.71it/s] 81%|########  | 21/26 [00:00<00:00, 33.63it/s] 96%|#########6| 25/26 [00:00<00:00, 34.25it/s]100%|##########| 26/26 [00:00<00:00, 29.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.270 (0.292)	train_nll   0.27 (  0.29)	train_penalty   0.02 (  0.01)	weight_norm  22.58 ( 22.51)	train_acc   0.89 (  0.87)	train_minacc   0.42 (  0.42)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.9029 (7.3958)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.14it/s] 27%|##6       | 7/26 [00:00<00:00, 29.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.82it/s] 50%|#####     | 13/26 [00:00<00:00, 39.02it/s] 69%|######9   | 18/26 [00:00<00:00, 38.99it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.99it/s] 88%|########8 | 23/26 [00:00<00:00, 40.65it/s]100%|##########| 26/26 [00:00<00:00, 35.85it/s]
Test: [   0/  26]	Loss 0.237 (0.237)	test_acc   0.91 (  0.91)	test_minacc   0.47 (  0.47)	test_majacc   0.97 (  0.97)	Loss_d 0.237 (0.237)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.287 (0.309)	test_acc   0.89 (  0.87)	test_minacc   0.37 (  0.37)	test_majacc   0.97 (  0.96)	Loss_d 0.287 (0.309)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.92 (  0.89)
Test: [  20/  26]	Loss 0.272 (0.305)	test_acc   0.88 (  0.87)	test_minacc   0.33 (  0.38)	test_majacc   0.97 (  0.96)	Loss_d 0.272 (0.305)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.33 (  0.38)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.91 (  0.89)
Test: [  26/  26]	Loss 0.253 (0.296)	test_acc   0.90 (  0.87)	test_minacc   0.47 (  0.40)	test_majacc   0.97 (  0.96)	Loss_d 0.253 (0.296)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.47 (  0.40)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.19it/s]
Test: [  0/  1]	Loss 2.307 (2.307)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.95 (  0.95)	Loss_d 2.307 (2.307)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 2.307 (2.307)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.95 (  0.95)	Loss_d 2.307 (2.307)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0395 (0.0479)	validation_time 0.0007 (0.0012)	train_time 0.0389 (0.0464)
record: (train_acc, test_acc) (0.8741000245213508, 0.28300002217292786)
last accs (train_acc, test_acc) (0.8741000245213508, 0.28300002217292786)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.88it/s] 15%|#5        | 4/26 [00:00<00:01, 12.40it/s] 31%|###       | 8/26 [00:00<00:00, 20.40it/s] 46%|####6     | 12/26 [00:00<00:00, 25.43it/s] 62%|######1   | 16/26 [00:00<00:00, 28.78it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.96it/s] 92%|#########2| 24/26 [00:00<00:00, 32.44it/s]100%|##########| 26/26 [00:01<00:00, 24.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.261 (0.284)	train_nll   0.26 (  0.28)	train_penalty   0.02 (  0.01)	weight_norm  22.77 ( 22.67)	train_acc   0.90 (  0.88)	train_minacc   0.47 (  0.46)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 8.0999 (7.5412)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.10it/s] 31%|###       | 8/26 [00:00<00:00, 34.46it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.46it/s] 50%|#####     | 13/26 [00:00<00:00, 38.52it/s] 69%|######9   | 18/26 [00:00<00:00, 41.12it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.12it/s] 88%|########8 | 23/26 [00:00<00:00, 38.67it/s]100%|##########| 26/26 [00:00<00:00, 36.26it/s]
Test: [   0/  26]	Loss 0.242 (0.242)	test_acc   0.90 (  0.90)	test_minacc   0.45 (  0.45)	test_majacc   0.97 (  0.97)	Loss_d 0.242 (0.242)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.272 (0.301)	test_acc   0.88 (  0.88)	test_minacc   0.27 (  0.36)	test_majacc   0.98 (  0.96)	Loss_d 0.272 (0.301)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.27 (  0.36)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.92 (  0.89)
Test: [  20/  26]	Loss 0.250 (0.300)	test_acc   0.89 (  0.87)	test_minacc   0.35 (  0.36)	test_majacc   0.98 (  0.96)	Loss_d 0.250 (0.300)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.35 (  0.36)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.91 (  0.89)
Test: [  26/  26]	Loss 0.232 (0.290)	test_acc   0.93 (  0.88)	test_minacc   0.58 (  0.38)	test_majacc   0.99 (  0.97)	Loss_d 0.232 (0.290)	test_acc_d   0.93 (  0.88)	test_minacc_d   0.58 (  0.38)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.90 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.83it/s]
Test: [  0/  1]	Loss 2.452 (2.452)	test_acc   0.30 (  0.30)	test_minacc   0.22 (  0.22)	test_majacc   1.00 (  1.00)	Loss_d 2.452 (2.452)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.22 (  0.22)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 2.452 (2.452)	test_acc   0.30 (  0.30)	test_minacc   0.22 (  0.22)	test_majacc   1.00 (  1.00)	Loss_d 2.452 (2.452)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.22 (  0.22)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0440 (0.0475)	validation_time 0.0004 (0.0012)	train_time 0.0435 (0.0461)
record: (train_acc, test_acc) (0.8781000207662583, 0.2970000207424164)
last accs (train_acc, test_acc) (0.8781000207662583, 0.2970000207424164)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 15%|#5        | 4/26 [00:00<00:01, 19.68it/s] 31%|###       | 8/26 [00:00<00:00, 26.11it/s] 46%|####6     | 12/26 [00:00<00:00, 28.89it/s] 62%|######1   | 16/26 [00:00<00:00, 30.33it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.75it/s] 92%|#########2| 24/26 [00:00<00:00, 32.95it/s]100%|##########| 26/26 [00:00<00:00, 27.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.240 (0.264)	train_nll   0.24 (  0.26)	train_penalty   0.02 (  0.01)	weight_norm  22.98 ( 22.87)	train_acc   0.90 (  0.89)	train_minacc   0.56 (  0.53)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 8.5771 (7.7466)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.04it/s] 19%|#9        | 5/26 [00:00<00:00, 24.73it/s] 38%|###8      | 10/26 [00:00<00:00, 35.32it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.32it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.15it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.98it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.98it/s] 96%|#########6| 25/26 [00:00<00:00, 39.11it/s]100%|##########| 26/26 [00:00<00:00, 34.00it/s]
Test: [   0/  26]	Loss 0.209 (0.209)	test_acc   0.92 (  0.92)	test_minacc   0.59 (  0.59)	test_majacc   0.96 (  0.96)	Loss_d 0.209 (0.209)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.258 (0.272)	test_acc   0.89 (  0.89)	test_minacc   0.37 (  0.45)	test_majacc   0.97 (  0.96)	Loss_d 0.258 (0.272)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.37 (  0.45)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.91 (  0.88)
Test: [  20/  26]	Loss 0.200 (0.275)	test_acc   0.90 (  0.89)	test_minacc   0.44 (  0.45)	test_majacc   0.98 (  0.96)	Loss_d 0.200 (0.275)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.44 (  0.45)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.90 (  0.87)
Test: [  26/  26]	Loss 0.202 (0.266)	test_acc   0.94 (  0.89)	test_minacc   0.67 (  0.46)	test_majacc   0.99 (  0.97)	Loss_d 0.202 (0.266)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.67 (  0.46)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.87 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.39it/s]
Test: [  0/  1]	Loss 2.656 (2.656)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 2.656 (2.656)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 2.656 (2.656)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 2.656 (2.656)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Overall Timing[  9/  1]	epoch_time 0.0401 (0.0468)	validation_time 0.0004 (0.0011)	train_time 0.0397 (0.0455)
record: (train_acc, test_acc) (0.8781000207662583, 0.2970000207424164)
last accs (train_acc, test_acc) (0.8907000241279602, 0.2750000059604645)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.24it/s] 23%|##3       | 6/26 [00:00<00:00, 27.97it/s] 38%|###8      | 10/26 [00:00<00:00, 32.06it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.35it/s] 69%|######9   | 18/26 [00:00<00:00, 35.28it/s] 85%|########4 | 22/26 [00:00<00:00, 34.87it/s]100%|##########| 26/26 [00:00<00:00, 35.35it/s]100%|##########| 26/26 [00:00<00:00, 30.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.205 (0.251)	train_nll   0.21 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.26 ( 23.12)	train_acc   0.92 (  0.89)	train_minacc   0.58 (  0.57)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 8.4936 (7.7615)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.12it/s] 23%|##3       | 6/26 [00:00<00:00, 24.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.32it/s] 42%|####2     | 11/26 [00:00<00:00, 32.37it/s] 62%|######1   | 16/26 [00:00<00:00, 37.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.50it/s] 81%|########  | 21/26 [00:00<00:00, 40.04it/s]100%|##########| 26/26 [00:00<00:00, 42.06it/s]100%|##########| 26/26 [00:00<00:00, 33.48it/s]
Test: [   0/  26]	Loss 0.200 (0.200)	test_acc   0.92 (  0.92)	test_minacc   0.49 (  0.49)	test_majacc   0.98 (  0.98)	Loss_d 0.200 (0.200)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.269 (0.272)	test_acc   0.89 (  0.89)	test_minacc   0.37 (  0.45)	test_majacc   0.97 (  0.97)	Loss_d 0.269 (0.272)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.37 (  0.45)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.89)
Test: [  20/  26]	Loss 0.206 (0.272)	test_acc   0.91 (  0.89)	test_minacc   0.47 (  0.46)	test_majacc   0.98 (  0.97)	Loss_d 0.206 (0.272)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.47 (  0.46)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.88)
Test: [  26/  26]	Loss 0.175 (0.261)	test_acc   0.95 (  0.90)	test_minacc   0.72 (  0.47)	test_majacc   0.99 (  0.97)	Loss_d 0.175 (0.261)	test_acc_d   0.95 (  0.90)	test_minacc_d   0.72 (  0.47)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.88 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.47it/s]
Test: [  0/  1]	Loss 2.796 (2.796)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 2.796 (2.796)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 2.796 (2.796)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 2.796 (2.796)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.74 (  0.74)
Overall Timing[ 10/  1]	epoch_time 0.0406 (0.0462)	validation_time 0.0004 (0.0010)	train_time 0.0402 (0.0450)
record: (train_acc, test_acc) (0.8781000207662583, 0.2970000207424164)
last accs (train_acc, test_acc) (0.895200018465519, 0.26600000262260437)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.28it/s] 19%|#9        | 5/26 [00:00<00:01, 17.06it/s] 35%|###4      | 9/26 [00:00<00:00, 23.59it/s] 50%|#####     | 13/26 [00:00<00:00, 27.37it/s] 65%|######5   | 17/26 [00:00<00:00, 29.50it/s] 81%|########  | 21/26 [00:00<00:00, 30.93it/s] 96%|#########6| 25/26 [00:00<00:00, 32.04it/s]100%|##########| 26/26 [00:01<00:00, 25.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.223 (0.248)	train_nll   0.22 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.59 ( 23.43)	train_acc   0.90 (  0.90)	train_minacc   0.50 (  0.59)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.7865 (7.8866)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.44it/s] 23%|##3       | 6/26 [00:00<00:00, 29.60it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.60it/s] 42%|####2     | 11/26 [00:00<00:00, 35.61it/s] 62%|######1   | 16/26 [00:00<00:00, 40.21it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.21it/s] 81%|########  | 21/26 [00:00<00:00, 37.92it/s]100%|##########| 26/26 [00:00<00:00, 40.50it/s]100%|##########| 26/26 [00:00<00:00, 34.10it/s]
Test: [   0/  26]	Loss 0.219 (0.219)	test_acc   0.92 (  0.92)	test_minacc   0.61 (  0.61)	test_majacc   0.96 (  0.96)	Loss_d 0.219 (0.219)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.224 (0.259)	test_acc   0.92 (  0.90)	test_minacc   0.62 (  0.54)	test_majacc   0.96 (  0.95)	Loss_d 0.224 (0.259)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.62 (  0.54)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.87 (  0.86)
Test: [  20/  26]	Loss 0.222 (0.261)	test_acc   0.92 (  0.89)	test_minacc   0.53 (  0.55)	test_majacc   0.98 (  0.96)	Loss_d 0.222 (0.261)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.53 (  0.55)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.89 (  0.85)
Test: [  26/  26]	Loss 0.187 (0.251)	test_acc   0.92 (  0.90)	test_minacc   0.50 (  0.55)	test_majacc   0.99 (  0.96)	Loss_d 0.187 (0.251)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.50 (  0.55)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.88 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.39it/s]
Test: [  0/  1]	Loss 2.418 (2.418)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 2.418 (2.418)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 2.418 (2.418)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 2.418 (2.418)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.62 (  0.62)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0444 (0.0461)	validation_time 0.0003 (0.0010)	train_time 0.0441 (0.0449)
record: (train_acc, test_acc) (0.8972000157237053, 0.35600000619888306)
last accs (train_acc, test_acc) (0.8972000157237053, 0.35600000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.31it/s] 23%|##3       | 6/26 [00:00<00:00, 25.41it/s] 38%|###8      | 10/26 [00:00<00:00, 30.01it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.22it/s] 69%|######9   | 18/26 [00:00<00:00, 32.92it/s] 85%|########4 | 22/26 [00:00<00:00, 33.28it/s]100%|##########| 26/26 [00:00<00:00, 34.43it/s]100%|##########| 26/26 [00:00<00:00, 29.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.196 (0.224)	train_nll   0.20 (  0.22)	train_penalty   0.00 (  0.01)	weight_norm  23.91 ( 23.76)	train_acc   0.94 (  0.91)	train_minacc   0.75 (  0.67)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 8.0974 (8.1016)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s]  8%|7         | 2/26 [00:00<00:03,  7.86it/s] 27%|##6       | 7/26 [00:00<00:00, 23.59it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.59it/s] 46%|####6     | 12/26 [00:00<00:00, 31.81it/s] 65%|######5   | 17/26 [00:00<00:00, 35.92it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.92it/s] 85%|########4 | 22/26 [00:00<00:00, 35.96it/s]100%|##########| 26/26 [00:00<00:00, 30.30it/s]
Test: [   0/  26]	Loss 0.204 (0.204)	test_acc   0.93 (  0.93)	test_minacc   0.67 (  0.67)	test_majacc   0.96 (  0.96)	Loss_d 0.204 (0.204)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.228 (0.237)	test_acc   0.91 (  0.90)	test_minacc   0.44 (  0.52)	test_majacc   0.98 (  0.97)	Loss_d 0.228 (0.237)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.87)
Test: [  20/  26]	Loss 0.211 (0.238)	test_acc   0.90 (  0.90)	test_minacc   0.42 (  0.52)	test_majacc   0.98 (  0.97)	Loss_d 0.211 (0.238)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.42 (  0.52)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.87)
Test: [  26/  26]	Loss 0.172 (0.230)	test_acc   0.95 (  0.90)	test_minacc   0.72 (  0.53)	test_majacc   0.99 (  0.97)	Loss_d 0.172 (0.230)	test_acc_d   0.95 (  0.90)	test_minacc_d   0.72 (  0.53)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.87 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.13it/s]
Test: [  0/  1]	Loss 2.570 (2.570)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 2.570 (2.570)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 2.570 (2.570)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 2.570 (2.570)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.66 (  0.66)
Overall Timing[ 12/  1]	epoch_time 0.0406 (0.0456)	validation_time 0.0004 (0.0009)	train_time 0.0402 (0.0445)
record: (train_acc, test_acc) (0.8972000157237053, 0.35600000619888306)
last accs (train_acc, test_acc) (0.902200027346611, 0.3410000205039978)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.29it/s] 19%|#9        | 5/26 [00:00<00:00, 23.17it/s] 35%|###4      | 9/26 [00:00<00:00, 28.15it/s] 50%|#####     | 13/26 [00:00<00:00, 30.53it/s] 65%|######5   | 17/26 [00:00<00:00, 31.57it/s] 81%|########  | 21/26 [00:00<00:00, 32.71it/s] 96%|#########6| 25/26 [00:00<00:00, 33.60it/s]100%|##########| 26/26 [00:00<00:00, 28.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.196 (0.202)	train_nll   0.20 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm  24.25 ( 24.09)	train_acc   0.92 (  0.92)	train_minacc   0.61 (  0.71)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 8.6193 (8.4786)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.23it/s] 27%|##6       | 7/26 [00:00<00:00, 32.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.60it/s] 46%|####6     | 12/26 [00:00<00:00, 37.97it/s] 65%|######5   | 17/26 [00:00<00:00, 37.05it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.05it/s] 85%|########4 | 22/26 [00:00<00:00, 39.90it/s]100%|##########| 26/26 [00:00<00:00, 35.29it/s]
Test: [   0/  26]	Loss 0.173 (0.173)	test_acc   0.94 (  0.94)	test_minacc   0.80 (  0.80)	test_majacc   0.96 (  0.96)	Loss_d 0.173 (0.173)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.189 (0.213)	test_acc   0.93 (  0.91)	test_minacc   0.56 (  0.62)	test_majacc   0.99 (  0.96)	Loss_d 0.189 (0.213)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.56 (  0.62)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.88 (  0.83)
Test: [  20/  26]	Loss 0.179 (0.218)	test_acc   0.94 (  0.91)	test_minacc   0.67 (  0.61)	test_majacc   0.98 (  0.96)	Loss_d 0.179 (0.218)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.67 (  0.61)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.86 (  0.83)
Test: [  26/  26]	Loss 0.146 (0.212)	test_acc   0.95 (  0.91)	test_minacc   0.75 (  0.61)	test_majacc   0.98 (  0.97)	Loss_d 0.146 (0.212)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.75 (  0.61)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.85 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.08it/s]
Test: [  0/  1]	Loss 2.730 (2.730)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 2.730 (2.730)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 2.730 (2.730)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 2.730 (2.730)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.54 (  0.54)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0432 (0.0455)	validation_time 0.0004 (0.0009)	train_time 0.0428 (0.0444)
record: (train_acc, test_acc) (0.9133000231981278, 0.37400001287460327)
last accs (train_acc, test_acc) (0.9133000231981278, 0.37400001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.35it/s] 15%|#5        | 4/26 [00:00<00:01, 18.48it/s] 31%|###       | 8/26 [00:00<00:00, 25.64it/s] 46%|####6     | 12/26 [00:00<00:00, 29.17it/s] 62%|######1   | 16/26 [00:00<00:00, 30.42it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.05it/s] 92%|#########2| 24/26 [00:00<00:00, 33.19it/s]100%|##########| 26/26 [00:00<00:00, 27.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.149 (0.189)	train_nll   0.15 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm  24.69 ( 24.47)	train_acc   0.93 (  0.92)	train_minacc   0.86 (  0.73)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 9.2822 (8.6030)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 27%|##6       | 7/26 [00:00<00:00, 32.94it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.94it/s] 50%|#####     | 13/26 [00:00<00:00, 38.73it/s] 69%|######9   | 18/26 [00:00<00:00, 39.89it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.89it/s] 88%|########8 | 23/26 [00:00<00:00, 41.56it/s]100%|##########| 26/26 [00:00<00:00, 36.36it/s]
Test: [   0/  26]	Loss 0.177 (0.177)	test_acc   0.92 (  0.92)	test_minacc   0.80 (  0.80)	test_majacc   0.94 (  0.94)	Loss_d 0.177 (0.177)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.191 (0.186)	test_acc   0.93 (  0.92)	test_minacc   0.75 (  0.75)	test_majacc   0.96 (  0.95)	Loss_d 0.191 (0.186)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.80 (  0.78)
Test: [  20/  26]	Loss 0.139 (0.184)	test_acc   0.94 (  0.93)	test_minacc   0.76 (  0.75)	test_majacc   0.97 (  0.96)	Loss_d 0.139 (0.184)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.76 (  0.75)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.80 (  0.77)
Test: [  26/  26]	Loss 0.106 (0.175)	test_acc   0.98 (  0.93)	test_minacc   0.94 (  0.76)	test_majacc   0.98 (  0.96)	Loss_d 0.106 (0.175)	test_acc_d   0.98 (  0.93)	test_minacc_d   0.94 (  0.76)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.77 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.71it/s]
Test: [  0/  1]	Loss 2.835 (2.835)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 2.835 (2.835)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 2.835 (2.835)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 2.835 (2.835)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.45 (  0.45)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0400 (0.0451)	validation_time 0.0003 (0.0008)	train_time 0.0397 (0.0441)
record: (train_acc, test_acc) (0.9313000186085701, 0.42000001668930054)
last accs (train_acc, test_acc) (0.9313000186085701, 0.42000001668930054)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.93it/s] 15%|#5        | 4/26 [00:00<00:02, 10.85it/s] 31%|###       | 8/26 [00:00<00:00, 18.11it/s] 42%|####2     | 11/26 [00:00<00:00, 21.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.35it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.16it/s] 88%|########8 | 23/26 [00:01<00:00, 30.22it/s]100%|##########| 26/26 [00:01<00:00, 22.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.002 (0.085)	train_nll   0.37 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  25.12 ( 24.94)	train_acc   0.80 (  0.87)	train_minacc   0.83 (  0.71)	train_majacc   0.80 (  0.90)	train_corr   0.00 (  0.00)	l1 5.4412 (7.4561)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.26it/s] 23%|##3       | 6/26 [00:00<00:00, 28.41it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.41it/s] 42%|####2     | 11/26 [00:00<00:00, 34.97it/s] 62%|######1   | 16/26 [00:00<00:00, 38.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.95it/s] 81%|########  | 21/26 [00:00<00:00, 37.43it/s]100%|##########| 26/26 [00:00<00:00, 39.96it/s]100%|##########| 26/26 [00:00<00:00, 33.49it/s]
Test: [   0/  26]	Loss 0.331 (0.331)	test_acc   0.84 (  0.84)	test_minacc   0.90 (  0.90)	test_majacc   0.83 (  0.83)	Loss_d 0.331 (0.331)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.389 (0.373)	test_acc   0.79 (  0.80)	test_minacc   0.77 (  0.82)	test_majacc   0.80 (  0.80)	Loss_d 0.389 (0.373)	test_acc_d   0.79 (  0.80)	test_minacc_d   0.77 (  0.82)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.66 (  0.60)
Test: [  20/  26]	Loss 0.392 (0.371)	test_acc   0.78 (  0.81)	test_minacc   0.73 (  0.82)	test_majacc   0.79 (  0.80)	Loss_d 0.392 (0.371)	test_acc_d   0.78 (  0.81)	test_minacc_d   0.73 (  0.82)	test_majacc_d   0.79 (  0.80)	test_corr_d   0.63 (  0.61)
Test: [  26/  26]	Loss 0.387 (0.373)	test_acc   0.79 (  0.80)	test_minacc   0.83 (  0.81)	test_majacc   0.78 (  0.80)	Loss_d 0.387 (0.373)	test_acc_d   0.79 (  0.80)	test_minacc_d   0.83 (  0.81)	test_majacc_d   0.78 (  0.80)	test_corr_d   0.59 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.72it/s]
Test: [  0/  1]	Loss 1.325 (1.325)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.81 (  0.81)	Loss_d 1.325 (1.325)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.325 (1.325)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.81 (  0.81)	Loss_d 1.325 (1.325)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.24 (  0.24)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0439 (0.0450)	validation_time 0.0004 (0.0008)	train_time 0.0435 (0.0441)
record: (train_acc, test_acc) (0.8034000230431557, 0.5640000104904175)
last accs (train_acc, test_acc) (0.8034000230431557, 0.5640000104904175)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.37it/s] 23%|##3       | 6/26 [00:00<00:00, 26.15it/s] 38%|###8      | 10/26 [00:00<00:00, 30.07it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.80it/s] 69%|######9   | 18/26 [00:00<00:00, 31.63it/s] 85%|########4 | 22/26 [00:00<00:00, 32.58it/s]100%|##########| 26/26 [00:00<00:00, 33.89it/s]100%|##########| 26/26 [00:00<00:00, 29.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.003)	train_nll   0.47 (  0.43)	train_penalty   0.00 (  0.00)	weight_norm  25.21 ( 25.18)	train_acc   0.71 (  0.75)	train_minacc   0.83 (  0.82)	train_majacc   0.69 (  0.74)	train_corr   0.00 (  0.00)	l1 5.1732 (5.3932)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.73it/s] 23%|##3       | 6/26 [00:00<00:00, 22.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.03it/s] 42%|####2     | 11/26 [00:00<00:00, 30.68it/s] 62%|######1   | 16/26 [00:00<00:00, 35.77it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.77it/s] 81%|########  | 21/26 [00:00<00:00, 35.70it/s]100%|##########| 26/26 [00:00<00:00, 39.31it/s]100%|##########| 26/26 [00:00<00:00, 30.69it/s]
Test: [   0/  26]	Loss 0.376 (0.376)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.84)	test_majacc   0.78 (  0.78)	Loss_d 0.376 (0.376)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.416 (0.393)	test_acc   0.77 (  0.77)	test_minacc   0.69 (  0.82)	test_majacc   0.78 (  0.76)	Loss_d 0.416 (0.393)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.69 (  0.82)	test_majacc_d   0.78 (  0.76)	test_corr_d   0.64 (  0.60)
Test: [  20/  26]	Loss 0.387 (0.393)	test_acc   0.78 (  0.77)	test_minacc   0.87 (  0.82)	test_majacc   0.76 (  0.77)	Loss_d 0.387 (0.393)	test_acc_d   0.78 (  0.77)	test_minacc_d   0.87 (  0.82)	test_majacc_d   0.76 (  0.77)	test_corr_d   0.62 (  0.60)
Test: [  26/  26]	Loss 0.455 (0.398)	test_acc   0.72 (  0.77)	test_minacc   0.81 (  0.82)	test_majacc   0.70 (  0.76)	Loss_d 0.455 (0.398)	test_acc_d   0.72 (  0.77)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.70 (  0.76)	test_corr_d   0.55 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.33it/s]
Test: [  0/  1]	Loss 1.240 (1.240)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.81 (  0.81)	Loss_d 1.240 (1.240)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.240 (1.240)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.81 (  0.81)	Loss_d 1.240 (1.240)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.24 (  0.24)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0377 (0.0446)	validation_time 0.0003 (0.0008)	train_time 0.0374 (0.0437)
record: (train_acc, test_acc) (0.7698000219464302, 0.5910000205039978)
last accs (train_acc, test_acc) (0.7698000219464302, 0.5910000205039978)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.22it/s] 19%|#9        | 5/26 [00:00<00:00, 21.94it/s] 35%|###4      | 9/26 [00:00<00:00, 27.50it/s] 50%|#####     | 13/26 [00:00<00:00, 30.03it/s] 65%|######5   | 17/26 [00:00<00:00, 31.37it/s] 81%|########  | 21/26 [00:00<00:00, 32.13it/s] 96%|#########6| 25/26 [00:00<00:00, 32.78it/s]100%|##########| 26/26 [00:00<00:00, 27.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.003 (0.002)	train_nll   0.47 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  25.23 ( 25.23)	train_acc   0.72 (  0.75)	train_minacc   0.78 (  0.82)	train_majacc   0.71 (  0.74)	train_corr   0.00 (  0.00)	l1 5.6696 (5.5241)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.31it/s] 23%|##3       | 6/26 [00:00<00:00, 28.09it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.09it/s] 42%|####2     | 11/26 [00:00<00:00, 34.74it/s] 62%|######1   | 16/26 [00:00<00:00, 38.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.76it/s] 81%|########  | 21/26 [00:00<00:00, 37.10it/s]100%|##########| 26/26 [00:00<00:00, 40.29it/s]100%|##########| 26/26 [00:00<00:00, 33.20it/s]
Test: [   0/  26]	Loss 0.408 (0.408)	test_acc   0.77 (  0.77)	test_minacc   0.88 (  0.88)	test_majacc   0.76 (  0.76)	Loss_d 0.408 (0.408)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.404 (0.417)	test_acc   0.76 (  0.75)	test_minacc   0.69 (  0.81)	test_majacc   0.77 (  0.73)	Loss_d 0.404 (0.417)	test_acc_d   0.76 (  0.75)	test_minacc_d   0.69 (  0.81)	test_majacc_d   0.77 (  0.73)	test_corr_d   0.62 (  0.56)
Test: [  20/  26]	Loss 0.384 (0.405)	test_acc   0.78 (  0.76)	test_minacc   0.85 (  0.81)	test_majacc   0.76 (  0.75)	Loss_d 0.384 (0.405)	test_acc_d   0.78 (  0.76)	test_minacc_d   0.85 (  0.81)	test_majacc_d   0.76 (  0.75)	test_corr_d   0.59 (  0.57)
Test: [  26/  26]	Loss 0.458 (0.409)	test_acc   0.73 (  0.75)	test_minacc   0.78 (  0.81)	test_majacc   0.72 (  0.74)	Loss_d 0.458 (0.409)	test_acc_d   0.73 (  0.75)	test_minacc_d   0.78 (  0.81)	test_majacc_d   0.72 (  0.74)	test_corr_d   0.53 (  0.57)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.66it/s]
Test: [  0/  1]	Loss 1.346 (1.346)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.78 (  0.78)	Loss_d 1.346 (1.346)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.346 (1.346)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.78 (  0.78)	Loss_d 1.346 (1.346)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.17 (  0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0439 (0.0446)	validation_time 0.0004 (0.0008)	train_time 0.0434 (0.0437)
record: (train_acc, test_acc) (0.7549000281095505, 0.6110000014305115)
last accs (train_acc, test_acc) (0.7549000281095505, 0.6110000014305115)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.61it/s] 15%|#5        | 4/26 [00:00<00:01, 15.87it/s] 31%|###       | 8/26 [00:00<00:00, 23.92it/s] 46%|####6     | 12/26 [00:00<00:00, 27.67it/s] 62%|######1   | 16/26 [00:00<00:00, 30.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.20it/s] 92%|#########2| 24/26 [00:00<00:00, 32.91it/s]100%|##########| 26/26 [00:00<00:00, 26.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.001)	train_nll   0.42 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  25.24 ( 25.24)	train_acc   0.78 (  0.75)	train_minacc   0.89 (  0.84)	train_majacc   0.76 (  0.74)	train_corr   0.00 (  0.00)	l1 5.8019 (5.7309)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.37it/s] 31%|###       | 8/26 [00:00<00:00, 35.86it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.86it/s] 50%|#####     | 13/26 [00:00<00:00, 40.77it/s] 69%|######9   | 18/26 [00:00<00:00, 42.55it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.55it/s] 88%|########8 | 23/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 36.24it/s]
Test: [   0/  26]	Loss 0.397 (0.397)	test_acc   0.76 (  0.76)	test_minacc   0.86 (  0.86)	test_majacc   0.75 (  0.75)	Loss_d 0.397 (0.397)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.405 (0.418)	test_acc   0.76 (  0.74)	test_minacc   0.77 (  0.81)	test_majacc   0.76 (  0.73)	Loss_d 0.405 (0.418)	test_acc_d   0.76 (  0.74)	test_minacc_d   0.77 (  0.81)	test_majacc_d   0.76 (  0.73)	test_corr_d   0.63 (  0.57)
Test: [  20/  26]	Loss 0.376 (0.402)	test_acc   0.77 (  0.76)	test_minacc   0.85 (  0.82)	test_majacc   0.76 (  0.74)	Loss_d 0.376 (0.402)	test_acc_d   0.77 (  0.76)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.76 (  0.74)	test_corr_d   0.61 (  0.58)
Test: [  26/  26]	Loss 0.412 (0.402)	test_acc   0.78 (  0.76)	test_minacc   0.89 (  0.83)	test_majacc   0.76 (  0.74)	Loss_d 0.412 (0.402)	test_acc_d   0.78 (  0.76)	test_minacc_d   0.89 (  0.83)	test_majacc_d   0.76 (  0.74)	test_corr_d   0.57 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.15it/s]
Test: [  0/  1]	Loss 1.389 (1.389)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.76 (  0.76)	Loss_d 1.389 (1.389)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 1.389 (1.389)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.76 (  0.76)	Loss_d 1.389 (1.389)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.19 (  0.19)
Overall Timing[ 18/  1]	epoch_time 0.0439 (0.0445)	validation_time 0.0004 (0.0008)	train_time 0.0435 (0.0436)
record: (train_acc, test_acc) (0.7549000281095505, 0.6110000014305115)
last accs (train_acc, test_acc) (0.7560000277757645, 0.6070000529289246)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 15%|#5        | 4/26 [00:00<00:02, 10.87it/s] 31%|###       | 8/26 [00:00<00:00, 18.64it/s] 46%|####6     | 12/26 [00:00<00:00, 23.45it/s] 62%|######1   | 16/26 [00:00<00:00, 26.48it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.13it/s] 92%|#########2| 24/26 [00:00<00:00, 31.21it/s]100%|##########| 26/26 [00:01<00:00, 24.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.001 (0.001)	train_nll   0.43 (  0.40)	train_penalty   0.00 (  0.00)	weight_norm  25.25 ( 25.24)	train_acc   0.77 (  0.76)	train_minacc   0.89 (  0.83)	train_majacc   0.75 (  0.74)	train_corr   0.00 (  0.00)	l1 6.2562 (5.8710)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.81it/s] 23%|##3       | 6/26 [00:00<00:00, 25.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.21it/s] 42%|####2     | 11/26 [00:00<00:00, 32.77it/s] 62%|######1   | 16/26 [00:00<00:00, 37.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.89it/s] 81%|########  | 21/26 [00:00<00:00, 37.00it/s]100%|##########| 26/26 [00:00<00:00, 40.15it/s]100%|##########| 26/26 [00:00<00:00, 32.39it/s]
Test: [   0/  26]	Loss 0.403 (0.403)	test_acc   0.75 (  0.75)	test_minacc   0.84 (  0.84)	test_majacc   0.74 (  0.74)	Loss_d 0.403 (0.403)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.425 (0.432)	test_acc   0.73 (  0.73)	test_minacc   0.75 (  0.82)	test_majacc   0.73 (  0.71)	Loss_d 0.425 (0.432)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.75 (  0.82)	test_majacc_d   0.73 (  0.71)	test_corr_d   0.60 (  0.53)
Test: [  20/  26]	Loss 0.375 (0.414)	test_acc   0.77 (  0.74)	test_minacc   0.89 (  0.84)	test_majacc   0.76 (  0.73)	Loss_d 0.375 (0.414)	test_acc_d   0.77 (  0.74)	test_minacc_d   0.89 (  0.84)	test_majacc_d   0.76 (  0.73)	test_corr_d   0.58 (  0.55)
Test: [  26/  26]	Loss 0.418 (0.411)	test_acc   0.77 (  0.75)	test_minacc   0.89 (  0.84)	test_majacc   0.75 (  0.73)	Loss_d 0.418 (0.411)	test_acc_d   0.77 (  0.75)	test_minacc_d   0.89 (  0.84)	test_majacc_d   0.75 (  0.73)	test_corr_d   0.55 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.89it/s]
Test: [  0/  1]	Loss 1.461 (1.461)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.76 (  0.76)	Loss_d 1.461 (1.461)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.461 (1.461)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.76 (  0.76)	Loss_d 1.461 (1.461)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.14 (  0.14)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/117/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0412 (0.0444)	validation_time 0.0003 (0.0007)	train_time 0.0408 (0.0435)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.7477000243663788, 0.625)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.18it/s] 19%|#9        | 5/26 [00:00<00:01, 20.42it/s] 35%|###4      | 9/26 [00:00<00:00, 25.22it/s] 50%|#####     | 13/26 [00:00<00:00, 27.28it/s] 65%|######5   | 17/26 [00:00<00:00, 29.34it/s] 81%|########  | 21/26 [00:00<00:00, 30.97it/s] 96%|#########6| 25/26 [00:00<00:00, 32.33it/s]100%|##########| 26/26 [00:00<00:00, 26.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.002 (0.001)	train_nll   0.42 (  0.39)	train_penalty   0.00 (  0.00)	weight_norm  25.26 ( 25.25)	train_acc   0.78 (  0.76)	train_minacc   0.92 (  0.85)	train_majacc   0.75 (  0.75)	train_corr   0.00 (  0.00)	l1 6.7799 (6.0479)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.08it/s] 23%|##3       | 6/26 [00:00<00:00, 29.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.27it/s] 42%|####2     | 11/26 [00:00<00:00, 35.96it/s] 62%|######1   | 16/26 [00:00<00:00, 39.84it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.84it/s] 81%|########  | 21/26 [00:00<00:00, 37.86it/s]100%|##########| 26/26 [00:00<00:00, 40.60it/s]100%|##########| 26/26 [00:00<00:00, 34.29it/s]
Test: [   0/  26]	Loss 0.410 (0.410)	test_acc   0.74 (  0.74)	test_minacc   0.86 (  0.86)	test_majacc   0.72 (  0.72)	Loss_d 0.410 (0.410)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.459 (0.455)	test_acc   0.72 (  0.71)	test_minacc   0.81 (  0.84)	test_majacc   0.71 (  0.69)	Loss_d 0.459 (0.455)	test_acc_d   0.72 (  0.71)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.71 (  0.69)	test_corr_d   0.56 (  0.51)
Test: [  20/  26]	Loss 0.398 (0.441)	test_acc   0.76 (  0.73)	test_minacc   0.91 (  0.85)	test_majacc   0.73 (  0.71)	Loss_d 0.398 (0.441)	test_acc_d   0.76 (  0.73)	test_minacc_d   0.91 (  0.85)	test_majacc_d   0.73 (  0.71)	test_corr_d   0.56 (  0.52)
Test: [  26/  26]	Loss 0.409 (0.433)	test_acc   0.78 (  0.74)	test_minacc   0.92 (  0.86)	test_majacc   0.76 (  0.71)	Loss_d 0.409 (0.433)	test_acc_d   0.78 (  0.74)	test_minacc_d   0.92 (  0.86)	test_majacc_d   0.76 (  0.71)	test_corr_d   0.55 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.73it/s]
Test: [  0/  1]	Loss 1.600 (1.600)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.75 (  0.75)	Loss_d 1.600 (1.600)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.600 (1.600)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.75 (  0.75)	Loss_d 1.600 (1.600)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.13 (  0.13)
Overall Timing[ 20/  1]	epoch_time 0.0445 (0.0444)	validation_time 0.0004 (0.0007)	train_time 0.0440 (0.0435)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.7351000338792801, 0.6220000386238098)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.11it/s] 19%|#9        | 5/26 [00:00<00:01, 16.04it/s] 35%|###4      | 9/26 [00:00<00:00, 22.39it/s] 50%|#####     | 13/26 [00:00<00:00, 26.32it/s] 65%|######5   | 17/26 [00:00<00:00, 28.83it/s] 81%|########  | 21/26 [00:00<00:00, 30.91it/s] 96%|#########6| 25/26 [00:00<00:00, 32.25it/s]100%|##########| 26/26 [00:01<00:00, 25.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.002 (0.002)	train_nll   0.42 (  0.39)	train_penalty   0.00 (  0.00)	weight_norm  25.28 ( 25.27)	train_acc   0.76 (  0.77)	train_minacc   0.86 (  0.79)	train_majacc   0.74 (  0.77)	train_corr   0.00 (  0.00)	l1 6.5879 (6.2043)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.49it/s] 23%|##3       | 6/26 [00:00<00:00, 29.96it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.96it/s] 42%|####2     | 11/26 [00:00<00:00, 36.56it/s] 62%|######1   | 16/26 [00:00<00:00, 40.12it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.12it/s] 81%|########  | 21/26 [00:00<00:00, 38.60it/s]100%|##########| 26/26 [00:00<00:00, 35.30it/s]
Test: [   0/  26]	Loss 0.366 (0.366)	test_acc   0.78 (  0.78)	test_minacc   0.82 (  0.82)	test_majacc   0.78 (  0.78)	Loss_d 0.366 (0.366)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.456 (0.411)	test_acc   0.76 (  0.76)	test_minacc   0.71 (  0.79)	test_majacc   0.77 (  0.76)	Loss_d 0.456 (0.411)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.71 (  0.79)	test_majacc_d   0.77 (  0.76)	test_corr_d   0.60 (  0.55)
Test: [  20/  26]	Loss 0.393 (0.410)	test_acc   0.78 (  0.77)	test_minacc   0.85 (  0.78)	test_majacc   0.77 (  0.76)	Loss_d 0.393 (0.410)	test_acc_d   0.78 (  0.77)	test_minacc_d   0.85 (  0.78)	test_majacc_d   0.77 (  0.76)	test_corr_d   0.58 (  0.56)
Test: [  26/  26]	Loss 0.406 (0.406)	test_acc   0.76 (  0.77)	test_minacc   0.86 (  0.78)	test_majacc   0.75 (  0.76)	Loss_d 0.406 (0.406)	test_acc_d   0.76 (  0.77)	test_minacc_d   0.86 (  0.78)	test_majacc_d   0.75 (  0.76)	test_corr_d   0.56 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.24it/s]
Test: [  0/  1]	Loss 1.489 (1.489)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 1.489 (1.489)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.489 (1.489)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 1.489 (1.489)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.11 (  0.11)
Overall Timing[ 21/  1]	epoch_time 0.0406 (0.0442)	validation_time 0.0005 (0.0007)	train_time 0.0401 (0.0434)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.7675000265836716, 0.6150000095367432)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.19it/s] 19%|#9        | 5/26 [00:00<00:00, 21.69it/s] 35%|###4      | 9/26 [00:00<00:00, 25.79it/s] 50%|#####     | 13/26 [00:00<00:00, 28.51it/s] 65%|######5   | 17/26 [00:00<00:00, 29.54it/s] 81%|########  | 21/26 [00:00<00:00, 30.43it/s] 96%|#########6| 25/26 [00:00<00:00, 32.34it/s]100%|##########| 26/26 [00:00<00:00, 27.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.001 (0.001)	train_nll   0.35 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  25.29 ( 25.29)	train_acc   0.77 (  0.77)	train_minacc   0.89 (  0.84)	train_majacc   0.75 (  0.75)	train_corr   0.00 (  0.00)	l1 6.7266 (6.4731)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.08it/s] 23%|##3       | 6/26 [00:00<00:00, 28.02it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.02it/s] 42%|####2     | 11/26 [00:00<00:00, 33.10it/s] 62%|######1   | 16/26 [00:00<00:00, 37.42it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.42it/s] 81%|########  | 21/26 [00:00<00:00, 38.31it/s]100%|##########| 26/26 [00:00<00:00, 41.67it/s]100%|##########| 26/26 [00:00<00:00, 33.72it/s]
Test: [   0/  26]	Loss 0.355 (0.355)	test_acc   0.77 (  0.77)	test_minacc   0.92 (  0.92)	test_majacc   0.75 (  0.75)	Loss_d 0.355 (0.355)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.407 (0.390)	test_acc   0.74 (  0.75)	test_minacc   0.81 (  0.88)	test_majacc   0.73 (  0.73)	Loss_d 0.407 (0.390)	test_acc_d   0.74 (  0.75)	test_minacc_d   0.81 (  0.88)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.62 (  0.59)
Test: [  20/  26]	Loss 0.395 (0.398)	test_acc   0.75 (  0.74)	test_minacc   0.87 (  0.86)	test_majacc   0.73 (  0.72)	Loss_d 0.395 (0.398)	test_acc_d   0.75 (  0.74)	test_minacc_d   0.87 (  0.86)	test_majacc_d   0.73 (  0.72)	test_corr_d   0.59 (  0.58)
Test: [  26/  26]	Loss 0.356 (0.393)	test_acc   0.76 (  0.75)	test_minacc   0.89 (  0.87)	test_majacc   0.74 (  0.73)	Loss_d 0.356 (0.393)	test_acc_d   0.76 (  0.75)	test_minacc_d   0.89 (  0.87)	test_majacc_d   0.74 (  0.73)	test_corr_d   0.60 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.41it/s]
Test: [  0/  1]	Loss 1.661 (1.661)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 1.661 (1.661)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.661 (1.661)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 1.661 (1.661)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.22 (  0.22)
Overall Timing[ 22/  1]	epoch_time 0.0413 (0.0441)	validation_time 0.0004 (0.0007)	train_time 0.0409 (0.0433)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.74750003105402, 0.6180000305175781)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 15%|#5        | 4/26 [00:00<00:01, 17.85it/s] 31%|###       | 8/26 [00:00<00:00, 21.90it/s] 46%|####6     | 12/26 [00:00<00:00, 26.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.95it/s] 88%|########8 | 23/26 [00:00<00:00, 28.75it/s]100%|##########| 26/26 [00:01<00:00, 25.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.9966840744018555
set z to 6.926717233657837
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 381 tensor(-0.0105, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 269 tensor(-0.0180, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 212 tensor(0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 190 tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 185 tensor(0.0001, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.021 (0.037)	train_nll   0.61 (  0.48)	train_penalty   0.02 (  0.04)	weight_norm  26.59 ( 25.69)	train_acc   0.82 (  0.74)	train_minacc   0.44 (  0.60)	train_majacc   0.88 (  0.76)	train_corr   0.00 (  0.00)	l1 8.0073 (7.9833)	zero_count 0.0000 (38.6880)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.00it/s] 19%|#9        | 5/26 [00:00<00:00, 23.00it/s] 38%|###8      | 10/26 [00:00<00:00, 29.78it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.78it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.09it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.10it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.10it/s] 96%|#########6| 25/26 [00:00<00:00, 41.06it/s]100%|##########| 26/26 [00:00<00:00, 33.54it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.54 (  0.54)	test_minacc   0.45 (  0.45)	test_majacc   0.55 (  0.55)	Loss_d 0.596 (0.596)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.649 (0.595)	test_acc   0.55 (  0.57)	test_minacc   0.52 (  0.48)	test_majacc   0.55 (  0.58)	Loss_d 0.649 (0.595)	test_acc_d   0.55 (  0.57)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.55 (  0.58)	test_corr_d   0.60 (  0.54)
Test: [  20/  26]	Loss 0.580 (0.576)	test_acc   0.59 (  0.57)	test_minacc   0.55 (  0.49)	test_majacc   0.59 (  0.58)	Loss_d 0.580 (0.576)	test_acc_d   0.59 (  0.57)	test_minacc_d   0.55 (  0.49)	test_majacc_d   0.59 (  0.58)	test_corr_d   0.54 (  0.53)
Test: [  26/  26]	Loss 0.541 (0.572)	test_acc   0.53 (  0.56)	test_minacc   0.53 (  0.48)	test_majacc   0.53 (  0.58)	Loss_d 0.541 (0.572)	test_acc_d   0.53 (  0.56)	test_minacc_d   0.53 (  0.48)	test_majacc_d   0.53 (  0.58)	test_corr_d   0.60 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.92it/s]
Test: [  0/  1]	Loss 1.882 (1.882)	test_acc   0.46 (  0.46)	test_minacc   0.44 (  0.44)	test_majacc   0.61 (  0.61)	Loss_d 1.882 (1.882)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 1.882 (1.882)	test_acc   0.46 (  0.46)	test_minacc   0.44 (  0.44)	test_majacc   0.61 (  0.61)	Loss_d 1.882 (1.882)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.18 (  0.18)
Overall Timing[ 23/  1]	epoch_time 0.0414 (0.0440)	validation_time 0.0004 (0.0007)	train_time 0.0410 (0.0432)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5636000126600266, 0.45900002121925354)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.29it/s] 15%|#5        | 4/26 [00:00<00:01, 21.04it/s] 31%|###       | 8/26 [00:00<00:00, 26.40it/s] 46%|####6     | 12/26 [00:00<00:00, 28.23it/s] 62%|######1   | 16/26 [00:00<00:00, 30.37it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.00it/s] 88%|########8 | 23/26 [00:00<00:00, 29.91it/s]100%|##########| 26/26 [00:00<00:00, 27.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 182 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 178 tensor(-0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 210 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 216 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 221 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 239 tensor(-0.0006, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.003)	train_nll   0.56 (  0.54)	train_penalty   0.00 (  0.00)	weight_norm  27.37 ( 27.11)	train_acc   0.71 (  0.67)	train_minacc   0.53 (  0.57)	train_majacc   0.74 (  0.68)	train_corr   0.00 (  0.00)	l1 7.1522 (7.1647)	zero_count 0.0000 (73.0860)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.13it/s] 23%|##3       | 6/26 [00:00<00:00, 27.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.72it/s] 42%|####2     | 11/26 [00:00<00:00, 34.86it/s] 62%|######1   | 16/26 [00:00<00:00, 39.60it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.60it/s] 81%|########  | 21/26 [00:00<00:00, 37.32it/s]100%|##########| 26/26 [00:00<00:00, 40.04it/s]100%|##########| 26/26 [00:00<00:00, 33.43it/s]
Test: [   0/  26]	Loss 0.607 (0.607)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.607 (0.607)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.574 (0.603)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.53)	test_majacc   0.50 (  0.48)	Loss_d 0.574 (0.603)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.53)	test_majacc_d   0.50 (  0.48)	test_corr_d   0.44 (  0.37)
Test: [  20/  26]	Loss 0.599 (0.597)	test_acc   0.52 (  0.50)	test_minacc   0.58 (  0.53)	test_majacc   0.50 (  0.49)	Loss_d 0.599 (0.597)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.58 (  0.53)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.594 (0.598)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.53)	test_majacc   0.48 (  0.49)	Loss_d 0.594 (0.598)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.53)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.40 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.61it/s]
Test: [  0/  1]	Loss 1.661 (1.661)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.661 (1.661)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.661 (1.661)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.661 (1.661)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 24/  1]	epoch_time 0.0404 (0.0438)	validation_time 0.0003 (0.0007)	train_time 0.0401 (0.0430)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.4951000099182129, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.87it/s] 23%|##3       | 6/26 [00:00<00:00, 24.69it/s] 38%|###8      | 10/26 [00:00<00:00, 28.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.07it/s] 69%|######9   | 18/26 [00:00<00:00, 29.65it/s] 85%|########4 | 22/26 [00:00<00:00, 31.34it/s]100%|##########| 26/26 [00:00<00:00, 32.61it/s]100%|##########| 26/26 [00:00<00:00, 28.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 246 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 240 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 377 tensor(-5.5885e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.46 ( 27.43)	train_acc   0.49 (  0.53)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.53)	train_corr   0.00 (  0.00)	l1 6.8884 (6.9369)	zero_count 0.0000 (36.7380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.32it/s] 12%|#1        | 3/26 [00:00<00:02,  8.57it/s] 31%|###       | 8/26 [00:00<00:00, 20.89it/s]                                               31%|###       | 8/26 [00:00<00:00, 20.89it/s] 46%|####6     | 12/26 [00:00<00:00, 26.39it/s] 65%|######5   | 17/26 [00:00<00:00, 31.82it/s]                                                65%|######5   | 17/26 [00:00<00:00, 31.82it/s] 81%|########  | 21/26 [00:00<00:00, 34.12it/s]100%|##########| 26/26 [00:00<00:00, 38.01it/s]100%|##########| 26/26 [00:00<00:00, 26.70it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.597 (0.597)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.589 (0.602)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.589 (0.602)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.49 (  0.42)
Test: [  20/  26]	Loss 0.610 (0.599)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.610 (0.599)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.40 (  0.41)
Test: [  26/  26]	Loss 0.590 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.590 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.46 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.94it/s]
Test: [  0/  1]	Loss 1.613 (1.613)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.613 (1.613)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.613 (1.613)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.613 (1.613)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 25/  1]	epoch_time 0.0415 (0.0437)	validation_time 0.0004 (0.0007)	train_time 0.0410 (0.0430)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5001000119447708, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.22it/s] 19%|#9        | 5/26 [00:00<00:01, 18.83it/s] 35%|###4      | 9/26 [00:00<00:00, 24.27it/s] 50%|#####     | 13/26 [00:00<00:00, 25.74it/s] 65%|######5   | 17/26 [00:00<00:00, 28.09it/s] 81%|########  | 21/26 [00:00<00:00, 30.10it/s] 96%|#########6| 25/26 [00:00<00:00, 31.27it/s]100%|##########| 26/26 [00:00<00:00, 26.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.47 ( 27.46)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8921 (6.9004)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.84it/s] 12%|#1        | 3/26 [00:00<00:02, 10.38it/s] 31%|###       | 8/26 [00:00<00:00, 23.67it/s]                                               31%|###       | 8/26 [00:00<00:00, 23.67it/s] 50%|#####     | 13/26 [00:00<00:00, 31.33it/s] 69%|######9   | 18/26 [00:00<00:00, 35.33it/s]                                                69%|######9   | 18/26 [00:00<00:00, 35.33it/s] 88%|########8 | 23/26 [00:00<00:00, 35.92it/s]100%|##########| 26/26 [00:00<00:00, 28.67it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.594 (0.594)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.577 (0.597)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.577 (0.597)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.49 (  0.42)
Test: [  20/  26]	Loss 0.601 (0.594)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.601 (0.594)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.41 (  0.41)
Test: [  26/  26]	Loss 0.588 (0.594)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.588 (0.594)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.46 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.52it/s]
Test: [  0/  1]	Loss 1.597 (1.597)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.597 (1.597)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.597 (1.597)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.597 (1.597)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 26/  1]	epoch_time 0.0427 (0.0437)	validation_time 0.0004 (0.0007)	train_time 0.0423 (0.0429)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5002000119388104, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.02it/s]  8%|7         | 2/26 [00:00<00:03,  7.08it/s] 23%|##3       | 6/26 [00:00<00:01, 17.85it/s] 38%|###8      | 10/26 [00:00<00:00, 23.60it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.58it/s] 69%|######9   | 18/26 [00:00<00:00, 29.60it/s] 85%|########4 | 22/26 [00:00<00:00, 28.88it/s]100%|##########| 26/26 [00:01<00:00, 30.58it/s]100%|##########| 26/26 [00:01<00:00, 24.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 368 tensor(-3.2437e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.47 ( 27.47)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8742 (6.9072)	zero_count 0.0000 (5.5770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.68it/s] 23%|##3       | 6/26 [00:00<00:00, 27.33it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.33it/s] 42%|####2     | 11/26 [00:00<00:00, 33.45it/s] 62%|######1   | 16/26 [00:00<00:00, 38.85it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.85it/s] 81%|########  | 21/26 [00:00<00:00, 41.00it/s]100%|##########| 26/26 [00:00<00:00, 41.74it/s]100%|##########| 26/26 [00:00<00:00, 33.93it/s]
Test: [   0/  26]	Loss 0.588 (0.588)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.588 (0.588)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.571 (0.592)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.571 (0.592)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.50 (  0.44)
Test: [  20/  26]	Loss 0.594 (0.589)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.594 (0.589)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.44 (  0.44)
Test: [  26/  26]	Loss 0.584 (0.589)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.584 (0.589)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.47 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.39it/s]
Test: [  0/  1]	Loss 1.633 (1.633)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.633 (1.633)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.633 (1.633)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.633 (1.633)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 27/  1]	epoch_time 0.0408 (0.0436)	validation_time 0.0005 (0.0006)	train_time 0.0403 (0.0428)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5007000130712986, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.78it/s] 19%|#9        | 5/26 [00:00<00:00, 23.74it/s] 35%|###4      | 9/26 [00:00<00:00, 29.28it/s] 50%|#####     | 13/26 [00:00<00:00, 31.86it/s] 65%|######5   | 17/26 [00:00<00:00, 33.08it/s] 81%|########  | 21/26 [00:00<00:00, 33.54it/s] 96%|#########6| 25/26 [00:00<00:00, 33.68it/s]100%|##########| 26/26 [00:00<00:00, 29.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.47 ( 27.47)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8876 (6.9037)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.16it/s] 23%|##3       | 6/26 [00:00<00:00, 29.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.72it/s] 42%|####2     | 11/26 [00:00<00:00, 36.40it/s] 62%|######1   | 16/26 [00:00<00:00, 39.87it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.87it/s] 81%|########  | 21/26 [00:00<00:00, 41.50it/s]100%|##########| 26/26 [00:00<00:00, 42.92it/s]100%|##########| 26/26 [00:00<00:00, 35.22it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.592 (0.592)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.575 (0.596)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.575 (0.596)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.49 (  0.43)
Test: [  20/  26]	Loss 0.597 (0.593)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.597 (0.593)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.43 (  0.43)
Test: [  26/  26]	Loss 0.588 (0.593)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.588 (0.593)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.46 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.20it/s]
Test: [  0/  1]	Loss 1.654 (1.654)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.654 (1.654)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.654 (1.654)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.654 (1.654)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 28/  1]	epoch_time 0.0399 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0395 (0.0427)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5001000119447708, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.76it/s] 19%|#9        | 5/26 [00:00<00:00, 22.01it/s] 35%|###4      | 9/26 [00:00<00:00, 26.96it/s] 46%|####6     | 12/26 [00:00<00:00, 26.49it/s] 62%|######1   | 16/26 [00:00<00:00, 28.93it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.77it/s] 92%|#########2| 24/26 [00:00<00:00, 32.32it/s]100%|##########| 26/26 [00:00<00:00, 27.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 396 tensor(-3.0148e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.47 ( 27.47)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8917 (6.9054)	zero_count 0.0000 (4.4850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 19%|#9        | 5/26 [00:00<00:00, 23.05it/s] 38%|###8      | 10/26 [00:00<00:00, 32.68it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.68it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.17it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.78it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.78it/s] 96%|#########6| 25/26 [00:00<00:00, 39.37it/s]100%|##########| 26/26 [00:00<00:00, 33.03it/s]
Test: [   0/  26]	Loss 0.598 (0.598)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.598 (0.598)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.580 (0.601)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.580 (0.601)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.48 (  0.42)
Test: [  20/  26]	Loss 0.602 (0.598)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.602 (0.598)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.41 (  0.41)
Test: [  26/  26]	Loss 0.592 (0.598)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.592 (0.598)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.45 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.49it/s]
Test: [  0/  1]	Loss 1.658 (1.658)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.658 (1.658)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.658 (1.658)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.658 (1.658)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 29/  1]	epoch_time 0.0436 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0432 (0.0427)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5001000119447708, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 19%|#9        | 5/26 [00:00<00:01, 17.49it/s] 35%|###4      | 9/26 [00:00<00:00, 23.69it/s] 50%|#####     | 13/26 [00:00<00:00, 27.00it/s] 62%|######1   | 16/26 [00:00<00:00, 26.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.09it/s] 92%|#########2| 24/26 [00:00<00:00, 30.74it/s]100%|##########| 26/26 [00:01<00:00, 25.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 401 tensor(-9.6565e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.47 ( 27.47)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8879 (6.9050)	zero_count 0.0000 (4.2900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.51it/s] 12%|#1        | 3/26 [00:00<00:01, 14.56it/s] 35%|###4      | 9/26 [00:00<00:00, 32.09it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.09it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.93it/s] 69%|######9   | 18/26 [00:00<00:00, 38.24it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.24it/s] 88%|########8 | 23/26 [00:00<00:00, 39.67it/s]100%|##########| 26/26 [00:00<00:00, 32.63it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.597 (0.597)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.580 (0.600)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.580 (0.600)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.48 (  0.42)
Test: [  20/  26]	Loss 0.602 (0.597)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.602 (0.597)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.41 (  0.41)
Test: [  26/  26]	Loss 0.592 (0.597)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.592 (0.597)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.45 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 50.13it/s]
Test: [  0/  1]	Loss 1.654 (1.654)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.654 (1.654)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.654 (1.654)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.654 (1.654)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 30/  1]	epoch_time 0.0428 (0.0434)	validation_time 0.0005 (0.0006)	train_time 0.0423 (0.0427)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5001000119447708, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.90it/s] 12%|#1        | 3/26 [00:00<00:02,  9.23it/s] 23%|##3       | 6/26 [00:00<00:01, 15.74it/s] 38%|###8      | 10/26 [00:00<00:00, 22.37it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.45it/s] 65%|######5   | 17/26 [00:00<00:00, 26.20it/s] 81%|########  | 21/26 [00:00<00:00, 28.70it/s] 96%|#########6| 25/26 [00:01<00:00, 30.49it/s]100%|##########| 26/26 [00:01<00:00, 23.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 410 tensor(-1.0714e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.47 ( 27.47)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8914 (6.9072)	zero_count 0.0000 (3.9390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.64it/s] 23%|##3       | 6/26 [00:00<00:00, 26.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.77it/s] 42%|####2     | 11/26 [00:00<00:00, 33.37it/s] 62%|######1   | 16/26 [00:00<00:00, 37.98it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.98it/s] 81%|########  | 21/26 [00:00<00:00, 37.15it/s]100%|##########| 26/26 [00:00<00:00, 40.28it/s]100%|##########| 26/26 [00:00<00:00, 32.87it/s]
Test: [   0/  26]	Loss 0.598 (0.598)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.598 (0.598)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.581 (0.601)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.581 (0.601)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.48 (  0.42)
Test: [  20/  26]	Loss 0.603 (0.598)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.603 (0.598)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.41 (  0.41)
Test: [  26/  26]	Loss 0.592 (0.598)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.592 (0.598)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.45 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.19it/s]
Test: [  0/  1]	Loss 1.654 (1.654)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.654 (1.654)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.654 (1.654)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.654 (1.654)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 31/  1]	epoch_time 0.0418 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0414 (0.0427)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5001000119447708, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.85it/s] 23%|##3       | 6/26 [00:00<00:00, 24.66it/s] 38%|###8      | 10/26 [00:00<00:00, 28.04it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.26it/s] 69%|######9   | 18/26 [00:00<00:00, 29.55it/s] 85%|########4 | 22/26 [00:00<00:00, 31.37it/s]100%|##########| 26/26 [00:00<00:00, 32.65it/s]100%|##########| 26/26 [00:00<00:00, 27.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 398 tensor(5.9790e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.47 ( 27.47)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8922 (6.9083)	zero_count 0.0000 (4.4070)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.27it/s] 19%|#9        | 5/26 [00:00<00:01, 17.77it/s] 38%|###8      | 10/26 [00:00<00:00, 27.81it/s]                                                38%|###8      | 10/26 [00:00<00:00, 27.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.52it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.90it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 34.90it/s] 96%|#########6| 25/26 [00:00<00:00, 37.98it/s]100%|##########| 26/26 [00:00<00:00, 29.34it/s]
Test: [   0/  26]	Loss 0.599 (0.599)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.599 (0.599)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.581 (0.601)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.581 (0.601)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.48 (  0.41)
Test: [  20/  26]	Loss 0.603 (0.598)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.603 (0.598)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.41 (  0.41)
Test: [  26/  26]	Loss 0.592 (0.598)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.592 (0.598)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.44 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.53it/s]
Test: [  0/  1]	Loss 1.653 (1.653)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.653 (1.653)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.653 (1.653)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.653 (1.653)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 32/  1]	epoch_time 0.0425 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0421 (0.0427)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5001000119447708, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 12%|#1        | 3/26 [00:00<00:01, 14.29it/s] 27%|##6       | 7/26 [00:00<00:00, 23.93it/s] 42%|####2     | 11/26 [00:00<00:00, 28.41it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.64it/s] 69%|######9   | 18/26 [00:00<00:00, 27.33it/s] 85%|########4 | 22/26 [00:00<00:00, 29.62it/s]100%|##########| 26/26 [00:00<00:00, 31.59it/s]100%|##########| 26/26 [00:01<00:00, 25.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 393 tensor(-2.9554e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 411 tensor(2.7776e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.48 ( 27.48)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8901 (6.9084)	zero_count 0.0000 (8.5020)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.06it/s] 23%|##3       | 6/26 [00:00<00:00, 25.46it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.46it/s] 42%|####2     | 11/26 [00:00<00:00, 33.15it/s] 62%|######1   | 16/26 [00:00<00:00, 38.01it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.01it/s] 81%|########  | 21/26 [00:00<00:00, 36.63it/s]100%|##########| 26/26 [00:00<00:00, 39.36it/s]100%|##########| 26/26 [00:00<00:00, 31.93it/s]
Test: [   0/  26]	Loss 0.599 (0.599)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.599 (0.599)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.582 (0.602)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.582 (0.602)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.47 (  0.41)
Test: [  20/  26]	Loss 0.604 (0.599)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.604 (0.599)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.40 (  0.41)
Test: [  26/  26]	Loss 0.593 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.593 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.44 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.36it/s]
Test: [  0/  1]	Loss 1.651 (1.651)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.651 (1.651)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.651 (1.651)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.651 (1.651)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 33/  1]	epoch_time 0.0451 (0.0434)	validation_time 0.0004 (0.0006)	train_time 0.0446 (0.0427)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5001000119447708, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.52it/s] 12%|#1        | 3/26 [00:00<00:01, 14.71it/s] 27%|##6       | 7/26 [00:00<00:00, 23.15it/s] 38%|###8      | 10/26 [00:00<00:00, 25.38it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.91it/s] 65%|######5   | 17/26 [00:00<00:00, 26.56it/s] 81%|########  | 21/26 [00:00<00:00, 28.91it/s] 96%|#########6| 25/26 [00:00<00:00, 31.33it/s]100%|##########| 26/26 [00:01<00:00, 25.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 362 tensor(3.6089e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.48 ( 27.48)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8878 (6.9054)	zero_count 0.0000 (5.8110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 27%|##6       | 7/26 [00:00<00:00, 31.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.16it/s] 46%|####6     | 12/26 [00:00<00:00, 36.80it/s] 65%|######5   | 17/26 [00:00<00:00, 37.16it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.16it/s] 85%|########4 | 22/26 [00:00<00:00, 37.85it/s]100%|##########| 26/26 [00:00<00:00, 34.08it/s]
Test: [   0/  26]	Loss 0.600 (0.600)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.600 (0.600)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.582 (0.602)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.582 (0.602)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.47 (  0.41)
Test: [  20/  26]	Loss 0.604 (0.599)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.604 (0.599)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.40 (  0.40)
Test: [  26/  26]	Loss 0.594 (0.599)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.594 (0.599)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.44 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.39it/s]
Test: [  0/  1]	Loss 1.650 (1.650)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.650 (1.650)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.650 (1.650)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.650 (1.650)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 34/  1]	epoch_time 0.0436 (0.0434)	validation_time 0.0003 (0.0006)	train_time 0.0433 (0.0427)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5001000119447708, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.26it/s] 23%|##3       | 6/26 [00:00<00:00, 26.40it/s] 38%|###8      | 10/26 [00:00<00:00, 30.11it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.05it/s] 69%|######9   | 18/26 [00:00<00:00, 30.58it/s] 85%|########4 | 22/26 [00:00<00:00, 31.66it/s]100%|##########| 26/26 [00:00<00:00, 32.64it/s]100%|##########| 26/26 [00:00<00:00, 27.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 346 tensor(2.9468e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.48 ( 27.48)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8877 (6.9037)	zero_count 0.0000 (6.4350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.88it/s] 23%|##3       | 6/26 [00:00<00:00, 28.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.73it/s] 42%|####2     | 11/26 [00:00<00:00, 35.78it/s] 62%|######1   | 16/26 [00:00<00:00, 40.21it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.21it/s] 81%|########  | 21/26 [00:00<00:00, 38.11it/s]100%|##########| 26/26 [00:00<00:00, 40.88it/s]100%|##########| 26/26 [00:00<00:00, 34.31it/s]
Test: [   0/  26]	Loss 0.601 (0.601)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.601 (0.601)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.583 (0.603)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.583 (0.603)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.46 (  0.40)
Test: [  20/  26]	Loss 0.605 (0.600)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.605 (0.600)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.40 (  0.40)
Test: [  26/  26]	Loss 0.594 (0.600)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.594 (0.600)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.43 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.24it/s]
Test: [  0/  1]	Loss 1.651 (1.651)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.651 (1.651)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.651 (1.651)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.651 (1.651)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.22 (  0.22)
Overall Timing[ 35/  1]	epoch_time 0.0457 (0.0435)	validation_time 0.0005 (0.0006)	train_time 0.0453 (0.0428)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5001000119447708, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.48it/s] 19%|#9        | 5/26 [00:00<00:01, 17.97it/s] 35%|###4      | 9/26 [00:00<00:00, 24.59it/s] 50%|#####     | 13/26 [00:00<00:00, 28.02it/s] 62%|######1   | 16/26 [00:00<00:00, 27.32it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.71it/s] 92%|#########2| 24/26 [00:00<00:00, 29.79it/s]100%|##########| 26/26 [00:01<00:00, 25.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 383 tensor(-5.6339e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 364 tensor(7.0116e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.48 ( 27.48)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.8861 (6.9036)	zero_count 0.0000 (10.7250)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.94it/s] 31%|###       | 8/26 [00:00<00:00, 34.94it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.94it/s] 50%|#####     | 13/26 [00:00<00:00, 38.56it/s] 69%|######9   | 18/26 [00:00<00:00, 42.21it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.21it/s] 88%|########8 | 23/26 [00:00<00:00, 38.58it/s]100%|##########| 26/26 [00:00<00:00, 36.38it/s]
Test: [   0/  26]	Loss 0.603 (0.603)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.603 (0.603)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.586 (0.605)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.586 (0.605)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.45 (  0.39)
Test: [  20/  26]	Loss 0.606 (0.602)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.606 (0.602)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.39 (  0.39)
Test: [  26/  26]	Loss 0.597 (0.602)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.597 (0.602)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.42 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.16it/s]
Test: [  0/  1]	Loss 1.649 (1.649)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.649 (1.649)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 1.649 (1.649)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.649 (1.649)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 36/  1]	epoch_time 0.0431 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0427 (0.0428)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.5001000119447708, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 19%|#9        | 5/26 [00:00<00:01, 19.83it/s] 35%|###4      | 9/26 [00:00<00:00, 25.19it/s] 50%|#####     | 13/26 [00:00<00:00, 27.64it/s] 65%|######5   | 17/26 [00:00<00:00, 29.76it/s] 81%|########  | 21/26 [00:00<00:00, 29.02it/s] 96%|#########6| 25/26 [00:00<00:00, 30.97it/s]100%|##########| 26/26 [00:01<00:00, 25.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 325 tensor(6.9112e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.49 ( 27.48)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9003 (6.8940)	zero_count 0.0000 (7.2540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.19it/s] 23%|##3       | 6/26 [00:00<00:01, 17.61it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.61it/s] 42%|####2     | 11/26 [00:00<00:00, 26.40it/s] 62%|######1   | 16/26 [00:00<00:00, 32.81it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.81it/s] 81%|########  | 21/26 [00:00<00:00, 34.90it/s]100%|##########| 26/26 [00:00<00:00, 28.30it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.608 (0.608)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.592 (0.610)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.592 (0.610)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.43 (  0.37)
Test: [  20/  26]	Loss 0.610 (0.607)	test_acc   0.53 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.610 (0.607)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.602 (0.607)	test_acc   0.49 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.602 (0.607)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.41 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.82it/s]
Test: [  0/  1]	Loss 1.648 (1.648)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.648 (1.648)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.648 (1.648)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.648 (1.648)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 37/  1]	epoch_time 0.0436 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0432 (0.0428)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.4991000120043755, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.95it/s] 19%|#9        | 5/26 [00:00<00:01, 18.81it/s] 35%|###4      | 9/26 [00:00<00:00, 25.17it/s] 50%|#####     | 13/26 [00:00<00:00, 28.60it/s] 65%|######5   | 17/26 [00:00<00:00, 30.81it/s] 81%|########  | 21/26 [00:00<00:00, 32.05it/s] 96%|#########6| 25/26 [00:00<00:00, 31.47it/s]100%|##########| 26/26 [00:00<00:00, 26.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 319 tensor(3.9670e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.49 ( 27.49)	train_acc   0.49 (  0.50)	train_minacc   0.53 (  0.50)	train_majacc   0.48 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9220 (6.8785)	zero_count 0.0000 (7.4880)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.01it/s] 23%|##3       | 6/26 [00:00<00:00, 23.17it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.17it/s] 42%|####2     | 11/26 [00:00<00:00, 31.14it/s] 62%|######1   | 16/26 [00:00<00:00, 36.31it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.31it/s] 81%|########  | 21/26 [00:00<00:00, 35.48it/s]100%|##########| 26/26 [00:00<00:00, 38.89it/s]100%|##########| 26/26 [00:00<00:00, 30.67it/s]
Test: [   0/  26]	Loss 0.616 (0.616)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.48 (  0.48)	Loss_d 0.616 (0.616)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.601 (0.617)	test_acc   0.51 (  0.49)	test_minacc   0.54 (  0.50)	test_majacc   0.50 (  0.49)	Loss_d 0.601 (0.617)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.40 (  0.35)
Test: [  20/  26]	Loss 0.616 (0.614)	test_acc   0.51 (  0.50)	test_minacc   0.58 (  0.51)	test_majacc   0.50 (  0.49)	Loss_d 0.616 (0.614)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.609 (0.614)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.50)	test_majacc   0.48 (  0.49)	Loss_d 0.609 (0.614)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.38 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.22it/s]
Test: [  0/  1]	Loss 1.643 (1.643)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.643 (1.643)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.643 (1.643)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.643 (1.643)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 38/  1]	epoch_time 0.0435 (0.0435)	validation_time 0.0004 (0.0006)	train_time 0.0431 (0.0428)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.4937000151872635, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.14it/s] 19%|#9        | 5/26 [00:00<00:01, 18.43it/s] 35%|###4      | 9/26 [00:00<00:00, 24.50it/s] 50%|#####     | 13/26 [00:00<00:00, 27.73it/s] 65%|######5   | 17/26 [00:00<00:00, 29.96it/s] 81%|########  | 21/26 [00:00<00:00, 31.41it/s] 96%|#########6| 25/26 [00:00<00:00, 32.63it/s]100%|##########| 26/26 [00:00<00:00, 26.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.48 (  0.48)	train_minacc   0.58 (  0.52)	train_majacc   0.46 (  0.48)	train_corr   0.00 (  0.00)	l1 6.9108 (6.8591)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.91it/s] 27%|##6       | 7/26 [00:00<00:00, 32.88it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.88it/s] 46%|####6     | 12/26 [00:00<00:00, 38.39it/s] 65%|######5   | 17/26 [00:00<00:00, 39.20it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.20it/s] 85%|########4 | 22/26 [00:00<00:00, 39.51it/s]100%|##########| 26/26 [00:00<00:00, 36.48it/s]
Test: [   0/  26]	Loss 0.615 (0.615)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.47 (  0.47)	Loss_d 0.615 (0.615)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.601 (0.616)	test_acc   0.48 (  0.47)	test_minacc   0.54 (  0.52)	test_majacc   0.48 (  0.46)	Loss_d 0.601 (0.616)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.48 (  0.46)	test_corr_d   0.39 (  0.35)
Test: [  20/  26]	Loss 0.615 (0.613)	test_acc   0.48 (  0.48)	test_minacc   0.60 (  0.53)	test_majacc   0.47 (  0.47)	Loss_d 0.615 (0.613)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.60 (  0.53)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.609 (0.613)	test_acc   0.48 (  0.47)	test_minacc   0.58 (  0.52)	test_majacc   0.46 (  0.47)	Loss_d 0.609 (0.613)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.38 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.96it/s]
Test: [  0/  1]	Loss 1.643 (1.643)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.643 (1.643)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.643 (1.643)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.643 (1.643)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.13 (  0.13)
Overall Timing[ 39/  1]	epoch_time 0.0382 (0.0434)	validation_time 0.0003 (0.0006)	train_time 0.0379 (0.0427)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.4749000052213669, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.73it/s] 12%|#1        | 3/26 [00:00<00:01, 12.06it/s] 27%|##6       | 7/26 [00:00<00:00, 21.57it/s] 42%|####2     | 11/26 [00:00<00:00, 26.51it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.66it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.68it/s] 88%|########8 | 23/26 [00:00<00:00, 33.12it/s]100%|##########| 26/26 [00:00<00:00, 26.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.45 (  0.47)	train_minacc   0.58 (  0.54)	train_majacc   0.43 (  0.45)	train_corr   0.00 (  0.00)	l1 6.8798 (6.8788)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 23%|##3       | 6/26 [00:00<00:00, 27.45it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.45it/s] 42%|####2     | 11/26 [00:00<00:00, 34.99it/s] 62%|######1   | 16/26 [00:00<00:00, 38.57it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.57it/s] 81%|########  | 21/26 [00:00<00:00, 37.72it/s]100%|##########| 26/26 [00:00<00:00, 40.68it/s]100%|##########| 26/26 [00:00<00:00, 33.08it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.46 (  0.46)	test_minacc   0.47 (  0.47)	test_majacc   0.46 (  0.46)	Loss_d 0.608 (0.608)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.595 (0.609)	test_acc   0.47 (  0.45)	test_minacc   0.58 (  0.54)	test_majacc   0.46 (  0.44)	Loss_d 0.595 (0.609)	test_acc_d   0.47 (  0.45)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.41 (  0.37)
Test: [  20/  26]	Loss 0.607 (0.606)	test_acc   0.47 (  0.46)	test_minacc   0.60 (  0.55)	test_majacc   0.45 (  0.44)	Loss_d 0.607 (0.606)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.60 (  0.55)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.603 (0.606)	test_acc   0.46 (  0.46)	test_minacc   0.58 (  0.54)	test_majacc   0.43 (  0.45)	Loss_d 0.603 (0.606)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.43 (  0.45)	test_corr_d   0.39 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.54it/s]
Test: [  0/  1]	Loss 1.670 (1.670)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.670 (1.670)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.670 (1.670)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.670 (1.670)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 40/  1]	epoch_time 0.0417 (0.0433)	validation_time 0.0006 (0.0006)	train_time 0.0410 (0.0427)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.45930000311136243, 0.503000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.57it/s] 15%|#5        | 4/26 [00:00<00:01, 18.18it/s] 31%|###       | 8/26 [00:00<00:00, 25.62it/s] 46%|####6     | 12/26 [00:00<00:00, 29.24it/s] 62%|######1   | 16/26 [00:00<00:00, 31.50it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.66it/s] 92%|#########2| 24/26 [00:00<00:00, 33.58it/s]100%|##########| 26/26 [00:00<00:00, 28.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.46 (  0.46)	train_minacc   0.58 (  0.53)	train_majacc   0.44 (  0.45)	train_corr   0.00 (  0.00)	l1 6.8814 (6.8917)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.97it/s] 23%|##3       | 6/26 [00:00<00:00, 31.94it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.94it/s] 42%|####2     | 11/26 [00:00<00:00, 37.90it/s] 62%|######1   | 16/26 [00:00<00:00, 40.44it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.44it/s] 81%|########  | 21/26 [00:00<00:00, 42.08it/s]100%|##########| 26/26 [00:00<00:00, 44.13it/s]100%|##########| 26/26 [00:00<00:00, 36.46it/s]
Test: [   0/  26]	Loss 0.606 (0.606)	test_acc   0.46 (  0.46)	test_minacc   0.47 (  0.47)	test_majacc   0.46 (  0.46)	Loss_d 0.606 (0.606)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.593 (0.607)	test_acc   0.48 (  0.46)	test_minacc   0.58 (  0.53)	test_majacc   0.46 (  0.45)	Loss_d 0.593 (0.607)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.58 (  0.53)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.606 (0.605)	test_acc   0.47 (  0.46)	test_minacc   0.60 (  0.53)	test_majacc   0.45 (  0.45)	Loss_d 0.606 (0.605)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.60 (  0.53)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.38 (  0.37)
Test: [  26/  26]	Loss 0.602 (0.605)	test_acc   0.46 (  0.46)	test_minacc   0.58 (  0.53)	test_majacc   0.44 (  0.45)	Loss_d 0.602 (0.605)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.58 (  0.53)	test_majacc_d   0.44 (  0.45)	test_corr_d   0.40 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.16it/s]
Test: [  0/  1]	Loss 1.689 (1.689)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.689 (1.689)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.689 (1.689)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.689 (1.689)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.17 (  0.17)
Overall Timing[ 41/  1]	epoch_time 0.0402 (0.0432)	validation_time 0.0003 (0.0006)	train_time 0.0398 (0.0426)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.4638000034689903, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.94it/s] 19%|#9        | 5/26 [00:00<00:00, 23.47it/s] 35%|###4      | 9/26 [00:00<00:00, 28.19it/s] 50%|#####     | 13/26 [00:00<00:00, 30.26it/s] 65%|######5   | 17/26 [00:00<00:00, 31.74it/s] 81%|########  | 21/26 [00:00<00:00, 32.79it/s] 96%|#########6| 25/26 [00:00<00:00, 33.55it/s]100%|##########| 26/26 [00:00<00:00, 28.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.46 (  0.47)	train_minacc   0.58 (  0.52)	train_majacc   0.44 (  0.46)	train_corr   0.00 (  0.00)	l1 6.8887 (6.8917)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.06it/s] 23%|##3       | 6/26 [00:00<00:00, 20.40it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.40it/s] 42%|####2     | 11/26 [00:00<00:00, 29.32it/s] 62%|######1   | 16/26 [00:00<00:00, 34.70it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.70it/s] 81%|########  | 21/26 [00:00<00:00, 35.10it/s]100%|##########| 26/26 [00:00<00:00, 38.82it/s]100%|##########| 26/26 [00:00<00:00, 29.70it/s]
Test: [   0/  26]	Loss 0.607 (0.607)	test_acc   0.46 (  0.46)	test_minacc   0.47 (  0.47)	test_majacc   0.46 (  0.46)	Loss_d 0.607 (0.607)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.593 (0.607)	test_acc   0.48 (  0.47)	test_minacc   0.54 (  0.52)	test_majacc   0.47 (  0.46)	Loss_d 0.593 (0.607)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.607 (0.606)	test_acc   0.48 (  0.47)	test_minacc   0.60 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.607 (0.606)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.60 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.38 (  0.37)
Test: [  26/  26]	Loss 0.603 (0.606)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.52)	test_majacc   0.45 (  0.46)	Loss_d 0.603 (0.606)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.40 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.43it/s]
Test: [  0/  1]	Loss 1.694 (1.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.694 (1.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.694 (1.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.694 (1.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.17 (  0.17)
Overall Timing[ 42/  1]	epoch_time 0.0420 (0.0432)	validation_time 0.0004 (0.0006)	train_time 0.0416 (0.0426)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.47140000575780866, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.20it/s] 27%|##6       | 7/26 [00:00<00:00, 29.18it/s] 42%|####2     | 11/26 [00:00<00:00, 31.63it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.96it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.34it/s] 88%|########8 | 23/26 [00:00<00:00, 33.90it/s]100%|##########| 26/26 [00:00<00:00, 30.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.47 (  0.47)	train_minacc   0.58 (  0.52)	train_majacc   0.45 (  0.46)	train_corr   0.00 (  0.00)	l1 6.8899 (6.8911)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.79it/s] 27%|##6       | 7/26 [00:00<00:00, 25.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.46it/s] 46%|####6     | 12/26 [00:00<00:00, 30.05it/s] 65%|######5   | 17/26 [00:00<00:00, 34.55it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.55it/s] 85%|########4 | 22/26 [00:00<00:00, 37.86it/s]100%|##########| 26/26 [00:00<00:00, 31.11it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.47 (  0.47)	Loss_d 0.608 (0.608)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.594 (0.608)	test_acc   0.48 (  0.47)	test_minacc   0.54 (  0.52)	test_majacc   0.47 (  0.46)	Loss_d 0.594 (0.608)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.607 (0.606)	test_acc   0.48 (  0.47)	test_minacc   0.60 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.607 (0.606)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.60 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.38 (  0.37)
Test: [  26/  26]	Loss 0.604 (0.606)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.52)	test_majacc   0.45 (  0.47)	Loss_d 0.604 (0.606)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.39 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.55it/s]
Test: [  0/  1]	Loss 1.694 (1.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.694 (1.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.694 (1.694)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.694 (1.694)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 43/  1]	epoch_time 0.0433 (0.0432)	validation_time 0.0007 (0.0006)	train_time 0.0427 (0.0426)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.47290000587701797, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 19%|#9        | 5/26 [00:00<00:00, 23.44it/s] 35%|###4      | 9/26 [00:00<00:00, 29.17it/s] 50%|#####     | 13/26 [00:00<00:00, 32.56it/s] 65%|######5   | 17/26 [00:00<00:00, 34.54it/s] 81%|########  | 21/26 [00:00<00:00, 34.16it/s] 96%|#########6| 25/26 [00:00<00:00, 34.26it/s]100%|##########| 26/26 [00:00<00:00, 29.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.47 (  0.47)	train_minacc   0.58 (  0.52)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 6.8891 (6.8912)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.04it/s] 23%|##3       | 6/26 [00:00<00:00, 25.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.47it/s] 42%|####2     | 11/26 [00:00<00:00, 30.86it/s] 62%|######1   | 16/26 [00:00<00:00, 36.37it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.37it/s] 81%|########  | 21/26 [00:00<00:00, 38.31it/s]100%|##########| 26/26 [00:00<00:00, 41.30it/s]100%|##########| 26/26 [00:00<00:00, 32.64it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.47 (  0.47)	Loss_d 0.608 (0.608)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.594 (0.607)	test_acc   0.48 (  0.47)	test_minacc   0.54 (  0.52)	test_majacc   0.47 (  0.46)	Loss_d 0.594 (0.607)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.607 (0.606)	test_acc   0.48 (  0.47)	test_minacc   0.60 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.607 (0.606)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.60 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.38 (  0.37)
Test: [  26/  26]	Loss 0.604 (0.606)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.52)	test_majacc   0.45 (  0.47)	Loss_d 0.604 (0.606)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.39 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.43it/s]
Test: [  0/  1]	Loss 1.696 (1.696)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.696 (1.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.696 (1.696)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.696 (1.696)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 44/  1]	epoch_time 0.0382 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0377 (0.0425)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.47290000566840174, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.71it/s] 19%|#9        | 5/26 [00:00<00:01, 16.98it/s] 35%|###4      | 9/26 [00:00<00:00, 22.49it/s] 50%|#####     | 13/26 [00:00<00:00, 26.07it/s] 65%|######5   | 17/26 [00:00<00:00, 28.93it/s] 81%|########  | 21/26 [00:00<00:00, 30.95it/s] 96%|#########6| 25/26 [00:00<00:00, 32.09it/s]100%|##########| 26/26 [00:01<00:00, 25.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.47 (  0.47)	train_minacc   0.58 (  0.52)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 6.8889 (6.8907)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.20it/s] 31%|###       | 8/26 [00:00<00:00, 30.11it/s]                                               31%|###       | 8/26 [00:00<00:00, 30.11it/s] 50%|#####     | 13/26 [00:00<00:00, 36.08it/s] 69%|######9   | 18/26 [00:00<00:00, 39.81it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.81it/s] 88%|########8 | 23/26 [00:00<00:00, 40.69it/s]100%|##########| 26/26 [00:00<00:00, 34.84it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.47 (  0.47)	Loss_d 0.608 (0.608)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.594 (0.607)	test_acc   0.48 (  0.47)	test_minacc   0.54 (  0.52)	test_majacc   0.47 (  0.46)	Loss_d 0.594 (0.607)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.607 (0.605)	test_acc   0.48 (  0.47)	test_minacc   0.60 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.607 (0.605)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.60 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.38 (  0.37)
Test: [  26/  26]	Loss 0.604 (0.606)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.52)	test_majacc   0.45 (  0.46)	Loss_d 0.604 (0.606)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.39 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.51it/s]
Test: [  0/  1]	Loss 1.698 (1.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.698 (1.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.698 (1.698)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.698 (1.698)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 45/  1]	epoch_time 0.0417 (0.0431)	validation_time 0.0004 (0.0006)	train_time 0.0413 (0.0424)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.47260000568628313, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.07it/s] 19%|#9        | 5/26 [00:00<00:00, 22.83it/s] 35%|###4      | 9/26 [00:00<00:00, 26.98it/s] 50%|#####     | 13/26 [00:00<00:00, 29.44it/s] 65%|######5   | 17/26 [00:00<00:00, 31.07it/s] 81%|########  | 21/26 [00:00<00:00, 32.19it/s] 96%|#########6| 25/26 [00:00<00:00, 32.77it/s]100%|##########| 26/26 [00:00<00:00, 28.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.47 (  0.47)	train_minacc   0.58 (  0.52)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 6.8889 (6.8901)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.83it/s] 23%|##3       | 6/26 [00:00<00:00, 22.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.49it/s] 42%|####2     | 11/26 [00:00<00:00, 31.26it/s] 62%|######1   | 16/26 [00:00<00:00, 36.29it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.29it/s] 81%|########  | 21/26 [00:00<00:00, 35.33it/s]100%|##########| 26/26 [00:00<00:00, 38.54it/s]100%|##########| 26/26 [00:00<00:00, 30.41it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.47 (  0.47)	Loss_d 0.608 (0.608)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.594 (0.607)	test_acc   0.48 (  0.47)	test_minacc   0.54 (  0.52)	test_majacc   0.47 (  0.46)	Loss_d 0.594 (0.607)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.607 (0.605)	test_acc   0.48 (  0.47)	test_minacc   0.60 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.607 (0.605)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.60 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.38 (  0.37)
Test: [  26/  26]	Loss 0.604 (0.606)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.52)	test_majacc   0.45 (  0.46)	Loss_d 0.604 (0.606)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.39 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.70it/s]
Test: [  0/  1]	Loss 1.699 (1.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.699 (1.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.699 (1.699)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.699 (1.699)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 46/  1]	epoch_time 0.0434 (0.0431)	validation_time 0.0003 (0.0006)	train_time 0.0431 (0.0425)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.47270000568032267, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 19%|#9        | 5/26 [00:00<00:01, 20.62it/s] 35%|###4      | 9/26 [00:00<00:00, 25.36it/s] 50%|#####     | 13/26 [00:00<00:00, 28.44it/s] 65%|######5   | 17/26 [00:00<00:00, 30.70it/s] 81%|########  | 21/26 [00:00<00:00, 31.78it/s] 96%|#########6| 25/26 [00:00<00:00, 32.40it/s]100%|##########| 26/26 [00:00<00:00, 27.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.47 (  0.47)	train_minacc   0.58 (  0.52)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 6.8888 (6.8897)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.51it/s] 27%|##6       | 7/26 [00:00<00:00, 35.23it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.23it/s] 46%|####6     | 12/26 [00:00<00:00, 39.49it/s] 65%|######5   | 17/26 [00:00<00:00, 37.15it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.15it/s] 85%|########4 | 22/26 [00:00<00:00, 40.06it/s]100%|##########| 26/26 [00:00<00:00, 35.69it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.47 (  0.47)	Loss_d 0.608 (0.608)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.594 (0.607)	test_acc   0.48 (  0.47)	test_minacc   0.54 (  0.52)	test_majacc   0.47 (  0.46)	Loss_d 0.594 (0.607)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.607 (0.605)	test_acc   0.49 (  0.47)	test_minacc   0.60 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.607 (0.605)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.60 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.38 (  0.37)
Test: [  26/  26]	Loss 0.604 (0.605)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.52)	test_majacc   0.45 (  0.47)	Loss_d 0.604 (0.605)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.39 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.86it/s]
Test: [  0/  1]	Loss 1.700 (1.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.700 (1.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.700 (1.700)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.700 (1.700)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 47/  1]	epoch_time 0.0407 (0.0430)	validation_time 0.0011 (0.0006)	train_time 0.0396 (0.0424)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.47280000683665274, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.13it/s] 15%|#5        | 4/26 [00:00<00:01, 18.49it/s] 31%|###       | 8/26 [00:00<00:00, 25.26it/s] 46%|####6     | 12/26 [00:00<00:00, 29.51it/s] 62%|######1   | 16/26 [00:00<00:00, 31.94it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.17it/s] 92%|#########2| 24/26 [00:00<00:00, 33.74it/s]100%|##########| 26/26 [00:00<00:00, 28.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.47 (  0.47)	train_minacc   0.58 (  0.52)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 6.8888 (6.8894)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.96it/s] 23%|##3       | 6/26 [00:00<00:00, 25.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.51it/s] 42%|####2     | 11/26 [00:00<00:00, 33.44it/s] 62%|######1   | 16/26 [00:00<00:00, 37.20it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.20it/s] 81%|########  | 21/26 [00:00<00:00, 39.59it/s]100%|##########| 26/26 [00:00<00:00, 42.11it/s]100%|##########| 26/26 [00:00<00:00, 33.10it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.47 (  0.47)	Loss_d 0.608 (0.608)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.594 (0.607)	test_acc   0.48 (  0.47)	test_minacc   0.54 (  0.52)	test_majacc   0.47 (  0.46)	Loss_d 0.594 (0.607)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.607 (0.605)	test_acc   0.49 (  0.47)	test_minacc   0.60 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.607 (0.605)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.60 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.38 (  0.37)
Test: [  26/  26]	Loss 0.604 (0.605)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.52)	test_majacc   0.45 (  0.47)	Loss_d 0.604 (0.605)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.39 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.05it/s]
Test: [  0/  1]	Loss 1.702 (1.702)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.702 (1.702)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.702 (1.702)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.702 (1.702)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 48/  1]	epoch_time 0.0411 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0407 (0.0424)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.4730000068247318, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.10it/s] 19%|#9        | 5/26 [00:00<00:00, 21.09it/s] 35%|###4      | 9/26 [00:00<00:00, 26.74it/s] 50%|#####     | 13/26 [00:00<00:00, 28.78it/s] 65%|######5   | 17/26 [00:00<00:00, 30.40it/s] 81%|########  | 21/26 [00:00<00:00, 31.80it/s] 96%|#########6| 25/26 [00:00<00:00, 32.99it/s]100%|##########| 26/26 [00:00<00:00, 27.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  27.50 ( 27.50)	train_acc   0.47 (  0.47)	train_minacc   0.58 (  0.52)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 6.8888 (6.8891)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.21it/s] 15%|#5        | 4/26 [00:00<00:01, 19.78it/s] 35%|###4      | 9/26 [00:00<00:00, 31.18it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.18it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.82it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.82it/s] 92%|#########2| 24/26 [00:00<00:00, 39.05it/s]100%|##########| 26/26 [00:00<00:00, 32.22it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.47 (  0.47)	Loss_d 0.608 (0.608)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.593 (0.607)	test_acc   0.48 (  0.47)	test_minacc   0.54 (  0.52)	test_majacc   0.47 (  0.46)	Loss_d 0.593 (0.607)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.47 (  0.46)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.607 (0.605)	test_acc   0.49 (  0.47)	test_minacc   0.60 (  0.52)	test_majacc   0.47 (  0.47)	Loss_d 0.607 (0.605)	test_acc_d   0.49 (  0.47)	test_minacc_d   0.60 (  0.52)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.38 (  0.37)
Test: [  26/  26]	Loss 0.604 (0.605)	test_acc   0.47 (  0.47)	test_minacc   0.58 (  0.52)	test_majacc   0.45 (  0.47)	Loss_d 0.604 (0.605)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.39 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.88it/s]
Test: [  0/  1]	Loss 1.703 (1.703)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.703 (1.703)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.703 (1.703)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.703 (1.703)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 49/  1]	epoch_time 0.0429 (0.0430)	validation_time 0.0003 (0.0006)	train_time 0.0425 (0.0424)
record: (train_acc, test_acc) (0.7477000243663788, 0.625)
last accs (train_acc, test_acc) (0.4727000068426132, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.164 MB of 0.164 MB uploadedwandb: \ 0.164 MB of 0.164 MB uploadedwandb: | 0.164 MB of 0.164 MB uploadedwandb: / 0.164 MB of 0.164 MB uploadedwandb: - 0.164 MB of 0.164 MB uploadedwandb: \ 0.038 MB of 0.211 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/diagnostics/epoch_time_val █▂▂▂▃▂▁▂▁▂▂▂▂▁▂▂▂▁▂▂▂▂▂▁▂▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/diagnostics/train_time_val █▂▂▂▃▂▁▂▂▂▂▂▂▁▂▂▂▂▂▂▂▂▂▁▂▂▂▃▃▂▂▂▂▂▂▂▂▂▁▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/Loss_avg ▄▄▅▅▅▅▆▆█▆▇█▁▁▁▂▃▂▃▄▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/Loss_d_avg ▄▄▅▅▅▅▆▆█▆▇█▁▁▁▂▃▂▃▄▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/Loss_d_val ▄▄▅▅▅▅▆▆█▆▇█▁▁▁▂▃▂▃▄▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/Loss_val ▄▄▅▅▅▅▆▆█▆▇█▁▁▁▂▃▂▃▄▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_acc_avg ▁▁▁▁▂▃▃▄▃▄▄▅▇██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_acc_d_avg ▁▁▁▁▂▃▃▄▃▄▄▅▇██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_acc_d_val ▁▁▁▁▂▃▃▄▃▄▄▅▇██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_acc_val ▁▁▁▁▂▃▃▄▃▄▄▅▇██████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_corr_d_avg ████▇▇▆▆▆▅▅▄▂▂▁▂▁▁▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▂▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_corr_d_val ████▇▇▆▆▆▅▅▄▂▂▁▂▁▁▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▂▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_majacc_avg ██████▇██▇█▇▅▅▅▅▅▅▅▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_majacc_d_avg ██████▇██▇█▇▅▅▅▅▅▅▅▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_majacc_d_val ██████▇██▇█▇▅▅▅▅▅▅▅▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_majacc_val ██████▇██▇█▇▅▅▅▅▅▅▅▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_minacc_avg ▁▁▁▁▂▂▃▃▃▄▄▅▇██████▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_minacc_d_avg ▁▁▁▁▂▂▃▃▃▄▄▅▇██████▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_minacc_d_val ▁▁▁▁▂▂▃▃▃▄▄▅▇██████▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_minacc_val ▁▁▁▁▂▂▃▃▃▄▄▅▇██████▆▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/Loss_val ██▇▇▆▆▅▅▄▅▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/l1_avg █▅▄▄▅▅▅▆▆▆▇█▅▁▁▂▂▃▃▆▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/l1_val ▆▅▅▅▅▆▇▇█▆▇█▂▁▂▂▄▄▄▇▄▄▄▄▄▄▄▄▄▄▅▅▄▄▄▄▄▄▄▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇████▇▅▅▅▆▆▆▅▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_acc_val ▇▇▇▇▇▇▇██▇██▆▅▅▆▆▅▆▆▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_majacc_avg ▇█████▇▇▇▇▇▇▇▅▅▅▅▅▅▅▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_majacc_val ████████████▆▄▄▅▅▅▅▇▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_minacc_avg ▁▁▁▂▃▄▄▅▆▆▆▇▇██████▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_minacc_val ▁▁▁▂▂▃▄▅▅▅▇▆▇▇▇████▄▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_nll_avg ▇▄▄▄▃▃▃▂▂▂▁▁▂▅▅▅▄▄▄▆████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_nll_val ▅▅▄▄▃▃▂▂▁▁▁▁▄▆▆▅▅▅▄█████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_penalty_avg █▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_penalty_val █▇█▅▄▄▃▃▂▂▁▁▁▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/weight_norm_avg ▁▄▄▄▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▇████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/weight_norm_val ▁▂▂▂▃▃▃▃▄▄▄▅▅▆▆▆▆▆▆▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██▁▂▁▂▂▂▃▂▃▂▂▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/diagnostics/epoch_time_val 0.04288
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/diagnostics/train_time_val 0.04252
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/diagnostics/validation_time_val 0.00034
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/Loss_avg 1.70295
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/Loss_d_avg 1.70295
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/Loss_d_val 1.70295
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/Loss_val 1.70295
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_corr_d_avg 0.17207
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_corr_d_val 0.17207
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/Loss_val 6e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/l1_avg 6.88913
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/l1_val 6.88877
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_acc_avg 0.4728
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_acc_val 0.468
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_majacc_avg 0.46518
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_majacc_val 0.4486
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_minacc_avg 0.51657
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_minacc_val 0.58333
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_nll_avg 0.60538
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_nll_val 0.60373
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/weight_norm_avg 27.5039
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/weight_norm_val 27.50391
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/117/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/aqthux69
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_191635-aqthux69/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_191928-69r43xix
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/69r43xix
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1204
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6010, 3, 32, 32) (5990, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:36,  1.48s/it] 19%|#9        | 5/26 [00:01<00:05,  4.10it/s] 35%|###4      | 9/26 [00:01<00:02,  8.00it/s] 50%|#####     | 13/26 [00:01<00:01, 12.16it/s] 65%|######5   | 17/26 [00:01<00:00, 16.36it/s] 81%|########  | 21/26 [00:02<00:00, 20.33it/s] 96%|#########6| 25/26 [00:02<00:00, 23.71it/s]100%|##########| 26/26 [00:02<00:00, 10.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.418 (0.598)	train_nll   0.42 (  0.60)	train_penalty   0.06 (  0.37)	weight_norm  20.86 ( 18.09)	train_acc   0.85 (  0.80)	train_minacc   0.00 (  0.10)	train_majacc   1.00 (  0.92)	train_corr   0.00 (  0.00)	l1 6.3443 (7.7097)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.52it/s] 27%|##6       | 7/26 [00:00<00:00, 34.62it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.62it/s] 46%|####6     | 12/26 [00:00<00:00, 40.11it/s] 65%|######5   | 17/26 [00:00<00:00, 38.68it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.68it/s] 85%|########4 | 22/26 [00:00<00:00, 40.73it/s]100%|##########| 26/26 [00:00<00:00, 36.45it/s]
Test: [   0/  26]	Loss 0.412 (0.412)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.412 (0.412)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.429 (0.419)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.429 (0.419)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
Test: [  20/  26]	Loss 0.473 (0.417)	test_acc   0.82 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.473 (0.417)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
Test: [  26/  26]	Loss 0.415 (0.418)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.415 (0.418)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]
Test: [  0/  1]	Loss 1.676 (1.676)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.676 (1.676)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.676 (1.676)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.676 (1.676)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0792 (0.0792)	validation_time 0.0070 (0.0070)	train_time 0.0688 (0.0688)
record: (train_acc, test_acc) (0.846100024342537, 0.11000000685453415)
last accs (train_acc, test_acc) (0.846100024342537, 0.11000000685453415)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.89it/s] 12%|#1        | 3/26 [00:00<00:02, 10.96it/s] 27%|##6       | 7/26 [00:00<00:00, 20.79it/s] 42%|####2     | 11/26 [00:00<00:00, 26.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.10it/s] 88%|########8 | 23/26 [00:00<00:00, 33.20it/s]100%|##########| 26/26 [00:01<00:00, 25.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.406 (0.423)	train_nll   0.41 (  0.42)	train_penalty   0.06 (  0.06)	weight_norm  22.01 ( 21.65)	train_acc   0.85 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.3225 (6.3811)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 27%|##6       | 7/26 [00:00<00:00, 32.67it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.67it/s] 46%|####6     | 12/26 [00:00<00:00, 38.39it/s] 65%|######5   | 17/26 [00:00<00:00, 41.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.45it/s] 85%|########4 | 22/26 [00:00<00:00, 43.45it/s]100%|##########| 26/26 [00:00<00:00, 36.44it/s]
Test: [   0/  26]	Loss 0.385 (0.385)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.385 (0.385)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.423 (0.407)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.423 (0.407)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  20/  26]	Loss 0.457 (0.406)	test_acc   0.82 (  0.85)	test_minacc   0.01 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.457 (0.406)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.01 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  26/  26]	Loss 0.406 (0.408)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.406 (0.408)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.47it/s]
Test: [  0/  1]	Loss 1.665 (1.665)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.665 (1.665)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.665 (1.665)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.665 (1.665)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0407 (0.0600)	validation_time 0.0004 (0.0037)	train_time 0.0403 (0.0546)
record: (train_acc, test_acc) (0.846100024342537, 0.11000000685453415)
last accs (train_acc, test_acc) (0.84820003002882, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.30it/s] 19%|#9        | 5/26 [00:00<00:01, 20.06it/s] 35%|###4      | 9/26 [00:00<00:00, 25.63it/s] 50%|#####     | 13/26 [00:00<00:00, 28.85it/s] 65%|######5   | 17/26 [00:00<00:00, 30.33it/s] 81%|########  | 21/26 [00:00<00:00, 31.59it/s] 96%|#########6| 25/26 [00:00<00:00, 32.37it/s]100%|##########| 26/26 [00:00<00:00, 26.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.383 (0.408)	train_nll   0.38 (  0.41)	train_penalty   0.05 (  0.06)	weight_norm  22.13 ( 22.09)	train_acc   0.86 (  0.85)	train_minacc   0.05 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.4060 (6.3790)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.95it/s] 27%|##6       | 7/26 [00:00<00:00, 34.85it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.85it/s] 46%|####6     | 12/26 [00:00<00:00, 38.82it/s] 65%|######5   | 17/26 [00:00<00:00, 38.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.14it/s] 85%|########4 | 22/26 [00:00<00:00, 40.77it/s]100%|##########| 26/26 [00:00<00:00, 36.20it/s]
Test: [   0/  26]	Loss 0.363 (0.363)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.363 (0.363)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.417 (0.396)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.417 (0.396)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.96)
Test: [  20/  26]	Loss 0.448 (0.395)	test_acc   0.81 (  0.85)	test_minacc   0.01 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.448 (0.395)	test_acc_d   0.81 (  0.85)	test_minacc_d   0.01 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.96)
Test: [  26/  26]	Loss 0.380 (0.396)	test_acc   0.86 (  0.85)	test_minacc   0.05 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.380 (0.396)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.05 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.59it/s]
Test: [  0/  1]	Loss 1.710 (1.710)	test_acc   0.11 (  0.11)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.710 (1.710)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.710 (1.710)	test_acc   0.11 (  0.11)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.710 (1.710)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0411 (0.0537)	validation_time 0.0005 (0.0026)	train_time 0.0406 (0.0499)
record: (train_acc, test_acc) (0.8484000242948532, 0.11400000751018524)
last accs (train_acc, test_acc) (0.8484000242948532, 0.11400000751018524)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.28it/s] 19%|#9        | 5/26 [00:00<00:00, 23.14it/s] 35%|###4      | 9/26 [00:00<00:00, 27.09it/s] 50%|#####     | 13/26 [00:00<00:00, 29.74it/s] 65%|######5   | 17/26 [00:00<00:00, 31.15it/s] 81%|########  | 21/26 [00:00<00:00, 32.70it/s] 96%|#########6| 25/26 [00:00<00:00, 33.51it/s]100%|##########| 26/26 [00:00<00:00, 28.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.343 (0.390)	train_nll   0.34 (  0.39)	train_penalty   0.04 (  0.05)	weight_norm  22.18 ( 22.16)	train_acc   0.85 (  0.85)	train_minacc   0.05 (  0.04)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 6.5668 (6.4224)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.03it/s] 23%|##3       | 6/26 [00:00<00:00, 25.42it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.42it/s] 42%|####2     | 11/26 [00:00<00:00, 33.43it/s] 62%|######1   | 16/26 [00:00<00:00, 38.57it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.57it/s] 81%|########  | 21/26 [00:00<00:00, 37.61it/s]100%|##########| 26/26 [00:00<00:00, 40.83it/s]100%|##########| 26/26 [00:00<00:00, 32.79it/s]
Test: [   0/  26]	Loss 0.330 (0.330)	test_acc   0.85 (  0.85)	test_minacc   0.12 (  0.12)	test_majacc   0.98 (  0.98)	Loss_d 0.330 (0.330)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.370 (0.375)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.09)	test_majacc   0.99 (  0.98)	Loss_d 0.370 (0.375)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.09)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.94)
Test: [  20/  26]	Loss 0.416 (0.372)	test_acc   0.83 (  0.85)	test_minacc   0.17 (  0.10)	test_majacc   0.97 (  0.98)	Loss_d 0.416 (0.372)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.17 (  0.10)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.93 (  0.94)
Test: [  26/  26]	Loss 0.333 (0.372)	test_acc   0.85 (  0.85)	test_minacc   0.08 (  0.10)	test_majacc   0.99 (  0.98)	Loss_d 0.333 (0.372)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.08 (  0.10)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.21it/s]
Test: [  0/  1]	Loss 1.726 (1.726)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.726 (1.726)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.726 (1.726)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.726 (1.726)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0420 (0.0507)	validation_time 0.0004 (0.0020)	train_time 0.0416 (0.0478)
record: (train_acc, test_acc) (0.8493000264763833, 0.125)
last accs (train_acc, test_acc) (0.8493000264763833, 0.125)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.52it/s] 12%|#1        | 3/26 [00:00<00:01, 12.78it/s] 27%|##6       | 7/26 [00:00<00:00, 21.36it/s] 42%|####2     | 11/26 [00:00<00:00, 26.09it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.98it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.59it/s] 88%|########8 | 23/26 [00:00<00:00, 32.00it/s]100%|##########| 26/26 [00:00<00:00, 26.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.310 (0.367)	train_nll   0.31 (  0.37)	train_penalty   0.02 (  0.04)	weight_norm  22.26 ( 22.22)	train_acc   0.87 (  0.85)	train_minacc   0.30 (  0.11)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 6.6071 (6.5329)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 23%|##3       | 6/26 [00:00<00:00, 26.93it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.93it/s] 42%|####2     | 11/26 [00:00<00:00, 34.33it/s] 62%|######1   | 16/26 [00:00<00:00, 39.30it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.30it/s] 81%|########  | 21/26 [00:00<00:00, 38.39it/s]100%|##########| 26/26 [00:00<00:00, 41.41it/s]100%|##########| 26/26 [00:00<00:00, 33.73it/s]
Test: [   0/  26]	Loss 0.296 (0.296)	test_acc   0.87 (  0.87)	test_minacc   0.40 (  0.40)	test_majacc   0.96 (  0.96)	Loss_d 0.296 (0.296)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.327 (0.340)	test_acc   0.87 (  0.85)	test_minacc   0.21 (  0.26)	test_majacc   0.98 (  0.96)	Loss_d 0.327 (0.340)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.21 (  0.26)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.91 (  0.89)
Test: [  20/  26]	Loss 0.389 (0.340)	test_acc   0.84 (  0.86)	test_minacc   0.29 (  0.28)	test_majacc   0.97 (  0.96)	Loss_d 0.389 (0.340)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.29 (  0.28)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  26/  26]	Loss 0.279 (0.339)	test_acc   0.88 (  0.86)	test_minacc   0.30 (  0.27)	test_majacc   0.98 (  0.96)	Loss_d 0.279 (0.339)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.30 (  0.27)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.91 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.90it/s]
Test: [  0/  1]	Loss 1.614 (1.614)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 1.614 (1.614)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.614 (1.614)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 1.614 (1.614)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0399 (0.0486)	validation_time 0.0005 (0.0017)	train_time 0.0394 (0.0461)
record: (train_acc, test_acc) (0.859000024497509, 0.22800001502037048)
last accs (train_acc, test_acc) (0.859000024497509, 0.22800001502037048)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.96it/s] 19%|#9        | 5/26 [00:00<00:00, 22.42it/s] 35%|###4      | 9/26 [00:00<00:00, 27.70it/s] 50%|#####     | 13/26 [00:00<00:00, 30.23it/s] 65%|######5   | 17/26 [00:00<00:00, 31.78it/s] 81%|########  | 21/26 [00:00<00:00, 32.67it/s] 96%|#########6| 25/26 [00:00<00:00, 33.84it/s]100%|##########| 26/26 [00:00<00:00, 28.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.285 (0.351)	train_nll   0.28 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.35 ( 22.31)	train_acc   0.87 (  0.85)	train_minacc   0.27 (  0.20)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 6.6010 (6.6590)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.98it/s] 31%|###       | 8/26 [00:00<00:00, 37.19it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.19it/s] 50%|#####     | 13/26 [00:00<00:00, 39.44it/s] 69%|######9   | 18/26 [00:00<00:00, 42.37it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.37it/s] 88%|########8 | 23/26 [00:00<00:00, 43.18it/s]100%|##########| 26/26 [00:00<00:00, 37.12it/s]
Test: [   0/  26]	Loss 0.284 (0.284)	test_acc   0.88 (  0.88)	test_minacc   0.41 (  0.41)	test_majacc   0.97 (  0.97)	Loss_d 0.284 (0.284)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.334 (0.335)	test_acc   0.85 (  0.86)	test_minacc   0.21 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 0.334 (0.335)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.21 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.89)
Test: [  20/  26]	Loss 0.382 (0.334)	test_acc   0.84 (  0.86)	test_minacc   0.33 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 0.382 (0.334)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.33 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.89)
Test: [  26/  26]	Loss 0.269 (0.332)	test_acc   0.88 (  0.86)	test_minacc   0.27 (  0.29)	test_majacc   0.98 (  0.96)	Loss_d 0.269 (0.332)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.27 (  0.29)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.90 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.82it/s]
Test: [  0/  1]	Loss 1.679 (1.679)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 1.679 (1.679)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.679 (1.679)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 1.679 (1.679)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.80)
Overall Timing[  5/  1]	epoch_time 0.0414 (0.0474)	validation_time 0.0004 (0.0015)	train_time 0.0409 (0.0453)
record: (train_acc, test_acc) (0.859000024497509, 0.22800001502037048)
last accs (train_acc, test_acc) (0.8623000254631042, 0.22200001776218414)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.11it/s] 19%|#9        | 5/26 [00:00<00:01, 20.50it/s] 35%|###4      | 9/26 [00:00<00:00, 25.87it/s] 50%|#####     | 13/26 [00:00<00:00, 28.37it/s] 65%|######5   | 17/26 [00:00<00:00, 30.31it/s] 81%|########  | 21/26 [00:00<00:00, 31.78it/s] 96%|#########6| 25/26 [00:00<00:00, 33.10it/s]100%|##########| 26/26 [00:00<00:00, 27.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.240 (0.333)	train_nll   0.24 (  0.33)	train_penalty   0.01 (  0.02)	weight_norm  22.45 ( 22.40)	train_acc   0.90 (  0.86)	train_minacc   0.59 (  0.26)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.5472 (6.4868)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 23%|##3       | 6/26 [00:00<00:00, 23.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.50it/s] 42%|####2     | 11/26 [00:00<00:00, 31.80it/s] 62%|######1   | 16/26 [00:00<00:00, 37.38it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.38it/s] 81%|########  | 21/26 [00:00<00:00, 36.67it/s]100%|##########| 26/26 [00:00<00:00, 39.57it/s]100%|##########| 26/26 [00:00<00:00, 31.71it/s]
Test: [   0/  26]	Loss 0.267 (0.267)	test_acc   0.90 (  0.90)	test_minacc   0.57 (  0.57)	test_majacc   0.96 (  0.96)	Loss_d 0.267 (0.267)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.310 (0.317)	test_acc   0.87 (  0.87)	test_minacc   0.40 (  0.43)	test_majacc   0.95 (  0.94)	Loss_d 0.310 (0.317)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.40 (  0.43)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.86 (  0.85)
Test: [  20/  26]	Loss 0.367 (0.321)	test_acc   0.87 (  0.87)	test_minacc   0.44 (  0.42)	test_majacc   0.97 (  0.94)	Loss_d 0.367 (0.321)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.44 (  0.42)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.84 (  0.85)
Test: [  26/  26]	Loss 0.225 (0.319)	test_acc   0.91 (  0.87)	test_minacc   0.57 (  0.42)	test_majacc   0.97 (  0.95)	Loss_d 0.225 (0.319)	test_acc_d   0.91 (  0.87)	test_minacc_d   0.57 (  0.42)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.85 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.56it/s]
Test: [  0/  1]	Loss 1.753 (1.753)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.95 (  0.95)	Loss_d 1.753 (1.753)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.753 (1.753)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.95 (  0.95)	Loss_d 1.753 (1.753)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.71 (  0.71)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0410 (0.0465)	validation_time 0.0005 (0.0014)	train_time 0.0405 (0.0446)
record: (train_acc, test_acc) (0.867000028848648, 0.2600000202655792)
last accs (train_acc, test_acc) (0.867000028848648, 0.2600000202655792)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.98it/s] 19%|#9        | 5/26 [00:00<00:01, 19.38it/s] 35%|###4      | 9/26 [00:00<00:00, 25.74it/s] 50%|#####     | 13/26 [00:00<00:00, 28.63it/s] 65%|######5   | 17/26 [00:00<00:00, 30.07it/s] 81%|########  | 21/26 [00:00<00:00, 31.93it/s] 96%|#########6| 25/26 [00:00<00:00, 33.28it/s]100%|##########| 26/26 [00:00<00:00, 27.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.216 (0.319)	train_nll   0.22 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.56 ( 22.50)	train_acc   0.90 (  0.86)	train_minacc   0.57 (  0.32)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.5365 (6.4640)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 33.25it/s] 35%|###4      | 9/26 [00:00<00:00, 39.58it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.08it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.08it/s] 92%|#########2| 24/26 [00:00<00:00, 41.24it/s]100%|##########| 26/26 [00:00<00:00, 38.42it/s]
Test: [   0/  26]	Loss 0.241 (0.241)	test_acc   0.90 (  0.90)	test_minacc   0.66 (  0.66)	test_majacc   0.95 (  0.95)	Loss_d 0.241 (0.241)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.297 (0.309)	test_acc   0.86 (  0.87)	test_minacc   0.45 (  0.49)	test_majacc   0.94 (  0.93)	Loss_d 0.297 (0.309)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.341 (0.308)	test_acc   0.87 (  0.87)	test_minacc   0.54 (  0.50)	test_majacc   0.95 (  0.93)	Loss_d 0.341 (0.308)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.81 (  0.82)
Test: [  26/  26]	Loss 0.203 (0.305)	test_acc   0.91 (  0.87)	test_minacc   0.68 (  0.50)	test_majacc   0.95 (  0.94)	Loss_d 0.203 (0.305)	test_acc_d   0.91 (  0.87)	test_minacc_d   0.68 (  0.50)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.83 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.65it/s]
Test: [  0/  1]	Loss 1.758 (1.758)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.93 (  0.93)	Loss_d 1.758 (1.758)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 1.758 (1.758)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.93 (  0.93)	Loss_d 1.758 (1.758)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.59 (  0.59)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0433 (0.0461)	validation_time 0.0004 (0.0012)	train_time 0.0428 (0.0444)
record: (train_acc, test_acc) (0.8715000241398811, 0.3460000157356262)
last accs (train_acc, test_acc) (0.8715000241398811, 0.3460000157356262)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 19%|#9        | 5/26 [00:00<00:01, 17.81it/s] 35%|###4      | 9/26 [00:00<00:00, 23.94it/s] 50%|#####     | 13/26 [00:00<00:00, 27.45it/s] 65%|######5   | 17/26 [00:00<00:00, 29.56it/s] 81%|########  | 21/26 [00:00<00:00, 31.69it/s] 96%|#########6| 25/26 [00:00<00:00, 33.04it/s]100%|##########| 26/26 [00:00<00:00, 26.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.206 (0.309)	train_nll   0.21 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.70 ( 22.63)	train_acc   0.90 (  0.87)	train_minacc   0.59 (  0.38)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5031 (6.4435)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.15it/s] 12%|#1        | 3/26 [00:00<00:01, 14.82it/s] 31%|###       | 8/26 [00:00<00:00, 29.57it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.57it/s] 50%|#####     | 13/26 [00:00<00:00, 36.09it/s] 69%|######9   | 18/26 [00:00<00:00, 36.71it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.71it/s] 88%|########8 | 23/26 [00:00<00:00, 39.89it/s]100%|##########| 26/26 [00:00<00:00, 34.05it/s]
Test: [   0/  26]	Loss 0.234 (0.234)	test_acc   0.91 (  0.91)	test_minacc   0.69 (  0.69)	test_majacc   0.95 (  0.95)	Loss_d 0.234 (0.234)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.273 (0.292)	test_acc   0.88 (  0.87)	test_minacc   0.59 (  0.54)	test_majacc   0.94 (  0.93)	Loss_d 0.273 (0.292)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.59 (  0.54)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.81 (  0.81)
Test: [  20/  26]	Loss 0.289 (0.290)	test_acc   0.89 (  0.87)	test_minacc   0.62 (  0.55)	test_majacc   0.95 (  0.93)	Loss_d 0.289 (0.290)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.79 (  0.81)
Test: [  26/  26]	Loss 0.182 (0.288)	test_acc   0.92 (  0.88)	test_minacc   0.68 (  0.55)	test_majacc   0.96 (  0.93)	Loss_d 0.182 (0.288)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.68 (  0.55)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.82 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.52it/s]
Test: [  0/  1]	Loss 1.774 (1.774)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.95 (  0.95)	Loss_d 1.774 (1.774)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 1.774 (1.774)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.95 (  0.95)	Loss_d 1.774 (1.774)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.58 (  0.58)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0429 (0.0457)	validation_time 0.0004 (0.0012)	train_time 0.0424 (0.0442)
record: (train_acc, test_acc) (0.8758000217676163, 0.3500000238418579)
last accs (train_acc, test_acc) (0.8758000217676163, 0.3500000238418579)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.48it/s] 19%|#9        | 5/26 [00:00<00:01, 16.87it/s] 35%|###4      | 9/26 [00:00<00:00, 23.20it/s] 50%|#####     | 13/26 [00:00<00:00, 26.97it/s] 65%|######5   | 17/26 [00:00<00:00, 29.41it/s] 81%|########  | 21/26 [00:00<00:00, 31.47it/s] 96%|#########6| 25/26 [00:00<00:00, 32.89it/s]100%|##########| 26/26 [00:01<00:00, 25.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.196 (0.297)	train_nll   0.20 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.89 ( 22.79)	train_acc   0.92 (  0.87)	train_minacc   0.62 (  0.42)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.1654 (6.5010)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.42it/s] 27%|##6       | 7/26 [00:00<00:00, 31.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.54it/s] 46%|####6     | 12/26 [00:00<00:00, 37.88it/s] 65%|######5   | 17/26 [00:00<00:00, 40.65it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.65it/s] 85%|########4 | 22/26 [00:00<00:00, 39.34it/s]100%|##########| 26/26 [00:00<00:00, 36.13it/s]
Test: [   0/  26]	Loss 0.258 (0.258)	test_acc   0.91 (  0.91)	test_minacc   0.53 (  0.53)	test_majacc   0.97 (  0.97)	Loss_d 0.258 (0.258)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.276 (0.296)	test_acc   0.89 (  0.88)	test_minacc   0.52 (  0.48)	test_majacc   0.95 (  0.95)	Loss_d 0.276 (0.296)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  20/  26]	Loss 0.316 (0.295)	test_acc   0.87 (  0.88)	test_minacc   0.53 (  0.49)	test_majacc   0.95 (  0.94)	Loss_d 0.316 (0.295)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.83 (  0.84)
Test: [  26/  26]	Loss 0.181 (0.290)	test_acc   0.93 (  0.88)	test_minacc   0.70 (  0.50)	test_majacc   0.97 (  0.95)	Loss_d 0.181 (0.290)	test_acc_d   0.93 (  0.88)	test_minacc_d   0.70 (  0.50)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.85 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.00it/s]
Test: [  0/  1]	Loss 1.880 (1.880)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.92 (  0.92)	Loss_d 1.880 (1.880)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 1.880 (1.880)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.92 (  0.92)	Loss_d 1.880 (1.880)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.64 (  0.64)
Overall Timing[  9/  1]	epoch_time 0.0391 (0.0450)	validation_time 0.0004 (0.0011)	train_time 0.0387 (0.0436)
record: (train_acc, test_acc) (0.8758000217676163, 0.3500000238418579)
last accs (train_acc, test_acc) (0.8781000221371651, 0.33400002121925354)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.60it/s] 19%|#9        | 5/26 [00:00<00:00, 23.29it/s] 35%|###4      | 9/26 [00:00<00:00, 28.77it/s] 50%|#####     | 13/26 [00:00<00:00, 31.19it/s] 65%|######5   | 17/26 [00:00<00:00, 32.22it/s] 81%|########  | 21/26 [00:00<00:00, 32.83it/s] 96%|#########6| 25/26 [00:00<00:00, 34.01it/s]100%|##########| 26/26 [00:00<00:00, 29.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.206 (0.284)	train_nll   0.21 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  23.09 ( 22.99)	train_acc   0.93 (  0.88)	train_minacc   0.70 (  0.47)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.0881 (6.3970)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.68it/s] 31%|###       | 8/26 [00:00<00:00, 39.19it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.19it/s] 50%|#####     | 13/26 [00:00<00:00, 41.39it/s] 69%|######9   | 18/26 [00:00<00:00, 39.45it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.45it/s] 92%|#########2| 24/26 [00:00<00:00, 43.93it/s]100%|##########| 26/26 [00:00<00:00, 39.42it/s]
Test: [   0/  26]	Loss 0.227 (0.227)	test_acc   0.91 (  0.91)	test_minacc   0.69 (  0.69)	test_majacc   0.95 (  0.95)	Loss_d 0.227 (0.227)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.258 (0.279)	test_acc   0.90 (  0.88)	test_minacc   0.55 (  0.56)	test_majacc   0.96 (  0.94)	Loss_d 0.258 (0.279)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.84 (  0.83)
Test: [  20/  26]	Loss 0.288 (0.275)	test_acc   0.86 (  0.88)	test_minacc   0.50 (  0.56)	test_majacc   0.94 (  0.94)	Loss_d 0.288 (0.275)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.50 (  0.56)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.81 (  0.82)
Test: [  26/  26]	Loss 0.186 (0.270)	test_acc   0.94 (  0.89)	test_minacc   0.70 (  0.57)	test_majacc   0.98 (  0.94)	Loss_d 0.186 (0.270)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.70 (  0.57)	test_majacc_d   0.98 (  0.94)	test_corr_d   0.84 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.35it/s]
Test: [  0/  1]	Loss 1.741 (1.741)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.94 (  0.94)	Loss_d 1.741 (1.741)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 1.741 (1.741)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.94 (  0.94)	Loss_d 1.741 (1.741)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.57 (  0.57)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0438 (0.0449)	validation_time 0.0005 (0.0010)	train_time 0.0434 (0.0436)
record: (train_acc, test_acc) (0.8865000230073928, 0.3630000054836273)
last accs (train_acc, test_acc) (0.8865000230073928, 0.3630000054836273)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.96it/s] 19%|#9        | 5/26 [00:00<00:00, 22.85it/s] 35%|###4      | 9/26 [00:00<00:00, 27.45it/s] 50%|#####     | 13/26 [00:00<00:00, 29.59it/s] 65%|######5   | 17/26 [00:00<00:00, 31.25it/s] 81%|########  | 21/26 [00:00<00:00, 32.01it/s] 96%|#########6| 25/26 [00:00<00:00, 33.10it/s]100%|##########| 26/26 [00:00<00:00, 28.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.182 (0.265)	train_nll   0.18 (  0.26)	train_penalty   0.01 (  0.01)	weight_norm  23.31 ( 23.20)	train_acc   0.94 (  0.89)	train_minacc   0.84 (  0.50)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.2159 (6.6757)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.23it/s] 23%|##3       | 6/26 [00:00<00:00, 31.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.75it/s] 42%|####2     | 11/26 [00:00<00:00, 38.11it/s] 62%|######1   | 16/26 [00:00<00:00, 41.78it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.78it/s] 81%|########  | 21/26 [00:00<00:00, 39.52it/s]100%|##########| 26/26 [00:00<00:00, 42.14it/s]100%|##########| 26/26 [00:00<00:00, 35.75it/s]
Test: [   0/  26]	Loss 0.219 (0.219)	test_acc   0.92 (  0.92)	test_minacc   0.76 (  0.76)	test_majacc   0.94 (  0.94)	Loss_d 0.219 (0.219)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.255 (0.265)	test_acc   0.89 (  0.89)	test_minacc   0.69 (  0.68)	test_majacc   0.92 (  0.92)	Loss_d 0.255 (0.265)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.69 (  0.68)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.76 (  0.76)
Test: [  20/  26]	Loss 0.278 (0.259)	test_acc   0.88 (  0.89)	test_minacc   0.65 (  0.70)	test_majacc   0.93 (  0.92)	Loss_d 0.278 (0.259)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.65 (  0.70)	test_majacc_d   0.93 (  0.92)	test_corr_d   0.74 (  0.76)
Test: [  26/  26]	Loss 0.154 (0.252)	test_acc   0.96 (  0.89)	test_minacc   0.89 (  0.70)	test_majacc   0.98 (  0.93)	Loss_d 0.154 (0.252)	test_acc_d   0.96 (  0.89)	test_minacc_d   0.89 (  0.70)	test_majacc_d   0.98 (  0.93)	test_corr_d   0.80 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.47it/s]
Test: [  0/  1]	Loss 1.671 (1.671)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.87 (  0.87)	Loss_d 1.671 (1.671)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 1.671 (1.671)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.87 (  0.87)	Loss_d 1.671 (1.671)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.39 (  0.39)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0418 (0.0447)	validation_time 0.0004 (0.0010)	train_time 0.0414 (0.0434)
record: (train_acc, test_acc) (0.8913000215291977, 0.44600000977516174)
last accs (train_acc, test_acc) (0.8913000215291977, 0.44600000977516174)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.84it/s] 19%|#9        | 5/26 [00:00<00:00, 22.73it/s] 35%|###4      | 9/26 [00:00<00:00, 28.84it/s] 50%|#####     | 13/26 [00:00<00:00, 31.62it/s] 65%|######5   | 17/26 [00:00<00:00, 33.11it/s] 81%|########  | 21/26 [00:00<00:00, 34.88it/s] 96%|#########6| 25/26 [00:00<00:00, 35.25it/s]100%|##########| 26/26 [00:00<00:00, 29.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.166 (0.252)	train_nll   0.17 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.55 ( 23.43)	train_acc   0.94 (  0.89)	train_minacc   0.81 (  0.55)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 6.2787 (6.6418)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.62it/s] 23%|##3       | 6/26 [00:00<00:00, 25.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.00it/s] 42%|####2     | 11/26 [00:00<00:00, 33.28it/s] 62%|######1   | 16/26 [00:00<00:00, 38.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.50it/s] 81%|########  | 21/26 [00:00<00:00, 37.95it/s]100%|##########| 26/26 [00:00<00:00, 40.62it/s]100%|##########| 26/26 [00:00<00:00, 32.53it/s]
Test: [   0/  26]	Loss 0.200 (0.200)	test_acc   0.93 (  0.93)	test_minacc   0.84 (  0.84)	test_majacc   0.95 (  0.95)	Loss_d 0.200 (0.200)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.250 (0.252)	test_acc   0.88 (  0.89)	test_minacc   0.67 (  0.71)	test_majacc   0.92 (  0.93)	Loss_d 0.250 (0.252)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.67 (  0.71)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.74 (  0.75)
Test: [  20/  26]	Loss 0.254 (0.240)	test_acc   0.89 (  0.90)	test_minacc   0.68 (  0.73)	test_majacc   0.94 (  0.93)	Loss_d 0.254 (0.240)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.68 (  0.73)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.73 (  0.75)
Test: [  26/  26]	Loss 0.133 (0.233)	test_acc   0.96 (  0.90)	test_minacc   0.89 (  0.74)	test_majacc   0.98 (  0.93)	Loss_d 0.133 (0.233)	test_acc_d   0.96 (  0.90)	test_minacc_d   0.89 (  0.74)	test_majacc_d   0.98 (  0.93)	test_corr_d   0.79 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.32it/s]
Test: [  0/  1]	Loss 1.769 (1.769)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 1.769 (1.769)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 1.769 (1.769)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 1.769 (1.769)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.37 (  0.37)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0392 (0.0443)	validation_time 0.0005 (0.0009)	train_time 0.0387 (0.0430)
record: (train_acc, test_acc) (0.9048000265359879, 0.45100003480911255)
last accs (train_acc, test_acc) (0.9048000265359879, 0.45100003480911255)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.37it/s] 15%|#5        | 4/26 [00:00<00:01, 15.76it/s] 31%|###       | 8/26 [00:00<00:00, 23.42it/s] 46%|####6     | 12/26 [00:00<00:00, 27.77it/s] 62%|######1   | 16/26 [00:00<00:00, 30.31it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.98it/s] 92%|#########2| 24/26 [00:00<00:00, 32.94it/s]100%|##########| 26/26 [00:00<00:00, 26.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.139 (0.236)	train_nll   0.14 (  0.24)	train_penalty   0.01 (  0.01)	weight_norm  23.82 ( 23.68)	train_acc   0.95 (  0.90)	train_minacc   0.78 (  0.60)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 6.9330 (6.8370)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.89it/s] 23%|##3       | 6/26 [00:00<00:00, 30.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.43it/s] 42%|####2     | 11/26 [00:00<00:00, 37.81it/s] 62%|######1   | 16/26 [00:00<00:00, 41.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.59it/s] 81%|########  | 21/26 [00:00<00:00, 39.59it/s]100%|##########| 26/26 [00:00<00:00, 42.32it/s]100%|##########| 26/26 [00:00<00:00, 36.31it/s]
Test: [   0/  26]	Loss 0.182 (0.182)	test_acc   0.93 (  0.93)	test_minacc   0.81 (  0.81)	test_majacc   0.95 (  0.95)	Loss_d 0.182 (0.182)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.238 (0.241)	test_acc   0.90 (  0.90)	test_minacc   0.79 (  0.71)	test_majacc   0.92 (  0.93)	Loss_d 0.238 (0.241)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.79 (  0.71)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.73 (  0.75)
Test: [  20/  26]	Loss 0.243 (0.229)	test_acc   0.88 (  0.90)	test_minacc   0.65 (  0.71)	test_majacc   0.94 (  0.93)	Loss_d 0.243 (0.229)	test_acc_d   0.88 (  0.90)	test_minacc_d   0.65 (  0.71)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.72 (  0.76)
Test: [  26/  26]	Loss 0.119 (0.221)	test_acc   0.96 (  0.90)	test_minacc   0.89 (  0.72)	test_majacc   0.97 (  0.94)	Loss_d 0.119 (0.221)	test_acc_d   0.96 (  0.90)	test_minacc_d   0.89 (  0.72)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.78 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.63it/s]
Test: [  0/  1]	Loss 2.021 (2.021)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.89 (  0.89)	Loss_d 2.021 (2.021)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 2.021 (2.021)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.89 (  0.89)	Loss_d 2.021 (2.021)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.44 (  0.44)
Overall Timing[ 13/  1]	epoch_time 0.0388 (0.0439)	validation_time 0.0004 (0.0009)	train_time 0.0384 (0.0427)
record: (train_acc, test_acc) (0.9048000265359879, 0.45100003480911255)
last accs (train_acc, test_acc) (0.9040000205636024, 0.40800002217292786)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.51it/s] 19%|#9        | 5/26 [00:00<00:00, 22.03it/s] 35%|###4      | 9/26 [00:00<00:00, 27.79it/s] 50%|#####     | 13/26 [00:00<00:00, 30.36it/s] 65%|######5   | 17/26 [00:00<00:00, 32.48it/s] 81%|########  | 21/26 [00:00<00:00, 33.84it/s] 96%|#########6| 25/26 [00:00<00:00, 34.39it/s]100%|##########| 26/26 [00:00<00:00, 28.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.111 (0.215)	train_nll   0.11 (  0.21)	train_penalty   0.01 (  0.01)	weight_norm  24.12 ( 23.97)	train_acc   0.96 (  0.91)	train_minacc   0.84 (  0.66)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 7.4801 (7.2271)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.19it/s] 35%|###4      | 9/26 [00:00<00:00, 37.48it/s]                                               35%|###4      | 9/26 [00:00<00:00, 37.48it/s] 54%|#####3    | 14/26 [00:00<00:00, 40.92it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.13it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.13it/s] 92%|#########2| 24/26 [00:00<00:00, 44.03it/s]100%|##########| 26/26 [00:00<00:00, 37.89it/s]
Test: [   0/  26]	Loss 0.179 (0.179)	test_acc   0.94 (  0.94)	test_minacc   0.84 (  0.84)	test_majacc   0.95 (  0.95)	Loss_d 0.179 (0.179)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.217 (0.224)	test_acc   0.90 (  0.90)	test_minacc   0.69 (  0.73)	test_majacc   0.94 (  0.94)	Loss_d 0.217 (0.224)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.69 (  0.73)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.75 (  0.74)
Test: [  20/  26]	Loss 0.161 (0.210)	test_acc   0.94 (  0.91)	test_minacc   0.82 (  0.76)	test_majacc   0.97 (  0.94)	Loss_d 0.161 (0.210)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.82 (  0.76)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.69 (  0.73)
Test: [  26/  26]	Loss 0.076 (0.198)	test_acc   0.99 (  0.92)	test_minacc   0.97 (  0.78)	test_majacc   0.99 (  0.94)	Loss_d 0.076 (0.198)	test_acc_d   0.99 (  0.92)	test_minacc_d   0.97 (  0.78)	test_majacc_d   0.99 (  0.94)	test_corr_d   0.76 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.43it/s]
Test: [  0/  1]	Loss 2.246 (2.246)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 2.246 (2.246)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 2.246 (2.246)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 2.246 (2.246)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.39 (  0.39)
Overall Timing[ 14/  1]	epoch_time 0.0397 (0.0436)	validation_time 0.0007 (0.0009)	train_time 0.0391 (0.0425)
record: (train_acc, test_acc) (0.9048000265359879, 0.45100003480911255)
last accs (train_acc, test_acc) (0.9192000184655189, 0.43400001525878906)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.17it/s] 19%|#9        | 5/26 [00:00<00:00, 24.41it/s] 35%|###4      | 9/26 [00:00<00:00, 29.08it/s] 50%|#####     | 13/26 [00:00<00:00, 31.10it/s] 65%|######5   | 17/26 [00:00<00:00, 31.50it/s] 81%|########  | 21/26 [00:00<00:00, 32.67it/s] 96%|#########6| 25/26 [00:00<00:00, 33.15it/s]100%|##########| 26/26 [00:00<00:00, 28.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.009 (0.087)	train_nll   0.24 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  24.40 ( 24.28)	train_acc   0.90 (  0.89)	train_minacc   0.84 (  0.68)	train_majacc   0.91 (  0.93)	train_corr   0.00 (  0.00)	l1 5.8989 (7.2262)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.87it/s] 27%|##6       | 7/26 [00:00<00:00, 34.62it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.62it/s] 46%|####6     | 12/26 [00:00<00:00, 39.88it/s] 65%|######5   | 17/26 [00:00<00:00, 42.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.10it/s] 85%|########4 | 22/26 [00:00<00:00, 40.17it/s]100%|##########| 26/26 [00:00<00:00, 37.71it/s]
Test: [   0/  26]	Loss 0.310 (0.310)	test_acc   0.84 (  0.84)	test_minacc   0.79 (  0.79)	test_majacc   0.85 (  0.85)	Loss_d 0.310 (0.310)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.304 (0.311)	test_acc   0.84 (  0.85)	test_minacc   0.76 (  0.79)	test_majacc   0.86 (  0.86)	Loss_d 0.304 (0.311)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.66 (  0.63)
Test: [  20/  26]	Loss 0.303 (0.311)	test_acc   0.86 (  0.85)	test_minacc   0.81 (  0.81)	test_majacc   0.88 (  0.85)	Loss_d 0.303 (0.311)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.88 (  0.85)	test_corr_d   0.60 (  0.63)
Test: [  26/  26]	Loss 0.256 (0.310)	test_acc   0.88 (  0.85)	test_minacc   0.84 (  0.81)	test_majacc   0.89 (  0.86)	Loss_d 0.256 (0.310)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.89 (  0.86)	test_corr_d   0.67 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.08it/s]
Test: [  0/  1]	Loss 1.392 (1.392)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.87 (  0.87)	Loss_d 1.392 (1.392)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.392 (1.392)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.87 (  0.87)	Loss_d 1.392 (1.392)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.22 (  0.22)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0431 (0.0436)	validation_time 0.0003 (0.0008)	train_time 0.0428 (0.0425)
record: (train_acc, test_acc) (0.8483000253438949, 0.5240000486373901)
last accs (train_acc, test_acc) (0.8483000253438949, 0.5240000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.71it/s] 19%|#9        | 5/26 [00:00<00:01, 17.13it/s] 31%|###       | 8/26 [00:00<00:00, 20.40it/s] 46%|####6     | 12/26 [00:00<00:00, 25.30it/s] 62%|######1   | 16/26 [00:00<00:00, 28.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.46it/s] 92%|#########2| 24/26 [00:00<00:00, 31.07it/s]100%|##########| 26/26 [00:01<00:00, 24.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.001 (0.002)	train_nll   0.42 (  0.39)	train_penalty   0.00 (  0.00)	weight_norm  24.47 ( 24.44)	train_acc   0.78 (  0.79)	train_minacc   0.76 (  0.83)	train_majacc   0.78 (  0.79)	train_corr   0.00 (  0.00)	l1 5.2076 (5.3036)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.63it/s] 23%|##3       | 6/26 [00:00<00:00, 30.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.84it/s] 42%|####2     | 11/26 [00:00<00:00, 38.04it/s] 62%|######1   | 16/26 [00:00<00:00, 41.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.89it/s] 81%|########  | 21/26 [00:00<00:00, 40.36it/s]100%|##########| 26/26 [00:00<00:00, 42.78it/s]100%|##########| 26/26 [00:00<00:00, 35.76it/s]
Test: [   0/  26]	Loss 0.417 (0.417)	test_acc   0.77 (  0.77)	test_minacc   0.81 (  0.81)	test_majacc   0.77 (  0.77)	Loss_d 0.417 (0.417)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.409 (0.427)	test_acc   0.78 (  0.76)	test_minacc   0.76 (  0.79)	test_majacc   0.79 (  0.76)	Loss_d 0.409 (0.427)	test_acc_d   0.78 (  0.76)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.79 (  0.76)	test_corr_d   0.54 (  0.51)
Test: [  20/  26]	Loss 0.382 (0.423)	test_acc   0.80 (  0.77)	test_minacc   0.83 (  0.80)	test_majacc   0.80 (  0.76)	Loss_d 0.382 (0.423)	test_acc_d   0.80 (  0.77)	test_minacc_d   0.83 (  0.80)	test_majacc_d   0.80 (  0.76)	test_corr_d   0.50 (  0.51)
Test: [  26/  26]	Loss 0.417 (0.422)	test_acc   0.79 (  0.77)	test_minacc   0.78 (  0.80)	test_majacc   0.79 (  0.76)	Loss_d 0.417 (0.422)	test_acc_d   0.79 (  0.77)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.79 (  0.76)	test_corr_d   0.54 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.03it/s]
Test: [  0/  1]	Loss 1.141 (1.141)	test_acc   0.58 (  0.58)	test_minacc   0.56 (  0.56)	test_majacc   0.79 (  0.79)	Loss_d 1.141 (1.141)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.141 (1.141)	test_acc   0.58 (  0.58)	test_minacc   0.56 (  0.56)	test_majacc   0.79 (  0.79)	Loss_d 1.141 (1.141)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.08 (  0.08)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0403 (0.0434)	validation_time 0.0004 (0.0008)	train_time 0.0399 (0.0423)
record: (train_acc, test_acc) (0.7691000285744667, 0.581000030040741)
last accs (train_acc, test_acc) (0.7691000285744667, 0.581000030040741)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.79it/s] 19%|#9        | 5/26 [00:00<00:00, 21.40it/s] 35%|###4      | 9/26 [00:00<00:00, 27.53it/s] 50%|#####     | 13/26 [00:00<00:00, 30.63it/s] 65%|######5   | 17/26 [00:00<00:00, 32.54it/s] 81%|########  | 21/26 [00:00<00:00, 33.59it/s] 96%|#########6| 25/26 [00:00<00:00, 33.82it/s]100%|##########| 26/26 [00:00<00:00, 28.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.002 (0.002)	train_nll   0.37 (  0.40)	train_penalty   0.00 (  0.00)	weight_norm  24.48 ( 24.47)	train_acc   0.81 (  0.78)	train_minacc   0.78 (  0.78)	train_majacc   0.82 (  0.78)	train_corr   0.00 (  0.00)	l1 5.0709 (5.1300)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.91it/s] 19%|#9        | 5/26 [00:00<00:01, 19.34it/s]                                               19%|#9        | 5/26 [00:00<00:01, 19.34it/s] 42%|####2     | 11/26 [00:00<00:00, 32.75it/s] 62%|######1   | 16/26 [00:00<00:00, 37.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.53it/s] 81%|########  | 21/26 [00:00<00:00, 37.11it/s]100%|##########| 26/26 [00:00<00:00, 40.22it/s]100%|##########| 26/26 [00:00<00:00, 31.70it/s]
Test: [   0/  26]	Loss 0.392 (0.392)	test_acc   0.78 (  0.78)	test_minacc   0.86 (  0.86)	test_majacc   0.76 (  0.76)	Loss_d 0.392 (0.392)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.394 (0.402)	test_acc   0.77 (  0.78)	test_minacc   0.76 (  0.79)	test_majacc   0.78 (  0.78)	Loss_d 0.394 (0.402)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.59 (  0.56)
Test: [  20/  26]	Loss 0.370 (0.396)	test_acc   0.81 (  0.78)	test_minacc   0.82 (  0.79)	test_majacc   0.81 (  0.78)	Loss_d 0.370 (0.396)	test_acc_d   0.81 (  0.78)	test_minacc_d   0.82 (  0.79)	test_majacc_d   0.81 (  0.78)	test_corr_d   0.54 (  0.56)
Test: [  26/  26]	Loss 0.374 (0.395)	test_acc   0.81 (  0.78)	test_minacc   0.78 (  0.79)	test_majacc   0.82 (  0.78)	Loss_d 0.374 (0.395)	test_acc_d   0.81 (  0.78)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.82 (  0.78)	test_corr_d   0.59 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.32it/s]
Test: [  0/  1]	Loss 1.166 (1.166)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.80 (  0.80)	Loss_d 1.166 (1.166)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.166 (1.166)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.80 (  0.80)	Loss_d 1.166 (1.166)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.12 (  0.12)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0391 (0.0431)	validation_time 0.0004 (0.0008)	train_time 0.0386 (0.0421)
record: (train_acc, test_acc) (0.7817000252604485, 0.5940000414848328)
last accs (train_acc, test_acc) (0.7817000252604485, 0.5940000414848328)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.19it/s] 19%|#9        | 5/26 [00:00<00:01, 17.98it/s] 35%|###4      | 9/26 [00:00<00:00, 24.27it/s] 50%|#####     | 13/26 [00:00<00:00, 27.64it/s] 65%|######5   | 17/26 [00:00<00:00, 29.41it/s] 81%|########  | 21/26 [00:00<00:00, 31.42it/s] 96%|#########6| 25/26 [00:00<00:00, 32.42it/s]100%|##########| 26/26 [00:00<00:00, 26.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.001)	train_nll   0.41 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  24.48 ( 24.48)	train_acc   0.76 (  0.77)	train_minacc   0.78 (  0.80)	train_majacc   0.76 (  0.77)	train_corr   0.00 (  0.00)	l1 5.1969 (5.2124)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.83it/s] 15%|#5        | 4/26 [00:00<00:01, 21.60it/s] 35%|###4      | 9/26 [00:00<00:00, 33.55it/s]                                               35%|###4      | 9/26 [00:00<00:00, 33.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 39.85it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.76it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.76it/s] 92%|#########2| 24/26 [00:00<00:00, 40.25it/s]100%|##########| 26/26 [00:00<00:00, 35.21it/s]
Test: [   0/  26]	Loss 0.403 (0.403)	test_acc   0.77 (  0.77)	test_minacc   0.84 (  0.84)	test_majacc   0.76 (  0.76)	Loss_d 0.403 (0.403)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.397 (0.403)	test_acc   0.78 (  0.78)	test_minacc   0.78 (  0.80)	test_majacc   0.78 (  0.78)	Loss_d 0.397 (0.403)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.58 (  0.55)
Test: [  20/  26]	Loss 0.375 (0.398)	test_acc   0.79 (  0.78)	test_minacc   0.82 (  0.80)	test_majacc   0.79 (  0.77)	Loss_d 0.375 (0.398)	test_acc_d   0.79 (  0.78)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.79 (  0.77)	test_corr_d   0.54 (  0.55)
Test: [  26/  26]	Loss 0.400 (0.398)	test_acc   0.77 (  0.78)	test_minacc   0.78 (  0.80)	test_majacc   0.77 (  0.77)	Loss_d 0.400 (0.398)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.57 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.69it/s]
Test: [  0/  1]	Loss 1.165 (1.165)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.80 (  0.80)	Loss_d 1.165 (1.165)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.165 (1.165)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.80 (  0.80)	Loss_d 1.165 (1.165)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.10 (  0.10)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0432 (0.0431)	validation_time 0.0005 (0.0008)	train_time 0.0427 (0.0422)
record: (train_acc, test_acc) (0.7775000249147415, 0.6050000190734863)
last accs (train_acc, test_acc) (0.7775000249147415, 0.6050000190734863)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.79it/s] 19%|#9        | 5/26 [00:00<00:00, 24.54it/s] 35%|###4      | 9/26 [00:00<00:00, 29.01it/s] 50%|#####     | 13/26 [00:00<00:00, 31.25it/s] 65%|######5   | 17/26 [00:00<00:00, 32.75it/s] 81%|########  | 21/26 [00:00<00:00, 33.77it/s] 96%|#########6| 25/26 [00:00<00:00, 34.32it/s]100%|##########| 26/26 [00:00<00:00, 29.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.40 (  0.40)	train_penalty   0.00 (  0.00)	weight_norm  24.48 ( 24.48)	train_acc   0.77 (  0.78)	train_minacc   0.78 (  0.82)	train_majacc   0.77 (  0.77)	train_corr   0.00 (  0.00)	l1 5.3021 (5.2013)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.33it/s] 23%|##3       | 6/26 [00:00<00:00, 29.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.29it/s] 42%|####2     | 11/26 [00:00<00:00, 36.44it/s] 62%|######1   | 16/26 [00:00<00:00, 41.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.16it/s] 81%|########  | 21/26 [00:00<00:00, 42.98it/s]100%|##########| 26/26 [00:00<00:00, 44.61it/s]100%|##########| 26/26 [00:00<00:00, 36.53it/s]
Test: [   0/  26]	Loss 0.416 (0.416)	test_acc   0.75 (  0.75)	test_minacc   0.86 (  0.86)	test_majacc   0.73 (  0.73)	Loss_d 0.416 (0.416)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.417 (0.420)	test_acc   0.76 (  0.76)	test_minacc   0.78 (  0.81)	test_majacc   0.75 (  0.75)	Loss_d 0.417 (0.420)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.78 (  0.81)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.54 (  0.52)
Test: [  20/  26]	Loss 0.386 (0.412)	test_acc   0.79 (  0.77)	test_minacc   0.83 (  0.82)	test_majacc   0.78 (  0.76)	Loss_d 0.386 (0.412)	test_acc_d   0.79 (  0.77)	test_minacc_d   0.83 (  0.82)	test_majacc_d   0.78 (  0.76)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.398 (0.410)	test_acc   0.77 (  0.77)	test_minacc   0.78 (  0.82)	test_majacc   0.77 (  0.76)	Loss_d 0.398 (0.410)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.77 (  0.76)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.33it/s]
Test: [  0/  1]	Loss 1.162 (1.162)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.78 (  0.78)	Loss_d 1.162 (1.162)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.162 (1.162)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.78 (  0.78)	Loss_d 1.162 (1.162)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.05 (  0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/119/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0440 (0.0432)	validation_time 0.0004 (0.0008)	train_time 0.0435 (0.0422)
record: (train_acc, test_acc) (0.7668000267148017, 0.6220000386238098)
last accs (train_acc, test_acc) (0.7668000267148017, 0.6220000386238098)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.41it/s] 19%|#9        | 5/26 [00:00<00:01, 17.24it/s] 35%|###4      | 9/26 [00:00<00:00, 23.96it/s] 50%|#####     | 13/26 [00:00<00:00, 27.46it/s] 65%|######5   | 17/26 [00:00<00:00, 29.53it/s] 81%|########  | 21/26 [00:00<00:00, 31.06it/s] 96%|#########6| 25/26 [00:00<00:00, 33.07it/s]100%|##########| 26/26 [00:00<00:00, 26.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.39 (  0.40)	train_penalty   0.00 (  0.00)	weight_norm  24.49 ( 24.48)	train_acc   0.77 (  0.77)	train_minacc   0.78 (  0.81)	train_majacc   0.77 (  0.77)	train_corr   0.00 (  0.00)	l1 5.3250 (5.2702)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.58it/s] 23%|##3       | 6/26 [00:00<00:00, 32.38it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.38it/s] 42%|####2     | 11/26 [00:00<00:00, 38.80it/s] 62%|######1   | 16/26 [00:00<00:00, 40.85it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.85it/s] 81%|########  | 21/26 [00:00<00:00, 39.26it/s]100%|##########| 26/26 [00:00<00:00, 42.18it/s]100%|##########| 26/26 [00:00<00:00, 36.00it/s]
Test: [   0/  26]	Loss 0.400 (0.400)	test_acc   0.77 (  0.77)	test_minacc   0.86 (  0.86)	test_majacc   0.75 (  0.75)	Loss_d 0.400 (0.400)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.413 (0.412)	test_acc   0.75 (  0.76)	test_minacc   0.78 (  0.80)	test_majacc   0.75 (  0.76)	Loss_d 0.413 (0.412)	test_acc_d   0.75 (  0.76)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.75 (  0.76)	test_corr_d   0.56 (  0.54)
Test: [  20/  26]	Loss 0.379 (0.404)	test_acc   0.80 (  0.77)	test_minacc   0.83 (  0.81)	test_majacc   0.80 (  0.76)	Loss_d 0.379 (0.404)	test_acc_d   0.80 (  0.77)	test_minacc_d   0.83 (  0.81)	test_majacc_d   0.80 (  0.76)	test_corr_d   0.53 (  0.54)
Test: [  26/  26]	Loss 0.389 (0.402)	test_acc   0.78 (  0.77)	test_minacc   0.78 (  0.81)	test_majacc   0.78 (  0.76)	Loss_d 0.389 (0.402)	test_acc_d   0.78 (  0.77)	test_minacc_d   0.78 (  0.81)	test_majacc_d   0.78 (  0.76)	test_corr_d   0.57 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.46it/s]
Test: [  0/  1]	Loss 1.201 (1.201)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.80 (  0.80)	Loss_d 1.201 (1.201)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.201 (1.201)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.80 (  0.80)	Loss_d 1.201 (1.201)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.09 (  0.09)
Overall Timing[ 20/  1]	epoch_time 0.0375 (0.0429)	validation_time 0.0004 (0.0007)	train_time 0.0370 (0.0420)
record: (train_acc, test_acc) (0.7668000267148017, 0.6220000386238098)
last accs (train_acc, test_acc) (0.771000029206276, 0.6100000143051147)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.83it/s] 23%|##3       | 6/26 [00:00<00:00, 26.30it/s] 38%|###8      | 10/26 [00:00<00:00, 29.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.68it/s] 69%|######9   | 18/26 [00:00<00:00, 32.87it/s] 85%|########4 | 22/26 [00:00<00:00, 33.13it/s]100%|##########| 26/26 [00:00<00:00, 33.71it/s]100%|##########| 26/26 [00:00<00:00, 29.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.40 (  0.40)	train_penalty   0.00 (  0.00)	weight_norm  24.49 ( 24.49)	train_acc   0.75 (  0.77)	train_minacc   0.78 (  0.81)	train_majacc   0.75 (  0.76)	train_corr   0.00 (  0.00)	l1 5.3949 (5.2776)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.14it/s] 23%|##3       | 6/26 [00:00<00:00, 28.67it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.67it/s] 42%|####2     | 11/26 [00:00<00:00, 35.81it/s] 62%|######1   | 16/26 [00:00<00:00, 40.07it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.07it/s] 81%|########  | 21/26 [00:00<00:00, 39.24it/s]100%|##########| 26/26 [00:00<00:00, 42.49it/s]100%|##########| 26/26 [00:00<00:00, 34.75it/s]
Test: [   0/  26]	Loss 0.410 (0.410)	test_acc   0.77 (  0.77)	test_minacc   0.86 (  0.86)	test_majacc   0.75 (  0.75)	Loss_d 0.410 (0.410)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.428 (0.424)	test_acc   0.74 (  0.76)	test_minacc   0.78 (  0.81)	test_majacc   0.73 (  0.75)	Loss_d 0.428 (0.424)	test_acc_d   0.74 (  0.76)	test_minacc_d   0.78 (  0.81)	test_majacc_d   0.73 (  0.75)	test_corr_d   0.53 (  0.51)
Test: [  20/  26]	Loss 0.387 (0.417)	test_acc   0.80 (  0.76)	test_minacc   0.88 (  0.82)	test_majacc   0.78 (  0.75)	Loss_d 0.387 (0.417)	test_acc_d   0.80 (  0.76)	test_minacc_d   0.88 (  0.82)	test_majacc_d   0.78 (  0.75)	test_corr_d   0.50 (  0.52)
Test: [  26/  26]	Loss 0.397 (0.414)	test_acc   0.76 (  0.76)	test_minacc   0.78 (  0.82)	test_majacc   0.75 (  0.75)	Loss_d 0.397 (0.414)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 1.180 (1.180)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 1.180 (1.180)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.180 (1.180)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.79 (  0.79)	Loss_d 1.180 (1.180)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.05 (  0.05)
Overall Timing[ 21/  1]	epoch_time 0.0440 (0.0430)	validation_time 0.0003 (0.0007)	train_time 0.0436 (0.0421)
record: (train_acc, test_acc) (0.7668000267148017, 0.6220000386238098)
last accs (train_acc, test_acc) (0.7629000287652016, 0.6170000433921814)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.62it/s] 19%|#9        | 5/26 [00:00<00:00, 23.61it/s] 35%|###4      | 9/26 [00:00<00:00, 28.87it/s] 50%|#####     | 13/26 [00:00<00:00, 31.30it/s] 65%|######5   | 17/26 [00:00<00:00, 31.77it/s] 81%|########  | 21/26 [00:00<00:00, 31.96it/s] 96%|#########6| 25/26 [00:00<00:00, 32.77it/s]100%|##########| 26/26 [00:00<00:00, 28.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.40 (  0.40)	train_penalty   0.00 (  0.00)	weight_norm  24.49 ( 24.49)	train_acc   0.77 (  0.77)	train_minacc   0.78 (  0.82)	train_majacc   0.77 (  0.77)	train_corr   0.00 (  0.00)	l1 5.4738 (5.2872)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.98it/s] 23%|##3       | 6/26 [00:00<00:01, 16.76it/s]                                               23%|##3       | 6/26 [00:00<00:01, 16.76it/s] 42%|####2     | 11/26 [00:00<00:00, 25.31it/s] 62%|######1   | 16/26 [00:00<00:00, 32.35it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.35it/s] 81%|########  | 21/26 [00:00<00:00, 33.17it/s]100%|##########| 26/26 [00:00<00:00, 37.03it/s]100%|##########| 26/26 [00:00<00:00, 26.64it/s]
Test: [   0/  26]	Loss 0.409 (0.409)	test_acc   0.77 (  0.77)	test_minacc   0.86 (  0.86)	test_majacc   0.75 (  0.75)	Loss_d 0.409 (0.409)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.442 (0.433)	test_acc   0.72 (  0.75)	test_minacc   0.78 (  0.80)	test_majacc   0.71 (  0.74)	Loss_d 0.442 (0.433)	test_acc_d   0.72 (  0.75)	test_minacc_d   0.78 (  0.80)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.52 (  0.50)
Test: [  20/  26]	Loss 0.392 (0.426)	test_acc   0.80 (  0.75)	test_minacc   0.89 (  0.81)	test_majacc   0.78 (  0.74)	Loss_d 0.392 (0.426)	test_acc_d   0.80 (  0.75)	test_minacc_d   0.89 (  0.81)	test_majacc_d   0.78 (  0.74)	test_corr_d   0.49 (  0.51)
Test: [  26/  26]	Loss 0.393 (0.421)	test_acc   0.77 (  0.76)	test_minacc   0.78 (  0.82)	test_majacc   0.77 (  0.75)	Loss_d 0.393 (0.421)	test_acc_d   0.77 (  0.76)	test_minacc_d   0.78 (  0.82)	test_majacc_d   0.77 (  0.75)	test_corr_d   0.54 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.31it/s]
Test: [  0/  1]	Loss 1.205 (1.205)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.78 (  0.78)	Loss_d 1.205 (1.205)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.205 (1.205)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.78 (  0.78)	Loss_d 1.205 (1.205)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.04 (  0.04)
Overall Timing[ 22/  1]	epoch_time 0.0390 (0.0428)	validation_time 0.0004 (0.0007)	train_time 0.0386 (0.0419)
record: (train_acc, test_acc) (0.7668000267148017, 0.6220000386238098)
last accs (train_acc, test_acc) (0.7574000319242478, 0.6210000514984131)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.15it/s] 23%|##3       | 6/26 [00:00<00:00, 26.11it/s] 38%|###8      | 10/26 [00:00<00:00, 29.82it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.70it/s] 69%|######9   | 18/26 [00:00<00:00, 29.70it/s] 85%|########4 | 22/26 [00:00<00:00, 31.30it/s]100%|##########| 26/26 [00:00<00:00, 30.56it/s]100%|##########| 26/26 [00:00<00:00, 27.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 5.4084272384643555
set z to 5.354342966079712
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 391 tensor(-0.0089, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 240 tensor(-0.0175, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 208 tensor(-0.0021, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.008 (0.024)	train_nll   0.25 (  0.44)	train_penalty   0.01 (  0.02)	weight_norm  24.73 ( 24.52)	train_acc   0.89 (  0.76)	train_minacc   0.35 (  0.73)	train_majacc   0.98 (  0.76)	train_corr   0.00 (  0.00)	l1 7.6002 (5.7422)	zero_count 0.0000 (15.2490)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.13it/s] 27%|##6       | 7/26 [00:00<00:00, 34.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.19it/s] 42%|####2     | 11/26 [00:00<00:00, 36.67it/s] 62%|######1   | 16/26 [00:00<00:00, 41.38it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.38it/s] 81%|########  | 21/26 [00:00<00:00, 42.66it/s]100%|##########| 26/26 [00:00<00:00, 44.30it/s]100%|##########| 26/26 [00:00<00:00, 36.87it/s]
Test: [   0/  26]	Loss 0.476 (0.476)	test_acc   0.56 (  0.56)	test_minacc   0.52 (  0.52)	test_majacc   0.57 (  0.57)	Loss_d 0.476 (0.476)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.500 (0.509)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.46)	test_majacc   0.56 (  0.56)	Loss_d 0.500 (0.509)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.46)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.92 (  0.89)
Test: [  20/  26]	Loss 0.544 (0.510)	test_acc   0.57 (  0.55)	test_minacc   0.50 (  0.47)	test_majacc   0.58 (  0.56)	Loss_d 0.544 (0.510)	test_acc_d   0.57 (  0.55)	test_minacc_d   0.50 (  0.47)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.88 (  0.89)
Test: [  26/  26]	Loss 0.482 (0.509)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.47)	test_majacc   0.55 (  0.56)	Loss_d 0.482 (0.509)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.47)	test_majacc_d   0.55 (  0.56)	test_corr_d   0.91 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.60it/s]
Test: [  0/  1]	Loss 2.107 (2.107)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.55 (  0.55)	Loss_d 2.107 (2.107)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 2.107 (2.107)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.55 (  0.55)	Loss_d 2.107 (2.107)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.76 (  0.76)
Overall Timing[ 23/  1]	epoch_time 0.0406 (0.0427)	validation_time 0.0004 (0.0007)	train_time 0.0402 (0.0418)
record: (train_acc, test_acc) (0.7668000267148017, 0.6220000386238098)
last accs (train_acc, test_acc) (0.5484000144004821, 0.4780000150203705)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.62it/s] 15%|#5        | 4/26 [00:00<00:01, 14.39it/s] 27%|##6       | 7/26 [00:00<00:00, 19.14it/s] 42%|####2     | 11/26 [00:00<00:00, 24.23it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.92it/s] 65%|######5   | 17/26 [00:00<00:00, 26.62it/s] 81%|########  | 21/26 [00:00<00:00, 29.37it/s] 96%|#########6| 25/26 [00:01<00:00, 29.59it/s]100%|##########| 26/26 [00:01<00:00, 23.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 202 tensor(-0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 185 tensor(-0.0031, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 181 tensor(-0.0022, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 176 tensor(-0.0037, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 184 tensor(-0.0024, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 372 tensor(-0.0001, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.009)	train_nll   0.52 (  0.46)	train_penalty   0.00 (  0.01)	weight_norm  25.60 ( 25.28)	train_acc   0.54 (  0.79)	train_minacc   0.92 (  0.64)	train_majacc   0.47 (  0.82)	train_corr   0.00 (  0.00)	l1 5.4033 (6.1754)	zero_count 0.0000 (75.2700)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.09it/s] 15%|#5        | 4/26 [00:00<00:01, 19.76it/s] 35%|###4      | 9/26 [00:00<00:00, 32.43it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.43it/s] 58%|#####7    | 15/26 [00:00<00:00, 40.75it/s] 77%|#######6  | 20/26 [00:00<00:00, 43.29it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 43.29it/s] 96%|#########6| 25/26 [00:00<00:00, 42.64it/s]100%|##########| 26/26 [00:00<00:00, 35.59it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.51 (  0.51)	test_minacc   0.72 (  0.72)	test_majacc   0.47 (  0.47)	Loss_d 0.556 (0.556)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.553 (0.560)	test_acc   0.49 (  0.50)	test_minacc   0.71 (  0.73)	test_majacc   0.45 (  0.46)	Loss_d 0.553 (0.560)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.71 (  0.73)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.59 (  0.53)
Test: [  20/  26]	Loss 0.590 (0.565)	test_acc   0.51 (  0.49)	test_minacc   0.75 (  0.74)	test_majacc   0.46 (  0.45)	Loss_d 0.590 (0.565)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.75 (  0.74)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.57 (  0.54)
Test: [  26/  26]	Loss 0.550 (0.564)	test_acc   0.52 (  0.49)	test_minacc   0.73 (  0.74)	test_majacc   0.48 (  0.45)	Loss_d 0.550 (0.564)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.73 (  0.74)	test_majacc_d   0.48 (  0.45)	test_corr_d   0.55 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.99it/s]
Test: [  0/  1]	Loss 1.303 (1.303)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 1.303 (1.303)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.303 (1.303)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 1.303 (1.303)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.33 (  0.33)
Overall Timing[ 24/  1]	epoch_time 0.0413 (0.0426)	validation_time 0.0005 (0.0007)	train_time 0.0408 (0.0418)
record: (train_acc, test_acc) (0.7668000267148017, 0.6220000386238098)
last accs (train_acc, test_acc) (0.4949000118076801, 0.5300000309944153)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.21it/s] 19%|#9        | 5/26 [00:00<00:01, 14.00it/s]